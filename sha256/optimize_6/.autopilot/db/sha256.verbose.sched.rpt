

================================================================
== Vitis HLS Report for 'sha256'
================================================================
* Date:           Thu Jun 24 00:36:43 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        sha256
* Solution:       optimize_6 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.346 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      271|      271|  2.710 us|  2.710 us|  272|  272|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                     |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- load_State         |        8|        8|         2|          1|          1|     8|       yes|
        |- load_data          |       64|       64|         2|          1|          1|    64|       yes|
        |- convert_to_words   |       17|       17|         2|          1|          1|    16|       yes|
        |- create_schedule    |       48|       48|         1|          1|          1|    48|       yes|
        |- compression        |       65|       65|         2|          1|          1|    64|       yes|
        |- convert_endianess  |       16|       16|         4|          4|          4|     4|       yes|
        |- store_hash         |       32|       32|         2|          1|          1|    32|       yes|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2
  * Pipeline-1: initiation interval (II) = 1, depth = 2
  * Pipeline-2: initiation interval (II) = 1, depth = 2
  * Pipeline-3: initiation interval (II) = 1, depth = 1
  * Pipeline-4: initiation interval (II) = 1, depth = 2
  * Pipeline-5: initiation interval (II) = 4, depth = 4
  * Pipeline-6: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 30
* Pipeline : 7
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
  Pipeline-1 : II = 1, D = 2, States = { 5 6 }
  Pipeline-2 : II = 1, D = 2, States = { 8 9 }
  Pipeline-3 : II = 1, D = 1, States = { 11 }
  Pipeline-4 : II = 1, D = 2, States = { 17 18 }
  Pipeline-5 : II = 4, D = 4, States = { 23 24 25 26 }
  Pipeline-6 : II = 1, D = 2, States = { 28 29 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 2 
4 --> 5 
5 --> 7 6 
6 --> 5 
7 --> 8 
8 --> 9 
9 --> 10 8 
10 --> 11 
11 --> 12 11 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 17 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 27 24 
24 --> 25 
25 --> 26 
26 --> 23 
27 --> 28 
28 --> 30 29 
29 --> 28 
30 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1"   --->   Operation 31 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %istateREG_V, void @empty_0, i32 0, i32 0, void @empty, i32 0, i32 0, void @empty, void @empty, void @empty, i32 0, i32 0, i32 0, i32 0, void @empty, void @empty"   --->   Operation 32 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %istateREG_V"   --->   Operation 33 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %idata_V, void @empty_0, i32 0, i32 0, void @empty, i32 0, i32 0, void @empty, void @empty, void @empty, i32 0, i32 0, i32 0, i32 0, void @empty, void @empty"   --->   Operation 34 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %idata_V"   --->   Operation 35 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %ohash_V, void @empty_0, i32 0, i32 0, void @empty, i32 0, i32 0, void @empty, void @empty, void @empty, i32 0, i32 0, i32 0, i32 0, void @empty, void @empty"   --->   Operation 36 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %ohash_V"   --->   Operation 37 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%stateREG = alloca i64 1" [sha256.cpp:21]   --->   Operation 38 'alloca' 'stateREG' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%data = alloca i64 1" [sha256.cpp:22]   --->   Operation 39 'alloca' 'data' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%hash = alloca i64 1" [sha256.cpp:23]   --->   Operation 40 'alloca' 'hash' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>
ST_1 : Operation 41 [1/1] (0.46ns)   --->   "%br_ln24 = br void" [sha256.cpp:24]   --->   Operation 41 'br' 'br_ln24' <Predicate = true> <Delay = 0.46>

State 2 <SV = 1> <Delay = 0.80>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%n = phi i4 %add_ln24, void %.split12, i4 0, void" [sha256.cpp:24]   --->   Operation 42 'phi' 'n' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.80ns)   --->   "%add_ln24 = add i4 %n, i4 1" [sha256.cpp:24]   --->   Operation 43 'add' 'add_ln24' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 44 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.72ns)   --->   "%icmp_ln24 = icmp_eq  i4 %n, i4 8" [sha256.cpp:24]   --->   Operation 45 'icmp' 'icmp_ln24' <Predicate = true> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 8, i64 8, i64 8"   --->   Operation 46 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln24 = br i1 %icmp_ln24, void %.split12, void %.preheader2.preheader" [sha256.cpp:24]   --->   Operation 47 'br' 'br_ln24' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.45>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%n_cast = zext i4 %n" [sha256.cpp:24]   --->   Operation 48 'zext' 'n_cast' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%specloopname_ln24 = specloopname void @_ssdm_op_SpecLoopName, void @empty_8" [sha256.cpp:24]   --->   Operation 49 'specloopname' 'specloopname_ln24' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%stateREG_addr_8 = getelementptr i32 %stateREG, i64 0, i64 %n_cast" [sha256.cpp:26]   --->   Operation 50 'getelementptr' 'stateREG_addr_8' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (1.72ns)   --->   "%istateREG_V_read = read i32 @_ssdm_op_Read.ap_fifo.volatile.i32P0A, i32 %istateREG_V" [C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145]   --->   Operation 51 'read' 'istateREG_V_read' <Predicate = (!icmp_ln24)> <Delay = 1.72> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 1.72> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 0> <FIFO>
ST_3 : Operation 52 [1/1] (0.73ns)   --->   "%store_ln145 = store i32 %istateREG_V_read, i3 %stateREG_addr_8" [C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145]   --->   Operation 52 'store' 'store_ln145' <Predicate = (!icmp_ln24)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 53 'br' 'br_ln0' <Predicate = (!icmp_ln24)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 0.46>
ST_4 : Operation 54 [1/1] (0.46ns)   --->   "%br_ln0 = br void %.preheader2"   --->   Operation 54 'br' 'br_ln0' <Predicate = true> <Delay = 0.46>

State 5 <SV = 3> <Delay = 0.85>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%n_1 = phi i7 %add_ln29, void %.split10, i7 0, void %.preheader2.preheader" [sha256.cpp:29]   --->   Operation 55 'phi' 'n_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.85ns)   --->   "%add_ln29 = add i7 %n_1, i7 1" [sha256.cpp:29]   --->   Operation 56 'add' 'add_ln29' <Predicate = true> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 57 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (0.71ns)   --->   "%icmp_ln29 = icmp_eq  i7 %n_1, i7 64" [sha256.cpp:29]   --->   Operation 58 'icmp' 'icmp_ln29' <Predicate = true> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%empty_15 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 64, i64 64, i64 64"   --->   Operation 59 'speclooptripcount' 'empty_15' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%br_ln29 = br i1 %icmp_ln29, void %.split10, void %.preheader710.preheader" [sha256.cpp:29]   --->   Operation 60 'br' 'br_ln29' <Predicate = true> <Delay = 0.00>

State 6 <SV = 4> <Delay = 2.45>
ST_6 : Operation 61 [1/1] (0.00ns)   --->   "%n_1_cast = zext i7 %n_1" [sha256.cpp:29]   --->   Operation 61 'zext' 'n_1_cast' <Predicate = (!icmp_ln29)> <Delay = 0.00>
ST_6 : Operation 62 [1/1] (0.00ns)   --->   "%specloopname_ln29 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [sha256.cpp:29]   --->   Operation 62 'specloopname' 'specloopname_ln29' <Predicate = (!icmp_ln29)> <Delay = 0.00>
ST_6 : Operation 63 [1/1] (0.00ns)   --->   "%data_addr_4 = getelementptr i8 %data, i64 0, i64 %n_1_cast" [sha256.cpp:31]   --->   Operation 63 'getelementptr' 'data_addr_4' <Predicate = (!icmp_ln29)> <Delay = 0.00>
ST_6 : Operation 64 [1/1] (1.72ns)   --->   "%idata_V_read = read i8 @_ssdm_op_Read.ap_fifo.volatile.i8P0A, i8 %idata_V" [C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145]   --->   Operation 64 'read' 'idata_V_read' <Predicate = (!icmp_ln29)> <Delay = 1.72> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 1.72> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 8> <Depth = 0> <FIFO>
ST_6 : Operation 65 [1/1] (0.73ns)   --->   "%store_ln145 = store i8 %idata_V_read, i6 %data_addr_4" [C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145]   --->   Operation 65 'store' 'store_ln145' <Predicate = (!icmp_ln29)> <Delay = 0.73> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.preheader2"   --->   Operation 66 'br' 'br_ln0' <Predicate = (!icmp_ln29)> <Delay = 0.00>

State 7 <SV = 4> <Delay = 0.46>
ST_7 : Operation 67 [1/1] (0.00ns)   --->   "%m_15 = alloca i32 1"   --->   Operation 67 'alloca' 'm_15' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 68 [1/1] (0.00ns)   --->   "%m_15_1 = alloca i32 1"   --->   Operation 68 'alloca' 'm_15_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 69 [1/1] (0.00ns)   --->   "%m_15_2 = alloca i32 1"   --->   Operation 69 'alloca' 'm_15_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 70 [1/1] (0.00ns)   --->   "%m_15_3 = alloca i32 1"   --->   Operation 70 'alloca' 'm_15_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 71 [1/1] (0.00ns)   --->   "%m_15_4 = alloca i32 1"   --->   Operation 71 'alloca' 'm_15_4' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 72 [1/1] (0.00ns)   --->   "%m_15_5 = alloca i32 1"   --->   Operation 72 'alloca' 'm_15_5' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 73 [1/1] (0.00ns)   --->   "%m_15_6 = alloca i32 1"   --->   Operation 73 'alloca' 'm_15_6' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 74 [1/1] (0.00ns)   --->   "%m_15_7 = alloca i32 1"   --->   Operation 74 'alloca' 'm_15_7' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 75 [1/1] (0.00ns)   --->   "%m_15_8 = alloca i32 1"   --->   Operation 75 'alloca' 'm_15_8' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 76 [1/1] (0.00ns)   --->   "%m_15_9 = alloca i32 1"   --->   Operation 76 'alloca' 'm_15_9' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 77 [1/1] (0.00ns)   --->   "%m_15_10 = alloca i32 1"   --->   Operation 77 'alloca' 'm_15_10' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 78 [1/1] (0.00ns)   --->   "%m_15_11 = alloca i32 1"   --->   Operation 78 'alloca' 'm_15_11' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 79 [1/1] (0.00ns)   --->   "%m_15_12 = alloca i32 1"   --->   Operation 79 'alloca' 'm_15_12' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 80 [1/1] (0.00ns)   --->   "%m_15_13 = alloca i32 1"   --->   Operation 80 'alloca' 'm_15_13' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 81 [1/1] (0.00ns)   --->   "%m_15_14 = alloca i32 1"   --->   Operation 81 'alloca' 'm_15_14' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 82 [1/1] (0.00ns)   --->   "%m_15_15 = alloca i32 1"   --->   Operation 82 'alloca' 'm_15_15' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 83 [1/1] (0.46ns)   --->   "%br_ln36 = br void %.preheader710" [sha256.cpp:36]   --->   Operation 83 'br' 'br_ln36' <Predicate = true> <Delay = 0.46>

State 8 <SV = 5> <Delay = 0.85>
ST_8 : Operation 84 [1/1] (0.00ns)   --->   "%i = phi i5 %add_ln36, void %.split8709, i5 0, void %.preheader710.preheader" [sha256.cpp:36]   --->   Operation 84 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 85 [1/1] (0.00ns)   --->   "%j = phi i7 %add_ln36_1, void %.split8709, i7 0, void %.preheader710.preheader" [sha256.cpp:36]   --->   Operation 85 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 86 [1/1] (0.82ns)   --->   "%add_ln36 = add i5 %i, i5 1" [sha256.cpp:36]   --->   Operation 86 'add' 'add_ln36' <Predicate = true> <Delay = 0.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 87 [1/1] (0.72ns)   --->   "%icmp_ln36 = icmp_eq  i5 %i, i5 16" [sha256.cpp:36]   --->   Operation 87 'icmp' 'icmp_ln36' <Predicate = true> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 88 [1/1] (0.00ns)   --->   "%br_ln36 = br i1 %icmp_ln36, void %.split8, void %.lr.ph.preheader" [sha256.cpp:36]   --->   Operation 88 'br' 'br_ln36' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln36 = zext i7 %j" [sha256.cpp:36]   --->   Operation 89 'zext' 'zext_ln36' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_8 : Operation 90 [1/1] (0.00ns)   --->   "%trunc_ln36 = trunc i7 %j" [sha256.cpp:36]   --->   Operation 90 'trunc' 'trunc_ln36' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_8 : Operation 91 [1/1] (0.00ns)   --->   "%data_addr = getelementptr i8 %data, i64 0, i64 %zext_ln36" [sha256.cpp:38]   --->   Operation 91 'getelementptr' 'data_addr' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_8 : Operation 92 [2/2] (0.73ns)   --->   "%data_load = load i6 %data_addr" [sha256.cpp:38]   --->   Operation 92 'load' 'data_load' <Predicate = (!icmp_ln36)> <Delay = 0.73> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_8 : Operation 93 [1/1] (0.00ns)   --->   "%or_ln38 = or i6 %trunc_ln36, i6 1" [sha256.cpp:38]   --->   Operation 93 'or' 'or_ln38' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_8 : Operation 94 [1/1] (0.00ns)   --->   "%zext_ln38 = zext i6 %or_ln38" [sha256.cpp:38]   --->   Operation 94 'zext' 'zext_ln38' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_8 : Operation 95 [1/1] (0.00ns)   --->   "%data_addr_1 = getelementptr i8 %data, i64 0, i64 %zext_ln38" [sha256.cpp:38]   --->   Operation 95 'getelementptr' 'data_addr_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_8 : Operation 96 [2/2] (0.73ns)   --->   "%data_load_1 = load i6 %data_addr_1" [sha256.cpp:38]   --->   Operation 96 'load' 'data_load_1' <Predicate = (!icmp_ln36)> <Delay = 0.73> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_8 : Operation 97 [1/1] (0.00ns)   --->   "%or_ln38_1 = or i6 %trunc_ln36, i6 2" [sha256.cpp:38]   --->   Operation 97 'or' 'or_ln38_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_8 : Operation 98 [1/1] (0.00ns)   --->   "%zext_ln38_1 = zext i6 %or_ln38_1" [sha256.cpp:38]   --->   Operation 98 'zext' 'zext_ln38_1' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_8 : Operation 99 [1/1] (0.00ns)   --->   "%data_addr_2 = getelementptr i8 %data, i64 0, i64 %zext_ln38_1" [sha256.cpp:38]   --->   Operation 99 'getelementptr' 'data_addr_2' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_8 : Operation 100 [2/2] (0.73ns)   --->   "%data_load_2 = load i6 %data_addr_2" [sha256.cpp:38]   --->   Operation 100 'load' 'data_load_2' <Predicate = (!icmp_ln36)> <Delay = 0.73> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_8 : Operation 101 [1/1] (0.00ns)   --->   "%or_ln38_2 = or i6 %trunc_ln36, i6 3" [sha256.cpp:38]   --->   Operation 101 'or' 'or_ln38_2' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_8 : Operation 102 [1/1] (0.00ns)   --->   "%zext_ln38_2 = zext i6 %or_ln38_2" [sha256.cpp:38]   --->   Operation 102 'zext' 'zext_ln38_2' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_8 : Operation 103 [1/1] (0.00ns)   --->   "%data_addr_3 = getelementptr i8 %data, i64 0, i64 %zext_ln38_2" [sha256.cpp:38]   --->   Operation 103 'getelementptr' 'data_addr_3' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_8 : Operation 104 [2/2] (0.73ns)   --->   "%data_load_3 = load i6 %data_addr_3" [sha256.cpp:38]   --->   Operation 104 'load' 'data_load_3' <Predicate = (!icmp_ln36)> <Delay = 0.73> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_8 : Operation 105 [1/1] (0.00ns)   --->   "%trunc_ln38 = trunc i5 %i" [sha256.cpp:38]   --->   Operation 105 'trunc' 'trunc_ln38' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_8 : Operation 106 [1/1] (0.71ns)   --->   "%switch_ln38 = switch i4 %trunc_ln38, void %branch335, i4 0, void %.split8..split8709_crit_edge, i4 1, void %branch321, i4 2, void %branch322, i4 3, void %branch323, i4 4, void %branch324, i4 5, void %branch325, i4 6, void %branch326, i4 7, void %branch327, i4 8, void %branch328, i4 9, void %branch329, i4 10, void %branch330, i4 11, void %branch331, i4 12, void %branch332, i4 13, void %branch333, i4 14, void %branch334" [sha256.cpp:38]   --->   Operation 106 'switch' 'switch_ln38' <Predicate = (!icmp_ln36)> <Delay = 0.71>
ST_8 : Operation 107 [1/1] (0.85ns)   --->   "%add_ln36_1 = add i7 %j, i7 4" [sha256.cpp:36]   --->   Operation 107 'add' 'add_ln36_1' <Predicate = (!icmp_ln36)> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 108 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.preheader710"   --->   Operation 108 'br' 'br_ln0' <Predicate = (!icmp_ln36)> <Delay = 0.00>

State 9 <SV = 6> <Delay = 0.73>
ST_9 : Operation 109 [1/1] (0.00ns)   --->   "%m_15_load = load i32 %m_15" [sha256.cpp:40]   --->   Operation 109 'load' 'm_15_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 110 [1/1] (0.00ns)   --->   "%m_15_1_load = load i32 %m_15_1" [sha256.cpp:40]   --->   Operation 110 'load' 'm_15_1_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 111 [1/1] (0.00ns)   --->   "%empty_16 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 16, i64 16, i64 16"   --->   Operation 111 'speclooptripcount' 'empty_16' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 112 [1/1] (0.00ns)   --->   "%specpipeline_ln34 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty" [sha256.cpp:34]   --->   Operation 112 'specpipeline' 'specpipeline_ln34' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_9 : Operation 113 [1/1] (0.00ns)   --->   "%specloopname_ln34 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [sha256.cpp:34]   --->   Operation 113 'specloopname' 'specloopname_ln34' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_9 : Operation 114 [1/2] (0.73ns)   --->   "%data_load = load i6 %data_addr" [sha256.cpp:38]   --->   Operation 114 'load' 'data_load' <Predicate = (!icmp_ln36)> <Delay = 0.73> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_9 : Operation 115 [1/2] (0.73ns)   --->   "%data_load_1 = load i6 %data_addr_1" [sha256.cpp:38]   --->   Operation 115 'load' 'data_load_1' <Predicate = (!icmp_ln36)> <Delay = 0.73> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_9 : Operation 116 [1/2] (0.73ns)   --->   "%data_load_2 = load i6 %data_addr_2" [sha256.cpp:38]   --->   Operation 116 'load' 'data_load_2' <Predicate = (!icmp_ln36)> <Delay = 0.73> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_9 : Operation 117 [1/2] (0.73ns)   --->   "%data_load_3 = load i6 %data_addr_3" [sha256.cpp:38]   --->   Operation 117 'load' 'data_load_3' <Predicate = (!icmp_ln36)> <Delay = 0.73> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 8> <Depth = 64> <RAM>
ST_9 : Operation 118 [1/1] (0.00ns)   --->   "%m_0 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %data_load, i8 %data_load_1, i8 %data_load_2, i8 %data_load_3" [sha256.cpp:38]   --->   Operation 118 'bitconcatenate' 'm_0' <Predicate = (!icmp_ln36)> <Delay = 0.00>
ST_9 : Operation 119 [1/1] (0.00ns)   --->   "%store_ln38 = store i32 %m_0, i32 %m_15" [sha256.cpp:38]   --->   Operation 119 'store' 'store_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 14)> <Delay = 0.00>
ST_9 : Operation 120 [1/1] (0.00ns)   --->   "%br_ln38 = br void %.split8709" [sha256.cpp:38]   --->   Operation 120 'br' 'br_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 14)> <Delay = 0.00>
ST_9 : Operation 121 [1/1] (0.00ns)   --->   "%store_ln38 = store i32 %m_0, i32 %m_15_15" [sha256.cpp:38]   --->   Operation 121 'store' 'store_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 13)> <Delay = 0.00>
ST_9 : Operation 122 [1/1] (0.00ns)   --->   "%br_ln38 = br void %.split8709" [sha256.cpp:38]   --->   Operation 122 'br' 'br_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 13)> <Delay = 0.00>
ST_9 : Operation 123 [1/1] (0.00ns)   --->   "%store_ln38 = store i32 %m_0, i32 %m_15_14" [sha256.cpp:38]   --->   Operation 123 'store' 'store_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 12)> <Delay = 0.00>
ST_9 : Operation 124 [1/1] (0.00ns)   --->   "%br_ln38 = br void %.split8709" [sha256.cpp:38]   --->   Operation 124 'br' 'br_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 12)> <Delay = 0.00>
ST_9 : Operation 125 [1/1] (0.00ns)   --->   "%store_ln38 = store i32 %m_0, i32 %m_15_13" [sha256.cpp:38]   --->   Operation 125 'store' 'store_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 11)> <Delay = 0.00>
ST_9 : Operation 126 [1/1] (0.00ns)   --->   "%br_ln38 = br void %.split8709" [sha256.cpp:38]   --->   Operation 126 'br' 'br_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 11)> <Delay = 0.00>
ST_9 : Operation 127 [1/1] (0.00ns)   --->   "%store_ln38 = store i32 %m_0, i32 %m_15_12" [sha256.cpp:38]   --->   Operation 127 'store' 'store_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 10)> <Delay = 0.00>
ST_9 : Operation 128 [1/1] (0.00ns)   --->   "%br_ln38 = br void %.split8709" [sha256.cpp:38]   --->   Operation 128 'br' 'br_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 10)> <Delay = 0.00>
ST_9 : Operation 129 [1/1] (0.00ns)   --->   "%store_ln38 = store i32 %m_0, i32 %m_15_11" [sha256.cpp:38]   --->   Operation 129 'store' 'store_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 9)> <Delay = 0.00>
ST_9 : Operation 130 [1/1] (0.00ns)   --->   "%br_ln38 = br void %.split8709" [sha256.cpp:38]   --->   Operation 130 'br' 'br_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 9)> <Delay = 0.00>
ST_9 : Operation 131 [1/1] (0.00ns)   --->   "%store_ln38 = store i32 %m_0, i32 %m_15_10" [sha256.cpp:38]   --->   Operation 131 'store' 'store_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 8)> <Delay = 0.00>
ST_9 : Operation 132 [1/1] (0.00ns)   --->   "%br_ln38 = br void %.split8709" [sha256.cpp:38]   --->   Operation 132 'br' 'br_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 8)> <Delay = 0.00>
ST_9 : Operation 133 [1/1] (0.00ns)   --->   "%store_ln38 = store i32 %m_0, i32 %m_15_9" [sha256.cpp:38]   --->   Operation 133 'store' 'store_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 7)> <Delay = 0.00>
ST_9 : Operation 134 [1/1] (0.00ns)   --->   "%br_ln38 = br void %.split8709" [sha256.cpp:38]   --->   Operation 134 'br' 'br_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 7)> <Delay = 0.00>
ST_9 : Operation 135 [1/1] (0.00ns)   --->   "%store_ln38 = store i32 %m_0, i32 %m_15_8" [sha256.cpp:38]   --->   Operation 135 'store' 'store_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 6)> <Delay = 0.00>
ST_9 : Operation 136 [1/1] (0.00ns)   --->   "%br_ln38 = br void %.split8709" [sha256.cpp:38]   --->   Operation 136 'br' 'br_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 6)> <Delay = 0.00>
ST_9 : Operation 137 [1/1] (0.00ns)   --->   "%store_ln38 = store i32 %m_0, i32 %m_15_7" [sha256.cpp:38]   --->   Operation 137 'store' 'store_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 5)> <Delay = 0.00>
ST_9 : Operation 138 [1/1] (0.00ns)   --->   "%br_ln38 = br void %.split8709" [sha256.cpp:38]   --->   Operation 138 'br' 'br_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 5)> <Delay = 0.00>
ST_9 : Operation 139 [1/1] (0.00ns)   --->   "%store_ln38 = store i32 %m_0, i32 %m_15_6" [sha256.cpp:38]   --->   Operation 139 'store' 'store_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 4)> <Delay = 0.00>
ST_9 : Operation 140 [1/1] (0.00ns)   --->   "%br_ln38 = br void %.split8709" [sha256.cpp:38]   --->   Operation 140 'br' 'br_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 4)> <Delay = 0.00>
ST_9 : Operation 141 [1/1] (0.00ns)   --->   "%store_ln38 = store i32 %m_0, i32 %m_15_5" [sha256.cpp:38]   --->   Operation 141 'store' 'store_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 3)> <Delay = 0.00>
ST_9 : Operation 142 [1/1] (0.00ns)   --->   "%br_ln38 = br void %.split8709" [sha256.cpp:38]   --->   Operation 142 'br' 'br_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 3)> <Delay = 0.00>
ST_9 : Operation 143 [1/1] (0.00ns)   --->   "%store_ln38 = store i32 %m_0, i32 %m_15_4" [sha256.cpp:38]   --->   Operation 143 'store' 'store_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 2)> <Delay = 0.00>
ST_9 : Operation 144 [1/1] (0.00ns)   --->   "%br_ln38 = br void %.split8709" [sha256.cpp:38]   --->   Operation 144 'br' 'br_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 2)> <Delay = 0.00>
ST_9 : Operation 145 [1/1] (0.00ns)   --->   "%store_ln38 = store i32 %m_0, i32 %m_15_3" [sha256.cpp:38]   --->   Operation 145 'store' 'store_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 1)> <Delay = 0.00>
ST_9 : Operation 146 [1/1] (0.00ns)   --->   "%br_ln38 = br void %.split8709" [sha256.cpp:38]   --->   Operation 146 'br' 'br_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 1)> <Delay = 0.00>
ST_9 : Operation 147 [1/1] (0.00ns)   --->   "%store_ln38 = store i32 %m_0, i32 %m_15_2" [sha256.cpp:38]   --->   Operation 147 'store' 'store_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 0)> <Delay = 0.00>
ST_9 : Operation 148 [1/1] (0.00ns)   --->   "%br_ln38 = br void %.split8709" [sha256.cpp:38]   --->   Operation 148 'br' 'br_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 0)> <Delay = 0.00>
ST_9 : Operation 149 [1/1] (0.00ns)   --->   "%store_ln38 = store i32 %m_0, i32 %m_15_1" [sha256.cpp:38]   --->   Operation 149 'store' 'store_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 15)> <Delay = 0.00>
ST_9 : Operation 150 [1/1] (0.00ns)   --->   "%br_ln38 = br void %.split8709" [sha256.cpp:38]   --->   Operation 150 'br' 'br_ln38' <Predicate = (!icmp_ln36 & trunc_ln38 == 15)> <Delay = 0.00>

State 10 <SV = 7> <Delay = 0.46>
ST_10 : Operation 151 [1/1] (0.00ns)   --->   "%m_63 = alloca i32 1"   --->   Operation 151 'alloca' 'm_63' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 152 [1/1] (0.00ns)   --->   "%m_63_1 = alloca i32 1"   --->   Operation 152 'alloca' 'm_63_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 153 [1/1] (0.00ns)   --->   "%m_63_2 = alloca i32 1"   --->   Operation 153 'alloca' 'm_63_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 154 [1/1] (0.00ns)   --->   "%m_63_3 = alloca i32 1"   --->   Operation 154 'alloca' 'm_63_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 155 [1/1] (0.00ns)   --->   "%m_63_4 = alloca i32 1"   --->   Operation 155 'alloca' 'm_63_4' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 156 [1/1] (0.00ns)   --->   "%m_63_5 = alloca i32 1"   --->   Operation 156 'alloca' 'm_63_5' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 157 [1/1] (0.00ns)   --->   "%m_63_6 = alloca i32 1"   --->   Operation 157 'alloca' 'm_63_6' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 158 [1/1] (0.00ns)   --->   "%m_63_7 = alloca i32 1"   --->   Operation 158 'alloca' 'm_63_7' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 159 [1/1] (0.00ns)   --->   "%m_63_8 = alloca i32 1"   --->   Operation 159 'alloca' 'm_63_8' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 160 [1/1] (0.00ns)   --->   "%m_63_9 = alloca i32 1"   --->   Operation 160 'alloca' 'm_63_9' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 161 [1/1] (0.00ns)   --->   "%m_63_10 = alloca i32 1"   --->   Operation 161 'alloca' 'm_63_10' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 162 [1/1] (0.00ns)   --->   "%m_63_11 = alloca i32 1"   --->   Operation 162 'alloca' 'm_63_11' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 163 [1/1] (0.00ns)   --->   "%m_63_12 = alloca i32 1"   --->   Operation 163 'alloca' 'm_63_12' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 164 [1/1] (0.00ns)   --->   "%m_63_13 = alloca i32 1"   --->   Operation 164 'alloca' 'm_63_13' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 165 [1/1] (0.00ns)   --->   "%m_63_14 = alloca i32 1"   --->   Operation 165 'alloca' 'm_63_14' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 166 [1/1] (0.00ns)   --->   "%m_63_15 = alloca i32 1"   --->   Operation 166 'alloca' 'm_63_15' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 167 [1/1] (0.00ns)   --->   "%m_63_16 = alloca i32 1"   --->   Operation 167 'alloca' 'm_63_16' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 168 [1/1] (0.00ns)   --->   "%m_63_17 = alloca i32 1"   --->   Operation 168 'alloca' 'm_63_17' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 169 [1/1] (0.00ns)   --->   "%m_63_18 = alloca i32 1"   --->   Operation 169 'alloca' 'm_63_18' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 170 [1/1] (0.00ns)   --->   "%m_63_19 = alloca i32 1"   --->   Operation 170 'alloca' 'm_63_19' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 171 [1/1] (0.00ns)   --->   "%m_63_20 = alloca i32 1"   --->   Operation 171 'alloca' 'm_63_20' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 172 [1/1] (0.00ns)   --->   "%m_63_21 = alloca i32 1"   --->   Operation 172 'alloca' 'm_63_21' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 173 [1/1] (0.00ns)   --->   "%m_63_22 = alloca i32 1"   --->   Operation 173 'alloca' 'm_63_22' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 174 [1/1] (0.00ns)   --->   "%m_63_23 = alloca i32 1"   --->   Operation 174 'alloca' 'm_63_23' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 175 [1/1] (0.00ns)   --->   "%m_63_24 = alloca i32 1"   --->   Operation 175 'alloca' 'm_63_24' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 176 [1/1] (0.00ns)   --->   "%m_63_25 = alloca i32 1"   --->   Operation 176 'alloca' 'm_63_25' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 177 [1/1] (0.00ns)   --->   "%m_63_26 = alloca i32 1"   --->   Operation 177 'alloca' 'm_63_26' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 178 [1/1] (0.00ns)   --->   "%m_63_27 = alloca i32 1"   --->   Operation 178 'alloca' 'm_63_27' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 179 [1/1] (0.00ns)   --->   "%m_63_28 = alloca i32 1"   --->   Operation 179 'alloca' 'm_63_28' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 180 [1/1] (0.00ns)   --->   "%m_63_29 = alloca i32 1"   --->   Operation 180 'alloca' 'm_63_29' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 181 [1/1] (0.00ns)   --->   "%m_63_30 = alloca i32 1"   --->   Operation 181 'alloca' 'm_63_30' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 182 [1/1] (0.00ns)   --->   "%m_63_31 = alloca i32 1"   --->   Operation 182 'alloca' 'm_63_31' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 183 [1/1] (0.00ns)   --->   "%m_63_32 = alloca i32 1"   --->   Operation 183 'alloca' 'm_63_32' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 184 [1/1] (0.00ns)   --->   "%m_63_33 = alloca i32 1"   --->   Operation 184 'alloca' 'm_63_33' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 185 [1/1] (0.00ns)   --->   "%m_63_34 = alloca i32 1"   --->   Operation 185 'alloca' 'm_63_34' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 186 [1/1] (0.00ns)   --->   "%m_63_35 = alloca i32 1"   --->   Operation 186 'alloca' 'm_63_35' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 187 [1/1] (0.00ns)   --->   "%m_63_36 = alloca i32 1"   --->   Operation 187 'alloca' 'm_63_36' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 188 [1/1] (0.00ns)   --->   "%m_63_37 = alloca i32 1"   --->   Operation 188 'alloca' 'm_63_37' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 189 [1/1] (0.00ns)   --->   "%m_63_38 = alloca i32 1"   --->   Operation 189 'alloca' 'm_63_38' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 190 [1/1] (0.00ns)   --->   "%m_63_39 = alloca i32 1"   --->   Operation 190 'alloca' 'm_63_39' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 191 [1/1] (0.00ns)   --->   "%m_63_40 = alloca i32 1"   --->   Operation 191 'alloca' 'm_63_40' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 192 [1/1] (0.00ns)   --->   "%m_63_41 = alloca i32 1"   --->   Operation 192 'alloca' 'm_63_41' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 193 [1/1] (0.00ns)   --->   "%m_63_42 = alloca i32 1"   --->   Operation 193 'alloca' 'm_63_42' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 194 [1/1] (0.00ns)   --->   "%m_63_43 = alloca i32 1"   --->   Operation 194 'alloca' 'm_63_43' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 195 [1/1] (0.00ns)   --->   "%m_63_44 = alloca i32 1"   --->   Operation 195 'alloca' 'm_63_44' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 196 [1/1] (0.00ns)   --->   "%m_63_45 = alloca i32 1"   --->   Operation 196 'alloca' 'm_63_45' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 197 [1/1] (0.00ns)   --->   "%m_63_46 = alloca i32 1"   --->   Operation 197 'alloca' 'm_63_46' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 198 [1/1] (0.00ns)   --->   "%m_63_47 = alloca i32 1"   --->   Operation 198 'alloca' 'm_63_47' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 199 [1/1] (0.46ns)   --->   "%br_ln39 = br void %.lr.ph" [sha256.cpp:39]   --->   Operation 199 'br' 'br_ln39' <Predicate = true> <Delay = 0.46>

State 11 <SV = 8> <Delay = 2.92>
ST_11 : Operation 200 [1/1] (0.00ns)   --->   "%i_1 = phi i7 %add_ln39, void %.split6128, i7 16, void %.lr.ph.preheader" [sha256.cpp:39]   --->   Operation 200 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 201 [1/1] (0.00ns)   --->   "%m_63_load = load i32 %m_63" [sha256.cpp:54]   --->   Operation 201 'load' 'm_63_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 202 [1/1] (0.00ns)   --->   "%m_63_1_load = load i32 %m_63_1" [sha256.cpp:54]   --->   Operation 202 'load' 'm_63_1_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 203 [1/1] (0.00ns)   --->   "%m_63_2_load = load i32 %m_63_2" [sha256.cpp:54]   --->   Operation 203 'load' 'm_63_2_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 204 [1/1] (0.00ns)   --->   "%m_63_3_load = load i32 %m_63_3" [sha256.cpp:54]   --->   Operation 204 'load' 'm_63_3_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 205 [1/1] (0.00ns)   --->   "%m_63_4_load = load i32 %m_63_4" [sha256.cpp:54]   --->   Operation 205 'load' 'm_63_4_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 206 [1/1] (0.00ns)   --->   "%m_63_5_load = load i32 %m_63_5" [sha256.cpp:54]   --->   Operation 206 'load' 'm_63_5_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 207 [1/1] (0.00ns)   --->   "%m_63_6_load = load i32 %m_63_6" [sha256.cpp:54]   --->   Operation 207 'load' 'm_63_6_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 208 [1/1] (0.00ns)   --->   "%m_63_7_load = load i32 %m_63_7" [sha256.cpp:54]   --->   Operation 208 'load' 'm_63_7_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 209 [1/1] (0.00ns)   --->   "%m_63_8_load = load i32 %m_63_8" [sha256.cpp:54]   --->   Operation 209 'load' 'm_63_8_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 210 [1/1] (0.00ns)   --->   "%m_63_9_load = load i32 %m_63_9" [sha256.cpp:54]   --->   Operation 210 'load' 'm_63_9_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 211 [1/1] (0.00ns)   --->   "%m_63_10_load = load i32 %m_63_10" [sha256.cpp:54]   --->   Operation 211 'load' 'm_63_10_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 212 [1/1] (0.00ns)   --->   "%m_63_11_load = load i32 %m_63_11" [sha256.cpp:54]   --->   Operation 212 'load' 'm_63_11_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 213 [1/1] (0.00ns)   --->   "%m_63_12_load = load i32 %m_63_12" [sha256.cpp:54]   --->   Operation 213 'load' 'm_63_12_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 214 [1/1] (0.00ns)   --->   "%m_63_13_load = load i32 %m_63_13" [sha256.cpp:54]   --->   Operation 214 'load' 'm_63_13_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 215 [1/1] (0.00ns)   --->   "%m_63_14_load = load i32 %m_63_14" [sha256.cpp:54]   --->   Operation 215 'load' 'm_63_14_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 216 [1/1] (0.00ns)   --->   "%m_63_15_load = load i32 %m_63_15" [sha256.cpp:54]   --->   Operation 216 'load' 'm_63_15_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 217 [1/1] (0.00ns)   --->   "%m_63_16_load = load i32 %m_63_16" [sha256.cpp:54]   --->   Operation 217 'load' 'm_63_16_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 218 [1/1] (0.00ns)   --->   "%m_63_17_load = load i32 %m_63_17" [sha256.cpp:54]   --->   Operation 218 'load' 'm_63_17_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 219 [1/1] (0.00ns)   --->   "%m_63_18_load = load i32 %m_63_18" [sha256.cpp:54]   --->   Operation 219 'load' 'm_63_18_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 220 [1/1] (0.00ns)   --->   "%m_63_19_load = load i32 %m_63_19" [sha256.cpp:54]   --->   Operation 220 'load' 'm_63_19_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 221 [1/1] (0.00ns)   --->   "%m_63_20_load = load i32 %m_63_20" [sha256.cpp:54]   --->   Operation 221 'load' 'm_63_20_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 222 [1/1] (0.00ns)   --->   "%m_63_21_load = load i32 %m_63_21" [sha256.cpp:54]   --->   Operation 222 'load' 'm_63_21_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 223 [1/1] (0.00ns)   --->   "%m_63_22_load = load i32 %m_63_22" [sha256.cpp:54]   --->   Operation 223 'load' 'm_63_22_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 224 [1/1] (0.00ns)   --->   "%m_63_23_load = load i32 %m_63_23" [sha256.cpp:54]   --->   Operation 224 'load' 'm_63_23_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 225 [1/1] (0.00ns)   --->   "%m_63_24_load = load i32 %m_63_24" [sha256.cpp:54]   --->   Operation 225 'load' 'm_63_24_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 226 [1/1] (0.00ns)   --->   "%m_63_25_load = load i32 %m_63_25" [sha256.cpp:54]   --->   Operation 226 'load' 'm_63_25_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 227 [1/1] (0.00ns)   --->   "%m_63_26_load = load i32 %m_63_26" [sha256.cpp:54]   --->   Operation 227 'load' 'm_63_26_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 228 [1/1] (0.00ns)   --->   "%m_63_27_load = load i32 %m_63_27" [sha256.cpp:54]   --->   Operation 228 'load' 'm_63_27_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 229 [1/1] (0.00ns)   --->   "%m_63_28_load = load i32 %m_63_28" [sha256.cpp:54]   --->   Operation 229 'load' 'm_63_28_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 230 [1/1] (0.00ns)   --->   "%m_63_29_load = load i32 %m_63_29" [sha256.cpp:54]   --->   Operation 230 'load' 'm_63_29_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 231 [1/1] (0.00ns)   --->   "%m_63_30_load = load i32 %m_63_30" [sha256.cpp:54]   --->   Operation 231 'load' 'm_63_30_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 232 [1/1] (0.00ns)   --->   "%m_63_31_load = load i32 %m_63_31" [sha256.cpp:54]   --->   Operation 232 'load' 'm_63_31_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 233 [1/1] (0.00ns)   --->   "%m_63_32_load = load i32 %m_63_32" [sha256.cpp:54]   --->   Operation 233 'load' 'm_63_32_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 234 [1/1] (0.00ns)   --->   "%m_63_33_load = load i32 %m_63_33" [sha256.cpp:54]   --->   Operation 234 'load' 'm_63_33_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 235 [1/1] (0.00ns)   --->   "%m_63_34_load = load i32 %m_63_34" [sha256.cpp:54]   --->   Operation 235 'load' 'm_63_34_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 236 [1/1] (0.00ns)   --->   "%m_63_35_load = load i32 %m_63_35" [sha256.cpp:54]   --->   Operation 236 'load' 'm_63_35_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 237 [1/1] (0.00ns)   --->   "%m_63_36_load = load i32 %m_63_36" [sha256.cpp:54]   --->   Operation 237 'load' 'm_63_36_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 238 [1/1] (0.00ns)   --->   "%m_63_37_load = load i32 %m_63_37" [sha256.cpp:54]   --->   Operation 238 'load' 'm_63_37_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 239 [1/1] (0.00ns)   --->   "%m_63_38_load = load i32 %m_63_38" [sha256.cpp:54]   --->   Operation 239 'load' 'm_63_38_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 240 [1/1] (0.00ns)   --->   "%m_63_39_load = load i32 %m_63_39" [sha256.cpp:54]   --->   Operation 240 'load' 'm_63_39_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 241 [1/1] (0.00ns)   --->   "%m_63_40_load = load i32 %m_63_40" [sha256.cpp:54]   --->   Operation 241 'load' 'm_63_40_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 242 [1/1] (0.00ns)   --->   "%m_63_41_load = load i32 %m_63_41" [sha256.cpp:54]   --->   Operation 242 'load' 'm_63_41_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 243 [1/1] (0.00ns)   --->   "%m_63_42_load = load i32 %m_63_42" [sha256.cpp:54]   --->   Operation 243 'load' 'm_63_42_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 244 [1/1] (0.00ns)   --->   "%m_63_43_load = load i32 %m_63_43" [sha256.cpp:54]   --->   Operation 244 'load' 'm_63_43_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 245 [1/1] (0.00ns)   --->   "%m_63_44_load = load i32 %m_63_44" [sha256.cpp:54]   --->   Operation 245 'load' 'm_63_44_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 246 [1/1] (0.00ns)   --->   "%m_63_45_load = load i32 %m_63_45" [sha256.cpp:54]   --->   Operation 246 'load' 'm_63_45_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 247 [1/1] (0.71ns)   --->   "%icmp_ln39 = icmp_eq  i7 %i_1, i7 64" [sha256.cpp:39]   --->   Operation 247 'icmp' 'icmp_ln39' <Predicate = true> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 248 [1/1] (0.00ns)   --->   "%empty_17 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 48, i64 48, i64 48"   --->   Operation 248 'speclooptripcount' 'empty_17' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 249 [1/1] (0.00ns)   --->   "%br_ln39 = br i1 %icmp_ln39, void %.split6, void %._crit_edge" [sha256.cpp:39]   --->   Operation 249 'br' 'br_ln39' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 250 [1/1] (0.00ns)   --->   "%specpipeline_ln34 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty" [sha256.cpp:34]   --->   Operation 250 'specpipeline' 'specpipeline_ln34' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 251 [1/1] (0.00ns)   --->   "%specloopname_ln34 = specloopname void @_ssdm_op_SpecLoopName, void @empty_5" [sha256.cpp:34]   --->   Operation 251 'specloopname' 'specloopname_ln34' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 252 [1/1] (0.00ns)   --->   "%trunc_ln40 = trunc i7 %i_1" [sha256.cpp:40]   --->   Operation 252 'trunc' 'trunc_ln40' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 253 [1/1] (0.86ns)   --->   "%switch_ln40 = switch i6 %trunc_ln40, void %branch317, i6 16, void %.split6580, i6 17, void %branch271, i6 18, void %branch272, i6 19, void %branch273, i6 20, void %branch274, i6 21, void %branch275, i6 22, void %branch276, i6 23, void %branch277, i6 24, void %branch278, i6 25, void %branch279, i6 26, void %branch280, i6 27, void %branch281, i6 28, void %branch282, i6 29, void %branch283, i6 30, void %branch284, i6 31, void %branch285, i6 32, void %branch286, i6 33, void %branch287, i6 34, void %branch288, i6 35, void %branch289, i6 36, void %branch290, i6 37, void %branch291, i6 38, void %branch292, i6 39, void %branch293, i6 40, void %branch294, i6 41, void %branch295, i6 42, void %branch296, i6 43, void %branch297, i6 44, void %branch298, i6 45, void %branch299, i6 46, void %branch300, i6 47, void %branch301, i6 48, void %branch302, i6 49, void %branch303, i6 50, void %branch304, i6 51, void %branch305, i6 52, void %branch306, i6 53, void %branch307, i6 54, void %branch308, i6 55, void %branch309, i6 56, void %branch310, i6 57, void %branch311, i6 58, void %branch312, i6 59, void %branch313, i6 60, void %branch314, i6 61, void %branch315, i6 62, void %branch316" [sha256.cpp:40]   --->   Operation 253 'switch' 'switch_ln40' <Predicate = (!icmp_ln39)> <Delay = 0.86>
ST_11 : Operation 254 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 254 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 62)> <Delay = 0.86>
ST_11 : Operation 255 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 255 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 61)> <Delay = 0.86>
ST_11 : Operation 256 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 256 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 60)> <Delay = 0.86>
ST_11 : Operation 257 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 257 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 59)> <Delay = 0.86>
ST_11 : Operation 258 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 258 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 58)> <Delay = 0.86>
ST_11 : Operation 259 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 259 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 57)> <Delay = 0.86>
ST_11 : Operation 260 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 260 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 56)> <Delay = 0.86>
ST_11 : Operation 261 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 261 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 55)> <Delay = 0.86>
ST_11 : Operation 262 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 262 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 54)> <Delay = 0.86>
ST_11 : Operation 263 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 263 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 53)> <Delay = 0.86>
ST_11 : Operation 264 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 264 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 52)> <Delay = 0.86>
ST_11 : Operation 265 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 265 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 51)> <Delay = 0.86>
ST_11 : Operation 266 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 266 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 50)> <Delay = 0.86>
ST_11 : Operation 267 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 267 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 49)> <Delay = 0.86>
ST_11 : Operation 268 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 268 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 48)> <Delay = 0.86>
ST_11 : Operation 269 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 269 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 47)> <Delay = 0.86>
ST_11 : Operation 270 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 270 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 46)> <Delay = 0.86>
ST_11 : Operation 271 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 271 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 45)> <Delay = 0.86>
ST_11 : Operation 272 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 272 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 44)> <Delay = 0.86>
ST_11 : Operation 273 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 273 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 43)> <Delay = 0.86>
ST_11 : Operation 274 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 274 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 42)> <Delay = 0.86>
ST_11 : Operation 275 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 275 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 41)> <Delay = 0.86>
ST_11 : Operation 276 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 276 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 40)> <Delay = 0.86>
ST_11 : Operation 277 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 277 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 39)> <Delay = 0.86>
ST_11 : Operation 278 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 278 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 38)> <Delay = 0.86>
ST_11 : Operation 279 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 279 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 37)> <Delay = 0.86>
ST_11 : Operation 280 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 280 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 36)> <Delay = 0.86>
ST_11 : Operation 281 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 281 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 35)> <Delay = 0.86>
ST_11 : Operation 282 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 282 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 34)> <Delay = 0.86>
ST_11 : Operation 283 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 283 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 33)> <Delay = 0.86>
ST_11 : Operation 284 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 284 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 32)> <Delay = 0.86>
ST_11 : Operation 285 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 285 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 31)> <Delay = 0.86>
ST_11 : Operation 286 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 286 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 30)> <Delay = 0.86>
ST_11 : Operation 287 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 287 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 29)> <Delay = 0.86>
ST_11 : Operation 288 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 288 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 28)> <Delay = 0.86>
ST_11 : Operation 289 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 289 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 27)> <Delay = 0.86>
ST_11 : Operation 290 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 290 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 26)> <Delay = 0.86>
ST_11 : Operation 291 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 291 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 25)> <Delay = 0.86>
ST_11 : Operation 292 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 292 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 24)> <Delay = 0.86>
ST_11 : Operation 293 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 293 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 23)> <Delay = 0.86>
ST_11 : Operation 294 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 294 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 22)> <Delay = 0.86>
ST_11 : Operation 295 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 295 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 21)> <Delay = 0.86>
ST_11 : Operation 296 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 296 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 20)> <Delay = 0.86>
ST_11 : Operation 297 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 297 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 19)> <Delay = 0.86>
ST_11 : Operation 298 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 298 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 18)> <Delay = 0.86>
ST_11 : Operation 299 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 299 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 17)> <Delay = 0.86>
ST_11 : Operation 300 [1/1] (0.86ns)   --->   "%br_ln40 = br void %.split6580" [sha256.cpp:40]   --->   Operation 300 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 63) | (!icmp_ln39 & trunc_ln40 == 15) | (!icmp_ln39 & trunc_ln40 == 14) | (!icmp_ln39 & trunc_ln40 == 13) | (!icmp_ln39 & trunc_ln40 == 12) | (!icmp_ln39 & trunc_ln40 == 11) | (!icmp_ln39 & trunc_ln40 == 10) | (!icmp_ln39 & trunc_ln40 == 9) | (!icmp_ln39 & trunc_ln40 == 8) | (!icmp_ln39 & trunc_ln40 == 7) | (!icmp_ln39 & trunc_ln40 == 6) | (!icmp_ln39 & trunc_ln40 == 5) | (!icmp_ln39 & trunc_ln40 == 4) | (!icmp_ln39 & trunc_ln40 == 3) | (!icmp_ln39 & trunc_ln40 == 2) | (!icmp_ln39 & trunc_ln40 == 1) | (!icmp_ln39 & trunc_ln40 == 0)> <Delay = 0.86>
ST_11 : Operation 301 [1/1] (0.00ns)   --->   "%phi_ln40 = phi i32 %m_15_1_load, void %branch271, i32 %m_63_load, void %branch272, i32 %m_63_1_load, void %branch273, i32 %m_63_2_load, void %branch274, i32 %m_63_3_load, void %branch275, i32 %m_63_4_load, void %branch276, i32 %m_63_5_load, void %branch277, i32 %m_63_6_load, void %branch278, i32 %m_63_7_load, void %branch279, i32 %m_63_8_load, void %branch280, i32 %m_63_9_load, void %branch281, i32 %m_63_10_load, void %branch282, i32 %m_63_11_load, void %branch283, i32 %m_63_12_load, void %branch284, i32 %m_63_13_load, void %branch285, i32 %m_63_14_load, void %branch286, i32 %m_63_15_load, void %branch287, i32 %m_63_16_load, void %branch288, i32 %m_63_17_load, void %branch289, i32 %m_63_18_load, void %branch290, i32 %m_63_19_load, void %branch291, i32 %m_63_20_load, void %branch292, i32 %m_63_21_load, void %branch293, i32 %m_63_22_load, void %branch294, i32 %m_63_23_load, void %branch295, i32 %m_63_24_load, void %branch296, i32 %m_63_25_load, void %branch297, i32 %m_63_26_load, void %branch298, i32 %m_63_27_load, void %branch299, i32 %m_63_28_load, void %branch300, i32 %m_63_29_load, void %branch301, i32 %m_63_30_load, void %branch302, i32 %m_63_31_load, void %branch303, i32 %m_63_32_load, void %branch304, i32 %m_63_33_load, void %branch305, i32 %m_63_34_load, void %branch306, i32 %m_63_35_load, void %branch307, i32 %m_63_36_load, void %branch308, i32 %m_63_37_load, void %branch309, i32 %m_63_38_load, void %branch310, i32 %m_63_39_load, void %branch311, i32 %m_63_40_load, void %branch312, i32 %m_63_41_load, void %branch313, i32 %m_63_42_load, void %branch314, i32 %m_63_43_load, void %branch315, i32 %m_63_44_load, void %branch316, i32 %m_63_45_load, void %branch317, i32 %m_15_load, void %.split6" [sha256.cpp:40]   --->   Operation 301 'phi' 'phi_ln40' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 302 [1/1] (0.00ns)   --->   "%m_15_2_load_1 = load i32 %m_15_2" [sha256.cpp:40]   --->   Operation 302 'load' 'm_15_2_load_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 303 [1/1] (0.00ns)   --->   "%m_15_3_load_1 = load i32 %m_15_3" [sha256.cpp:40]   --->   Operation 303 'load' 'm_15_3_load_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 304 [1/1] (0.00ns)   --->   "%m_15_4_load_1 = load i32 %m_15_4" [sha256.cpp:40]   --->   Operation 304 'load' 'm_15_4_load_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 305 [1/1] (0.00ns)   --->   "%m_15_5_load_1 = load i32 %m_15_5" [sha256.cpp:40]   --->   Operation 305 'load' 'm_15_5_load_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 306 [1/1] (0.00ns)   --->   "%m_15_6_load_1 = load i32 %m_15_6" [sha256.cpp:40]   --->   Operation 306 'load' 'm_15_6_load_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 307 [1/1] (0.00ns)   --->   "%m_15_7_load_1 = load i32 %m_15_7" [sha256.cpp:40]   --->   Operation 307 'load' 'm_15_7_load_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 308 [1/1] (0.00ns)   --->   "%m_15_8_load_1 = load i32 %m_15_8" [sha256.cpp:40]   --->   Operation 308 'load' 'm_15_8_load_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 309 [1/1] (0.00ns)   --->   "%m_15_9_load_1 = load i32 %m_15_9" [sha256.cpp:40]   --->   Operation 309 'load' 'm_15_9_load_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 310 [1/1] (0.00ns)   --->   "%m_15_10_load_1 = load i32 %m_15_10" [sha256.cpp:40]   --->   Operation 310 'load' 'm_15_10_load_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 311 [1/1] (0.00ns)   --->   "%m_15_11_load_1 = load i32 %m_15_11" [sha256.cpp:40]   --->   Operation 311 'load' 'm_15_11_load_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 312 [1/1] (0.00ns)   --->   "%m_15_12_load_1 = load i32 %m_15_12" [sha256.cpp:40]   --->   Operation 312 'load' 'm_15_12_load_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 313 [1/1] (0.00ns)   --->   "%m_15_13_load_1 = load i32 %m_15_13" [sha256.cpp:40]   --->   Operation 313 'load' 'm_15_13_load_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 314 [1/1] (0.00ns)   --->   "%m_15_14_load_1 = load i32 %m_15_14" [sha256.cpp:40]   --->   Operation 314 'load' 'm_15_14_load_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 315 [1/1] (0.00ns)   --->   "%m_15_15_load_1 = load i32 %m_15_15" [sha256.cpp:40]   --->   Operation 315 'load' 'm_15_15_load_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 316 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%lshr_ln2 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %phi_ln40, i32 17, i32 31" [sha256.cpp:40]   --->   Operation 316 'partselect' 'lshr_ln2' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 317 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%trunc_ln40_1 = trunc i32 %phi_ln40" [sha256.cpp:40]   --->   Operation 317 'trunc' 'trunc_ln40_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 318 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%or_ln2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln40_1, i15 %lshr_ln2" [sha256.cpp:40]   --->   Operation 318 'bitconcatenate' 'or_ln2' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 319 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%lshr_ln40_1 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %phi_ln40, i32 19, i32 31" [sha256.cpp:40]   --->   Operation 319 'partselect' 'lshr_ln40_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 320 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%trunc_ln40_2 = trunc i32 %phi_ln40" [sha256.cpp:40]   --->   Operation 320 'trunc' 'trunc_ln40_2' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 321 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%or_ln40_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln40_2, i13 %lshr_ln40_1" [sha256.cpp:40]   --->   Operation 321 'bitconcatenate' 'or_ln40_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 322 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%lshr_ln40_2 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %phi_ln40, i32 10, i32 31" [sha256.cpp:40]   --->   Operation 322 'partselect' 'lshr_ln40_2' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 323 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%zext_ln40 = zext i22 %lshr_ln40_2" [sha256.cpp:40]   --->   Operation 323 'zext' 'zext_ln40' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 324 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%xor_ln40 = xor i32 %zext_ln40, i32 %or_ln40_1" [sha256.cpp:40]   --->   Operation 324 'xor' 'xor_ln40' <Predicate = (!icmp_ln39)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 325 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%xor_ln40_1 = xor i32 %xor_ln40, i32 %or_ln2" [sha256.cpp:40]   --->   Operation 325 'xor' 'xor_ln40_1' <Predicate = (!icmp_ln39)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 326 [1/1] (0.87ns)   --->   "%phi_ln40_1 = mux i32 @_ssdm_op_Mux.ap_auto.64i32.i6, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_15_11_load_1, i32 %m_15_12_load_1, i32 %m_15_13_load_1, i32 %m_15_14_load_1, i32 %m_15_15_load_1, i32 %m_15_load, i32 %m_15_1_load, i32 %m_63_load, i32 %m_63_1_load, i32 %m_63_2_load, i32 %m_63_3_load, i32 %m_63_4_load, i32 %m_63_5_load, i32 %m_63_6_load, i32 %m_63_7_load, i32 %m_63_8_load, i32 %m_63_9_load, i32 %m_63_10_load, i32 %m_63_11_load, i32 %m_63_12_load, i32 %m_63_13_load, i32 %m_63_14_load, i32 %m_63_15_load, i32 %m_63_16_load, i32 %m_63_17_load, i32 %m_63_18_load, i32 %m_63_19_load, i32 %m_63_20_load, i32 %m_63_21_load, i32 %m_63_22_load, i32 %m_63_23_load, i32 %m_63_24_load, i32 %m_63_25_load, i32 %m_63_26_load, i32 %m_63_27_load, i32 %m_63_28_load, i32 %m_63_29_load, i32 %m_63_30_load, i32 %m_63_31_load, i32 %m_63_32_load, i32 %m_63_33_load, i32 %m_63_34_load, i32 %m_63_35_load, i32 %m_63_36_load, i32 %m_63_37_load, i32 %m_63_38_load, i32 %m_63_39_load, i32 %m_63_40_load, i6 %trunc_ln40" [sha256.cpp:40]   --->   Operation 326 'mux' 'phi_ln40_1' <Predicate = (!icmp_ln39)> <Delay = 0.87> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 327 [1/1] (0.87ns)   --->   "%phi_ln40_2 = mux i32 @_ssdm_op_Mux.ap_auto.64i32.i6, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_15_3_load_1, i32 %m_15_4_load_1, i32 %m_15_5_load_1, i32 %m_15_6_load_1, i32 %m_15_7_load_1, i32 %m_15_8_load_1, i32 %m_15_9_load_1, i32 %m_15_10_load_1, i32 %m_15_11_load_1, i32 %m_15_12_load_1, i32 %m_15_13_load_1, i32 %m_15_14_load_1, i32 %m_15_15_load_1, i32 %m_15_load, i32 %m_15_1_load, i32 %m_63_load, i32 %m_63_1_load, i32 %m_63_2_load, i32 %m_63_3_load, i32 %m_63_4_load, i32 %m_63_5_load, i32 %m_63_6_load, i32 %m_63_7_load, i32 %m_63_8_load, i32 %m_63_9_load, i32 %m_63_10_load, i32 %m_63_11_load, i32 %m_63_12_load, i32 %m_63_13_load, i32 %m_63_14_load, i32 %m_63_15_load, i32 %m_63_16_load, i32 %m_63_17_load, i32 %m_63_18_load, i32 %m_63_19_load, i32 %m_63_20_load, i32 %m_63_21_load, i32 %m_63_22_load, i32 %m_63_23_load, i32 %m_63_24_load, i32 %m_63_25_load, i32 %m_63_26_load, i32 %m_63_27_load, i32 %m_63_28_load, i32 %m_63_29_load, i32 %m_63_30_load, i32 %m_63_31_load, i32 %m_63_32_load, i6 %trunc_ln40" [sha256.cpp:40]   --->   Operation 327 'mux' 'phi_ln40_2' <Predicate = (!icmp_ln39)> <Delay = 0.87> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 328 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%lshr_ln40_3 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %phi_ln40_2, i32 7, i32 31" [sha256.cpp:40]   --->   Operation 328 'partselect' 'lshr_ln40_3' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 329 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%trunc_ln40_3 = trunc i32 %phi_ln40_2" [sha256.cpp:40]   --->   Operation 329 'trunc' 'trunc_ln40_3' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 330 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%or_ln40_2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln40_3, i25 %lshr_ln40_3" [sha256.cpp:40]   --->   Operation 330 'bitconcatenate' 'or_ln40_2' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 331 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%lshr_ln40_4 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %phi_ln40_2, i32 18, i32 31" [sha256.cpp:40]   --->   Operation 331 'partselect' 'lshr_ln40_4' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 332 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%trunc_ln40_4 = trunc i32 %phi_ln40_2" [sha256.cpp:40]   --->   Operation 332 'trunc' 'trunc_ln40_4' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 333 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%or_ln40_3 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln40_4, i14 %lshr_ln40_4" [sha256.cpp:40]   --->   Operation 333 'bitconcatenate' 'or_ln40_3' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 334 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%lshr_ln40_5 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %phi_ln40_2, i32 3, i32 31" [sha256.cpp:40]   --->   Operation 334 'partselect' 'lshr_ln40_5' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 335 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%zext_ln40_1 = zext i29 %lshr_ln40_5" [sha256.cpp:40]   --->   Operation 335 'zext' 'zext_ln40_1' <Predicate = (!icmp_ln39)> <Delay = 0.00>
ST_11 : Operation 336 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%xor_ln40_2 = xor i32 %zext_ln40_1, i32 %or_ln40_3" [sha256.cpp:40]   --->   Operation 336 'xor' 'xor_ln40_2' <Predicate = (!icmp_ln39)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 337 [1/1] (0.00ns) (grouped into LUT with out node add_ln40_1)   --->   "%xor_ln40_3 = xor i32 %xor_ln40_2, i32 %or_ln40_2" [sha256.cpp:40]   --->   Operation 337 'xor' 'xor_ln40_3' <Predicate = (!icmp_ln39)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 338 [1/1] (0.87ns)   --->   "%phi_ln40_3 = mux i32 @_ssdm_op_Mux.ap_auto.64i32.i6, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_15_2_load_1, i32 %m_15_3_load_1, i32 %m_15_4_load_1, i32 %m_15_5_load_1, i32 %m_15_6_load_1, i32 %m_15_7_load_1, i32 %m_15_8_load_1, i32 %m_15_9_load_1, i32 %m_15_10_load_1, i32 %m_15_11_load_1, i32 %m_15_12_load_1, i32 %m_15_13_load_1, i32 %m_15_14_load_1, i32 %m_15_15_load_1, i32 %m_15_load, i32 %m_15_1_load, i32 %m_63_load, i32 %m_63_1_load, i32 %m_63_2_load, i32 %m_63_3_load, i32 %m_63_4_load, i32 %m_63_5_load, i32 %m_63_6_load, i32 %m_63_7_load, i32 %m_63_8_load, i32 %m_63_9_load, i32 %m_63_10_load, i32 %m_63_11_load, i32 %m_63_12_load, i32 %m_63_13_load, i32 %m_63_14_load, i32 %m_63_15_load, i32 %m_63_16_load, i32 %m_63_17_load, i32 %m_63_18_load, i32 %m_63_19_load, i32 %m_63_20_load, i32 %m_63_21_load, i32 %m_63_22_load, i32 %m_63_23_load, i32 %m_63_24_load, i32 %m_63_25_load, i32 %m_63_26_load, i32 %m_63_27_load, i32 %m_63_28_load, i32 %m_63_29_load, i32 %m_63_30_load, i32 %m_63_31_load, i6 %trunc_ln40" [sha256.cpp:40]   --->   Operation 338 'mux' 'phi_ln40_3' <Predicate = (!icmp_ln39)> <Delay = 0.87> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 339 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln40 = add i32 %phi_ln40_1, i32 %phi_ln40_3" [sha256.cpp:40]   --->   Operation 339 'add' 'add_ln40' <Predicate = (!icmp_ln39)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_11 : Operation 340 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln40_1 = add i32 %xor_ln40_1, i32 %xor_ln40_3" [sha256.cpp:40]   --->   Operation 340 'add' 'add_ln40_1' <Predicate = (!icmp_ln39)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 341 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_16 = add i32 %add_ln40_1, i32 %add_ln40" [sha256.cpp:40]   --->   Operation 341 'add' 'm_16' <Predicate = (!icmp_ln39)> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_11 : Operation 342 [1/1] (0.71ns)   --->   "%switch_ln40 = switch i6 %trunc_ln40, void %branch63, i6 16, void %.split6580..split6128_crit_edge, i6 17, void %branch17, i6 18, void %branch18, i6 19, void %branch19, i6 20, void %branch20, i6 21, void %branch21, i6 22, void %branch22, i6 23, void %branch23, i6 24, void %branch24, i6 25, void %branch25, i6 26, void %branch26, i6 27, void %branch27, i6 28, void %branch28, i6 29, void %branch29, i6 30, void %branch30, i6 31, void %branch31, i6 32, void %branch32, i6 33, void %branch33, i6 34, void %branch34, i6 35, void %branch35, i6 36, void %branch36, i6 37, void %branch37, i6 38, void %branch38, i6 39, void %branch39, i6 40, void %branch40, i6 41, void %branch41, i6 42, void %branch42, i6 43, void %branch43, i6 44, void %branch44, i6 45, void %branch45, i6 46, void %branch46, i6 47, void %branch47, i6 48, void %branch48, i6 49, void %branch49, i6 50, void %branch50, i6 51, void %branch51, i6 52, void %branch52, i6 53, void %branch53, i6 54, void %branch54, i6 55, void %branch55, i6 56, void %branch56, i6 57, void %branch57, i6 58, void %branch58, i6 59, void %branch59, i6 60, void %branch60, i6 61, void %branch61, i6 62, void %branch62" [sha256.cpp:40]   --->   Operation 342 'switch' 'switch_ln40' <Predicate = (!icmp_ln39)> <Delay = 0.71>
ST_11 : Operation 343 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_46" [sha256.cpp:40]   --->   Operation 343 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 62)> <Delay = 0.00>
ST_11 : Operation 344 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 344 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 62)> <Delay = 0.00>
ST_11 : Operation 345 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_45" [sha256.cpp:40]   --->   Operation 345 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 61)> <Delay = 0.00>
ST_11 : Operation 346 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 346 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 61)> <Delay = 0.00>
ST_11 : Operation 347 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_44" [sha256.cpp:40]   --->   Operation 347 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 60)> <Delay = 0.00>
ST_11 : Operation 348 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 348 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 60)> <Delay = 0.00>
ST_11 : Operation 349 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_43" [sha256.cpp:40]   --->   Operation 349 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 59)> <Delay = 0.00>
ST_11 : Operation 350 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 350 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 59)> <Delay = 0.00>
ST_11 : Operation 351 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_42" [sha256.cpp:40]   --->   Operation 351 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 58)> <Delay = 0.00>
ST_11 : Operation 352 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 352 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 58)> <Delay = 0.00>
ST_11 : Operation 353 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_41" [sha256.cpp:40]   --->   Operation 353 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 57)> <Delay = 0.00>
ST_11 : Operation 354 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 354 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 57)> <Delay = 0.00>
ST_11 : Operation 355 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_40" [sha256.cpp:40]   --->   Operation 355 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 56)> <Delay = 0.00>
ST_11 : Operation 356 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 356 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 56)> <Delay = 0.00>
ST_11 : Operation 357 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_39" [sha256.cpp:40]   --->   Operation 357 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 55)> <Delay = 0.00>
ST_11 : Operation 358 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 358 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 55)> <Delay = 0.00>
ST_11 : Operation 359 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_38" [sha256.cpp:40]   --->   Operation 359 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 54)> <Delay = 0.00>
ST_11 : Operation 360 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 360 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 54)> <Delay = 0.00>
ST_11 : Operation 361 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_37" [sha256.cpp:40]   --->   Operation 361 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 53)> <Delay = 0.00>
ST_11 : Operation 362 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 362 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 53)> <Delay = 0.00>
ST_11 : Operation 363 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_36" [sha256.cpp:40]   --->   Operation 363 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 52)> <Delay = 0.00>
ST_11 : Operation 364 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 364 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 52)> <Delay = 0.00>
ST_11 : Operation 365 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_35" [sha256.cpp:40]   --->   Operation 365 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 51)> <Delay = 0.00>
ST_11 : Operation 366 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 366 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 51)> <Delay = 0.00>
ST_11 : Operation 367 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_34" [sha256.cpp:40]   --->   Operation 367 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 50)> <Delay = 0.00>
ST_11 : Operation 368 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 368 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 50)> <Delay = 0.00>
ST_11 : Operation 369 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_33" [sha256.cpp:40]   --->   Operation 369 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 49)> <Delay = 0.00>
ST_11 : Operation 370 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 370 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 49)> <Delay = 0.00>
ST_11 : Operation 371 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_32" [sha256.cpp:40]   --->   Operation 371 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 48)> <Delay = 0.00>
ST_11 : Operation 372 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 372 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 48)> <Delay = 0.00>
ST_11 : Operation 373 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_31" [sha256.cpp:40]   --->   Operation 373 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 47)> <Delay = 0.00>
ST_11 : Operation 374 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 374 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 47)> <Delay = 0.00>
ST_11 : Operation 375 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_30" [sha256.cpp:40]   --->   Operation 375 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 46)> <Delay = 0.00>
ST_11 : Operation 376 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 376 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 46)> <Delay = 0.00>
ST_11 : Operation 377 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_29" [sha256.cpp:40]   --->   Operation 377 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 45)> <Delay = 0.00>
ST_11 : Operation 378 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 378 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 45)> <Delay = 0.00>
ST_11 : Operation 379 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_28" [sha256.cpp:40]   --->   Operation 379 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 44)> <Delay = 0.00>
ST_11 : Operation 380 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 380 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 44)> <Delay = 0.00>
ST_11 : Operation 381 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_27" [sha256.cpp:40]   --->   Operation 381 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 43)> <Delay = 0.00>
ST_11 : Operation 382 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 382 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 43)> <Delay = 0.00>
ST_11 : Operation 383 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_26" [sha256.cpp:40]   --->   Operation 383 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 42)> <Delay = 0.00>
ST_11 : Operation 384 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 384 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 42)> <Delay = 0.00>
ST_11 : Operation 385 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_25" [sha256.cpp:40]   --->   Operation 385 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 41)> <Delay = 0.00>
ST_11 : Operation 386 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 386 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 41)> <Delay = 0.00>
ST_11 : Operation 387 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_24" [sha256.cpp:40]   --->   Operation 387 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 40)> <Delay = 0.00>
ST_11 : Operation 388 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 388 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 40)> <Delay = 0.00>
ST_11 : Operation 389 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_23" [sha256.cpp:40]   --->   Operation 389 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 39)> <Delay = 0.00>
ST_11 : Operation 390 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 390 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 39)> <Delay = 0.00>
ST_11 : Operation 391 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_22" [sha256.cpp:40]   --->   Operation 391 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 38)> <Delay = 0.00>
ST_11 : Operation 392 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 392 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 38)> <Delay = 0.00>
ST_11 : Operation 393 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_21" [sha256.cpp:40]   --->   Operation 393 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 37)> <Delay = 0.00>
ST_11 : Operation 394 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 394 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 37)> <Delay = 0.00>
ST_11 : Operation 395 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_20" [sha256.cpp:40]   --->   Operation 395 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 36)> <Delay = 0.00>
ST_11 : Operation 396 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 396 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 36)> <Delay = 0.00>
ST_11 : Operation 397 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_19" [sha256.cpp:40]   --->   Operation 397 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 35)> <Delay = 0.00>
ST_11 : Operation 398 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 398 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 35)> <Delay = 0.00>
ST_11 : Operation 399 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_18" [sha256.cpp:40]   --->   Operation 399 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 34)> <Delay = 0.00>
ST_11 : Operation 400 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 400 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 34)> <Delay = 0.00>
ST_11 : Operation 401 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_17" [sha256.cpp:40]   --->   Operation 401 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 33)> <Delay = 0.00>
ST_11 : Operation 402 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 402 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 33)> <Delay = 0.00>
ST_11 : Operation 403 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_16" [sha256.cpp:40]   --->   Operation 403 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 32)> <Delay = 0.00>
ST_11 : Operation 404 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 404 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 32)> <Delay = 0.00>
ST_11 : Operation 405 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_15" [sha256.cpp:40]   --->   Operation 405 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 31)> <Delay = 0.00>
ST_11 : Operation 406 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 406 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 31)> <Delay = 0.00>
ST_11 : Operation 407 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_14" [sha256.cpp:40]   --->   Operation 407 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 30)> <Delay = 0.00>
ST_11 : Operation 408 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 408 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 30)> <Delay = 0.00>
ST_11 : Operation 409 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_13" [sha256.cpp:40]   --->   Operation 409 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 29)> <Delay = 0.00>
ST_11 : Operation 410 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 410 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 29)> <Delay = 0.00>
ST_11 : Operation 411 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_12" [sha256.cpp:40]   --->   Operation 411 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 28)> <Delay = 0.00>
ST_11 : Operation 412 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 412 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 28)> <Delay = 0.00>
ST_11 : Operation 413 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_11" [sha256.cpp:40]   --->   Operation 413 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 27)> <Delay = 0.00>
ST_11 : Operation 414 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 414 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 27)> <Delay = 0.00>
ST_11 : Operation 415 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_10" [sha256.cpp:40]   --->   Operation 415 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 26)> <Delay = 0.00>
ST_11 : Operation 416 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 416 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 26)> <Delay = 0.00>
ST_11 : Operation 417 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_9" [sha256.cpp:40]   --->   Operation 417 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 25)> <Delay = 0.00>
ST_11 : Operation 418 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 418 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 25)> <Delay = 0.00>
ST_11 : Operation 419 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_8" [sha256.cpp:40]   --->   Operation 419 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 24)> <Delay = 0.00>
ST_11 : Operation 420 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 420 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 24)> <Delay = 0.00>
ST_11 : Operation 421 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_7" [sha256.cpp:40]   --->   Operation 421 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 23)> <Delay = 0.00>
ST_11 : Operation 422 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 422 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 23)> <Delay = 0.00>
ST_11 : Operation 423 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_6" [sha256.cpp:40]   --->   Operation 423 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 22)> <Delay = 0.00>
ST_11 : Operation 424 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 424 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 22)> <Delay = 0.00>
ST_11 : Operation 425 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_5" [sha256.cpp:40]   --->   Operation 425 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 21)> <Delay = 0.00>
ST_11 : Operation 426 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 426 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 21)> <Delay = 0.00>
ST_11 : Operation 427 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_4" [sha256.cpp:40]   --->   Operation 427 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 20)> <Delay = 0.00>
ST_11 : Operation 428 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 428 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 20)> <Delay = 0.00>
ST_11 : Operation 429 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_3" [sha256.cpp:40]   --->   Operation 429 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 19)> <Delay = 0.00>
ST_11 : Operation 430 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 430 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 19)> <Delay = 0.00>
ST_11 : Operation 431 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_2" [sha256.cpp:40]   --->   Operation 431 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 18)> <Delay = 0.00>
ST_11 : Operation 432 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 432 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 18)> <Delay = 0.00>
ST_11 : Operation 433 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_1" [sha256.cpp:40]   --->   Operation 433 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 17)> <Delay = 0.00>
ST_11 : Operation 434 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 434 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 17)> <Delay = 0.00>
ST_11 : Operation 435 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63" [sha256.cpp:40]   --->   Operation 435 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 16)> <Delay = 0.00>
ST_11 : Operation 436 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 436 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 16)> <Delay = 0.00>
ST_11 : Operation 437 [1/1] (0.00ns)   --->   "%store_ln40 = store i32 %m_16, i32 %m_63_47" [sha256.cpp:40]   --->   Operation 437 'store' 'store_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 63) | (!icmp_ln39 & trunc_ln40 == 15) | (!icmp_ln39 & trunc_ln40 == 14) | (!icmp_ln39 & trunc_ln40 == 13) | (!icmp_ln39 & trunc_ln40 == 12) | (!icmp_ln39 & trunc_ln40 == 11) | (!icmp_ln39 & trunc_ln40 == 10) | (!icmp_ln39 & trunc_ln40 == 9) | (!icmp_ln39 & trunc_ln40 == 8) | (!icmp_ln39 & trunc_ln40 == 7) | (!icmp_ln39 & trunc_ln40 == 6) | (!icmp_ln39 & trunc_ln40 == 5) | (!icmp_ln39 & trunc_ln40 == 4) | (!icmp_ln39 & trunc_ln40 == 3) | (!icmp_ln39 & trunc_ln40 == 2) | (!icmp_ln39 & trunc_ln40 == 1) | (!icmp_ln39 & trunc_ln40 == 0)> <Delay = 0.00>
ST_11 : Operation 438 [1/1] (0.00ns)   --->   "%br_ln40 = br void %.split6128" [sha256.cpp:40]   --->   Operation 438 'br' 'br_ln40' <Predicate = (!icmp_ln39 & trunc_ln40 == 63) | (!icmp_ln39 & trunc_ln40 == 15) | (!icmp_ln39 & trunc_ln40 == 14) | (!icmp_ln39 & trunc_ln40 == 13) | (!icmp_ln39 & trunc_ln40 == 12) | (!icmp_ln39 & trunc_ln40 == 11) | (!icmp_ln39 & trunc_ln40 == 10) | (!icmp_ln39 & trunc_ln40 == 9) | (!icmp_ln39 & trunc_ln40 == 8) | (!icmp_ln39 & trunc_ln40 == 7) | (!icmp_ln39 & trunc_ln40 == 6) | (!icmp_ln39 & trunc_ln40 == 5) | (!icmp_ln39 & trunc_ln40 == 4) | (!icmp_ln39 & trunc_ln40 == 3) | (!icmp_ln39 & trunc_ln40 == 2) | (!icmp_ln39 & trunc_ln40 == 1) | (!icmp_ln39 & trunc_ln40 == 0)> <Delay = 0.00>
ST_11 : Operation 439 [1/1] (0.85ns)   --->   "%add_ln39 = add i7 %i_1, i7 1" [sha256.cpp:39]   --->   Operation 439 'add' 'add_ln39' <Predicate = (!icmp_ln39)> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 440 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.lr.ph"   --->   Operation 440 'br' 'br_ln0' <Predicate = (!icmp_ln39)> <Delay = 0.00>

State 12 <SV = 9> <Delay = 0.73>
ST_12 : Operation 441 [1/1] (0.00ns)   --->   "%stateREG_addr = getelementptr i32 %stateREG, i64 0, i64 0" [sha256.cpp:43]   --->   Operation 441 'getelementptr' 'stateREG_addr' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 442 [2/2] (0.73ns)   --->   "%a = load i3 %stateREG_addr" [sha256.cpp:43]   --->   Operation 442 'load' 'a' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_12 : Operation 443 [1/1] (0.00ns)   --->   "%stateREG_addr_1 = getelementptr i32 %stateREG, i64 0, i64 1" [sha256.cpp:44]   --->   Operation 443 'getelementptr' 'stateREG_addr_1' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 444 [2/2] (0.73ns)   --->   "%b = load i3 %stateREG_addr_1" [sha256.cpp:44]   --->   Operation 444 'load' 'b' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 13 <SV = 10> <Delay = 0.73>
ST_13 : Operation 445 [1/2] (0.73ns)   --->   "%a = load i3 %stateREG_addr" [sha256.cpp:43]   --->   Operation 445 'load' 'a' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_13 : Operation 446 [1/2] (0.73ns)   --->   "%b = load i3 %stateREG_addr_1" [sha256.cpp:44]   --->   Operation 446 'load' 'b' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_13 : Operation 447 [1/1] (0.00ns)   --->   "%stateREG_addr_2 = getelementptr i32 %stateREG, i64 0, i64 2" [sha256.cpp:45]   --->   Operation 447 'getelementptr' 'stateREG_addr_2' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 448 [2/2] (0.73ns)   --->   "%c = load i3 %stateREG_addr_2" [sha256.cpp:45]   --->   Operation 448 'load' 'c' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_13 : Operation 449 [1/1] (0.00ns)   --->   "%stateREG_addr_3 = getelementptr i32 %stateREG, i64 0, i64 3" [sha256.cpp:46]   --->   Operation 449 'getelementptr' 'stateREG_addr_3' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 450 [2/2] (0.73ns)   --->   "%d = load i3 %stateREG_addr_3" [sha256.cpp:46]   --->   Operation 450 'load' 'd' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 14 <SV = 11> <Delay = 0.73>
ST_14 : Operation 451 [1/2] (0.73ns)   --->   "%c = load i3 %stateREG_addr_2" [sha256.cpp:45]   --->   Operation 451 'load' 'c' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_14 : Operation 452 [1/2] (0.73ns)   --->   "%d = load i3 %stateREG_addr_3" [sha256.cpp:46]   --->   Operation 452 'load' 'd' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_14 : Operation 453 [1/1] (0.00ns)   --->   "%stateREG_addr_4 = getelementptr i32 %stateREG, i64 0, i64 4" [sha256.cpp:47]   --->   Operation 453 'getelementptr' 'stateREG_addr_4' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 454 [2/2] (0.73ns)   --->   "%e = load i3 %stateREG_addr_4" [sha256.cpp:47]   --->   Operation 454 'load' 'e' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_14 : Operation 455 [1/1] (0.00ns)   --->   "%stateREG_addr_5 = getelementptr i32 %stateREG, i64 0, i64 5" [sha256.cpp:48]   --->   Operation 455 'getelementptr' 'stateREG_addr_5' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 456 [2/2] (0.73ns)   --->   "%f = load i3 %stateREG_addr_5" [sha256.cpp:48]   --->   Operation 456 'load' 'f' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 15 <SV = 12> <Delay = 0.73>
ST_15 : Operation 457 [1/2] (0.73ns)   --->   "%e = load i3 %stateREG_addr_4" [sha256.cpp:47]   --->   Operation 457 'load' 'e' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_15 : Operation 458 [1/2] (0.73ns)   --->   "%f = load i3 %stateREG_addr_5" [sha256.cpp:48]   --->   Operation 458 'load' 'f' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_15 : Operation 459 [1/1] (0.00ns)   --->   "%stateREG_addr_6 = getelementptr i32 %stateREG, i64 0, i64 6" [sha256.cpp:49]   --->   Operation 459 'getelementptr' 'stateREG_addr_6' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 460 [2/2] (0.73ns)   --->   "%g = load i3 %stateREG_addr_6" [sha256.cpp:49]   --->   Operation 460 'load' 'g' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_15 : Operation 461 [1/1] (0.00ns)   --->   "%stateREG_addr_7 = getelementptr i32 %stateREG, i64 0, i64 7" [sha256.cpp:50]   --->   Operation 461 'getelementptr' 'stateREG_addr_7' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 462 [2/2] (0.73ns)   --->   "%h = load i3 %stateREG_addr_7" [sha256.cpp:50]   --->   Operation 462 'load' 'h' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 16 <SV = 13> <Delay = 0.73>
ST_16 : Operation 463 [1/2] (0.73ns)   --->   "%g = load i3 %stateREG_addr_6" [sha256.cpp:49]   --->   Operation 463 'load' 'g' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_16 : Operation 464 [1/2] (0.73ns)   --->   "%h = load i3 %stateREG_addr_7" [sha256.cpp:50]   --->   Operation 464 'load' 'h' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_16 : Operation 465 [1/1] (0.46ns)   --->   "%br_ln53 = br void" [sha256.cpp:53]   --->   Operation 465 'br' 'br_ln53' <Predicate = true> <Delay = 0.46>

State 17 <SV = 14> <Delay = 1.29>
ST_17 : Operation 466 [1/1] (0.00ns)   --->   "%i_2 = phi i7 %add_ln53, void %.split4, i7 0, void %._crit_edge" [sha256.cpp:53]   --->   Operation 466 'phi' 'i_2' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 467 [1/1] (0.85ns)   --->   "%add_ln53 = add i7 %i_2, i7 1" [sha256.cpp:53]   --->   Operation 467 'add' 'add_ln53' <Predicate = true> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 468 [1/1] (0.71ns)   --->   "%icmp_ln53 = icmp_eq  i7 %i_2, i7 64" [sha256.cpp:53]   --->   Operation 468 'icmp' 'icmp_ln53' <Predicate = true> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 469 [1/1] (0.00ns)   --->   "%br_ln53 = br i1 %icmp_ln53, void %.split4, void" [sha256.cpp:53]   --->   Operation 469 'br' 'br_ln53' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 470 [1/1] (0.00ns)   --->   "%m_63_46_load = load i32 %m_63_46" [sha256.cpp:54]   --->   Operation 470 'load' 'm_63_46_load' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_17 : Operation 471 [1/1] (0.00ns)   --->   "%m_63_47_load = load i32 %m_63_47" [sha256.cpp:54]   --->   Operation 471 'load' 'm_63_47_load' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_17 : Operation 472 [1/1] (0.00ns)   --->   "%m_15_2_load = load i32 %m_15_2" [sha256.cpp:54]   --->   Operation 472 'load' 'm_15_2_load' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_17 : Operation 473 [1/1] (0.00ns)   --->   "%m_15_3_load = load i32 %m_15_3" [sha256.cpp:54]   --->   Operation 473 'load' 'm_15_3_load' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_17 : Operation 474 [1/1] (0.00ns)   --->   "%m_15_4_load = load i32 %m_15_4" [sha256.cpp:54]   --->   Operation 474 'load' 'm_15_4_load' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_17 : Operation 475 [1/1] (0.00ns)   --->   "%m_15_5_load = load i32 %m_15_5" [sha256.cpp:54]   --->   Operation 475 'load' 'm_15_5_load' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_17 : Operation 476 [1/1] (0.00ns)   --->   "%m_15_6_load = load i32 %m_15_6" [sha256.cpp:54]   --->   Operation 476 'load' 'm_15_6_load' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_17 : Operation 477 [1/1] (0.00ns)   --->   "%m_15_7_load = load i32 %m_15_7" [sha256.cpp:54]   --->   Operation 477 'load' 'm_15_7_load' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_17 : Operation 478 [1/1] (0.00ns)   --->   "%m_15_8_load = load i32 %m_15_8" [sha256.cpp:54]   --->   Operation 478 'load' 'm_15_8_load' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_17 : Operation 479 [1/1] (0.00ns)   --->   "%m_15_9_load = load i32 %m_15_9" [sha256.cpp:54]   --->   Operation 479 'load' 'm_15_9_load' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_17 : Operation 480 [1/1] (0.00ns)   --->   "%m_15_10_load = load i32 %m_15_10" [sha256.cpp:54]   --->   Operation 480 'load' 'm_15_10_load' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_17 : Operation 481 [1/1] (0.00ns)   --->   "%m_15_11_load = load i32 %m_15_11" [sha256.cpp:54]   --->   Operation 481 'load' 'm_15_11_load' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_17 : Operation 482 [1/1] (0.00ns)   --->   "%m_15_12_load = load i32 %m_15_12" [sha256.cpp:54]   --->   Operation 482 'load' 'm_15_12_load' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_17 : Operation 483 [1/1] (0.00ns)   --->   "%m_15_13_load = load i32 %m_15_13" [sha256.cpp:54]   --->   Operation 483 'load' 'm_15_13_load' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_17 : Operation 484 [1/1] (0.00ns)   --->   "%m_15_14_load = load i32 %m_15_14" [sha256.cpp:54]   --->   Operation 484 'load' 'm_15_14_load' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_17 : Operation 485 [1/1] (0.00ns)   --->   "%m_15_15_load = load i32 %m_15_15" [sha256.cpp:54]   --->   Operation 485 'load' 'm_15_15_load' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_17 : Operation 486 [1/1] (0.00ns)   --->   "%zext_ln53 = zext i7 %i_2" [sha256.cpp:53]   --->   Operation 486 'zext' 'zext_ln53' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_17 : Operation 487 [1/1] (0.00ns)   --->   "%k_addr = getelementptr i32 %k, i64 0, i64 %zext_ln53" [sha256.cpp:54]   --->   Operation 487 'getelementptr' 'k_addr' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_17 : Operation 488 [2/2] (1.29ns)   --->   "%k_load = load i6 %k_addr" [sha256.cpp:54]   --->   Operation 488 'load' 'k_load' <Predicate = (!icmp_ln53)> <Delay = 1.29> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 64> <ROM>
ST_17 : Operation 489 [1/1] (0.00ns)   --->   "%trunc_ln54_3 = trunc i7 %i_2" [sha256.cpp:54]   --->   Operation 489 'trunc' 'trunc_ln54_3' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_17 : Operation 490 [1/1] (0.87ns)   --->   "%tmp_2 = mux i32 @_ssdm_op_Mux.ap_auto.64i32.i6, i32 %m_15_2_load, i32 %m_15_3_load, i32 %m_15_4_load, i32 %m_15_5_load, i32 %m_15_6_load, i32 %m_15_7_load, i32 %m_15_8_load, i32 %m_15_9_load, i32 %m_15_10_load, i32 %m_15_11_load, i32 %m_15_12_load, i32 %m_15_13_load, i32 %m_15_14_load, i32 %m_15_15_load, i32 %m_15_load, i32 %m_15_1_load, i32 %m_63_load, i32 %m_63_1_load, i32 %m_63_2_load, i32 %m_63_3_load, i32 %m_63_4_load, i32 %m_63_5_load, i32 %m_63_6_load, i32 %m_63_7_load, i32 %m_63_8_load, i32 %m_63_9_load, i32 %m_63_10_load, i32 %m_63_11_load, i32 %m_63_12_load, i32 %m_63_13_load, i32 %m_63_14_load, i32 %m_63_15_load, i32 %m_63_16_load, i32 %m_63_17_load, i32 %m_63_18_load, i32 %m_63_19_load, i32 %m_63_20_load, i32 %m_63_21_load, i32 %m_63_22_load, i32 %m_63_23_load, i32 %m_63_24_load, i32 %m_63_25_load, i32 %m_63_26_load, i32 %m_63_27_load, i32 %m_63_28_load, i32 %m_63_29_load, i32 %m_63_30_load, i32 %m_63_31_load, i32 %m_63_32_load, i32 %m_63_33_load, i32 %m_63_34_load, i32 %m_63_35_load, i32 %m_63_36_load, i32 %m_63_37_load, i32 %m_63_38_load, i32 %m_63_39_load, i32 %m_63_40_load, i32 %m_63_41_load, i32 %m_63_42_load, i32 %m_63_43_load, i32 %m_63_44_load, i32 %m_63_45_load, i32 %m_63_46_load, i32 %m_63_47_load, i6 %trunc_ln54_3" [sha256.cpp:54]   --->   Operation 490 'mux' 'tmp_2' <Predicate = (!icmp_ln53)> <Delay = 0.87> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 15> <Delay = 3.34>
ST_18 : Operation 491 [1/1] (0.00ns)   --->   "%a_3 = phi i32 %a_2, void %.split4, i32 %a, void %._crit_edge"   --->   Operation 491 'phi' 'a_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 492 [1/1] (0.00ns)   --->   "%b_3 = phi i32 %a_3, void %.split4, i32 %b, void %._crit_edge"   --->   Operation 492 'phi' 'b_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 493 [1/1] (0.00ns)   --->   "%c_3 = phi i32 %b_3, void %.split4, i32 %c, void %._crit_edge"   --->   Operation 493 'phi' 'c_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 494 [1/1] (0.00ns)   --->   "%d_1 = phi i32 %c_3, void %.split4, i32 %d, void %._crit_edge"   --->   Operation 494 'phi' 'd_1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 495 [1/1] (0.00ns)   --->   "%e_3 = phi i32 %e_2, void %.split4, i32 %e, void %._crit_edge"   --->   Operation 495 'phi' 'e_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 496 [1/1] (0.00ns)   --->   "%f_3 = phi i32 %e_3, void %.split4, i32 %f, void %._crit_edge"   --->   Operation 496 'phi' 'f_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 497 [1/1] (0.00ns)   --->   "%g_3 = phi i32 %f_3, void %.split4, i32 %g, void %._crit_edge"   --->   Operation 497 'phi' 'g_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 498 [1/1] (0.00ns)   --->   "%h_1 = phi i32 %g_3, void %.split4, i32 %h, void %._crit_edge"   --->   Operation 498 'phi' 'h_1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 499 [1/1] (0.00ns)   --->   "%empty_18 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 64, i64 64, i64 64"   --->   Operation 499 'speclooptripcount' 'empty_18' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 500 [1/1] (0.00ns)   --->   "%specpipeline_ln34 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty" [sha256.cpp:34]   --->   Operation 500 'specpipeline' 'specpipeline_ln34' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_18 : Operation 501 [1/1] (0.00ns)   --->   "%specloopname_ln34 = specloopname void @_ssdm_op_SpecLoopName, void @empty_4" [sha256.cpp:34]   --->   Operation 501 'specloopname' 'specloopname_ln34' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_18 : Operation 502 [1/1] (0.00ns) (grouped into LUT with out node xor_ln54_1)   --->   "%lshr_ln = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_3, i32 6, i32 31" [sha256.cpp:54]   --->   Operation 502 'partselect' 'lshr_ln' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_18 : Operation 503 [1/1] (0.00ns) (grouped into LUT with out node xor_ln54_1)   --->   "%trunc_ln54 = trunc i32 %e_3" [sha256.cpp:54]   --->   Operation 503 'trunc' 'trunc_ln54' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_18 : Operation 504 [1/1] (0.00ns) (grouped into LUT with out node xor_ln54_1)   --->   "%or_ln = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln54, i26 %lshr_ln" [sha256.cpp:54]   --->   Operation 504 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_18 : Operation 505 [1/1] (0.00ns) (grouped into LUT with out node xor_ln54_1)   --->   "%lshr_ln54_1 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_3, i32 11, i32 31" [sha256.cpp:54]   --->   Operation 505 'partselect' 'lshr_ln54_1' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_18 : Operation 506 [1/1] (0.00ns) (grouped into LUT with out node xor_ln54_1)   --->   "%trunc_ln54_1 = trunc i32 %e_3" [sha256.cpp:54]   --->   Operation 506 'trunc' 'trunc_ln54_1' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_18 : Operation 507 [1/1] (0.00ns) (grouped into LUT with out node xor_ln54_1)   --->   "%or_ln54_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln54_1, i21 %lshr_ln54_1" [sha256.cpp:54]   --->   Operation 507 'bitconcatenate' 'or_ln54_1' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_18 : Operation 508 [1/1] (0.00ns) (grouped into LUT with out node xor_ln54_1)   --->   "%lshr_ln54_2 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_3, i32 25, i32 31" [sha256.cpp:54]   --->   Operation 508 'partselect' 'lshr_ln54_2' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_18 : Operation 509 [1/1] (0.00ns) (grouped into LUT with out node xor_ln54_1)   --->   "%trunc_ln54_2 = trunc i32 %e_3" [sha256.cpp:54]   --->   Operation 509 'trunc' 'trunc_ln54_2' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_18 : Operation 510 [1/1] (0.00ns) (grouped into LUT with out node xor_ln54_1)   --->   "%or_ln54_2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln54_2, i7 %lshr_ln54_2" [sha256.cpp:54]   --->   Operation 510 'bitconcatenate' 'or_ln54_2' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_18 : Operation 511 [1/1] (0.00ns) (grouped into LUT with out node xor_ln54_1)   --->   "%xor_ln54 = xor i32 %or_ln, i32 %or_ln54_1" [sha256.cpp:54]   --->   Operation 511 'xor' 'xor_ln54' <Predicate = (!icmp_ln53)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 512 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln54_1 = xor i32 %xor_ln54, i32 %or_ln54_2" [sha256.cpp:54]   --->   Operation 512 'xor' 'xor_ln54_1' <Predicate = (!icmp_ln53)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 513 [1/1] (0.00ns) (grouped into LUT with out node xor_ln54_3)   --->   "%and_ln54 = and i32 %f_3, i32 %e_3" [sha256.cpp:54]   --->   Operation 513 'and' 'and_ln54' <Predicate = (!icmp_ln53)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 514 [1/1] (0.00ns) (grouped into LUT with out node xor_ln54_3)   --->   "%xor_ln54_2 = xor i32 %e_3, i32 4294967295" [sha256.cpp:54]   --->   Operation 514 'xor' 'xor_ln54_2' <Predicate = (!icmp_ln53)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 515 [1/1] (0.00ns) (grouped into LUT with out node xor_ln54_3)   --->   "%and_ln54_1 = and i32 %g_3, i32 %xor_ln54_2" [sha256.cpp:54]   --->   Operation 515 'and' 'and_ln54_1' <Predicate = (!icmp_ln53)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 516 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln54_3 = xor i32 %and_ln54_1, i32 %and_ln54" [sha256.cpp:54]   --->   Operation 516 'xor' 'xor_ln54_3' <Predicate = (!icmp_ln53)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 517 [1/2] (1.29ns)   --->   "%k_load = load i6 %k_addr" [sha256.cpp:54]   --->   Operation 517 'load' 'k_load' <Predicate = (!icmp_ln53)> <Delay = 1.29> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 64> <ROM>
ST_18 : Operation 518 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54 = add i32 %k_load, i32 %h_1" [sha256.cpp:54]   --->   Operation 518 'add' 'add_ln54' <Predicate = (!icmp_ln53)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 519 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln54_1 = add i32 %xor_ln54_1, i32 %tmp_2" [sha256.cpp:54]   --->   Operation 519 'add' 'add_ln54_1' <Predicate = (!icmp_ln53)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 520 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln54_2 = add i32 %add_ln54_1, i32 %xor_ln54_3" [sha256.cpp:54]   --->   Operation 520 'add' 'add_ln54_2' <Predicate = (!icmp_ln53)> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 521 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1 = add i32 %add_ln54_2, i32 %add_ln54" [sha256.cpp:54]   --->   Operation 521 'add' 't1' <Predicate = (!icmp_ln53)> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 522 [1/1] (0.00ns) (grouped into LUT with out node xor_ln55_1)   --->   "%lshr_ln1 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_3, i32 2, i32 31" [sha256.cpp:55]   --->   Operation 522 'partselect' 'lshr_ln1' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_18 : Operation 523 [1/1] (0.00ns) (grouped into LUT with out node xor_ln55_1)   --->   "%trunc_ln55 = trunc i32 %a_3" [sha256.cpp:55]   --->   Operation 523 'trunc' 'trunc_ln55' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_18 : Operation 524 [1/1] (0.00ns) (grouped into LUT with out node xor_ln55_1)   --->   "%or_ln1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln55, i30 %lshr_ln1" [sha256.cpp:55]   --->   Operation 524 'bitconcatenate' 'or_ln1' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_18 : Operation 525 [1/1] (0.00ns) (grouped into LUT with out node xor_ln55_1)   --->   "%lshr_ln55_1 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_3, i32 13, i32 31" [sha256.cpp:55]   --->   Operation 525 'partselect' 'lshr_ln55_1' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_18 : Operation 526 [1/1] (0.00ns) (grouped into LUT with out node xor_ln55_1)   --->   "%trunc_ln55_1 = trunc i32 %a_3" [sha256.cpp:55]   --->   Operation 526 'trunc' 'trunc_ln55_1' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_18 : Operation 527 [1/1] (0.00ns) (grouped into LUT with out node xor_ln55_1)   --->   "%or_ln55_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln55_1, i19 %lshr_ln55_1" [sha256.cpp:55]   --->   Operation 527 'bitconcatenate' 'or_ln55_1' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_18 : Operation 528 [1/1] (0.00ns) (grouped into LUT with out node xor_ln55_1)   --->   "%lshr_ln55_2 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_3, i32 22, i32 31" [sha256.cpp:55]   --->   Operation 528 'partselect' 'lshr_ln55_2' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_18 : Operation 529 [1/1] (0.00ns) (grouped into LUT with out node xor_ln55_1)   --->   "%trunc_ln55_2 = trunc i32 %a_3" [sha256.cpp:55]   --->   Operation 529 'trunc' 'trunc_ln55_2' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_18 : Operation 530 [1/1] (0.00ns) (grouped into LUT with out node xor_ln55_1)   --->   "%or_ln55_2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln55_2, i10 %lshr_ln55_2" [sha256.cpp:55]   --->   Operation 530 'bitconcatenate' 'or_ln55_2' <Predicate = (!icmp_ln53)> <Delay = 0.00>
ST_18 : Operation 531 [1/1] (0.00ns) (grouped into LUT with out node xor_ln55_1)   --->   "%xor_ln55 = xor i32 %or_ln1, i32 %or_ln55_1" [sha256.cpp:55]   --->   Operation 531 'xor' 'xor_ln55' <Predicate = (!icmp_ln53)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 532 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln55_1 = xor i32 %xor_ln55, i32 %or_ln55_2" [sha256.cpp:55]   --->   Operation 532 'xor' 'xor_ln55_1' <Predicate = (!icmp_ln53)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 533 [1/1] (0.00ns) (grouped into LUT with out node xor_ln55_3)   --->   "%xor_ln55_2 = xor i32 %c_3, i32 %b_3" [sha256.cpp:55]   --->   Operation 533 'xor' 'xor_ln55_2' <Predicate = (!icmp_ln53)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 534 [1/1] (0.00ns) (grouped into LUT with out node xor_ln55_3)   --->   "%and_ln55 = and i32 %xor_ln55_2, i32 %a_3" [sha256.cpp:55]   --->   Operation 534 'and' 'and_ln55' <Predicate = (!icmp_ln53)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 535 [1/1] (0.00ns) (grouped into LUT with out node xor_ln55_3)   --->   "%and_ln55_1 = and i32 %c_3, i32 %b_3" [sha256.cpp:55]   --->   Operation 535 'and' 'and_ln55_1' <Predicate = (!icmp_ln53)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 536 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln55_3 = xor i32 %and_ln55, i32 %and_ln55_1" [sha256.cpp:55]   --->   Operation 536 'xor' 'xor_ln55_3' <Predicate = (!icmp_ln53)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 537 [1/1] (1.14ns)   --->   "%e_2 = add i32 %t1, i32 %d_1" [sha256.cpp:59]   --->   Operation 537 'add' 'e_2' <Predicate = (!icmp_ln53)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 538 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln63 = add i32 %xor_ln55_1, i32 %t1" [sha256.cpp:63]   --->   Operation 538 'add' 'add_ln63' <Predicate = (!icmp_ln53)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 539 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_2 = add i32 %add_ln63, i32 %xor_ln55_3" [sha256.cpp:63]   --->   Operation 539 'add' 'a_2' <Predicate = (!icmp_ln53)> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 540 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 540 'br' 'br_ln0' <Predicate = (!icmp_ln53)> <Delay = 0.00>

State 19 <SV = 16> <Delay = 1.87>
ST_19 : Operation 541 [1/1] (1.14ns)   --->   "%add_ln68 = add i32 %a, i32 %a_3" [sha256.cpp:68]   --->   Operation 541 'add' 'add_ln68' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 542 [1/1] (0.73ns)   --->   "%store_ln68 = store i32 %add_ln68, i3 %stateREG_addr" [sha256.cpp:68]   --->   Operation 542 'store' 'store_ln68' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_19 : Operation 543 [1/1] (1.14ns)   --->   "%add_ln69 = add i32 %b, i32 %b_3" [sha256.cpp:69]   --->   Operation 543 'add' 'add_ln69' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 544 [1/1] (0.73ns)   --->   "%store_ln69 = store i32 %add_ln69, i3 %stateREG_addr_1" [sha256.cpp:69]   --->   Operation 544 'store' 'store_ln69' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_19 : Operation 545 [1/1] (1.14ns)   --->   "%add_ln70 = add i32 %c, i32 %c_3" [sha256.cpp:70]   --->   Operation 545 'add' 'add_ln70' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 546 [1/1] (1.14ns)   --->   "%add_ln71 = add i32 %d, i32 %d_1" [sha256.cpp:71]   --->   Operation 546 'add' 'add_ln71' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 547 [1/1] (1.14ns)   --->   "%add_ln72 = add i32 %e, i32 %e_3" [sha256.cpp:72]   --->   Operation 547 'add' 'add_ln72' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 548 [1/1] (1.14ns)   --->   "%add_ln73 = add i32 %f, i32 %f_3" [sha256.cpp:73]   --->   Operation 548 'add' 'add_ln73' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 549 [1/1] (1.14ns)   --->   "%add_ln74 = add i32 %g, i32 %g_3" [sha256.cpp:74]   --->   Operation 549 'add' 'add_ln74' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 550 [1/1] (1.14ns)   --->   "%add_ln75 = add i32 %h, i32 %h_1" [sha256.cpp:75]   --->   Operation 550 'add' 'add_ln75' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 17> <Delay = 0.73>
ST_20 : Operation 551 [1/1] (0.73ns)   --->   "%store_ln70 = store i32 %add_ln70, i3 %stateREG_addr_2" [sha256.cpp:70]   --->   Operation 551 'store' 'store_ln70' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_20 : Operation 552 [1/1] (0.73ns)   --->   "%store_ln71 = store i32 %add_ln71, i3 %stateREG_addr_3" [sha256.cpp:71]   --->   Operation 552 'store' 'store_ln71' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 21 <SV = 18> <Delay = 0.73>
ST_21 : Operation 553 [1/1] (0.73ns)   --->   "%store_ln72 = store i32 %add_ln72, i3 %stateREG_addr_4" [sha256.cpp:72]   --->   Operation 553 'store' 'store_ln72' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_21 : Operation 554 [1/1] (0.73ns)   --->   "%store_ln73 = store i32 %add_ln73, i3 %stateREG_addr_5" [sha256.cpp:73]   --->   Operation 554 'store' 'store_ln73' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 22 <SV = 19> <Delay = 0.73>
ST_22 : Operation 555 [1/1] (0.73ns)   --->   "%store_ln74 = store i32 %add_ln74, i3 %stateREG_addr_6" [sha256.cpp:74]   --->   Operation 555 'store' 'store_ln74' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_22 : Operation 556 [1/1] (0.73ns)   --->   "%store_ln75 = store i32 %add_ln75, i3 %stateREG_addr_7" [sha256.cpp:75]   --->   Operation 556 'store' 'store_ln75' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_22 : Operation 557 [1/1] (0.46ns)   --->   "%br_ln82 = br void" [sha256.cpp:82]   --->   Operation 557 'br' 'br_ln82' <Predicate = true> <Delay = 0.46>

State 23 <SV = 20> <Delay = 2.83>
ST_23 : Operation 558 [1/1] (0.00ns)   --->   "%r = phi i3 %add_ln82, void %.split2, i3 0, void" [sha256.cpp:82]   --->   Operation 558 'phi' 'r' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 559 [1/1] (0.71ns)   --->   "%add_ln82 = add i3 %r, i3 1" [sha256.cpp:82]   --->   Operation 559 'add' 'add_ln82' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 560 [1/1] (0.56ns)   --->   "%icmp_ln82 = icmp_eq  i3 %r, i3 4" [sha256.cpp:82]   --->   Operation 560 'icmp' 'icmp_ln82' <Predicate = true> <Delay = 0.56> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 561 [1/1] (0.00ns)   --->   "%empty_19 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4"   --->   Operation 561 'speclooptripcount' 'empty_19' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 562 [1/1] (0.00ns)   --->   "%br_ln82 = br i1 %icmp_ln82, void %.split2, void %.preheader.preheader" [sha256.cpp:82]   --->   Operation 562 'br' 'br_ln82' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 563 [1/1] (0.00ns)   --->   "%trunc_ln83 = trunc i3 %r" [sha256.cpp:83]   --->   Operation 563 'trunc' 'trunc_ln83' <Predicate = (!icmp_ln82)> <Delay = 0.00>
ST_23 : Operation 564 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i2.i3, i2 %trunc_ln83, i3 0" [sha256.cpp:83]   --->   Operation 564 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln82)> <Delay = 0.00>
ST_23 : Operation 565 [1/1] (0.82ns)   --->   "%sub_ln83 = sub i5 24, i5 %shl_ln" [sha256.cpp:83]   --->   Operation 565 'sub' 'sub_ln83' <Predicate = (!icmp_ln82)> <Delay = 0.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 566 [1/1] (0.00ns)   --->   "%zext_ln83 = zext i5 %sub_ln83" [sha256.cpp:83]   --->   Operation 566 'zext' 'zext_ln83' <Predicate = (!icmp_ln82)> <Delay = 0.00>
ST_23 : Operation 567 [1/1] (1.27ns)   --->   "%lshr_ln84 = lshr i32 %add_ln69, i32 %zext_ln83" [sha256.cpp:84]   --->   Operation 567 'lshr' 'lshr_ln84' <Predicate = (!icmp_ln82)> <Delay = 1.27> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 568 [1/1] (0.00ns)   --->   "%trunc_ln84 = trunc i32 %lshr_ln84" [sha256.cpp:84]   --->   Operation 568 'trunc' 'trunc_ln84' <Predicate = (!icmp_ln82)> <Delay = 0.00>
ST_23 : Operation 569 [1/1] (0.14ns)   --->   "%xor_ln84 = xor i3 %r, i3 4" [sha256.cpp:84]   --->   Operation 569 'xor' 'xor_ln84' <Predicate = (!icmp_ln82)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 570 [1/1] (0.00ns)   --->   "%zext_ln84 = zext i3 %xor_ln84" [sha256.cpp:84]   --->   Operation 570 'zext' 'zext_ln84' <Predicate = (!icmp_ln82)> <Delay = 0.00>
ST_23 : Operation 571 [1/1] (0.00ns)   --->   "%hash_addr_1 = getelementptr i8 %hash, i64 0, i64 %zext_ln84" [sha256.cpp:84]   --->   Operation 571 'getelementptr' 'hash_addr_1' <Predicate = (!icmp_ln82)> <Delay = 0.00>
ST_23 : Operation 572 [1/1] (0.73ns)   --->   "%store_ln84 = store i8 %trunc_ln84, i5 %hash_addr_1" [sha256.cpp:84]   --->   Operation 572 'store' 'store_ln84' <Predicate = (!icmp_ln82)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>
ST_23 : Operation 573 [1/1] (1.27ns)   --->   "%lshr_ln85 = lshr i32 %add_ln70, i32 %zext_ln83" [sha256.cpp:85]   --->   Operation 573 'lshr' 'lshr_ln85' <Predicate = (!icmp_ln82)> <Delay = 1.27> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 574 [1/1] (0.00ns)   --->   "%trunc_ln85 = trunc i32 %lshr_ln85" [sha256.cpp:85]   --->   Operation 574 'trunc' 'trunc_ln85' <Predicate = (!icmp_ln82)> <Delay = 0.00>
ST_23 : Operation 575 [1/1] (0.00ns)   --->   "%or_ln3 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i1.i3, i1 1, i3 %r" [sha256.cpp:85]   --->   Operation 575 'bitconcatenate' 'or_ln3' <Predicate = (!icmp_ln82)> <Delay = 0.00>
ST_23 : Operation 576 [1/1] (0.00ns)   --->   "%zext_ln85 = zext i4 %or_ln3" [sha256.cpp:85]   --->   Operation 576 'zext' 'zext_ln85' <Predicate = (!icmp_ln82)> <Delay = 0.00>
ST_23 : Operation 577 [1/1] (0.00ns)   --->   "%hash_addr_2 = getelementptr i8 %hash, i64 0, i64 %zext_ln85" [sha256.cpp:85]   --->   Operation 577 'getelementptr' 'hash_addr_2' <Predicate = (!icmp_ln82)> <Delay = 0.00>
ST_23 : Operation 578 [1/1] (0.73ns)   --->   "%store_ln85 = store i8 %trunc_ln85, i5 %hash_addr_2" [sha256.cpp:85]   --->   Operation 578 'store' 'store_ln85' <Predicate = (!icmp_ln82)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>

State 24 <SV = 21> <Delay = 2.00>
ST_24 : Operation 579 [1/1] (0.00ns)   --->   "%zext_ln82 = zext i3 %r" [sha256.cpp:82]   --->   Operation 579 'zext' 'zext_ln82' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 580 [1/1] (1.27ns)   --->   "%lshr_ln83 = lshr i32 %add_ln68, i32 %zext_ln83" [sha256.cpp:83]   --->   Operation 580 'lshr' 'lshr_ln83' <Predicate = true> <Delay = 1.27> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 581 [1/1] (0.00ns)   --->   "%trunc_ln83_1 = trunc i32 %lshr_ln83" [sha256.cpp:83]   --->   Operation 581 'trunc' 'trunc_ln83_1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 582 [1/1] (0.00ns)   --->   "%hash_addr = getelementptr i8 %hash, i64 0, i64 %zext_ln82" [sha256.cpp:83]   --->   Operation 582 'getelementptr' 'hash_addr' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 583 [1/1] (0.73ns)   --->   "%store_ln83 = store i8 %trunc_ln83_1, i5 %hash_addr" [sha256.cpp:83]   --->   Operation 583 'store' 'store_ln83' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>
ST_24 : Operation 584 [1/1] (1.27ns)   --->   "%lshr_ln86 = lshr i32 %add_ln71, i32 %zext_ln83" [sha256.cpp:86]   --->   Operation 584 'lshr' 'lshr_ln86' <Predicate = true> <Delay = 1.27> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 585 [1/1] (0.00ns)   --->   "%trunc_ln86 = trunc i32 %lshr_ln86" [sha256.cpp:86]   --->   Operation 585 'trunc' 'trunc_ln86' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 586 [1/1] (0.00ns)   --->   "%sext_ln86 = sext i3 %xor_ln84" [sha256.cpp:86]   --->   Operation 586 'sext' 'sext_ln86' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 587 [1/1] (0.00ns)   --->   "%zext_ln86 = zext i4 %sext_ln86" [sha256.cpp:86]   --->   Operation 587 'zext' 'zext_ln86' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 588 [1/1] (0.00ns)   --->   "%hash_addr_3 = getelementptr i8 %hash, i64 0, i64 %zext_ln86" [sha256.cpp:86]   --->   Operation 588 'getelementptr' 'hash_addr_3' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 589 [1/1] (0.73ns)   --->   "%store_ln86 = store i8 %trunc_ln86, i5 %hash_addr_3" [sha256.cpp:86]   --->   Operation 589 'store' 'store_ln86' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>

State 25 <SV = 22> <Delay = 2.00>
ST_25 : Operation 590 [1/1] (0.00ns)   --->   "%zext_ln82_1 = zext i3 %r" [sha256.cpp:82]   --->   Operation 590 'zext' 'zext_ln82_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 591 [1/1] (1.27ns)   --->   "%lshr_ln87 = lshr i32 %add_ln72, i32 %zext_ln83" [sha256.cpp:87]   --->   Operation 591 'lshr' 'lshr_ln87' <Predicate = true> <Delay = 1.27> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 592 [1/1] (0.00ns)   --->   "%trunc_ln87 = trunc i32 %lshr_ln87" [sha256.cpp:87]   --->   Operation 592 'trunc' 'trunc_ln87' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 593 [1/1] (0.00ns)   --->   "%or_ln4 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i2.i3, i2 2, i3 %r" [sha256.cpp:87]   --->   Operation 593 'bitconcatenate' 'or_ln4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 594 [1/1] (0.00ns)   --->   "%zext_ln87 = zext i5 %or_ln4" [sha256.cpp:87]   --->   Operation 594 'zext' 'zext_ln87' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 595 [1/1] (0.00ns)   --->   "%hash_addr_4 = getelementptr i8 %hash, i64 0, i64 %zext_ln87" [sha256.cpp:87]   --->   Operation 595 'getelementptr' 'hash_addr_4' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 596 [1/1] (0.73ns)   --->   "%store_ln87 = store i8 %trunc_ln87, i5 %hash_addr_4" [sha256.cpp:87]   --->   Operation 596 'store' 'store_ln87' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>
ST_25 : Operation 597 [1/1] (1.27ns)   --->   "%lshr_ln88 = lshr i32 %add_ln73, i32 %zext_ln83" [sha256.cpp:88]   --->   Operation 597 'lshr' 'lshr_ln88' <Predicate = true> <Delay = 1.27> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 598 [1/1] (0.00ns)   --->   "%trunc_ln88 = trunc i32 %lshr_ln88" [sha256.cpp:88]   --->   Operation 598 'trunc' 'trunc_ln88' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 599 [1/1] (0.82ns)   --->   "%add_ln88 = add i5 %zext_ln82_1, i5 20" [sha256.cpp:88]   --->   Operation 599 'add' 'add_ln88' <Predicate = true> <Delay = 0.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 600 [1/1] (0.00ns)   --->   "%zext_ln88 = zext i5 %add_ln88" [sha256.cpp:88]   --->   Operation 600 'zext' 'zext_ln88' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 601 [1/1] (0.00ns)   --->   "%hash_addr_5 = getelementptr i8 %hash, i64 0, i64 %zext_ln88" [sha256.cpp:88]   --->   Operation 601 'getelementptr' 'hash_addr_5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 602 [1/1] (0.73ns)   --->   "%store_ln88 = store i8 %trunc_ln88, i5 %hash_addr_5" [sha256.cpp:88]   --->   Operation 602 'store' 'store_ln88' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>

State 26 <SV = 23> <Delay = 2.00>
ST_26 : Operation 603 [1/1] (0.00ns)   --->   "%specpipeline_ln77 = specpipeline void @_ssdm_op_SpecPipeline, i32 4, i32 0, i32 0, i32 0, void @empty" [sha256.cpp:77]   --->   Operation 603 'specpipeline' 'specpipeline_ln77' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 604 [1/1] (0.00ns)   --->   "%specloopname_ln77 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [sha256.cpp:77]   --->   Operation 604 'specloopname' 'specloopname_ln77' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 605 [1/1] (1.27ns)   --->   "%lshr_ln89 = lshr i32 %add_ln74, i32 %zext_ln83" [sha256.cpp:89]   --->   Operation 605 'lshr' 'lshr_ln89' <Predicate = true> <Delay = 1.27> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 606 [1/1] (0.00ns)   --->   "%trunc_ln89 = trunc i32 %lshr_ln89" [sha256.cpp:89]   --->   Operation 606 'trunc' 'trunc_ln89' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 607 [1/1] (0.00ns)   --->   "%sext_ln89 = sext i4 %or_ln3" [sha256.cpp:89]   --->   Operation 607 'sext' 'sext_ln89' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 608 [1/1] (0.00ns)   --->   "%zext_ln89 = zext i5 %sext_ln89" [sha256.cpp:89]   --->   Operation 608 'zext' 'zext_ln89' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 609 [1/1] (0.00ns)   --->   "%hash_addr_6 = getelementptr i8 %hash, i64 0, i64 %zext_ln89" [sha256.cpp:89]   --->   Operation 609 'getelementptr' 'hash_addr_6' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 610 [1/1] (0.73ns)   --->   "%store_ln89 = store i8 %trunc_ln89, i5 %hash_addr_6" [sha256.cpp:89]   --->   Operation 610 'store' 'store_ln89' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>
ST_26 : Operation 611 [1/1] (1.27ns)   --->   "%lshr_ln90 = lshr i32 %add_ln75, i32 %zext_ln83" [sha256.cpp:90]   --->   Operation 611 'lshr' 'lshr_ln90' <Predicate = true> <Delay = 1.27> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 612 [1/1] (0.00ns)   --->   "%trunc_ln90 = trunc i32 %lshr_ln90" [sha256.cpp:90]   --->   Operation 612 'trunc' 'trunc_ln90' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 613 [1/1] (0.00ns)   --->   "%sext_ln90 = sext i3 %xor_ln84" [sha256.cpp:90]   --->   Operation 613 'sext' 'sext_ln90' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 614 [1/1] (0.00ns)   --->   "%zext_ln90 = zext i5 %sext_ln90" [sha256.cpp:90]   --->   Operation 614 'zext' 'zext_ln90' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 615 [1/1] (0.00ns)   --->   "%hash_addr_7 = getelementptr i8 %hash, i64 0, i64 %zext_ln90" [sha256.cpp:90]   --->   Operation 615 'getelementptr' 'hash_addr_7' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 616 [1/1] (0.73ns)   --->   "%store_ln90 = store i8 %trunc_ln90, i5 %hash_addr_7" [sha256.cpp:90]   --->   Operation 616 'store' 'store_ln90' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>
ST_26 : Operation 617 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 617 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 27 <SV = 21> <Delay = 0.46>
ST_27 : Operation 618 [1/1] (0.46ns)   --->   "%br_ln0 = br void %.preheader"   --->   Operation 618 'br' 'br_ln0' <Predicate = true> <Delay = 0.46>

State 28 <SV = 22> <Delay = 0.84>
ST_28 : Operation 619 [1/1] (0.00ns)   --->   "%n_2 = phi i6 %add_ln93, void %.split, i6 0, void %.preheader.preheader" [sha256.cpp:93]   --->   Operation 619 'phi' 'n_2' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 620 [1/1] (0.84ns)   --->   "%add_ln93 = add i6 %n_2, i6 1" [sha256.cpp:93]   --->   Operation 620 'add' 'add_ln93' <Predicate = true> <Delay = 0.84> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 621 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 621 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 622 [1/1] (0.71ns)   --->   "%icmp_ln93 = icmp_eq  i6 %n_2, i6 32" [sha256.cpp:93]   --->   Operation 622 'icmp' 'icmp_ln93' <Predicate = true> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 623 [1/1] (0.00ns)   --->   "%empty_20 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 32, i64 32, i64 32"   --->   Operation 623 'speclooptripcount' 'empty_20' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 624 [1/1] (0.00ns)   --->   "%br_ln93 = br i1 %icmp_ln93, void %.split, void" [sha256.cpp:93]   --->   Operation 624 'br' 'br_ln93' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 625 [1/1] (0.00ns)   --->   "%n_2_cast = zext i6 %n_2" [sha256.cpp:93]   --->   Operation 625 'zext' 'n_2_cast' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_28 : Operation 626 [1/1] (0.00ns)   --->   "%hash_addr_8 = getelementptr i8 %hash, i64 0, i64 %n_2_cast" [sha256.cpp:95]   --->   Operation 626 'getelementptr' 'hash_addr_8' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_28 : Operation 627 [2/2] (0.73ns)   --->   "%hash_load = load i5 %hash_addr_8" [C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174]   --->   Operation 627 'load' 'hash_load' <Predicate = (!icmp_ln93)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>

State 29 <SV = 23> <Delay = 2.45>
ST_29 : Operation 628 [1/1] (0.00ns)   --->   "%specloopname_ln93 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [sha256.cpp:93]   --->   Operation 628 'specloopname' 'specloopname_ln93' <Predicate = (!icmp_ln93)> <Delay = 0.00>
ST_29 : Operation 629 [1/2] (0.73ns)   --->   "%hash_load = load i5 %hash_addr_8" [C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174]   --->   Operation 629 'load' 'hash_load' <Predicate = (!icmp_ln93)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>
ST_29 : Operation 630 [1/1] (1.72ns)   --->   "%write_ln174 = write void @_ssdm_op_Write.ap_fifo.volatile.i8P0A, i8 %ohash_V, i8 %hash_load" [C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174]   --->   Operation 630 'write' 'write_ln174' <Predicate = (!icmp_ln93)> <Delay = 1.72> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 1.72> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 8> <Depth = 0> <FIFO>
ST_29 : Operation 631 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.preheader"   --->   Operation 631 'br' 'br_ln0' <Predicate = (!icmp_ln93)> <Delay = 0.00>

State 30 <SV = 23> <Delay = 0.00>
ST_30 : Operation 632 [1/1] (0.00ns)   --->   "%ret_ln100 = ret" [sha256.cpp:100]   --->   Operation 632 'ret' 'ret_ln100' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('n', sha256.cpp:24) with incoming values : ('add_ln24', sha256.cpp:24) [18]  (0.46 ns)

 <State 2>: 0.809ns
The critical path consists of the following:
	'phi' operation ('n', sha256.cpp:24) with incoming values : ('add_ln24', sha256.cpp:24) [18]  (0 ns)
	'add' operation ('add_ln24', sha256.cpp:24) [19]  (0.809 ns)

 <State 3>: 2.46ns
The critical path consists of the following:
	fifo read on port 'istateREG_V' (C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145) [28]  (1.73 ns)
	'store' operation ('store_ln145', C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145) of variable 'istateREG_V_read', C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145 on array 'stateREG', sha256.cpp:21 [29]  (0.73 ns)

 <State 4>: 0.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('n', sha256.cpp:29) with incoming values : ('add_ln29', sha256.cpp:29) [34]  (0.46 ns)

 <State 5>: 0.856ns
The critical path consists of the following:
	'phi' operation ('n', sha256.cpp:29) with incoming values : ('add_ln29', sha256.cpp:29) [34]  (0 ns)
	'add' operation ('add_ln29', sha256.cpp:29) [35]  (0.856 ns)

 <State 6>: 2.46ns
The critical path consists of the following:
	fifo read on port 'idata_V' (C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145) [44]  (1.73 ns)
	'store' operation ('store_ln145', C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145) of variable 'idata_V_read', C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:145 on array 'data', sha256.cpp:22 [45]  (0.73 ns)

 <State 7>: 0.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', sha256.cpp:36) with incoming values : ('add_ln36', sha256.cpp:36) [66]  (0.46 ns)

 <State 8>: 0.856ns
The critical path consists of the following:
	'phi' operation ('j', sha256.cpp:36) with incoming values : ('add_ln36_1', sha256.cpp:36) [67]  (0 ns)
	'add' operation ('add_ln36_1', sha256.cpp:36) [145]  (0.856 ns)

 <State 9>: 0.73ns
The critical path consists of the following:
	'load' operation ('data_load', sha256.cpp:38) on array 'data', sha256.cpp:22 [80]  (0.73 ns)
	'store' operation ('store_ln38', sha256.cpp:38) of variable 'm[0]', sha256.cpp:38 on local variable 'm[15]' [115]  (0 ns)

 <State 10>: 0.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', sha256.cpp:39) with incoming values : ('add_ln39', sha256.cpp:39) [198]  (0.46 ns)

 <State 11>: 2.92ns
The critical path consists of the following:
	'phi' operation ('i', sha256.cpp:39) with incoming values : ('add_ln39', sha256.cpp:39) [198]  (0 ns)
	'mux' operation ('phi_ln40_2', sha256.cpp:40) [374]  (0.871 ns)
	'xor' operation ('xor_ln40_3', sha256.cpp:40) [384]  (0 ns)
	'add' operation ('add_ln40_1', sha256.cpp:40) [387]  (1.14 ns)
	'add' operation ('m[16]', sha256.cpp:40) [388]  (0.907 ns)
	'store' operation ('store_ln40', sha256.cpp:40) of variable 'm[16]', sha256.cpp:40 on local variable 'm[63]' [397]  (0 ns)

 <State 12>: 0.73ns
The critical path consists of the following:
	'getelementptr' operation ('stateREG_addr', sha256.cpp:43) [538]  (0 ns)
	'load' operation ('a', sha256.cpp:43) on array 'stateREG', sha256.cpp:21 [539]  (0.73 ns)

 <State 13>: 0.73ns
The critical path consists of the following:
	'load' operation ('a', sha256.cpp:43) on array 'stateREG', sha256.cpp:21 [539]  (0.73 ns)

 <State 14>: 0.73ns
The critical path consists of the following:
	'load' operation ('c', sha256.cpp:45) on array 'stateREG', sha256.cpp:21 [543]  (0.73 ns)

 <State 15>: 0.73ns
The critical path consists of the following:
	'load' operation ('e', sha256.cpp:47) on array 'stateREG', sha256.cpp:21 [547]  (0.73 ns)

 <State 16>: 0.73ns
The critical path consists of the following:
	'load' operation ('g', sha256.cpp:49) on array 'stateREG', sha256.cpp:21 [551]  (0.73 ns)

 <State 17>: 1.3ns
The critical path consists of the following:
	'phi' operation ('i', sha256.cpp:53) with incoming values : ('add_ln53', sha256.cpp:53) [556]  (0 ns)
	'getelementptr' operation ('k_addr', sha256.cpp:54) [604]  (0 ns)
	'load' operation ('k_load', sha256.cpp:54) on array 'k' [605]  (1.3 ns)

 <State 18>: 3.35ns
The critical path consists of the following:
	'load' operation ('k_load', sha256.cpp:54) on array 'k' [605]  (1.3 ns)
	'add' operation ('add_ln54', sha256.cpp:54) [608]  (0 ns)
	'add' operation ('t1', sha256.cpp:54) [611]  (0.907 ns)
	'add' operation ('e', sha256.cpp:59) [627]  (1.14 ns)

 <State 19>: 1.87ns
The critical path consists of the following:
	'add' operation ('add_ln68', sha256.cpp:68) [632]  (1.14 ns)
	'store' operation ('store_ln68', sha256.cpp:68) of variable 'add_ln68', sha256.cpp:68 on array 'stateREG', sha256.cpp:21 [633]  (0.73 ns)

 <State 20>: 0.73ns
The critical path consists of the following:
	'store' operation ('store_ln70', sha256.cpp:70) of variable 'add_ln70', sha256.cpp:70 on array 'stateREG', sha256.cpp:21 [637]  (0.73 ns)

 <State 21>: 0.73ns
The critical path consists of the following:
	'store' operation ('store_ln72', sha256.cpp:72) of variable 'add_ln72', sha256.cpp:72 on array 'stateREG', sha256.cpp:21 [641]  (0.73 ns)

 <State 22>: 0.73ns
The critical path consists of the following:
	'store' operation ('store_ln74', sha256.cpp:74) of variable 'add_ln74', sha256.cpp:74 on array 'stateREG', sha256.cpp:21 [645]  (0.73 ns)

 <State 23>: 2.83ns
The critical path consists of the following:
	'phi' operation ('r', sha256.cpp:82) with incoming values : ('add_ln82', sha256.cpp:82) [650]  (0 ns)
	'sub' operation ('sub_ln83', sha256.cpp:83) [662]  (0.825 ns)
	'lshr' operation ('lshr_ln84', sha256.cpp:84) [668]  (1.28 ns)
	'store' operation ('store_ln84', sha256.cpp:84) of variable 'trunc_ln84', sha256.cpp:84 on array 'hash', sha256.cpp:23 [673]  (0.73 ns)

 <State 24>: 2.01ns
The critical path consists of the following:
	'lshr' operation ('lshr_ln83', sha256.cpp:83) [664]  (1.28 ns)
	'store' operation ('store_ln83', sha256.cpp:83) of variable 'trunc_ln83_1', sha256.cpp:83 on array 'hash', sha256.cpp:23 [667]  (0.73 ns)

 <State 25>: 2.01ns
The critical path consists of the following:
	'lshr' operation ('lshr_ln87', sha256.cpp:87) [686]  (1.28 ns)
	'store' operation ('store_ln87', sha256.cpp:87) of variable 'trunc_ln87', sha256.cpp:87 on array 'hash', sha256.cpp:23 [691]  (0.73 ns)

 <State 26>: 2.01ns
The critical path consists of the following:
	'lshr' operation ('lshr_ln89', sha256.cpp:89) [698]  (1.28 ns)
	'store' operation ('store_ln89', sha256.cpp:89) of variable 'trunc_ln89', sha256.cpp:89 on array 'hash', sha256.cpp:23 [703]  (0.73 ns)

 <State 27>: 0.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('n', sha256.cpp:93) with incoming values : ('add_ln93', sha256.cpp:93) [714]  (0.46 ns)

 <State 28>: 0.84ns
The critical path consists of the following:
	'phi' operation ('n', sha256.cpp:93) with incoming values : ('add_ln93', sha256.cpp:93) [714]  (0 ns)
	'add' operation ('add_ln93', sha256.cpp:93) [715]  (0.84 ns)

 <State 29>: 2.46ns
The critical path consists of the following:
	'load' operation ('hash_load', C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174) on array 'hash', sha256.cpp:23 [724]  (0.73 ns)
	fifo write on port 'ohash_V' (C:/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot/hls_stream_39.h:174) [725]  (1.73 ns)

 <State 30>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
