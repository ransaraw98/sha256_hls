

================================================================
== Vitis HLS Report for 'sha256'
================================================================
* Date:           Sun Jun 20 22:50:05 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        sha256
* Solution:       optimize_3 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.643 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      153|      153|  1.530 us|  1.530 us|  154|  154|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                     |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- convert_to_words   |       16|       16|         1|          1|          1|    16|       yes|
        |- create_schedule    |       48|       48|         2|          1|          1|    48|       yes|
        |- compression        |       65|       65|         2|          1|          1|    64|       yes|
        |- convert_endianess  |       16|       16|         4|          4|          1|     4|       yes|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1
  * Pipeline-1: initiation interval (II) = 1, depth = 2
  * Pipeline-2: initiation interval (II) = 1, depth = 2
  * Pipeline-3: initiation interval (II) = 4, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 14
* Pipeline : 4
  Pipeline-0 : II = 1, D = 1, States = { 2 }
  Pipeline-1 : II = 1, D = 2, States = { 4 5 }
  Pipeline-2 : II = 1, D = 2, States = { 7 8 }
  Pipeline-3 : II = 4, D = 4, States = { 10 11 12 13 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 2 
3 --> 4 
4 --> 6 5 
5 --> 4 
6 --> 7 
7 --> 8 
8 --> 9 7 
9 --> 10 
10 --> 14 11 
11 --> 12 
12 --> 13 
13 --> 10 
14 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_2"   --->   Operation 15 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %stateREG"   --->   Operation 16 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %stateREG, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 17 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %data"   --->   Operation 18 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %data, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 19 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %hash, void @empty_1, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 20 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %hash"   --->   Operation 21 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%m = alloca i64 1" [sha256.cpp:18]   --->   Operation 22 'alloca' 'm' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%data_read = read i8 @_ssdm_op_Read.ap_auto.i8P0A, i8 %data" [sha256.cpp:22]   --->   Operation 23 'read' 'data_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%or_ln22_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %data_read, i8 %data_read, i8 %data_read, i8 %data_read" [sha256.cpp:22]   --->   Operation 24 'bitconcatenate' 'or_ln22_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.46ns)   --->   "%br_ln20 = br void" [sha256.cpp:20]   --->   Operation 25 'br' 'br_ln20' <Predicate = true> <Delay = 0.46>

State 2 <SV = 1> <Delay = 2.01>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%i = phi i5 %add_ln20, void %.split6, i5 0, void" [sha256.cpp:20]   --->   Operation 26 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.82ns)   --->   "%add_ln20 = add i5 %i, i5 1" [sha256.cpp:20]   --->   Operation 27 'add' 'add_ln20' <Predicate = true> <Delay = 0.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 28 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.72ns)   --->   "%icmp_ln20 = icmp_eq  i5 %i, i5 16" [sha256.cpp:20]   --->   Operation 29 'icmp' 'icmp_ln20' <Predicate = true> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.56> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 16, i64 16, i64 16"   --->   Operation 30 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln20 = br i1 %icmp_ln20, void %.split6, void %.lr.ph.preheader" [sha256.cpp:20]   --->   Operation 31 'br' 'br_ln20' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%i_cast = zext i5 %i" [sha256.cpp:20]   --->   Operation 32 'zext' 'i_cast' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%specloopname_ln18 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [sha256.cpp:18]   --->   Operation 33 'specloopname' 'specloopname_ln18' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%m_addr = getelementptr i32 %m, i64 0, i64 %i_cast" [sha256.cpp:22]   --->   Operation 34 'getelementptr' 'm_addr' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (1.29ns)   --->   "%store_ln22 = store i32 %or_ln22_1, i6 %m_addr" [sha256.cpp:22]   --->   Operation 35 'store' 'store_ln22' <Predicate = (!icmp_ln20)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 36 'br' 'br_ln0' <Predicate = (!icmp_ln20)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.46>
ST_3 : Operation 37 [1/1] (0.46ns)   --->   "%br_ln0 = br void %.lr.ph"   --->   Operation 37 'br' 'br_ln0' <Predicate = true> <Delay = 0.46>

State 4 <SV = 3> <Delay = 2.13>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%i_1 = phi i7 %add_ln23, void %.split4, i7 16, void %.lr.ph.preheader" [sha256.cpp:23]   --->   Operation 38 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 39 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (0.71ns)   --->   "%icmp_ln23 = icmp_eq  i7 %i_1, i7 64" [sha256.cpp:23]   --->   Operation 40 'icmp' 'icmp_ln23' <Predicate = true> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.56> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%empty_12 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 48, i64 48, i64 48"   --->   Operation 41 'speclooptripcount' 'empty_12' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%br_ln23 = br i1 %icmp_ln23, void %.split4, void %._crit_edge" [sha256.cpp:23]   --->   Operation 42 'br' 'br_ln23' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (0.85ns)   --->   "%add_ln23 = add i7 %i_1, i7 1" [sha256.cpp:23]   --->   Operation 43 'add' 'add_ln23' <Predicate = (!icmp_ln23)> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%empty_13 = trunc i7 %i_1" [sha256.cpp:23]   --->   Operation 44 'trunc' 'empty_13' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (0.84ns)   --->   "%add_ln24 = add i6 %empty_13, i6 62" [sha256.cpp:24]   --->   Operation 45 'add' 'add_ln24' <Predicate = (!icmp_ln23)> <Delay = 0.84> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln24 = zext i6 %add_ln24" [sha256.cpp:24]   --->   Operation 46 'zext' 'zext_ln24' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%m_addr_1 = getelementptr i32 %m, i64 0, i64 %zext_ln24" [sha256.cpp:24]   --->   Operation 47 'getelementptr' 'm_addr_1' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_4 : Operation 48 [2/2] (1.29ns)   --->   "%m_load = load i6 %m_addr_1" [sha256.cpp:24]   --->   Operation 48 'load' 'm_load' <Predicate = (!icmp_ln23)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_4 : Operation 49 [1/1] (0.84ns)   --->   "%add_ln24_1 = add i6 %empty_13, i6 57" [sha256.cpp:24]   --->   Operation 49 'add' 'add_ln24_1' <Predicate = (!icmp_ln23)> <Delay = 0.84> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln24_1 = zext i6 %add_ln24_1" [sha256.cpp:24]   --->   Operation 50 'zext' 'zext_ln24_1' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%m_addr_2 = getelementptr i32 %m, i64 0, i64 %zext_ln24_1" [sha256.cpp:24]   --->   Operation 51 'getelementptr' 'm_addr_2' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_4 : Operation 52 [2/2] (1.29ns)   --->   "%m_load_1 = load i6 %m_addr_2" [sha256.cpp:24]   --->   Operation 52 'load' 'm_load_1' <Predicate = (!icmp_ln23)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_4 : Operation 53 [1/1] (0.84ns)   --->   "%add_ln24_2 = add i6 %empty_13, i6 49" [sha256.cpp:24]   --->   Operation 53 'add' 'add_ln24_2' <Predicate = (!icmp_ln23)> <Delay = 0.84> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln24_2 = zext i6 %add_ln24_2" [sha256.cpp:24]   --->   Operation 54 'zext' 'zext_ln24_2' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%m_addr_3 = getelementptr i32 %m, i64 0, i64 %zext_ln24_2" [sha256.cpp:24]   --->   Operation 55 'getelementptr' 'm_addr_3' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_4 : Operation 56 [2/2] (1.29ns)   --->   "%m_load_2 = load i6 %m_addr_3" [sha256.cpp:24]   --->   Operation 56 'load' 'm_load_2' <Predicate = (!icmp_ln23)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_4 : Operation 57 [1/1] (0.84ns)   --->   "%add_ln24_3 = add i6 %empty_13, i6 48" [sha256.cpp:24]   --->   Operation 57 'add' 'add_ln24_3' <Predicate = (!icmp_ln23)> <Delay = 0.84> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln24_3 = zext i6 %add_ln24_3" [sha256.cpp:24]   --->   Operation 58 'zext' 'zext_ln24_3' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%m_addr_4 = getelementptr i32 %m, i64 0, i64 %zext_ln24_3" [sha256.cpp:24]   --->   Operation 59 'getelementptr' 'm_addr_4' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_4 : Operation 60 [2/2] (1.29ns)   --->   "%m_load_3 = load i6 %m_addr_4" [sha256.cpp:24]   --->   Operation 60 'load' 'm_load_3' <Predicate = (!icmp_ln23)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 5 <SV = 4> <Delay = 4.64>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%i_1_cast15 = zext i7 %i_1" [sha256.cpp:23]   --->   Operation 61 'zext' 'i_1_cast15' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%specloopname_ln18 = specloopname void @_ssdm_op_SpecLoopName, void @empty_5" [sha256.cpp:18]   --->   Operation 62 'specloopname' 'specloopname_ln18' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 63 [1/2] (1.29ns)   --->   "%m_load = load i6 %m_addr_1" [sha256.cpp:24]   --->   Operation 63 'load' 'm_load' <Predicate = (!icmp_ln23)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_5 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node add_ln24_5)   --->   "%lshr_ln = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_load, i32 17, i32 31" [sha256.cpp:24]   --->   Operation 64 'partselect' 'lshr_ln' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node add_ln24_5)   --->   "%trunc_ln24 = trunc i32 %m_load" [sha256.cpp:24]   --->   Operation 65 'trunc' 'trunc_ln24' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node add_ln24_5)   --->   "%or_ln = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln24, i15 %lshr_ln" [sha256.cpp:24]   --->   Operation 66 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node add_ln24_5)   --->   "%lshr_ln24_1 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_load, i32 19, i32 31" [sha256.cpp:24]   --->   Operation 67 'partselect' 'lshr_ln24_1' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node add_ln24_5)   --->   "%trunc_ln24_1 = trunc i32 %m_load" [sha256.cpp:24]   --->   Operation 68 'trunc' 'trunc_ln24_1' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node add_ln24_5)   --->   "%or_ln24_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln24_1, i13 %lshr_ln24_1" [sha256.cpp:24]   --->   Operation 69 'bitconcatenate' 'or_ln24_1' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node add_ln24_5)   --->   "%lshr_ln24_2 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_load, i32 10, i32 31" [sha256.cpp:24]   --->   Operation 70 'partselect' 'lshr_ln24_2' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node add_ln24_5)   --->   "%zext_ln24_4 = zext i22 %lshr_ln24_2" [sha256.cpp:24]   --->   Operation 71 'zext' 'zext_ln24_4' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node add_ln24_5)   --->   "%xor_ln24 = xor i32 %zext_ln24_4, i32 %or_ln24_1" [sha256.cpp:24]   --->   Operation 72 'xor' 'xor_ln24' <Predicate = (!icmp_ln23)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node add_ln24_5)   --->   "%xor_ln24_1 = xor i32 %xor_ln24, i32 %or_ln" [sha256.cpp:24]   --->   Operation 73 'xor' 'xor_ln24_1' <Predicate = (!icmp_ln23)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 74 [1/2] (1.29ns)   --->   "%m_load_1 = load i6 %m_addr_2" [sha256.cpp:24]   --->   Operation 74 'load' 'm_load_1' <Predicate = (!icmp_ln23)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_5 : Operation 75 [1/2] (1.29ns)   --->   "%m_load_2 = load i6 %m_addr_3" [sha256.cpp:24]   --->   Operation 75 'load' 'm_load_2' <Predicate = (!icmp_ln23)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_5 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node add_ln24_5)   --->   "%lshr_ln24_3 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_load_2, i32 7, i32 31" [sha256.cpp:24]   --->   Operation 76 'partselect' 'lshr_ln24_3' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node add_ln24_5)   --->   "%trunc_ln24_2 = trunc i32 %m_load_2" [sha256.cpp:24]   --->   Operation 77 'trunc' 'trunc_ln24_2' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node add_ln24_5)   --->   "%or_ln24_2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln24_2, i25 %lshr_ln24_3" [sha256.cpp:24]   --->   Operation 78 'bitconcatenate' 'or_ln24_2' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node add_ln24_5)   --->   "%lshr_ln24_4 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_load_2, i32 18, i32 31" [sha256.cpp:24]   --->   Operation 79 'partselect' 'lshr_ln24_4' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node add_ln24_5)   --->   "%trunc_ln24_3 = trunc i32 %m_load_2" [sha256.cpp:24]   --->   Operation 80 'trunc' 'trunc_ln24_3' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node add_ln24_5)   --->   "%or_ln24_3 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln24_3, i14 %lshr_ln24_4" [sha256.cpp:24]   --->   Operation 81 'bitconcatenate' 'or_ln24_3' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node add_ln24_5)   --->   "%lshr_ln24_5 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_load_2, i32 3, i32 31" [sha256.cpp:24]   --->   Operation 82 'partselect' 'lshr_ln24_5' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node add_ln24_5)   --->   "%zext_ln24_5 = zext i29 %lshr_ln24_5" [sha256.cpp:24]   --->   Operation 83 'zext' 'zext_ln24_5' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node add_ln24_5)   --->   "%xor_ln24_2 = xor i32 %zext_ln24_5, i32 %or_ln24_3" [sha256.cpp:24]   --->   Operation 84 'xor' 'xor_ln24_2' <Predicate = (!icmp_ln23)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node add_ln24_5)   --->   "%xor_ln24_3 = xor i32 %xor_ln24_2, i32 %or_ln24_2" [sha256.cpp:24]   --->   Operation 85 'xor' 'xor_ln24_3' <Predicate = (!icmp_ln23)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 86 [1/2] (1.29ns)   --->   "%m_load_3 = load i6 %m_addr_4" [sha256.cpp:24]   --->   Operation 86 'load' 'm_load_3' <Predicate = (!icmp_ln23)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_5 : Operation 87 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln24_4 = add i32 %m_load_1, i32 %m_load_3" [sha256.cpp:24]   --->   Operation 87 'add' 'add_ln24_4' <Predicate = (!icmp_ln23)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_5 : Operation 88 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln24_5 = add i32 %xor_ln24_1, i32 %xor_ln24_3" [sha256.cpp:24]   --->   Operation 88 'add' 'add_ln24_5' <Predicate = (!icmp_ln23)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 89 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln24_6 = add i32 %add_ln24_5, i32 %add_ln24_4" [sha256.cpp:24]   --->   Operation 89 'add' 'add_ln24_6' <Predicate = (!icmp_ln23)> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_5 : Operation 90 [1/1] (0.00ns)   --->   "%m_addr_5 = getelementptr i32 %m, i64 0, i64 %i_1_cast15" [sha256.cpp:24]   --->   Operation 90 'getelementptr' 'm_addr_5' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 91 [1/1] (1.29ns)   --->   "%store_ln24 = store i32 %add_ln24_6, i6 %m_addr_5" [sha256.cpp:24]   --->   Operation 91 'store' 'store_ln24' <Predicate = (!icmp_ln23)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_5 : Operation 92 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.lr.ph"   --->   Operation 92 'br' 'br_ln0' <Predicate = (!icmp_ln23)> <Delay = 0.00>

State 6 <SV = 4> <Delay = 0.46>
ST_6 : Operation 93 [1/1] (0.00ns)   --->   "%h = alloca i32 1"   --->   Operation 93 'alloca' 'h' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 94 [1/1] (0.00ns)   --->   "%h_1 = alloca i32 1"   --->   Operation 94 'alloca' 'h_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 95 [1/1] (0.00ns)   --->   "%g = alloca i32 1"   --->   Operation 95 'alloca' 'g' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 96 [1/1] (0.00ns)   --->   "%f = alloca i32 1"   --->   Operation 96 'alloca' 'f' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 97 [1/1] (0.00ns)   --->   "%d = alloca i32 1"   --->   Operation 97 'alloca' 'd' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 98 [1/1] (0.00ns)   --->   "%d_1 = alloca i32 1"   --->   Operation 98 'alloca' 'd_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 99 [1/1] (0.00ns)   --->   "%c = alloca i32 1"   --->   Operation 99 'alloca' 'c' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 100 [1/1] (0.00ns)   --->   "%a = read i32 @_ssdm_op_Read.ap_auto.i32P0A, i32 %stateREG" [sha256.cpp:27]   --->   Operation 100 'read' 'a' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 101 [1/1] (0.46ns)   --->   "%br_ln37 = br void" [sha256.cpp:37]   --->   Operation 101 'br' 'br_ln37' <Predicate = true> <Delay = 0.46>

State 7 <SV = 5> <Delay = 1.29>
ST_7 : Operation 102 [1/1] (0.00ns)   --->   "%i_2 = phi i7 %add_ln37, void %.split2, i7 0, void %._crit_edge" [sha256.cpp:37]   --->   Operation 102 'phi' 'i_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 103 [1/1] (0.85ns)   --->   "%add_ln37 = add i7 %i_2, i7 1" [sha256.cpp:37]   --->   Operation 103 'add' 'add_ln37' <Predicate = true> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 104 [1/1] (0.71ns)   --->   "%icmp_ln37 = icmp_eq  i7 %i_2, i7 64" [sha256.cpp:37]   --->   Operation 104 'icmp' 'icmp_ln37' <Predicate = true> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.56> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 105 [1/1] (0.00ns)   --->   "%br_ln37 = br i1 %icmp_ln37, void %.split2, void" [sha256.cpp:37]   --->   Operation 105 'br' 'br_ln37' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 106 [1/1] (0.00ns)   --->   "%i_2_cast = zext i7 %i_2" [sha256.cpp:37]   --->   Operation 106 'zext' 'i_2_cast' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_7 : Operation 107 [1/1] (0.00ns)   --->   "%k_addr = getelementptr i32 %k, i64 0, i64 %i_2_cast" [sha256.cpp:38]   --->   Operation 107 'getelementptr' 'k_addr' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_7 : Operation 108 [2/2] (1.29ns)   --->   "%k_load = load i6 %k_addr" [sha256.cpp:38]   --->   Operation 108 'load' 'k_load' <Predicate = (!icmp_ln37)> <Delay = 1.29> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 64> <ROM>
ST_7 : Operation 109 [1/1] (0.00ns)   --->   "%m_addr_6 = getelementptr i32 %m, i64 0, i64 %i_2_cast" [sha256.cpp:38]   --->   Operation 109 'getelementptr' 'm_addr_6' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_7 : Operation 110 [2/2] (1.29ns)   --->   "%m_load_4 = load i6 %m_addr_6" [sha256.cpp:38]   --->   Operation 110 'load' 'm_load_4' <Predicate = (!icmp_ln37)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 8 <SV = 6> <Delay = 3.34>
ST_8 : Operation 111 [1/1] (0.00ns)   --->   "%a_3 = phi i32 %a_2, void %.split2, i32 %a, void %._crit_edge"   --->   Operation 111 'phi' 'a_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 112 [1/1] (0.00ns)   --->   "%h_load = load i32 %h" [sha256.cpp:38]   --->   Operation 112 'load' 'h_load' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 113 [1/1] (0.00ns)   --->   "%h_1_load = load i32 %h_1" [sha256.cpp:38]   --->   Operation 113 'load' 'h_1_load' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 114 [1/1] (0.00ns)   --->   "%g_load = load i32 %g" [sha256.cpp:38]   --->   Operation 114 'load' 'g_load' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 115 [1/1] (0.00ns)   --->   "%f_load = load i32 %f"   --->   Operation 115 'load' 'f_load' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 116 [1/1] (0.00ns)   --->   "%d_load = load i32 %d" [sha256.cpp:43]   --->   Operation 116 'load' 'd_load' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 117 [1/1] (0.00ns)   --->   "%d_1_load = load i32 %d_1" [sha256.cpp:39]   --->   Operation 117 'load' 'd_1_load' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 118 [1/1] (0.00ns)   --->   "%c_load = load i32 %c" [sha256.cpp:39]   --->   Operation 118 'load' 'c_load' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 119 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 119 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 120 [1/1] (0.00ns)   --->   "%empty_14 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 64, i64 64, i64 64"   --->   Operation 120 'speclooptripcount' 'empty_14' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 121 [1/1] (0.00ns)   --->   "%store_ln37 = store i32 %a_3, i32 %c" [sha256.cpp:37]   --->   Operation 121 'store' 'store_ln37' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 122 [1/1] (0.00ns)   --->   "%store_ln37 = store i32 %c_load, i32 %d_1" [sha256.cpp:37]   --->   Operation 122 'store' 'store_ln37' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 123 [1/1] (0.00ns)   --->   "%store_ln37 = store i32 %d_1_load, i32 %d" [sha256.cpp:37]   --->   Operation 123 'store' 'store_ln37' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 124 [1/1] (0.00ns)   --->   "%store_ln37 = store i32 %f_load, i32 %g" [sha256.cpp:37]   --->   Operation 124 'store' 'store_ln37' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 125 [1/1] (0.00ns)   --->   "%store_ln37 = store i32 %g_load, i32 %h_1" [sha256.cpp:37]   --->   Operation 125 'store' 'store_ln37' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 126 [1/1] (0.00ns)   --->   "%store_ln37 = store i32 %h_1_load, i32 %h" [sha256.cpp:37]   --->   Operation 126 'store' 'store_ln37' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 127 [1/1] (0.00ns)   --->   "%f_load_1 = load i32 %f" [sha256.cpp:38]   --->   Operation 127 'load' 'f_load_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 128 [1/1] (0.00ns)   --->   "%specloopname_ln18 = specloopname void @_ssdm_op_SpecLoopName, void @empty_4" [sha256.cpp:18]   --->   Operation 128 'specloopname' 'specloopname_ln18' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node xor_ln38_1)   --->   "%lshr_ln1 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %f_load_1, i32 6, i32 31" [sha256.cpp:38]   --->   Operation 129 'partselect' 'lshr_ln1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node xor_ln38_1)   --->   "%trunc_ln38 = trunc i32 %f_load_1" [sha256.cpp:38]   --->   Operation 130 'trunc' 'trunc_ln38' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node xor_ln38_1)   --->   "%or_ln1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln38, i26 %lshr_ln1" [sha256.cpp:38]   --->   Operation 131 'bitconcatenate' 'or_ln1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node xor_ln38_1)   --->   "%lshr_ln38_1 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %f_load_1, i32 11, i32 31" [sha256.cpp:38]   --->   Operation 132 'partselect' 'lshr_ln38_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node xor_ln38_1)   --->   "%trunc_ln38_1 = trunc i32 %f_load_1" [sha256.cpp:38]   --->   Operation 133 'trunc' 'trunc_ln38_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node xor_ln38_1)   --->   "%or_ln38_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln38_1, i21 %lshr_ln38_1" [sha256.cpp:38]   --->   Operation 134 'bitconcatenate' 'or_ln38_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node xor_ln38_1)   --->   "%lshr_ln38_2 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %f_load_1, i32 25, i32 31" [sha256.cpp:38]   --->   Operation 135 'partselect' 'lshr_ln38_2' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node xor_ln38_1)   --->   "%trunc_ln38_2 = trunc i32 %f_load_1" [sha256.cpp:38]   --->   Operation 136 'trunc' 'trunc_ln38_2' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node xor_ln38_1)   --->   "%or_ln38_2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln38_2, i7 %lshr_ln38_2" [sha256.cpp:38]   --->   Operation 137 'bitconcatenate' 'or_ln38_2' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node xor_ln38_1)   --->   "%xor_ln38 = xor i32 %or_ln1, i32 %or_ln38_1" [sha256.cpp:38]   --->   Operation 138 'xor' 'xor_ln38' <Predicate = (!icmp_ln37)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 139 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln38_1 = xor i32 %xor_ln38, i32 %or_ln38_2" [sha256.cpp:38]   --->   Operation 139 'xor' 'xor_ln38_1' <Predicate = (!icmp_ln37)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node xor_ln38_3)   --->   "%and_ln38 = and i32 %g_load, i32 %f_load_1" [sha256.cpp:38]   --->   Operation 140 'and' 'and_ln38' <Predicate = (!icmp_ln37)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node xor_ln38_3)   --->   "%xor_ln38_2 = xor i32 %f_load_1, i32 4294967295" [sha256.cpp:38]   --->   Operation 141 'xor' 'xor_ln38_2' <Predicate = (!icmp_ln37)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node xor_ln38_3)   --->   "%and_ln38_1 = and i32 %h_1_load, i32 %xor_ln38_2" [sha256.cpp:38]   --->   Operation 142 'and' 'and_ln38_1' <Predicate = (!icmp_ln37)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 143 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln38_3 = xor i32 %and_ln38_1, i32 %and_ln38" [sha256.cpp:38]   --->   Operation 143 'xor' 'xor_ln38_3' <Predicate = (!icmp_ln37)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 144 [1/2] (1.29ns)   --->   "%k_load = load i6 %k_addr" [sha256.cpp:38]   --->   Operation 144 'load' 'k_load' <Predicate = (!icmp_ln37)> <Delay = 1.29> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 64> <ROM>
ST_8 : Operation 145 [1/2] (1.29ns)   --->   "%m_load_4 = load i6 %m_addr_6" [sha256.cpp:38]   --->   Operation 145 'load' 'm_load_4' <Predicate = (!icmp_ln37)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_8 : Operation 146 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln38 = add i32 %k_load, i32 %m_load_4" [sha256.cpp:38]   --->   Operation 146 'add' 'add_ln38' <Predicate = (!icmp_ln37)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_8 : Operation 147 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln38_1 = add i32 %xor_ln38_3, i32 %xor_ln38_1" [sha256.cpp:38]   --->   Operation 147 'add' 'add_ln38_1' <Predicate = (!icmp_ln37)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_8 : Operation 148 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln38_2 = add i32 %add_ln38_1, i32 %h_load" [sha256.cpp:38]   --->   Operation 148 'add' 'add_ln38_2' <Predicate = (!icmp_ln37)> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_8 : Operation 149 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1 = add i32 %add_ln38_2, i32 %add_ln38" [sha256.cpp:38]   --->   Operation 149 'add' 't1' <Predicate = (!icmp_ln37)> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_8 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node xor_ln39_1)   --->   "%lshr_ln2 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_3, i32 2, i32 31" [sha256.cpp:39]   --->   Operation 150 'partselect' 'lshr_ln2' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 151 [1/1] (0.00ns) (grouped into LUT with out node xor_ln39_1)   --->   "%trunc_ln39 = trunc i32 %a_3" [sha256.cpp:39]   --->   Operation 151 'trunc' 'trunc_ln39' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node xor_ln39_1)   --->   "%or_ln2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln39, i30 %lshr_ln2" [sha256.cpp:39]   --->   Operation 152 'bitconcatenate' 'or_ln2' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node xor_ln39_1)   --->   "%lshr_ln39_1 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_3, i32 13, i32 31" [sha256.cpp:39]   --->   Operation 153 'partselect' 'lshr_ln39_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node xor_ln39_1)   --->   "%trunc_ln39_1 = trunc i32 %a_3" [sha256.cpp:39]   --->   Operation 154 'trunc' 'trunc_ln39_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node xor_ln39_1)   --->   "%or_ln39_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln39_1, i19 %lshr_ln39_1" [sha256.cpp:39]   --->   Operation 155 'bitconcatenate' 'or_ln39_1' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node xor_ln39_1)   --->   "%lshr_ln39_2 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_3, i32 22, i32 31" [sha256.cpp:39]   --->   Operation 156 'partselect' 'lshr_ln39_2' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node xor_ln39_1)   --->   "%trunc_ln39_2 = trunc i32 %a_3" [sha256.cpp:39]   --->   Operation 157 'trunc' 'trunc_ln39_2' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node xor_ln39_1)   --->   "%or_ln39_2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln39_2, i10 %lshr_ln39_2" [sha256.cpp:39]   --->   Operation 158 'bitconcatenate' 'or_ln39_2' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node xor_ln39_1)   --->   "%xor_ln39 = xor i32 %or_ln2, i32 %or_ln39_1" [sha256.cpp:39]   --->   Operation 159 'xor' 'xor_ln39' <Predicate = (!icmp_ln37)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 160 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln39_1 = xor i32 %xor_ln39, i32 %or_ln39_2" [sha256.cpp:39]   --->   Operation 160 'xor' 'xor_ln39_1' <Predicate = (!icmp_ln37)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 161 [1/1] (0.00ns) (grouped into LUT with out node xor_ln39_3)   --->   "%xor_ln39_2 = xor i32 %d_1_load, i32 %c_load" [sha256.cpp:39]   --->   Operation 161 'xor' 'xor_ln39_2' <Predicate = (!icmp_ln37)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node xor_ln39_3)   --->   "%and_ln39 = and i32 %xor_ln39_2, i32 %a_3" [sha256.cpp:39]   --->   Operation 162 'and' 'and_ln39' <Predicate = (!icmp_ln37)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 163 [1/1] (0.00ns) (grouped into LUT with out node xor_ln39_3)   --->   "%and_ln39_1 = and i32 %d_1_load, i32 %c_load" [sha256.cpp:39]   --->   Operation 163 'and' 'and_ln39_1' <Predicate = (!icmp_ln37)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 164 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln39_3 = xor i32 %and_ln39, i32 %and_ln39_1" [sha256.cpp:39]   --->   Operation 164 'xor' 'xor_ln39_3' <Predicate = (!icmp_ln37)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 165 [1/1] (1.14ns)   --->   "%e = add i32 %t1, i32 %d_load" [sha256.cpp:43]   --->   Operation 165 'add' 'e' <Predicate = (!icmp_ln37)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 166 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln47 = add i32 %xor_ln39_1, i32 %t1" [sha256.cpp:47]   --->   Operation 166 'add' 'add_ln47' <Predicate = (!icmp_ln37)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_8 : Operation 167 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_2 = add i32 %add_ln47, i32 %xor_ln39_3" [sha256.cpp:47]   --->   Operation 167 'add' 'a_2' <Predicate = (!icmp_ln37)> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_8 : Operation 168 [1/1] (0.00ns)   --->   "%store_ln43 = store i32 %e, i32 %f" [sha256.cpp:43]   --->   Operation 168 'store' 'store_ln43' <Predicate = (!icmp_ln37)> <Delay = 0.00>
ST_8 : Operation 169 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 169 'br' 'br_ln0' <Predicate = (!icmp_ln37)> <Delay = 0.00>

State 9 <SV = 7> <Delay = 1.14>
ST_9 : Operation 170 [1/1] (1.14ns)   --->   "%add_ln52 = add i32 %a, i32 %a_3" [sha256.cpp:52]   --->   Operation 170 'add' 'add_ln52' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 171 [1/1] (0.00ns)   --->   "%write_ln59 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %stateREG, i32 0" [sha256.cpp:59]   --->   Operation 171 'write' 'write_ln59' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 172 [1/1] (0.46ns)   --->   "%br_ln66 = br void" [sha256.cpp:66]   --->   Operation 172 'br' 'br_ln66' <Predicate = true> <Delay = 0.46>

State 10 <SV = 8> <Delay = 2.10>
ST_10 : Operation 173 [1/1] (0.00ns)   --->   "%r = phi i3 %add_ln66, void %.split, i3 0, void" [sha256.cpp:66]   --->   Operation 173 'phi' 'r' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 174 [1/1] (0.71ns)   --->   "%add_ln66 = add i3 %r, i3 1" [sha256.cpp:66]   --->   Operation 174 'add' 'add_ln66' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 175 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 175 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 176 [1/1] (0.56ns)   --->   "%icmp_ln66 = icmp_eq  i3 %r, i3 4" [sha256.cpp:66]   --->   Operation 176 'icmp' 'icmp_ln66' <Predicate = true> <Delay = 0.56> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.56> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 177 [1/1] (0.00ns)   --->   "%empty_15 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4"   --->   Operation 177 'speclooptripcount' 'empty_15' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 178 [1/1] (0.00ns)   --->   "%br_ln66 = br i1 %icmp_ln66, void %.split, void" [sha256.cpp:66]   --->   Operation 178 'br' 'br_ln66' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 179 [1/1] (0.00ns)   --->   "%trunc_ln67 = trunc i3 %r" [sha256.cpp:67]   --->   Operation 179 'trunc' 'trunc_ln67' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_10 : Operation 180 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i2.i3, i2 %trunc_ln67, i3 0" [sha256.cpp:67]   --->   Operation 180 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_10 : Operation 181 [1/1] (0.82ns)   --->   "%sub_ln67 = sub i5 24, i5 %shl_ln" [sha256.cpp:67]   --->   Operation 181 'sub' 'sub_ln67' <Predicate = (!icmp_ln66)> <Delay = 0.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 182 [1/1] (0.00ns)   --->   "%zext_ln67 = zext i5 %sub_ln67" [sha256.cpp:67]   --->   Operation 182 'zext' 'zext_ln67' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_10 : Operation 183 [1/1] (1.27ns)   --->   "%lshr_ln67 = lshr i32 %add_ln52, i32 %zext_ln67" [sha256.cpp:67]   --->   Operation 183 'lshr' 'lshr_ln67' <Predicate = (!icmp_ln66)> <Delay = 1.27> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 184 [1/1] (0.00ns)   --->   "%trunc_ln67_1 = trunc i32 %lshr_ln67" [sha256.cpp:67]   --->   Operation 184 'trunc' 'trunc_ln67_1' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_10 : Operation 185 [1/1] (0.14ns)   --->   "%xor_ln68 = xor i3 %r, i3 4" [sha256.cpp:68]   --->   Operation 185 'xor' 'xor_ln68' <Predicate = (!icmp_ln66)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 186 [1/1] (0.00ns)   --->   "%zext_ln68 = zext i3 %xor_ln68" [sha256.cpp:68]   --->   Operation 186 'zext' 'zext_ln68' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_10 : Operation 187 [1/1] (0.00ns)   --->   "%hash_addr_1 = getelementptr i8 %hash, i64 0, i64 %zext_ln68" [sha256.cpp:68]   --->   Operation 187 'getelementptr' 'hash_addr_1' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_10 : Operation 188 [1/1] (0.73ns)   --->   "%store_ln68 = store i8 0, i5 %hash_addr_1" [sha256.cpp:68]   --->   Operation 188 'store' 'store_ln68' <Predicate = (!icmp_ln66)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>
ST_10 : Operation 189 [1/1] (0.00ns)   --->   "%or_ln3 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i1.i3, i1 1, i3 %r" [sha256.cpp:69]   --->   Operation 189 'bitconcatenate' 'or_ln3' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_10 : Operation 190 [1/1] (0.00ns)   --->   "%zext_ln69 = zext i4 %or_ln3" [sha256.cpp:69]   --->   Operation 190 'zext' 'zext_ln69' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_10 : Operation 191 [1/1] (0.00ns)   --->   "%hash_addr_2 = getelementptr i8 %hash, i64 0, i64 %zext_ln69" [sha256.cpp:69]   --->   Operation 191 'getelementptr' 'hash_addr_2' <Predicate = (!icmp_ln66)> <Delay = 0.00>
ST_10 : Operation 192 [1/1] (0.73ns)   --->   "%store_ln69 = store i8 0, i5 %hash_addr_2" [sha256.cpp:69]   --->   Operation 192 'store' 'store_ln69' <Predicate = (!icmp_ln66)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>

State 11 <SV = 9> <Delay = 0.73>
ST_11 : Operation 193 [1/1] (0.00ns)   --->   "%r_cast16 = zext i3 %r" [sha256.cpp:66]   --->   Operation 193 'zext' 'r_cast16' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 194 [1/1] (0.00ns)   --->   "%hash_addr = getelementptr i8 %hash, i64 0, i64 %r_cast16" [sha256.cpp:67]   --->   Operation 194 'getelementptr' 'hash_addr' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 195 [1/1] (0.73ns)   --->   "%store_ln67 = store i8 %trunc_ln67_1, i5 %hash_addr" [sha256.cpp:67]   --->   Operation 195 'store' 'store_ln67' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>
ST_11 : Operation 196 [1/1] (0.00ns)   --->   "%sext_ln70 = sext i3 %xor_ln68" [sha256.cpp:70]   --->   Operation 196 'sext' 'sext_ln70' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 197 [1/1] (0.00ns)   --->   "%zext_ln70 = zext i4 %sext_ln70" [sha256.cpp:70]   --->   Operation 197 'zext' 'zext_ln70' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 198 [1/1] (0.00ns)   --->   "%hash_addr_3 = getelementptr i8 %hash, i64 0, i64 %zext_ln70" [sha256.cpp:70]   --->   Operation 198 'getelementptr' 'hash_addr_3' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 199 [1/1] (0.73ns)   --->   "%store_ln70 = store i8 0, i5 %hash_addr_3" [sha256.cpp:70]   --->   Operation 199 'store' 'store_ln70' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>

State 12 <SV = 10> <Delay = 1.55>
ST_12 : Operation 200 [1/1] (0.00ns)   --->   "%r_cast14 = zext i3 %r" [sha256.cpp:66]   --->   Operation 200 'zext' 'r_cast14' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 201 [1/1] (0.00ns)   --->   "%or_ln4 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i2.i3, i2 2, i3 %r" [sha256.cpp:71]   --->   Operation 201 'bitconcatenate' 'or_ln4' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 202 [1/1] (0.00ns)   --->   "%zext_ln71 = zext i5 %or_ln4" [sha256.cpp:71]   --->   Operation 202 'zext' 'zext_ln71' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 203 [1/1] (0.00ns)   --->   "%hash_addr_4 = getelementptr i8 %hash, i64 0, i64 %zext_ln71" [sha256.cpp:71]   --->   Operation 203 'getelementptr' 'hash_addr_4' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 204 [1/1] (0.73ns)   --->   "%store_ln71 = store i8 0, i5 %hash_addr_4" [sha256.cpp:71]   --->   Operation 204 'store' 'store_ln71' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>
ST_12 : Operation 205 [1/1] (0.82ns)   --->   "%add_ln72 = add i5 %r_cast14, i5 20" [sha256.cpp:72]   --->   Operation 205 'add' 'add_ln72' <Predicate = true> <Delay = 0.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 206 [1/1] (0.00ns)   --->   "%zext_ln72 = zext i5 %add_ln72" [sha256.cpp:72]   --->   Operation 206 'zext' 'zext_ln72' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 207 [1/1] (0.00ns)   --->   "%hash_addr_5 = getelementptr i8 %hash, i64 0, i64 %zext_ln72" [sha256.cpp:72]   --->   Operation 207 'getelementptr' 'hash_addr_5' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 208 [1/1] (0.73ns)   --->   "%store_ln72 = store i8 0, i5 %hash_addr_5" [sha256.cpp:72]   --->   Operation 208 'store' 'store_ln72' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>

State 13 <SV = 11> <Delay = 0.73>
ST_13 : Operation 209 [1/1] (0.00ns)   --->   "%specloopname_ln61 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [sha256.cpp:61]   --->   Operation 209 'specloopname' 'specloopname_ln61' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 210 [1/1] (0.00ns)   --->   "%sext_ln73 = sext i4 %or_ln3" [sha256.cpp:73]   --->   Operation 210 'sext' 'sext_ln73' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 211 [1/1] (0.00ns)   --->   "%zext_ln73 = zext i5 %sext_ln73" [sha256.cpp:73]   --->   Operation 211 'zext' 'zext_ln73' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 212 [1/1] (0.00ns)   --->   "%hash_addr_6 = getelementptr i8 %hash, i64 0, i64 %zext_ln73" [sha256.cpp:73]   --->   Operation 212 'getelementptr' 'hash_addr_6' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 213 [1/1] (0.73ns)   --->   "%store_ln73 = store i8 0, i5 %hash_addr_6" [sha256.cpp:73]   --->   Operation 213 'store' 'store_ln73' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>
ST_13 : Operation 214 [1/1] (0.00ns)   --->   "%sext_ln74 = sext i3 %xor_ln68" [sha256.cpp:74]   --->   Operation 214 'sext' 'sext_ln74' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 215 [1/1] (0.00ns)   --->   "%zext_ln74 = zext i5 %sext_ln74" [sha256.cpp:74]   --->   Operation 215 'zext' 'zext_ln74' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 216 [1/1] (0.00ns)   --->   "%hash_addr_7 = getelementptr i8 %hash, i64 0, i64 %zext_ln74" [sha256.cpp:74]   --->   Operation 216 'getelementptr' 'hash_addr_7' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 217 [1/1] (0.73ns)   --->   "%store_ln74 = store i8 0, i5 %hash_addr_7" [sha256.cpp:74]   --->   Operation 217 'store' 'store_ln74' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>
ST_13 : Operation 218 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 218 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 14 <SV = 9> <Delay = 0.00>
ST_14 : Operation 219 [1/1] (0.00ns)   --->   "%ret_ln77 = ret" [sha256.cpp:77]   --->   Operation 219 'ret' 'ret_ln77' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', sha256.cpp:20) with incoming values : ('add_ln20', sha256.cpp:20) [18]  (0.46 ns)

 <State 2>: 2.02ns
The critical path consists of the following:
	'phi' operation ('i', sha256.cpp:20) with incoming values : ('add_ln20', sha256.cpp:20) [18]  (0 ns)
	'getelementptr' operation ('m_addr', sha256.cpp:22) [27]  (0 ns)
	'store' operation ('store_ln22', sha256.cpp:22) of variable 'or_ln22_1', sha256.cpp:22 on array 'm', sha256.cpp:18 [28]  (1.3 ns)
	blocking operation 0.72 ns on control path)

 <State 3>: 0.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', sha256.cpp:23) with incoming values : ('add_ln23', sha256.cpp:23) [33]  (0.46 ns)

 <State 4>: 2.14ns
The critical path consists of the following:
	'phi' operation ('i', sha256.cpp:23) with incoming values : ('add_ln23', sha256.cpp:23) [33]  (0 ns)
	'add' operation ('add_ln24', sha256.cpp:24) [43]  (0.84 ns)
	'getelementptr' operation ('m_addr_1', sha256.cpp:24) [45]  (0 ns)
	'load' operation ('m_load', sha256.cpp:24) on array 'm', sha256.cpp:18 [46]  (1.3 ns)

 <State 5>: 4.64ns
The critical path consists of the following:
	'load' operation ('m_load', sha256.cpp:24) on array 'm', sha256.cpp:18 [46]  (1.3 ns)
	'xor' operation ('xor_ln24_1', sha256.cpp:24) [56]  (0 ns)
	'add' operation ('add_ln24_5', sha256.cpp:24) [80]  (1.14 ns)
	'add' operation ('add_ln24_6', sha256.cpp:24) [81]  (0.907 ns)
	'store' operation ('store_ln24', sha256.cpp:24) of variable 'add_ln24_6', sha256.cpp:24 on array 'm', sha256.cpp:18 [83]  (1.3 ns)

 <State 6>: 0.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', sha256.cpp:37) with incoming values : ('add_ln37', sha256.cpp:37) [96]  (0.46 ns)

 <State 7>: 1.3ns
The critical path consists of the following:
	'phi' operation ('i', sha256.cpp:37) with incoming values : ('add_ln37', sha256.cpp:37) [96]  (0 ns)
	'getelementptr' operation ('k_addr', sha256.cpp:38) [135]  (0 ns)
	'load' operation ('k_load', sha256.cpp:38) on array 'k' [136]  (1.3 ns)

 <State 8>: 3.35ns
The critical path consists of the following:
	'load' operation ('k_load', sha256.cpp:38) on array 'k' [136]  (1.3 ns)
	'add' operation ('add_ln38', sha256.cpp:38) [139]  (0 ns)
	'add' operation ('t1', sha256.cpp:38) [142]  (0.907 ns)
	'add' operation ('e', sha256.cpp:43) [158]  (1.14 ns)

 <State 9>: 1.14ns
The critical path consists of the following:
	'add' operation ('add_ln52', sha256.cpp:52) [164]  (1.14 ns)

 <State 10>: 2.1ns
The critical path consists of the following:
	'phi' operation ('r', sha256.cpp:66) with incoming values : ('add_ln66', sha256.cpp:66) [168]  (0 ns)
	'sub' operation ('sub_ln67', sha256.cpp:67) [180]  (0.825 ns)
	'lshr' operation ('lshr_ln67', sha256.cpp:67) [182]  (1.28 ns)

 <State 11>: 0.73ns
The critical path consists of the following:
	'getelementptr' operation ('hash_addr', sha256.cpp:67) [184]  (0 ns)
	'store' operation ('store_ln67', sha256.cpp:67) of variable 'trunc_ln67_1', sha256.cpp:67 on array 'hash' [185]  (0.73 ns)

 <State 12>: 1.55ns
The critical path consists of the following:
	'add' operation ('add_ln72', sha256.cpp:72) [202]  (0.825 ns)
	'getelementptr' operation ('hash_addr_5', sha256.cpp:72) [204]  (0 ns)
	'store' operation ('store_ln72', sha256.cpp:72) of constant 0 on array 'hash' [205]  (0.73 ns)

 <State 13>: 0.73ns
The critical path consists of the following:
	'getelementptr' operation ('hash_addr_6', sha256.cpp:73) [208]  (0 ns)
	'store' operation ('store_ln73', sha256.cpp:73) of constant 0 on array 'hash' [209]  (0.73 ns)

 <State 14>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
