

================================================================
== Vitis HLS Report for 'compress'
================================================================
* Date:           Sun Jun 20 17:16:14 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        sha256
* Solution:       optimize_1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.490 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      101|      101|  1.010 us|  1.010 us|  101|  101|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- compress_loop_2  |       48|       48|         2|          1|          1|    48|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 55
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 18 19 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 20 19 
19 --> 18 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.73>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%m = alloca i64 1" [sha256.cpp:46]   --->   Operation 56 'alloca' 'm' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%ctx_addr = getelementptr i64 %ctx, i64 0, i64 0" [sha256.cpp:50]   --->   Operation 57 'getelementptr' 'ctx_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [2/2] (0.73ns)   --->   "%ctx_load = load i4 %ctx_addr" [sha256.cpp:50]   --->   Operation 58 'load' 'ctx_load' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>

State 2 <SV = 1> <Delay = 2.02>
ST_2 : Operation 59 [1/2] (0.73ns)   --->   "%ctx_load = load i4 %ctx_addr" [sha256.cpp:50]   --->   Operation 59 'load' 'ctx_load' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%trunc_ln50 = trunc i64 %ctx_load" [sha256.cpp:50]   --->   Operation 60 'trunc' 'trunc_ln50' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%trunc_ln50_s = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load, i32 8, i32 15" [sha256.cpp:50]   --->   Operation 61 'partselect' 'trunc_ln50_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%tmp = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load, i32 16, i32 23" [sha256.cpp:50]   --->   Operation 62 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%trunc_ln50_3 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load, i32 24, i32 31" [sha256.cpp:50]   --->   Operation 63 'partselect' 'trunc_ln50_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%or_ln50_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln50, i8 %trunc_ln50_s, i8 %tmp, i8 %trunc_ln50_3" [sha256.cpp:50]   --->   Operation 64 'bitconcatenate' 'or_ln50_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%m_addr = getelementptr i32 %m, i64 0, i64 0" [sha256.cpp:50]   --->   Operation 65 'getelementptr' 'm_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (1.29ns)   --->   "%store_ln50 = store i32 %or_ln50_1, i6 %m_addr" [sha256.cpp:50]   --->   Operation 66 'store' 'store_ln50' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%trunc_ln50_4 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load, i32 32, i32 39" [sha256.cpp:50]   --->   Operation 67 'partselect' 'trunc_ln50_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_s = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load, i32 40, i32 47" [sha256.cpp:50]   --->   Operation 68 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_6 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load, i32 48, i32 55" [sha256.cpp:50]   --->   Operation 69 'partselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%trunc_ln50_7 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load, i32 56, i32 63" [sha256.cpp:50]   --->   Operation 70 'partselect' 'trunc_ln50_7' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.29>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%or_ln50_4 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln50_4, i8 %tmp_s, i8 %tmp_6, i8 %trunc_ln50_7" [sha256.cpp:50]   --->   Operation 71 'bitconcatenate' 'or_ln50_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%m_addr_1 = getelementptr i32 %m, i64 0, i64 1" [sha256.cpp:50]   --->   Operation 72 'getelementptr' 'm_addr_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (1.29ns)   --->   "%store_ln50 = store i32 %or_ln50_4, i6 %m_addr_1" [sha256.cpp:50]   --->   Operation 73 'store' 'store_ln50' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%ctx_addr_30 = getelementptr i64 %ctx, i64 0, i64 1" [sha256.cpp:50]   --->   Operation 74 'getelementptr' 'ctx_addr_30' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 75 [2/2] (0.73ns)   --->   "%ctx_load_20 = load i4 %ctx_addr_30" [sha256.cpp:50]   --->   Operation 75 'load' 'ctx_load_20' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>

State 4 <SV = 3> <Delay = 2.02>
ST_4 : Operation 76 [1/2] (0.73ns)   --->   "%ctx_load_20 = load i4 %ctx_addr_30" [sha256.cpp:50]   --->   Operation 76 'load' 'ctx_load_20' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%trunc_ln50_8 = trunc i64 %ctx_load_20" [sha256.cpp:50]   --->   Operation 77 'trunc' 'trunc_ln50_8' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%trunc_ln50_1 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_20, i32 8, i32 15" [sha256.cpp:50]   --->   Operation 78 'partselect' 'trunc_ln50_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_7 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_20, i32 16, i32 23" [sha256.cpp:50]   --->   Operation 79 'partselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%trunc_ln50_2 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_20, i32 24, i32 31" [sha256.cpp:50]   --->   Operation 80 'partselect' 'trunc_ln50_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (0.00ns)   --->   "%or_ln50_7 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln50_8, i8 %trunc_ln50_1, i8 %tmp_7, i8 %trunc_ln50_2" [sha256.cpp:50]   --->   Operation 81 'bitconcatenate' 'or_ln50_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%m_addr_2 = getelementptr i32 %m, i64 0, i64 2" [sha256.cpp:50]   --->   Operation 82 'getelementptr' 'm_addr_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (1.29ns)   --->   "%store_ln50 = store i32 %or_ln50_7, i6 %m_addr_2" [sha256.cpp:50]   --->   Operation 83 'store' 'store_ln50' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%trunc_ln50_5 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_20, i32 32, i32 39" [sha256.cpp:50]   --->   Operation 84 'partselect' 'trunc_ln50_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "%tmp_8 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_20, i32 40, i32 47" [sha256.cpp:50]   --->   Operation 85 'partselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_9 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_20, i32 48, i32 55" [sha256.cpp:50]   --->   Operation 86 'partselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "%trunc_ln50_6 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_20, i32 56, i32 63" [sha256.cpp:50]   --->   Operation 87 'partselect' 'trunc_ln50_6' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 1.29>
ST_5 : Operation 88 [1/1] (0.00ns)   --->   "%or_ln50_s = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln50_5, i8 %tmp_8, i8 %tmp_9, i8 %trunc_ln50_6" [sha256.cpp:50]   --->   Operation 88 'bitconcatenate' 'or_ln50_s' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 89 [1/1] (0.00ns)   --->   "%m_addr_3 = getelementptr i32 %m, i64 0, i64 3" [sha256.cpp:50]   --->   Operation 89 'getelementptr' 'm_addr_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 90 [1/1] (1.29ns)   --->   "%store_ln50 = store i32 %or_ln50_s, i6 %m_addr_3" [sha256.cpp:50]   --->   Operation 90 'store' 'store_ln50' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_5 : Operation 91 [1/1] (0.00ns)   --->   "%ctx_addr_31 = getelementptr i64 %ctx, i64 0, i64 2" [sha256.cpp:50]   --->   Operation 91 'getelementptr' 'ctx_addr_31' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 92 [2/2] (0.73ns)   --->   "%ctx_load_21 = load i4 %ctx_addr_31" [sha256.cpp:50]   --->   Operation 92 'load' 'ctx_load_21' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>

State 6 <SV = 5> <Delay = 2.02>
ST_6 : Operation 93 [1/2] (0.73ns)   --->   "%ctx_load_21 = load i4 %ctx_addr_31" [sha256.cpp:50]   --->   Operation 93 'load' 'ctx_load_21' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_6 : Operation 94 [1/1] (0.00ns)   --->   "%trunc_ln50_9 = trunc i64 %ctx_load_21" [sha256.cpp:50]   --->   Operation 94 'trunc' 'trunc_ln50_9' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 95 [1/1] (0.00ns)   --->   "%trunc_ln50_10 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_21, i32 8, i32 15" [sha256.cpp:50]   --->   Operation 95 'partselect' 'trunc_ln50_10' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 96 [1/1] (0.00ns)   --->   "%tmp_10 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_21, i32 16, i32 23" [sha256.cpp:50]   --->   Operation 96 'partselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 97 [1/1] (0.00ns)   --->   "%trunc_ln50_11 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_21, i32 24, i32 31" [sha256.cpp:50]   --->   Operation 97 'partselect' 'trunc_ln50_11' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 98 [1/1] (0.00ns)   --->   "%or_ln50_8 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln50_9, i8 %trunc_ln50_10, i8 %tmp_10, i8 %trunc_ln50_11" [sha256.cpp:50]   --->   Operation 98 'bitconcatenate' 'or_ln50_8' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 99 [1/1] (0.00ns)   --->   "%m_addr_4 = getelementptr i32 %m, i64 0, i64 4" [sha256.cpp:50]   --->   Operation 99 'getelementptr' 'm_addr_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 100 [1/1] (1.29ns)   --->   "%store_ln50 = store i32 %or_ln50_8, i6 %m_addr_4" [sha256.cpp:50]   --->   Operation 100 'store' 'store_ln50' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_6 : Operation 101 [1/1] (0.00ns)   --->   "%trunc_ln50_12 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_21, i32 32, i32 39" [sha256.cpp:50]   --->   Operation 101 'partselect' 'trunc_ln50_12' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_11 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_21, i32 40, i32 47" [sha256.cpp:50]   --->   Operation 102 'partselect' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 103 [1/1] (0.00ns)   --->   "%tmp_12 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_21, i32 48, i32 55" [sha256.cpp:50]   --->   Operation 103 'partselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 104 [1/1] (0.00ns)   --->   "%trunc_ln50_13 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_21, i32 56, i32 63" [sha256.cpp:50]   --->   Operation 104 'partselect' 'trunc_ln50_13' <Predicate = true> <Delay = 0.00>

State 7 <SV = 6> <Delay = 1.29>
ST_7 : Operation 105 [1/1] (0.00ns)   --->   "%or_ln50_2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln50_12, i8 %tmp_11, i8 %tmp_12, i8 %trunc_ln50_13" [sha256.cpp:50]   --->   Operation 105 'bitconcatenate' 'or_ln50_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 106 [1/1] (0.00ns)   --->   "%m_addr_5 = getelementptr i32 %m, i64 0, i64 5" [sha256.cpp:50]   --->   Operation 106 'getelementptr' 'm_addr_5' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 107 [1/1] (1.29ns)   --->   "%store_ln50 = store i32 %or_ln50_2, i6 %m_addr_5" [sha256.cpp:50]   --->   Operation 107 'store' 'store_ln50' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_7 : Operation 108 [1/1] (0.00ns)   --->   "%ctx_addr_32 = getelementptr i64 %ctx, i64 0, i64 3" [sha256.cpp:50]   --->   Operation 108 'getelementptr' 'ctx_addr_32' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 109 [2/2] (0.73ns)   --->   "%ctx_load_22 = load i4 %ctx_addr_32" [sha256.cpp:50]   --->   Operation 109 'load' 'ctx_load_22' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>

State 8 <SV = 7> <Delay = 2.02>
ST_8 : Operation 110 [1/2] (0.73ns)   --->   "%ctx_load_22 = load i4 %ctx_addr_32" [sha256.cpp:50]   --->   Operation 110 'load' 'ctx_load_22' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_8 : Operation 111 [1/1] (0.00ns)   --->   "%trunc_ln50_14 = trunc i64 %ctx_load_22" [sha256.cpp:50]   --->   Operation 111 'trunc' 'trunc_ln50_14' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 112 [1/1] (0.00ns)   --->   "%trunc_ln50_15 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_22, i32 8, i32 15" [sha256.cpp:50]   --->   Operation 112 'partselect' 'trunc_ln50_15' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 113 [1/1] (0.00ns)   --->   "%tmp_13 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_22, i32 16, i32 23" [sha256.cpp:50]   --->   Operation 113 'partselect' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 114 [1/1] (0.00ns)   --->   "%trunc_ln50_16 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_22, i32 24, i32 31" [sha256.cpp:50]   --->   Operation 114 'partselect' 'trunc_ln50_16' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 115 [1/1] (0.00ns)   --->   "%or_ln50_3 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln50_14, i8 %trunc_ln50_15, i8 %tmp_13, i8 %trunc_ln50_16" [sha256.cpp:50]   --->   Operation 115 'bitconcatenate' 'or_ln50_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 116 [1/1] (0.00ns)   --->   "%m_addr_6 = getelementptr i32 %m, i64 0, i64 6" [sha256.cpp:50]   --->   Operation 116 'getelementptr' 'm_addr_6' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 117 [1/1] (1.29ns)   --->   "%store_ln50 = store i32 %or_ln50_3, i6 %m_addr_6" [sha256.cpp:50]   --->   Operation 117 'store' 'store_ln50' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_8 : Operation 118 [1/1] (0.00ns)   --->   "%trunc_ln50_17 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_22, i32 32, i32 39" [sha256.cpp:50]   --->   Operation 118 'partselect' 'trunc_ln50_17' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 119 [1/1] (0.00ns)   --->   "%tmp_14 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_22, i32 40, i32 47" [sha256.cpp:50]   --->   Operation 119 'partselect' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 120 [1/1] (0.00ns)   --->   "%tmp_15 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_22, i32 48, i32 55" [sha256.cpp:50]   --->   Operation 120 'partselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 121 [1/1] (0.00ns)   --->   "%trunc_ln50_18 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_22, i32 56, i32 63" [sha256.cpp:50]   --->   Operation 121 'partselect' 'trunc_ln50_18' <Predicate = true> <Delay = 0.00>

State 9 <SV = 8> <Delay = 1.29>
ST_9 : Operation 122 [1/1] (0.00ns)   --->   "%or_ln50_5 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln50_17, i8 %tmp_14, i8 %tmp_15, i8 %trunc_ln50_18" [sha256.cpp:50]   --->   Operation 122 'bitconcatenate' 'or_ln50_5' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 123 [1/1] (0.00ns)   --->   "%m_addr_7 = getelementptr i32 %m, i64 0, i64 7" [sha256.cpp:50]   --->   Operation 123 'getelementptr' 'm_addr_7' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 124 [1/1] (1.29ns)   --->   "%store_ln50 = store i32 %or_ln50_5, i6 %m_addr_7" [sha256.cpp:50]   --->   Operation 124 'store' 'store_ln50' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_9 : Operation 125 [1/1] (0.00ns)   --->   "%ctx_addr_33 = getelementptr i64 %ctx, i64 0, i64 4" [sha256.cpp:50]   --->   Operation 125 'getelementptr' 'ctx_addr_33' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 126 [2/2] (0.73ns)   --->   "%ctx_load_23 = load i4 %ctx_addr_33" [sha256.cpp:50]   --->   Operation 126 'load' 'ctx_load_23' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>

State 10 <SV = 9> <Delay = 2.02>
ST_10 : Operation 127 [1/2] (0.73ns)   --->   "%ctx_load_23 = load i4 %ctx_addr_33" [sha256.cpp:50]   --->   Operation 127 'load' 'ctx_load_23' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_10 : Operation 128 [1/1] (0.00ns)   --->   "%trunc_ln50_19 = trunc i64 %ctx_load_23" [sha256.cpp:50]   --->   Operation 128 'trunc' 'trunc_ln50_19' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 129 [1/1] (0.00ns)   --->   "%trunc_ln50_20 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_23, i32 8, i32 15" [sha256.cpp:50]   --->   Operation 129 'partselect' 'trunc_ln50_20' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 130 [1/1] (0.00ns)   --->   "%tmp_16 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_23, i32 16, i32 23" [sha256.cpp:50]   --->   Operation 130 'partselect' 'tmp_16' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 131 [1/1] (0.00ns)   --->   "%trunc_ln50_21 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_23, i32 24, i32 31" [sha256.cpp:50]   --->   Operation 131 'partselect' 'trunc_ln50_21' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 132 [1/1] (0.00ns)   --->   "%or_ln50_6 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln50_19, i8 %trunc_ln50_20, i8 %tmp_16, i8 %trunc_ln50_21" [sha256.cpp:50]   --->   Operation 132 'bitconcatenate' 'or_ln50_6' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 133 [1/1] (0.00ns)   --->   "%m_addr_8 = getelementptr i32 %m, i64 0, i64 8" [sha256.cpp:50]   --->   Operation 133 'getelementptr' 'm_addr_8' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 134 [1/1] (1.29ns)   --->   "%store_ln50 = store i32 %or_ln50_6, i6 %m_addr_8" [sha256.cpp:50]   --->   Operation 134 'store' 'store_ln50' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_10 : Operation 135 [1/1] (0.00ns)   --->   "%trunc_ln50_22 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_23, i32 32, i32 39" [sha256.cpp:50]   --->   Operation 135 'partselect' 'trunc_ln50_22' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 136 [1/1] (0.00ns)   --->   "%tmp_17 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_23, i32 40, i32 47" [sha256.cpp:50]   --->   Operation 136 'partselect' 'tmp_17' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 137 [1/1] (0.00ns)   --->   "%tmp_18 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_23, i32 48, i32 55" [sha256.cpp:50]   --->   Operation 137 'partselect' 'tmp_18' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 138 [1/1] (0.00ns)   --->   "%trunc_ln50_23 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_23, i32 56, i32 63" [sha256.cpp:50]   --->   Operation 138 'partselect' 'trunc_ln50_23' <Predicate = true> <Delay = 0.00>

State 11 <SV = 10> <Delay = 1.29>
ST_11 : Operation 139 [1/1] (0.00ns)   --->   "%or_ln50_9 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln50_22, i8 %tmp_17, i8 %tmp_18, i8 %trunc_ln50_23" [sha256.cpp:50]   --->   Operation 139 'bitconcatenate' 'or_ln50_9' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 140 [1/1] (0.00ns)   --->   "%m_addr_9 = getelementptr i32 %m, i64 0, i64 9" [sha256.cpp:50]   --->   Operation 140 'getelementptr' 'm_addr_9' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 141 [1/1] (1.29ns)   --->   "%store_ln50 = store i32 %or_ln50_9, i6 %m_addr_9" [sha256.cpp:50]   --->   Operation 141 'store' 'store_ln50' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_11 : Operation 142 [1/1] (0.00ns)   --->   "%ctx_addr_34 = getelementptr i64 %ctx, i64 0, i64 5" [sha256.cpp:50]   --->   Operation 142 'getelementptr' 'ctx_addr_34' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 143 [2/2] (0.73ns)   --->   "%ctx_load_24 = load i4 %ctx_addr_34" [sha256.cpp:50]   --->   Operation 143 'load' 'ctx_load_24' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>

State 12 <SV = 11> <Delay = 2.02>
ST_12 : Operation 144 [1/2] (0.73ns)   --->   "%ctx_load_24 = load i4 %ctx_addr_34" [sha256.cpp:50]   --->   Operation 144 'load' 'ctx_load_24' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_12 : Operation 145 [1/1] (0.00ns)   --->   "%trunc_ln50_24 = trunc i64 %ctx_load_24" [sha256.cpp:50]   --->   Operation 145 'trunc' 'trunc_ln50_24' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 146 [1/1] (0.00ns)   --->   "%trunc_ln50_25 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_24, i32 8, i32 15" [sha256.cpp:50]   --->   Operation 146 'partselect' 'trunc_ln50_25' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 147 [1/1] (0.00ns)   --->   "%tmp_19 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_24, i32 16, i32 23" [sha256.cpp:50]   --->   Operation 147 'partselect' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 148 [1/1] (0.00ns)   --->   "%trunc_ln50_26 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_24, i32 24, i32 31" [sha256.cpp:50]   --->   Operation 148 'partselect' 'trunc_ln50_26' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 149 [1/1] (0.00ns)   --->   "%or_ln50_10 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln50_24, i8 %trunc_ln50_25, i8 %tmp_19, i8 %trunc_ln50_26" [sha256.cpp:50]   --->   Operation 149 'bitconcatenate' 'or_ln50_10' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 150 [1/1] (0.00ns)   --->   "%m_addr_10 = getelementptr i32 %m, i64 0, i64 10" [sha256.cpp:50]   --->   Operation 150 'getelementptr' 'm_addr_10' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 151 [1/1] (1.29ns)   --->   "%store_ln50 = store i32 %or_ln50_10, i6 %m_addr_10" [sha256.cpp:50]   --->   Operation 151 'store' 'store_ln50' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_12 : Operation 152 [1/1] (0.00ns)   --->   "%trunc_ln50_27 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_24, i32 32, i32 39" [sha256.cpp:50]   --->   Operation 152 'partselect' 'trunc_ln50_27' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 153 [1/1] (0.00ns)   --->   "%tmp_20 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_24, i32 40, i32 47" [sha256.cpp:50]   --->   Operation 153 'partselect' 'tmp_20' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 154 [1/1] (0.00ns)   --->   "%tmp_21 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_24, i32 48, i32 55" [sha256.cpp:50]   --->   Operation 154 'partselect' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 155 [1/1] (0.00ns)   --->   "%trunc_ln50_28 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_24, i32 56, i32 63" [sha256.cpp:50]   --->   Operation 155 'partselect' 'trunc_ln50_28' <Predicate = true> <Delay = 0.00>

State 13 <SV = 12> <Delay = 1.29>
ST_13 : Operation 156 [1/1] (0.00ns)   --->   "%or_ln50_11 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln50_27, i8 %tmp_20, i8 %tmp_21, i8 %trunc_ln50_28" [sha256.cpp:50]   --->   Operation 156 'bitconcatenate' 'or_ln50_11' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 157 [1/1] (0.00ns)   --->   "%m_addr_11 = getelementptr i32 %m, i64 0, i64 11" [sha256.cpp:50]   --->   Operation 157 'getelementptr' 'm_addr_11' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 158 [1/1] (1.29ns)   --->   "%store_ln50 = store i32 %or_ln50_11, i6 %m_addr_11" [sha256.cpp:50]   --->   Operation 158 'store' 'store_ln50' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_13 : Operation 159 [1/1] (0.00ns)   --->   "%ctx_addr_35 = getelementptr i64 %ctx, i64 0, i64 6" [sha256.cpp:50]   --->   Operation 159 'getelementptr' 'ctx_addr_35' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 160 [2/2] (0.73ns)   --->   "%ctx_load_25 = load i4 %ctx_addr_35" [sha256.cpp:50]   --->   Operation 160 'load' 'ctx_load_25' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>

State 14 <SV = 13> <Delay = 2.02>
ST_14 : Operation 161 [1/2] (0.73ns)   --->   "%ctx_load_25 = load i4 %ctx_addr_35" [sha256.cpp:50]   --->   Operation 161 'load' 'ctx_load_25' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_14 : Operation 162 [1/1] (0.00ns)   --->   "%trunc_ln50_29 = trunc i64 %ctx_load_25" [sha256.cpp:50]   --->   Operation 162 'trunc' 'trunc_ln50_29' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 163 [1/1] (0.00ns)   --->   "%trunc_ln50_30 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_25, i32 8, i32 15" [sha256.cpp:50]   --->   Operation 163 'partselect' 'trunc_ln50_30' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 164 [1/1] (0.00ns)   --->   "%tmp_22 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_25, i32 16, i32 23" [sha256.cpp:50]   --->   Operation 164 'partselect' 'tmp_22' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 165 [1/1] (0.00ns)   --->   "%trunc_ln50_31 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_25, i32 24, i32 31" [sha256.cpp:50]   --->   Operation 165 'partselect' 'trunc_ln50_31' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 166 [1/1] (0.00ns)   --->   "%or_ln50_12 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln50_29, i8 %trunc_ln50_30, i8 %tmp_22, i8 %trunc_ln50_31" [sha256.cpp:50]   --->   Operation 166 'bitconcatenate' 'or_ln50_12' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 167 [1/1] (0.00ns)   --->   "%m_addr_12 = getelementptr i32 %m, i64 0, i64 12" [sha256.cpp:50]   --->   Operation 167 'getelementptr' 'm_addr_12' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 168 [1/1] (1.29ns)   --->   "%store_ln50 = store i32 %or_ln50_12, i6 %m_addr_12" [sha256.cpp:50]   --->   Operation 168 'store' 'store_ln50' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_14 : Operation 169 [1/1] (0.00ns)   --->   "%trunc_ln50_32 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_25, i32 32, i32 39" [sha256.cpp:50]   --->   Operation 169 'partselect' 'trunc_ln50_32' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 170 [1/1] (0.00ns)   --->   "%tmp_23 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_25, i32 40, i32 47" [sha256.cpp:50]   --->   Operation 170 'partselect' 'tmp_23' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 171 [1/1] (0.00ns)   --->   "%tmp_24 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_25, i32 48, i32 55" [sha256.cpp:50]   --->   Operation 171 'partselect' 'tmp_24' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 172 [1/1] (0.00ns)   --->   "%trunc_ln50_33 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_25, i32 56, i32 63" [sha256.cpp:50]   --->   Operation 172 'partselect' 'trunc_ln50_33' <Predicate = true> <Delay = 0.00>

State 15 <SV = 14> <Delay = 1.29>
ST_15 : Operation 173 [1/1] (0.00ns)   --->   "%or_ln50_13 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln50_32, i8 %tmp_23, i8 %tmp_24, i8 %trunc_ln50_33" [sha256.cpp:50]   --->   Operation 173 'bitconcatenate' 'or_ln50_13' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 174 [1/1] (0.00ns)   --->   "%m_addr_13 = getelementptr i32 %m, i64 0, i64 13" [sha256.cpp:50]   --->   Operation 174 'getelementptr' 'm_addr_13' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 175 [1/1] (1.29ns)   --->   "%store_ln50 = store i32 %or_ln50_13, i6 %m_addr_13" [sha256.cpp:50]   --->   Operation 175 'store' 'store_ln50' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_15 : Operation 176 [1/1] (0.00ns)   --->   "%ctx_addr_36 = getelementptr i64 %ctx, i64 0, i64 7" [sha256.cpp:50]   --->   Operation 176 'getelementptr' 'ctx_addr_36' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 177 [2/2] (0.73ns)   --->   "%ctx_load_26 = load i4 %ctx_addr_36" [sha256.cpp:50]   --->   Operation 177 'load' 'ctx_load_26' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>

State 16 <SV = 15> <Delay = 2.02>
ST_16 : Operation 178 [1/2] (0.73ns)   --->   "%ctx_load_26 = load i4 %ctx_addr_36" [sha256.cpp:50]   --->   Operation 178 'load' 'ctx_load_26' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_16 : Operation 179 [1/1] (0.00ns)   --->   "%trunc_ln50_34 = trunc i64 %ctx_load_26" [sha256.cpp:50]   --->   Operation 179 'trunc' 'trunc_ln50_34' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 180 [1/1] (0.00ns)   --->   "%trunc_ln50_35 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_26, i32 8, i32 15" [sha256.cpp:50]   --->   Operation 180 'partselect' 'trunc_ln50_35' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 181 [1/1] (0.00ns)   --->   "%tmp_25 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_26, i32 16, i32 23" [sha256.cpp:50]   --->   Operation 181 'partselect' 'tmp_25' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 182 [1/1] (0.00ns)   --->   "%trunc_ln50_36 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_26, i32 24, i32 31" [sha256.cpp:50]   --->   Operation 182 'partselect' 'trunc_ln50_36' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 183 [1/1] (0.00ns)   --->   "%or_ln50_14 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln50_34, i8 %trunc_ln50_35, i8 %tmp_25, i8 %trunc_ln50_36" [sha256.cpp:50]   --->   Operation 183 'bitconcatenate' 'or_ln50_14' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 184 [1/1] (0.00ns)   --->   "%m_addr_14 = getelementptr i32 %m, i64 0, i64 14" [sha256.cpp:50]   --->   Operation 184 'getelementptr' 'm_addr_14' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 185 [1/1] (1.29ns)   --->   "%store_ln50 = store i32 %or_ln50_14, i6 %m_addr_14" [sha256.cpp:50]   --->   Operation 185 'store' 'store_ln50' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_16 : Operation 186 [1/1] (0.00ns)   --->   "%trunc_ln50_37 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_26, i32 32, i32 39" [sha256.cpp:50]   --->   Operation 186 'partselect' 'trunc_ln50_37' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 187 [1/1] (0.00ns)   --->   "%tmp_26 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_26, i32 40, i32 47" [sha256.cpp:50]   --->   Operation 187 'partselect' 'tmp_26' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 188 [1/1] (0.00ns)   --->   "%tmp_27 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_26, i32 48, i32 55" [sha256.cpp:50]   --->   Operation 188 'partselect' 'tmp_27' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 189 [1/1] (0.00ns)   --->   "%trunc_ln50_38 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_26, i32 56, i32 63" [sha256.cpp:50]   --->   Operation 189 'partselect' 'trunc_ln50_38' <Predicate = true> <Delay = 0.00>

State 17 <SV = 16> <Delay = 1.29>
ST_17 : Operation 190 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %ctx, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 190 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 191 [1/1] (0.00ns)   --->   "%specbramwithbyteenable_ln0 = specbramwithbyteenable void @_ssdm_op_SpecBRAMWithByteEnable, i64 %ctx"   --->   Operation 191 'specbramwithbyteenable' 'specbramwithbyteenable_ln0' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 192 [1/1] (0.00ns)   --->   "%specbramwithbyteenable_ln0 = specbramwithbyteenable void @_ssdm_op_SpecBRAMWithByteEnable, i64 %ctx"   --->   Operation 192 'specbramwithbyteenable' 'specbramwithbyteenable_ln0' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 193 [1/1] (0.00ns)   --->   "%or_ln50_15 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln50_37, i8 %tmp_26, i8 %tmp_27, i8 %trunc_ln50_38" [sha256.cpp:50]   --->   Operation 193 'bitconcatenate' 'or_ln50_15' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 194 [1/1] (0.00ns)   --->   "%m_addr_15 = getelementptr i32 %m, i64 0, i64 15" [sha256.cpp:50]   --->   Operation 194 'getelementptr' 'm_addr_15' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 195 [1/1] (1.29ns)   --->   "%store_ln50 = store i32 %or_ln50_15, i6 %m_addr_15" [sha256.cpp:50]   --->   Operation 195 'store' 'store_ln50' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_17 : Operation 196 [1/1] (0.46ns)   --->   "%br_ln51 = br void" [sha256.cpp:51]   --->   Operation 196 'br' 'br_ln51' <Predicate = true> <Delay = 0.46>

State 18 <SV = 17> <Delay = 2.13>
ST_18 : Operation 197 [1/1] (0.00ns)   --->   "%i = phi i7 %add_ln51, void %.split, i7 16, void %.lr.ph" [sha256.cpp:51]   --->   Operation 197 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 198 [1/1] (0.71ns)   --->   "%icmp_ln51 = icmp_eq  i7 %i, i7 64" [sha256.cpp:51]   --->   Operation 198 'icmp' 'icmp_ln51' <Predicate = true> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 199 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 48, i64 48, i64 48"   --->   Operation 199 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 200 [1/1] (0.00ns)   --->   "%br_ln51 = br i1 %icmp_ln51, void %.split, void %._crit_edge" [sha256.cpp:51]   --->   Operation 200 'br' 'br_ln51' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 201 [1/1] (0.85ns)   --->   "%add_ln51 = add i7 %i, i7 1" [sha256.cpp:51]   --->   Operation 201 'add' 'add_ln51' <Predicate = (!icmp_ln51)> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 202 [1/1] (0.00ns)   --->   "%trunc_ln51 = trunc i7 %i" [sha256.cpp:51]   --->   Operation 202 'trunc' 'trunc_ln51' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_18 : Operation 203 [1/1] (0.84ns)   --->   "%add_ln52 = add i6 %trunc_ln51, i6 62" [sha256.cpp:52]   --->   Operation 203 'add' 'add_ln52' <Predicate = (!icmp_ln51)> <Delay = 0.84> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 204 [1/1] (0.00ns)   --->   "%zext_ln52 = zext i6 %add_ln52" [sha256.cpp:52]   --->   Operation 204 'zext' 'zext_ln52' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_18 : Operation 205 [1/1] (0.00ns)   --->   "%m_addr_64 = getelementptr i32 %m, i64 0, i64 %zext_ln52" [sha256.cpp:52]   --->   Operation 205 'getelementptr' 'm_addr_64' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_18 : Operation 206 [2/2] (1.29ns)   --->   "%m_load_64 = load i6 %m_addr_64" [sha256.cpp:52]   --->   Operation 206 'load' 'm_load_64' <Predicate = (!icmp_ln51)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_18 : Operation 207 [1/1] (0.84ns)   --->   "%add_ln52_1 = add i6 %trunc_ln51, i6 57" [sha256.cpp:52]   --->   Operation 207 'add' 'add_ln52_1' <Predicate = (!icmp_ln51)> <Delay = 0.84> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 208 [1/1] (0.00ns)   --->   "%zext_ln52_1 = zext i6 %add_ln52_1" [sha256.cpp:52]   --->   Operation 208 'zext' 'zext_ln52_1' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_18 : Operation 209 [1/1] (0.00ns)   --->   "%m_addr_65 = getelementptr i32 %m, i64 0, i64 %zext_ln52_1" [sha256.cpp:52]   --->   Operation 209 'getelementptr' 'm_addr_65' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_18 : Operation 210 [2/2] (1.29ns)   --->   "%m_load_65 = load i6 %m_addr_65" [sha256.cpp:52]   --->   Operation 210 'load' 'm_load_65' <Predicate = (!icmp_ln51)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_18 : Operation 211 [1/1] (0.84ns)   --->   "%add_ln52_2 = add i6 %trunc_ln51, i6 49" [sha256.cpp:52]   --->   Operation 211 'add' 'add_ln52_2' <Predicate = (!icmp_ln51)> <Delay = 0.84> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 212 [1/1] (0.00ns)   --->   "%zext_ln52_2 = zext i6 %add_ln52_2" [sha256.cpp:52]   --->   Operation 212 'zext' 'zext_ln52_2' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_18 : Operation 213 [1/1] (0.00ns)   --->   "%m_addr_66 = getelementptr i32 %m, i64 0, i64 %zext_ln52_2" [sha256.cpp:52]   --->   Operation 213 'getelementptr' 'm_addr_66' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_18 : Operation 214 [2/2] (1.29ns)   --->   "%m_load_66 = load i6 %m_addr_66" [sha256.cpp:52]   --->   Operation 214 'load' 'm_load_66' <Predicate = (!icmp_ln51)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_18 : Operation 215 [1/1] (0.84ns)   --->   "%add_ln52_3 = add i6 %trunc_ln51, i6 48" [sha256.cpp:52]   --->   Operation 215 'add' 'add_ln52_3' <Predicate = (!icmp_ln51)> <Delay = 0.84> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 216 [1/1] (0.00ns)   --->   "%zext_ln52_3 = zext i6 %add_ln52_3" [sha256.cpp:52]   --->   Operation 216 'zext' 'zext_ln52_3' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_18 : Operation 217 [1/1] (0.00ns)   --->   "%m_addr_67 = getelementptr i32 %m, i64 0, i64 %zext_ln52_3" [sha256.cpp:52]   --->   Operation 217 'getelementptr' 'm_addr_67' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_18 : Operation 218 [2/2] (1.29ns)   --->   "%m_load_67 = load i6 %m_addr_67" [sha256.cpp:52]   --->   Operation 218 'load' 'm_load_67' <Predicate = (!icmp_ln51)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 19 <SV = 18> <Delay = 4.64>
ST_19 : Operation 219 [1/1] (0.00ns)   --->   "%zext_ln51 = zext i7 %i" [sha256.cpp:51]   --->   Operation 219 'zext' 'zext_ln51' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 220 [1/1] (0.00ns)   --->   "%specpipeline_ln46 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [sha256.cpp:46]   --->   Operation 220 'specpipeline' 'specpipeline_ln46' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 221 [1/1] (0.00ns)   --->   "%specloopname_ln46 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [sha256.cpp:46]   --->   Operation 221 'specloopname' 'specloopname_ln46' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 222 [1/2] (1.29ns)   --->   "%m_load_64 = load i6 %m_addr_64" [sha256.cpp:52]   --->   Operation 222 'load' 'm_load_64' <Predicate = (!icmp_ln51)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_19 : Operation 223 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%lshr_ln3 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_load_64, i32 17, i32 31" [sha256.cpp:52]   --->   Operation 223 'partselect' 'lshr_ln3' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 224 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%trunc_ln52 = trunc i32 %m_load_64" [sha256.cpp:52]   --->   Operation 224 'trunc' 'trunc_ln52' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 225 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%or_ln3 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln52, i15 %lshr_ln3" [sha256.cpp:52]   --->   Operation 225 'bitconcatenate' 'or_ln3' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 226 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%lshr_ln52_1 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_load_64, i32 19, i32 31" [sha256.cpp:52]   --->   Operation 226 'partselect' 'lshr_ln52_1' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 227 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%trunc_ln52_1 = trunc i32 %m_load_64" [sha256.cpp:52]   --->   Operation 227 'trunc' 'trunc_ln52_1' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 228 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%or_ln52_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln52_1, i13 %lshr_ln52_1" [sha256.cpp:52]   --->   Operation 228 'bitconcatenate' 'or_ln52_1' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 229 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%lshr_ln52_2 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_load_64, i32 10, i32 31" [sha256.cpp:52]   --->   Operation 229 'partselect' 'lshr_ln52_2' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 230 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%zext_ln52_4 = zext i22 %lshr_ln52_2" [sha256.cpp:52]   --->   Operation 230 'zext' 'zext_ln52_4' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 231 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%xor_ln52 = xor i32 %zext_ln52_4, i32 %or_ln52_1" [sha256.cpp:52]   --->   Operation 231 'xor' 'xor_ln52' <Predicate = (!icmp_ln51)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 232 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%xor_ln52_1 = xor i32 %xor_ln52, i32 %or_ln3" [sha256.cpp:52]   --->   Operation 232 'xor' 'xor_ln52_1' <Predicate = (!icmp_ln51)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 233 [1/2] (1.29ns)   --->   "%m_load_65 = load i6 %m_addr_65" [sha256.cpp:52]   --->   Operation 233 'load' 'm_load_65' <Predicate = (!icmp_ln51)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_19 : Operation 234 [1/2] (1.29ns)   --->   "%m_load_66 = load i6 %m_addr_66" [sha256.cpp:52]   --->   Operation 234 'load' 'm_load_66' <Predicate = (!icmp_ln51)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_19 : Operation 235 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%lshr_ln52_3 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_load_66, i32 7, i32 31" [sha256.cpp:52]   --->   Operation 235 'partselect' 'lshr_ln52_3' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 236 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%trunc_ln52_2 = trunc i32 %m_load_66" [sha256.cpp:52]   --->   Operation 236 'trunc' 'trunc_ln52_2' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 237 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%or_ln52_2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln52_2, i25 %lshr_ln52_3" [sha256.cpp:52]   --->   Operation 237 'bitconcatenate' 'or_ln52_2' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 238 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%lshr_ln52_4 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_load_66, i32 18, i32 31" [sha256.cpp:52]   --->   Operation 238 'partselect' 'lshr_ln52_4' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 239 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%trunc_ln52_3 = trunc i32 %m_load_66" [sha256.cpp:52]   --->   Operation 239 'trunc' 'trunc_ln52_3' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 240 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%or_ln52_3 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln52_3, i14 %lshr_ln52_4" [sha256.cpp:52]   --->   Operation 240 'bitconcatenate' 'or_ln52_3' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 241 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%lshr_ln52_5 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_load_66, i32 3, i32 31" [sha256.cpp:52]   --->   Operation 241 'partselect' 'lshr_ln52_5' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 242 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%zext_ln52_5 = zext i29 %lshr_ln52_5" [sha256.cpp:52]   --->   Operation 242 'zext' 'zext_ln52_5' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 243 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%xor_ln52_2 = xor i32 %zext_ln52_5, i32 %or_ln52_3" [sha256.cpp:52]   --->   Operation 243 'xor' 'xor_ln52_2' <Predicate = (!icmp_ln51)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 244 [1/1] (0.00ns) (grouped into LUT with out node add_ln52_5)   --->   "%xor_ln52_3 = xor i32 %xor_ln52_2, i32 %or_ln52_2" [sha256.cpp:52]   --->   Operation 244 'xor' 'xor_ln52_3' <Predicate = (!icmp_ln51)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 245 [1/2] (1.29ns)   --->   "%m_load_67 = load i6 %m_addr_67" [sha256.cpp:52]   --->   Operation 245 'load' 'm_load_67' <Predicate = (!icmp_ln51)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_19 : Operation 246 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln52_4 = add i32 %m_load_65, i32 %m_load_67" [sha256.cpp:52]   --->   Operation 246 'add' 'add_ln52_4' <Predicate = (!icmp_ln51)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 247 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln52_5 = add i32 %xor_ln52_1, i32 %xor_ln52_3" [sha256.cpp:52]   --->   Operation 247 'add' 'add_ln52_5' <Predicate = (!icmp_ln51)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 248 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln52_6 = add i32 %add_ln52_5, i32 %add_ln52_4" [sha256.cpp:52]   --->   Operation 248 'add' 'add_ln52_6' <Predicate = (!icmp_ln51)> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 249 [1/1] (0.00ns)   --->   "%m_addr_68 = getelementptr i32 %m, i64 0, i64 %zext_ln51" [sha256.cpp:52]   --->   Operation 249 'getelementptr' 'm_addr_68' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_19 : Operation 250 [1/1] (1.29ns)   --->   "%store_ln52 = store i32 %add_ln52_6, i6 %m_addr_68" [sha256.cpp:52]   --->   Operation 250 'store' 'store_ln52' <Predicate = (!icmp_ln51)> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_19 : Operation 251 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 251 'br' 'br_ln0' <Predicate = (!icmp_ln51)> <Delay = 0.00>

State 20 <SV = 18> <Delay = 0.73>
ST_20 : Operation 252 [1/1] (0.00ns)   --->   "%ctx_addr_37 = getelementptr i64 %ctx, i64 0, i64 10" [sha256.cpp:55]   --->   Operation 252 'getelementptr' 'ctx_addr_37' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 253 [2/2] (0.73ns)   --->   "%ctx_load_27 = load i4 %ctx_addr_37" [sha256.cpp:55]   --->   Operation 253 'load' 'ctx_load_27' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_20 : Operation 254 [1/1] (0.00ns)   --->   "%ctx_addr_38 = getelementptr i64 %ctx, i64 0, i64 11" [sha256.cpp:57]   --->   Operation 254 'getelementptr' 'ctx_addr_38' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 255 [2/2] (0.73ns)   --->   "%ctx_load_28 = load i4 %ctx_addr_38" [sha256.cpp:57]   --->   Operation 255 'load' 'ctx_load_28' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>

State 21 <SV = 19> <Delay = 1.29>
ST_21 : Operation 256 [1/2] (0.73ns)   --->   "%ctx_load_27 = load i4 %ctx_addr_37" [sha256.cpp:55]   --->   Operation 256 'load' 'ctx_load_27' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_21 : Operation 257 [1/1] (0.00ns)   --->   "%a = trunc i64 %ctx_load_27" [sha256.cpp:55]   --->   Operation 257 'trunc' 'a' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 258 [1/1] (0.00ns)   --->   "%b_33 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ctx_load_27, i32 32, i32 63" [sha256.cpp:56]   --->   Operation 258 'partselect' 'b_33' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 259 [1/2] (0.73ns)   --->   "%ctx_load_28 = load i4 %ctx_addr_38" [sha256.cpp:57]   --->   Operation 259 'load' 'ctx_load_28' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_21 : Operation 260 [1/1] (0.00ns)   --->   "%c_33 = trunc i64 %ctx_load_28" [sha256.cpp:57]   --->   Operation 260 'trunc' 'c_33' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 261 [1/1] (0.00ns)   --->   "%d = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ctx_load_28, i32 32, i32 63" [sha256.cpp:58]   --->   Operation 261 'partselect' 'd' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 262 [1/1] (0.00ns)   --->   "%ctx_addr_39 = getelementptr i64 %ctx, i64 0, i64 12" [sha256.cpp:59]   --->   Operation 262 'getelementptr' 'ctx_addr_39' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 263 [2/2] (0.73ns)   --->   "%ctx_load_29 = load i4 %ctx_addr_39" [sha256.cpp:59]   --->   Operation 263 'load' 'ctx_load_29' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_21 : Operation 264 [1/1] (0.00ns)   --->   "%ctx_addr_40 = getelementptr i64 %ctx, i64 0, i64 13" [sha256.cpp:61]   --->   Operation 264 'getelementptr' 'ctx_addr_40' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 265 [2/2] (0.73ns)   --->   "%ctx_load_30 = load i4 %ctx_addr_40" [sha256.cpp:61]   --->   Operation 265 'load' 'ctx_load_30' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_21 : Operation 266 [2/2] (1.29ns)   --->   "%m_load = load i6 %m_addr" [sha256.cpp:66]   --->   Operation 266 'load' 'm_load' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_21 : Operation 267 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_1)   --->   "%lshr_ln2 = partselect i30 @_ssdm_op_PartSelect.i30.i64.i32.i32, i64 %ctx_load_27, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 267 'partselect' 'lshr_ln2' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 268 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_1)   --->   "%trunc_ln67 = trunc i64 %ctx_load_27" [sha256.cpp:67]   --->   Operation 268 'trunc' 'trunc_ln67' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 269 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_1)   --->   "%or_ln2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67, i30 %lshr_ln2" [sha256.cpp:67]   --->   Operation 269 'bitconcatenate' 'or_ln2' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 270 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_1)   --->   "%lshr_ln67_1 = partselect i19 @_ssdm_op_PartSelect.i19.i64.i32.i32, i64 %ctx_load_27, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 270 'partselect' 'lshr_ln67_1' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 271 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_1)   --->   "%trunc_ln67_1 = trunc i64 %ctx_load_27" [sha256.cpp:67]   --->   Operation 271 'trunc' 'trunc_ln67_1' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 272 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_1)   --->   "%or_ln67_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_1, i19 %lshr_ln67_1" [sha256.cpp:67]   --->   Operation 272 'bitconcatenate' 'or_ln67_1' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 273 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_1)   --->   "%lshr_ln67_2 = partselect i10 @_ssdm_op_PartSelect.i10.i64.i32.i32, i64 %ctx_load_27, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 273 'partselect' 'lshr_ln67_2' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 274 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_1)   --->   "%trunc_ln67_2 = trunc i64 %ctx_load_27" [sha256.cpp:67]   --->   Operation 274 'trunc' 'trunc_ln67_2' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 275 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_1)   --->   "%or_ln67_2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_2, i10 %lshr_ln67_2" [sha256.cpp:67]   --->   Operation 275 'bitconcatenate' 'or_ln67_2' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 276 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_1)   --->   "%xor_ln67 = xor i32 %or_ln2, i32 %or_ln67_1" [sha256.cpp:67]   --->   Operation 276 'xor' 'xor_ln67' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 277 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_1 = xor i32 %xor_ln67, i32 %or_ln67_2" [sha256.cpp:67]   --->   Operation 277 'xor' 'xor_ln67_1' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 278 [2/2] (1.29ns)   --->   "%m_load_1 = load i6 %m_addr_1" [sha256.cpp:66]   --->   Operation 278 'load' 'm_load_1' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 22 <SV = 20> <Delay = 6.07>
ST_22 : Operation 279 [1/2] (0.73ns)   --->   "%ctx_load_29 = load i4 %ctx_addr_39" [sha256.cpp:59]   --->   Operation 279 'load' 'ctx_load_29' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_22 : Operation 280 [1/1] (0.00ns)   --->   "%e = trunc i64 %ctx_load_29" [sha256.cpp:59]   --->   Operation 280 'trunc' 'e' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 281 [1/1] (0.00ns)   --->   "%f_33 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ctx_load_29, i32 32, i32 63" [sha256.cpp:60]   --->   Operation 281 'partselect' 'f_33' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 282 [1/2] (0.73ns)   --->   "%ctx_load_30 = load i4 %ctx_addr_40" [sha256.cpp:61]   --->   Operation 282 'load' 'ctx_load_30' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_22 : Operation 283 [1/1] (0.00ns)   --->   "%g_33 = trunc i64 %ctx_load_30" [sha256.cpp:61]   --->   Operation 283 'trunc' 'g_33' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 284 [1/1] (0.00ns)   --->   "%h = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ctx_load_30, i32 32, i32 63" [sha256.cpp:62]   --->   Operation 284 'partselect' 'h' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 285 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_1)   --->   "%lshr_ln = partselect i26 @_ssdm_op_PartSelect.i26.i64.i32.i32, i64 %ctx_load_29, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 285 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 286 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_1)   --->   "%trunc_ln66 = trunc i64 %ctx_load_29" [sha256.cpp:66]   --->   Operation 286 'trunc' 'trunc_ln66' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 287 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_1)   --->   "%or_ln = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66, i26 %lshr_ln" [sha256.cpp:66]   --->   Operation 287 'bitconcatenate' 'or_ln' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 288 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_1)   --->   "%lshr_ln66_1 = partselect i21 @_ssdm_op_PartSelect.i21.i64.i32.i32, i64 %ctx_load_29, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 288 'partselect' 'lshr_ln66_1' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 289 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_1)   --->   "%trunc_ln66_1 = trunc i64 %ctx_load_29" [sha256.cpp:66]   --->   Operation 289 'trunc' 'trunc_ln66_1' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 290 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_1)   --->   "%or_ln66_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_1, i21 %lshr_ln66_1" [sha256.cpp:66]   --->   Operation 290 'bitconcatenate' 'or_ln66_1' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 291 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_1)   --->   "%lshr_ln66_2 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %ctx_load_29, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 291 'partselect' 'lshr_ln66_2' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 292 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_1)   --->   "%trunc_ln66_2 = trunc i64 %ctx_load_29" [sha256.cpp:66]   --->   Operation 292 'trunc' 'trunc_ln66_2' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 293 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_1)   --->   "%or_ln66_2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_2, i7 %lshr_ln66_2" [sha256.cpp:66]   --->   Operation 293 'bitconcatenate' 'or_ln66_2' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 294 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_1)   --->   "%xor_ln66 = xor i32 %or_ln, i32 %or_ln66_1" [sha256.cpp:66]   --->   Operation 294 'xor' 'xor_ln66' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 295 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_1 = xor i32 %xor_ln66, i32 %or_ln66_2" [sha256.cpp:66]   --->   Operation 295 'xor' 'xor_ln66_1' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 296 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_3)   --->   "%and_ln66 = and i32 %f_33, i32 %e" [sha256.cpp:66]   --->   Operation 296 'and' 'and_ln66' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 297 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_3)   --->   "%xor_ln66_2 = xor i32 %e, i32 4294967295" [sha256.cpp:66]   --->   Operation 297 'xor' 'xor_ln66_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 298 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_3)   --->   "%and_ln66_1 = and i32 %g_33, i32 %xor_ln66_2" [sha256.cpp:66]   --->   Operation 298 'and' 'and_ln66_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 299 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_3 = xor i32 %and_ln66_1, i32 %and_ln66" [sha256.cpp:66]   --->   Operation 299 'xor' 'xor_ln66_3' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 300 [1/2] (1.29ns)   --->   "%m_load = load i6 %m_addr" [sha256.cpp:66]   --->   Operation 300 'load' 'm_load' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_22 : Operation 301 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66 = add i32 %m_load, i32 %xor_ln66_3" [sha256.cpp:66]   --->   Operation 301 'add' 'add_ln66' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 302 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_1 = add i32 %xor_ln66_1, i32 1116352408" [sha256.cpp:66]   --->   Operation 302 'add' 'add_ln66_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 303 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_2 = add i32 %add_ln66_1, i32 %h" [sha256.cpp:66]   --->   Operation 303 'add' 'add_ln66_2' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 304 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1 = add i32 %add_ln66_2, i32 %add_ln66" [sha256.cpp:66]   --->   Operation 304 'add' 't1' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 305 [1/1] (1.14ns)   --->   "%e_33 = add i32 %t1, i32 %d" [sha256.cpp:71]   --->   Operation 305 'add' 'e_33' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 306 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_5)   --->   "%lshr_ln66_3 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_33, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 306 'partselect' 'lshr_ln66_3' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 307 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_5)   --->   "%trunc_ln66_3 = trunc i32 %e_33" [sha256.cpp:66]   --->   Operation 307 'trunc' 'trunc_ln66_3' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 308 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_5)   --->   "%or_ln66_3 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_3, i26 %lshr_ln66_3" [sha256.cpp:66]   --->   Operation 308 'bitconcatenate' 'or_ln66_3' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 309 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_5)   --->   "%lshr_ln66_4 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_33, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 309 'partselect' 'lshr_ln66_4' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 310 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_5)   --->   "%trunc_ln66_4 = trunc i32 %e_33" [sha256.cpp:66]   --->   Operation 310 'trunc' 'trunc_ln66_4' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 311 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_5)   --->   "%or_ln66_4 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_4, i21 %lshr_ln66_4" [sha256.cpp:66]   --->   Operation 311 'bitconcatenate' 'or_ln66_4' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 312 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_5)   --->   "%lshr_ln66_5 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_33, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 312 'partselect' 'lshr_ln66_5' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 313 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_5)   --->   "%trunc_ln66_5 = trunc i32 %e_33" [sha256.cpp:66]   --->   Operation 313 'trunc' 'trunc_ln66_5' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 314 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_5)   --->   "%or_ln66_5 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_5, i7 %lshr_ln66_5" [sha256.cpp:66]   --->   Operation 314 'bitconcatenate' 'or_ln66_5' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 315 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_5)   --->   "%xor_ln66_4 = xor i32 %or_ln66_3, i32 %or_ln66_4" [sha256.cpp:66]   --->   Operation 315 'xor' 'xor_ln66_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 316 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_5 = xor i32 %xor_ln66_4, i32 %or_ln66_5" [sha256.cpp:66]   --->   Operation 316 'xor' 'xor_ln66_5' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 317 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_7)   --->   "%and_ln66_2 = and i32 %e_33, i32 %e" [sha256.cpp:66]   --->   Operation 317 'and' 'and_ln66_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 318 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_7)   --->   "%xor_ln66_6 = xor i32 %e_33, i32 4294967295" [sha256.cpp:66]   --->   Operation 318 'xor' 'xor_ln66_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 319 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_7)   --->   "%and_ln66_3 = and i32 %f_33, i32 %xor_ln66_6" [sha256.cpp:66]   --->   Operation 319 'and' 'and_ln66_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 320 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_7 = xor i32 %and_ln66_2, i32 %and_ln66_3" [sha256.cpp:66]   --->   Operation 320 'xor' 'xor_ln66_7' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 321 [1/2] (1.29ns)   --->   "%m_load_1 = load i6 %m_addr_1" [sha256.cpp:66]   --->   Operation 321 'load' 'm_load_1' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_22 : Operation 322 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_4 = add i32 %m_load_1, i32 %xor_ln66_7" [sha256.cpp:66]   --->   Operation 322 'add' 'add_ln66_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 323 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_5 = add i32 %xor_ln66_5, i32 1899447441" [sha256.cpp:66]   --->   Operation 323 'add' 'add_ln66_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 324 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_6 = add i32 %add_ln66_5, i32 %g_33" [sha256.cpp:66]   --->   Operation 324 'add' 'add_ln66_6' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 325 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_1 = add i32 %add_ln66_6, i32 %add_ln66_4" [sha256.cpp:66]   --->   Operation 325 'add' 't1_1' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 326 [2/2] (1.29ns)   --->   "%m_load_2 = load i6 %m_addr_2" [sha256.cpp:66]   --->   Operation 326 'load' 'm_load_2' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_22 : Operation 327 [2/2] (1.29ns)   --->   "%m_load_3 = load i6 %m_addr_3" [sha256.cpp:66]   --->   Operation 327 'load' 'm_load_3' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 23 <SV = 21> <Delay = 6.49>
ST_23 : Operation 328 [1/1] (0.28ns)   --->   "%and_ln67 = and i32 %b_33, i32 %a" [sha256.cpp:67]   --->   Operation 328 'and' 'and_ln67' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 329 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_3)   --->   "%and_ln67_1 = and i32 %c_33, i32 %a" [sha256.cpp:67]   --->   Operation 329 'and' 'and_ln67_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 330 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_3)   --->   "%and_ln67_2 = and i32 %c_33, i32 %b_33" [sha256.cpp:67]   --->   Operation 330 'and' 'and_ln67_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 331 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_3)   --->   "%xor_ln67_2 = xor i32 %and_ln67, i32 %and_ln67_2" [sha256.cpp:67]   --->   Operation 331 'xor' 'xor_ln67_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 332 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_3 = xor i32 %xor_ln67_2, i32 %and_ln67_1" [sha256.cpp:67]   --->   Operation 332 'xor' 'xor_ln67_3' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 333 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75 = add i32 %xor_ln67_1, i32 %t1" [sha256.cpp:75]   --->   Operation 333 'add' 'add_ln75' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 334 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_33 = add i32 %add_ln75, i32 %xor_ln67_3" [sha256.cpp:75]   --->   Operation 334 'add' 'a_33' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 335 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_5)   --->   "%lshr_ln67_3 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_33, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 335 'partselect' 'lshr_ln67_3' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 336 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_5)   --->   "%trunc_ln67_3 = trunc i32 %a_33" [sha256.cpp:67]   --->   Operation 336 'trunc' 'trunc_ln67_3' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 337 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_5)   --->   "%or_ln67_3 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_3, i30 %lshr_ln67_3" [sha256.cpp:67]   --->   Operation 337 'bitconcatenate' 'or_ln67_3' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 338 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_5)   --->   "%lshr_ln67_4 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_33, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 338 'partselect' 'lshr_ln67_4' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 339 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_5)   --->   "%trunc_ln67_4 = trunc i32 %a_33" [sha256.cpp:67]   --->   Operation 339 'trunc' 'trunc_ln67_4' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 340 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_5)   --->   "%or_ln67_4 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_4, i19 %lshr_ln67_4" [sha256.cpp:67]   --->   Operation 340 'bitconcatenate' 'or_ln67_4' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 341 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_5)   --->   "%lshr_ln67_5 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_33, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 341 'partselect' 'lshr_ln67_5' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 342 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_5)   --->   "%trunc_ln67_5 = trunc i32 %a_33" [sha256.cpp:67]   --->   Operation 342 'trunc' 'trunc_ln67_5' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 343 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_5)   --->   "%or_ln67_5 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_5, i10 %lshr_ln67_5" [sha256.cpp:67]   --->   Operation 343 'bitconcatenate' 'or_ln67_5' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 344 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_5)   --->   "%xor_ln67_4 = xor i32 %or_ln67_3, i32 %or_ln67_4" [sha256.cpp:67]   --->   Operation 344 'xor' 'xor_ln67_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 345 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_5 = xor i32 %xor_ln67_4, i32 %or_ln67_5" [sha256.cpp:67]   --->   Operation 345 'xor' 'xor_ln67_5' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 346 [1/1] (0.28ns)   --->   "%and_ln67_3 = and i32 %a_33, i32 %a" [sha256.cpp:67]   --->   Operation 346 'and' 'and_ln67_3' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 347 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_7)   --->   "%and_ln67_4 = and i32 %a_33, i32 %b_33" [sha256.cpp:67]   --->   Operation 347 'and' 'and_ln67_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 348 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_7)   --->   "%xor_ln67_6 = xor i32 %and_ln67, i32 %and_ln67_4" [sha256.cpp:67]   --->   Operation 348 'xor' 'xor_ln67_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 349 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_7 = xor i32 %xor_ln67_6, i32 %and_ln67_3" [sha256.cpp:67]   --->   Operation 349 'xor' 'xor_ln67_7' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 350 [1/1] (1.14ns)   --->   "%e_34 = add i32 %t1_1, i32 %c_33" [sha256.cpp:71]   --->   Operation 350 'add' 'e_34' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 351 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_2 = add i32 %xor_ln67_7, i32 %t1_1" [sha256.cpp:75]   --->   Operation 351 'add' 'add_ln75_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 352 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_34 = add i32 %add_ln75_2, i32 %xor_ln67_5" [sha256.cpp:75]   --->   Operation 352 'add' 'a_34' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 353 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_9)   --->   "%lshr_ln66_6 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_34, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 353 'partselect' 'lshr_ln66_6' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 354 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_9)   --->   "%trunc_ln66_6 = trunc i32 %e_34" [sha256.cpp:66]   --->   Operation 354 'trunc' 'trunc_ln66_6' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 355 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_9)   --->   "%or_ln66_6 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_6, i26 %lshr_ln66_6" [sha256.cpp:66]   --->   Operation 355 'bitconcatenate' 'or_ln66_6' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 356 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_9)   --->   "%lshr_ln66_7 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_34, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 356 'partselect' 'lshr_ln66_7' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 357 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_9)   --->   "%trunc_ln66_7 = trunc i32 %e_34" [sha256.cpp:66]   --->   Operation 357 'trunc' 'trunc_ln66_7' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 358 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_9)   --->   "%or_ln66_7 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_7, i21 %lshr_ln66_7" [sha256.cpp:66]   --->   Operation 358 'bitconcatenate' 'or_ln66_7' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 359 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_9)   --->   "%lshr_ln66_8 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_34, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 359 'partselect' 'lshr_ln66_8' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 360 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_9)   --->   "%trunc_ln66_8 = trunc i32 %e_34" [sha256.cpp:66]   --->   Operation 360 'trunc' 'trunc_ln66_8' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 361 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_9)   --->   "%or_ln66_8 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_8, i7 %lshr_ln66_8" [sha256.cpp:66]   --->   Operation 361 'bitconcatenate' 'or_ln66_8' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 362 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_9)   --->   "%xor_ln66_8 = xor i32 %or_ln66_6, i32 %or_ln66_7" [sha256.cpp:66]   --->   Operation 362 'xor' 'xor_ln66_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 363 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_9 = xor i32 %xor_ln66_8, i32 %or_ln66_8" [sha256.cpp:66]   --->   Operation 363 'xor' 'xor_ln66_9' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 364 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_11)   --->   "%and_ln66_4 = and i32 %e_34, i32 %e_33" [sha256.cpp:66]   --->   Operation 364 'and' 'and_ln66_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 365 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_11)   --->   "%xor_ln66_10 = xor i32 %e_34, i32 4294967295" [sha256.cpp:66]   --->   Operation 365 'xor' 'xor_ln66_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 366 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_11)   --->   "%and_ln66_5 = and i32 %e, i32 %xor_ln66_10" [sha256.cpp:66]   --->   Operation 366 'and' 'and_ln66_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 367 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_11 = xor i32 %and_ln66_4, i32 %and_ln66_5" [sha256.cpp:66]   --->   Operation 367 'xor' 'xor_ln66_11' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 368 [1/2] (1.29ns)   --->   "%m_load_2 = load i6 %m_addr_2" [sha256.cpp:66]   --->   Operation 368 'load' 'm_load_2' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_23 : Operation 369 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_8 = add i32 %m_load_2, i32 3049323471" [sha256.cpp:66]   --->   Operation 369 'add' 'add_ln66_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 370 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_9 = add i32 %f_33, i32 %xor_ln66_9" [sha256.cpp:66]   --->   Operation 370 'add' 'add_ln66_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 371 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_10 = add i32 %add_ln66_9, i32 %xor_ln66_11" [sha256.cpp:66]   --->   Operation 371 'add' 'add_ln66_10' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 372 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_2 = add i32 %add_ln66_10, i32 %add_ln66_8" [sha256.cpp:66]   --->   Operation 372 'add' 't1_2' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 373 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_9)   --->   "%lshr_ln67_6 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_34, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 373 'partselect' 'lshr_ln67_6' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 374 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_9)   --->   "%trunc_ln67_6 = trunc i32 %a_34" [sha256.cpp:67]   --->   Operation 374 'trunc' 'trunc_ln67_6' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 375 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_9)   --->   "%or_ln67_6 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_6, i30 %lshr_ln67_6" [sha256.cpp:67]   --->   Operation 375 'bitconcatenate' 'or_ln67_6' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 376 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_9)   --->   "%lshr_ln67_7 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_34, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 376 'partselect' 'lshr_ln67_7' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 377 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_9)   --->   "%trunc_ln67_7 = trunc i32 %a_34" [sha256.cpp:67]   --->   Operation 377 'trunc' 'trunc_ln67_7' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 378 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_9)   --->   "%or_ln67_7 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_7, i19 %lshr_ln67_7" [sha256.cpp:67]   --->   Operation 378 'bitconcatenate' 'or_ln67_7' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 379 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_9)   --->   "%lshr_ln67_8 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_34, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 379 'partselect' 'lshr_ln67_8' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 380 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_9)   --->   "%trunc_ln67_8 = trunc i32 %a_34" [sha256.cpp:67]   --->   Operation 380 'trunc' 'trunc_ln67_8' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 381 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_9)   --->   "%or_ln67_8 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_8, i10 %lshr_ln67_8" [sha256.cpp:67]   --->   Operation 381 'bitconcatenate' 'or_ln67_8' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 382 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_9)   --->   "%xor_ln67_8 = xor i32 %or_ln67_6, i32 %or_ln67_7" [sha256.cpp:67]   --->   Operation 382 'xor' 'xor_ln67_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 383 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_9 = xor i32 %xor_ln67_8, i32 %or_ln67_8" [sha256.cpp:67]   --->   Operation 383 'xor' 'xor_ln67_9' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 384 [1/1] (1.14ns)   --->   "%e_35 = add i32 %t1_2, i32 %b_33" [sha256.cpp:71]   --->   Operation 384 'add' 'e_35' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 385 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_13)   --->   "%lshr_ln66_9 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_35, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 385 'partselect' 'lshr_ln66_9' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 386 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_13)   --->   "%trunc_ln66_9 = trunc i32 %e_35" [sha256.cpp:66]   --->   Operation 386 'trunc' 'trunc_ln66_9' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 387 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_13)   --->   "%or_ln66_9 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_9, i26 %lshr_ln66_9" [sha256.cpp:66]   --->   Operation 387 'bitconcatenate' 'or_ln66_9' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 388 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_13)   --->   "%lshr_ln66_s = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_35, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 388 'partselect' 'lshr_ln66_s' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 389 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_13)   --->   "%trunc_ln66_10 = trunc i32 %e_35" [sha256.cpp:66]   --->   Operation 389 'trunc' 'trunc_ln66_10' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 390 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_13)   --->   "%or_ln66_s = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_10, i21 %lshr_ln66_s" [sha256.cpp:66]   --->   Operation 390 'bitconcatenate' 'or_ln66_s' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 391 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_13)   --->   "%lshr_ln66_10 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_35, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 391 'partselect' 'lshr_ln66_10' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 392 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_13)   --->   "%trunc_ln66_11 = trunc i32 %e_35" [sha256.cpp:66]   --->   Operation 392 'trunc' 'trunc_ln66_11' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 393 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_13)   --->   "%or_ln66_10 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_11, i7 %lshr_ln66_10" [sha256.cpp:66]   --->   Operation 393 'bitconcatenate' 'or_ln66_10' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 394 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_13)   --->   "%xor_ln66_12 = xor i32 %or_ln66_9, i32 %or_ln66_s" [sha256.cpp:66]   --->   Operation 394 'xor' 'xor_ln66_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 395 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_13 = xor i32 %xor_ln66_12, i32 %or_ln66_10" [sha256.cpp:66]   --->   Operation 395 'xor' 'xor_ln66_13' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 396 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_15)   --->   "%and_ln66_6 = and i32 %e_35, i32 %e_34" [sha256.cpp:66]   --->   Operation 396 'and' 'and_ln66_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 397 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_15)   --->   "%xor_ln66_14 = xor i32 %e_35, i32 4294967295" [sha256.cpp:66]   --->   Operation 397 'xor' 'xor_ln66_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 398 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_15)   --->   "%and_ln66_7 = and i32 %e_33, i32 %xor_ln66_14" [sha256.cpp:66]   --->   Operation 398 'and' 'and_ln66_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 399 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_15 = xor i32 %and_ln66_6, i32 %and_ln66_7" [sha256.cpp:66]   --->   Operation 399 'xor' 'xor_ln66_15' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 400 [1/2] (1.29ns)   --->   "%m_load_3 = load i6 %m_addr_3" [sha256.cpp:66]   --->   Operation 400 'load' 'm_load_3' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_23 : Operation 401 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_12 = add i32 %m_load_3, i32 %xor_ln66_15" [sha256.cpp:66]   --->   Operation 401 'add' 'add_ln66_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 402 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_13 = add i32 %xor_ln66_13, i32 3921009573" [sha256.cpp:66]   --->   Operation 402 'add' 'add_ln66_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 403 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_14 = add i32 %add_ln66_13, i32 %e" [sha256.cpp:66]   --->   Operation 403 'add' 'add_ln66_14' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 404 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_3 = add i32 %add_ln66_14, i32 %add_ln66_12" [sha256.cpp:66]   --->   Operation 404 'add' 't1_3' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 405 [2/2] (1.29ns)   --->   "%m_load_4 = load i6 %m_addr_4" [sha256.cpp:66]   --->   Operation 405 'load' 'm_load_4' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_23 : Operation 406 [2/2] (1.29ns)   --->   "%m_load_5 = load i6 %m_addr_5" [sha256.cpp:66]   --->   Operation 406 'load' 'm_load_5' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 24 <SV = 22> <Delay = 6.49>
ST_24 : Operation 407 [1/1] (0.28ns)   --->   "%and_ln67_5 = and i32 %a_34, i32 %a_33" [sha256.cpp:67]   --->   Operation 407 'and' 'and_ln67_5' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 408 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_11)   --->   "%and_ln67_6 = and i32 %a_34, i32 %a" [sha256.cpp:67]   --->   Operation 408 'and' 'and_ln67_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 409 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_11)   --->   "%xor_ln67_10 = xor i32 %and_ln67_3, i32 %and_ln67_6" [sha256.cpp:67]   --->   Operation 409 'xor' 'xor_ln67_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 410 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_11 = xor i32 %xor_ln67_10, i32 %and_ln67_5" [sha256.cpp:67]   --->   Operation 410 'xor' 'xor_ln67_11' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 411 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_4 = add i32 %xor_ln67_11, i32 %t1_2" [sha256.cpp:75]   --->   Operation 411 'add' 'add_ln75_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 412 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_35 = add i32 %add_ln75_4, i32 %xor_ln67_9" [sha256.cpp:75]   --->   Operation 412 'add' 'a_35' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 413 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_13)   --->   "%lshr_ln67_9 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_35, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 413 'partselect' 'lshr_ln67_9' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 414 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_13)   --->   "%trunc_ln67_9 = trunc i32 %a_35" [sha256.cpp:67]   --->   Operation 414 'trunc' 'trunc_ln67_9' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 415 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_13)   --->   "%or_ln67_9 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_9, i30 %lshr_ln67_9" [sha256.cpp:67]   --->   Operation 415 'bitconcatenate' 'or_ln67_9' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 416 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_13)   --->   "%lshr_ln67_s = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_35, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 416 'partselect' 'lshr_ln67_s' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 417 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_13)   --->   "%trunc_ln67_10 = trunc i32 %a_35" [sha256.cpp:67]   --->   Operation 417 'trunc' 'trunc_ln67_10' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 418 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_13)   --->   "%or_ln67_s = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_10, i19 %lshr_ln67_s" [sha256.cpp:67]   --->   Operation 418 'bitconcatenate' 'or_ln67_s' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 419 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_13)   --->   "%lshr_ln67_10 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_35, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 419 'partselect' 'lshr_ln67_10' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 420 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_13)   --->   "%trunc_ln67_11 = trunc i32 %a_35" [sha256.cpp:67]   --->   Operation 420 'trunc' 'trunc_ln67_11' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 421 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_13)   --->   "%or_ln67_10 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_11, i10 %lshr_ln67_10" [sha256.cpp:67]   --->   Operation 421 'bitconcatenate' 'or_ln67_10' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 422 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_13)   --->   "%xor_ln67_12 = xor i32 %or_ln67_9, i32 %or_ln67_s" [sha256.cpp:67]   --->   Operation 422 'xor' 'xor_ln67_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 423 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_13 = xor i32 %xor_ln67_12, i32 %or_ln67_10" [sha256.cpp:67]   --->   Operation 423 'xor' 'xor_ln67_13' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 424 [1/1] (0.28ns)   --->   "%and_ln67_7 = and i32 %a_35, i32 %a_34" [sha256.cpp:67]   --->   Operation 424 'and' 'and_ln67_7' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 425 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_15)   --->   "%and_ln67_8 = and i32 %a_35, i32 %a_33" [sha256.cpp:67]   --->   Operation 425 'and' 'and_ln67_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 426 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_15)   --->   "%xor_ln67_14 = xor i32 %and_ln67_5, i32 %and_ln67_8" [sha256.cpp:67]   --->   Operation 426 'xor' 'xor_ln67_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 427 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_15 = xor i32 %xor_ln67_14, i32 %and_ln67_7" [sha256.cpp:67]   --->   Operation 427 'xor' 'xor_ln67_15' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 428 [1/1] (1.14ns)   --->   "%e_36 = add i32 %t1_3, i32 %a" [sha256.cpp:71]   --->   Operation 428 'add' 'e_36' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 429 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_6 = add i32 %xor_ln67_15, i32 %t1_3" [sha256.cpp:75]   --->   Operation 429 'add' 'add_ln75_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 430 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_36 = add i32 %add_ln75_6, i32 %xor_ln67_13" [sha256.cpp:75]   --->   Operation 430 'add' 'a_36' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 431 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_17)   --->   "%lshr_ln66_11 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_36, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 431 'partselect' 'lshr_ln66_11' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 432 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_17)   --->   "%trunc_ln66_12 = trunc i32 %e_36" [sha256.cpp:66]   --->   Operation 432 'trunc' 'trunc_ln66_12' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 433 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_17)   --->   "%or_ln66_11 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_12, i26 %lshr_ln66_11" [sha256.cpp:66]   --->   Operation 433 'bitconcatenate' 'or_ln66_11' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 434 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_17)   --->   "%lshr_ln66_12 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_36, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 434 'partselect' 'lshr_ln66_12' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 435 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_17)   --->   "%trunc_ln66_13 = trunc i32 %e_36" [sha256.cpp:66]   --->   Operation 435 'trunc' 'trunc_ln66_13' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 436 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_17)   --->   "%or_ln66_12 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_13, i21 %lshr_ln66_12" [sha256.cpp:66]   --->   Operation 436 'bitconcatenate' 'or_ln66_12' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 437 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_17)   --->   "%lshr_ln66_13 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_36, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 437 'partselect' 'lshr_ln66_13' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 438 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_17)   --->   "%trunc_ln66_14 = trunc i32 %e_36" [sha256.cpp:66]   --->   Operation 438 'trunc' 'trunc_ln66_14' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 439 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_17)   --->   "%or_ln66_13 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_14, i7 %lshr_ln66_13" [sha256.cpp:66]   --->   Operation 439 'bitconcatenate' 'or_ln66_13' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 440 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_17)   --->   "%xor_ln66_16 = xor i32 %or_ln66_11, i32 %or_ln66_12" [sha256.cpp:66]   --->   Operation 440 'xor' 'xor_ln66_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 441 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_17 = xor i32 %xor_ln66_16, i32 %or_ln66_13" [sha256.cpp:66]   --->   Operation 441 'xor' 'xor_ln66_17' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 442 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_19)   --->   "%and_ln66_8 = and i32 %e_36, i32 %e_35" [sha256.cpp:66]   --->   Operation 442 'and' 'and_ln66_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 443 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_19)   --->   "%xor_ln66_18 = xor i32 %e_36, i32 4294967295" [sha256.cpp:66]   --->   Operation 443 'xor' 'xor_ln66_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 444 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_19)   --->   "%and_ln66_9 = and i32 %e_34, i32 %xor_ln66_18" [sha256.cpp:66]   --->   Operation 444 'and' 'and_ln66_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 445 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_19 = xor i32 %and_ln66_8, i32 %and_ln66_9" [sha256.cpp:66]   --->   Operation 445 'xor' 'xor_ln66_19' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 446 [1/2] (1.29ns)   --->   "%m_load_4 = load i6 %m_addr_4" [sha256.cpp:66]   --->   Operation 446 'load' 'm_load_4' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_24 : Operation 447 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_16 = add i32 %m_load_4, i32 %xor_ln66_19" [sha256.cpp:66]   --->   Operation 447 'add' 'add_ln66_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 448 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_17 = add i32 %xor_ln66_17, i32 961987163" [sha256.cpp:66]   --->   Operation 448 'add' 'add_ln66_17' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 449 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_18 = add i32 %add_ln66_17, i32 %e_33" [sha256.cpp:66]   --->   Operation 449 'add' 'add_ln66_18' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 450 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_4 = add i32 %add_ln66_18, i32 %add_ln66_16" [sha256.cpp:66]   --->   Operation 450 'add' 't1_4' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 451 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_17)   --->   "%lshr_ln67_11 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_36, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 451 'partselect' 'lshr_ln67_11' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 452 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_17)   --->   "%trunc_ln67_12 = trunc i32 %a_36" [sha256.cpp:67]   --->   Operation 452 'trunc' 'trunc_ln67_12' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 453 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_17)   --->   "%or_ln67_11 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_12, i30 %lshr_ln67_11" [sha256.cpp:67]   --->   Operation 453 'bitconcatenate' 'or_ln67_11' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 454 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_17)   --->   "%lshr_ln67_12 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_36, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 454 'partselect' 'lshr_ln67_12' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 455 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_17)   --->   "%trunc_ln67_13 = trunc i32 %a_36" [sha256.cpp:67]   --->   Operation 455 'trunc' 'trunc_ln67_13' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 456 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_17)   --->   "%or_ln67_12 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_13, i19 %lshr_ln67_12" [sha256.cpp:67]   --->   Operation 456 'bitconcatenate' 'or_ln67_12' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 457 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_17)   --->   "%lshr_ln67_13 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_36, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 457 'partselect' 'lshr_ln67_13' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 458 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_17)   --->   "%trunc_ln67_14 = trunc i32 %a_36" [sha256.cpp:67]   --->   Operation 458 'trunc' 'trunc_ln67_14' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 459 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_17)   --->   "%or_ln67_13 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_14, i10 %lshr_ln67_13" [sha256.cpp:67]   --->   Operation 459 'bitconcatenate' 'or_ln67_13' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 460 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_17)   --->   "%xor_ln67_16 = xor i32 %or_ln67_11, i32 %or_ln67_12" [sha256.cpp:67]   --->   Operation 460 'xor' 'xor_ln67_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 461 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_17 = xor i32 %xor_ln67_16, i32 %or_ln67_13" [sha256.cpp:67]   --->   Operation 461 'xor' 'xor_ln67_17' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 462 [1/1] (1.14ns)   --->   "%e_37 = add i32 %t1_4, i32 %a_33" [sha256.cpp:71]   --->   Operation 462 'add' 'e_37' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 463 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_21)   --->   "%lshr_ln66_14 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_37, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 463 'partselect' 'lshr_ln66_14' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 464 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_21)   --->   "%trunc_ln66_15 = trunc i32 %e_37" [sha256.cpp:66]   --->   Operation 464 'trunc' 'trunc_ln66_15' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 465 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_21)   --->   "%or_ln66_14 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_15, i26 %lshr_ln66_14" [sha256.cpp:66]   --->   Operation 465 'bitconcatenate' 'or_ln66_14' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 466 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_21)   --->   "%lshr_ln66_15 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_37, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 466 'partselect' 'lshr_ln66_15' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 467 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_21)   --->   "%trunc_ln66_16 = trunc i32 %e_37" [sha256.cpp:66]   --->   Operation 467 'trunc' 'trunc_ln66_16' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 468 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_21)   --->   "%or_ln66_15 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_16, i21 %lshr_ln66_15" [sha256.cpp:66]   --->   Operation 468 'bitconcatenate' 'or_ln66_15' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 469 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_21)   --->   "%lshr_ln66_16 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_37, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 469 'partselect' 'lshr_ln66_16' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 470 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_21)   --->   "%trunc_ln66_17 = trunc i32 %e_37" [sha256.cpp:66]   --->   Operation 470 'trunc' 'trunc_ln66_17' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 471 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_21)   --->   "%or_ln66_16 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_17, i7 %lshr_ln66_16" [sha256.cpp:66]   --->   Operation 471 'bitconcatenate' 'or_ln66_16' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 472 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_21)   --->   "%xor_ln66_20 = xor i32 %or_ln66_14, i32 %or_ln66_15" [sha256.cpp:66]   --->   Operation 472 'xor' 'xor_ln66_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 473 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_21 = xor i32 %xor_ln66_20, i32 %or_ln66_16" [sha256.cpp:66]   --->   Operation 473 'xor' 'xor_ln66_21' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 474 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_23)   --->   "%and_ln66_10 = and i32 %e_37, i32 %e_36" [sha256.cpp:66]   --->   Operation 474 'and' 'and_ln66_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 475 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_23)   --->   "%xor_ln66_22 = xor i32 %e_37, i32 4294967295" [sha256.cpp:66]   --->   Operation 475 'xor' 'xor_ln66_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 476 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_23)   --->   "%and_ln66_11 = and i32 %e_35, i32 %xor_ln66_22" [sha256.cpp:66]   --->   Operation 476 'and' 'and_ln66_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 477 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_23 = xor i32 %and_ln66_10, i32 %and_ln66_11" [sha256.cpp:66]   --->   Operation 477 'xor' 'xor_ln66_23' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 478 [1/2] (1.29ns)   --->   "%m_load_5 = load i6 %m_addr_5" [sha256.cpp:66]   --->   Operation 478 'load' 'm_load_5' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_24 : Operation 479 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_20 = add i32 %m_load_5, i32 %xor_ln66_23" [sha256.cpp:66]   --->   Operation 479 'add' 'add_ln66_20' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 480 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_21 = add i32 %xor_ln66_21, i32 1508970993" [sha256.cpp:66]   --->   Operation 480 'add' 'add_ln66_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 481 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_22 = add i32 %add_ln66_21, i32 %e_34" [sha256.cpp:66]   --->   Operation 481 'add' 'add_ln66_22' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 482 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_5 = add i32 %add_ln66_22, i32 %add_ln66_20" [sha256.cpp:66]   --->   Operation 482 'add' 't1_5' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 483 [2/2] (1.29ns)   --->   "%m_load_6 = load i6 %m_addr_6" [sha256.cpp:66]   --->   Operation 483 'load' 'm_load_6' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_24 : Operation 484 [2/2] (1.29ns)   --->   "%m_load_7 = load i6 %m_addr_7" [sha256.cpp:66]   --->   Operation 484 'load' 'm_load_7' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 25 <SV = 23> <Delay = 6.49>
ST_25 : Operation 485 [1/1] (0.28ns)   --->   "%and_ln67_9 = and i32 %a_36, i32 %a_35" [sha256.cpp:67]   --->   Operation 485 'and' 'and_ln67_9' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 486 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_19)   --->   "%and_ln67_10 = and i32 %a_36, i32 %a_34" [sha256.cpp:67]   --->   Operation 486 'and' 'and_ln67_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 487 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_19)   --->   "%xor_ln67_18 = xor i32 %and_ln67_7, i32 %and_ln67_10" [sha256.cpp:67]   --->   Operation 487 'xor' 'xor_ln67_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 488 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_19 = xor i32 %xor_ln67_18, i32 %and_ln67_9" [sha256.cpp:67]   --->   Operation 488 'xor' 'xor_ln67_19' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 489 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_8 = add i32 %xor_ln67_19, i32 %t1_4" [sha256.cpp:75]   --->   Operation 489 'add' 'add_ln75_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 490 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_37 = add i32 %add_ln75_8, i32 %xor_ln67_17" [sha256.cpp:75]   --->   Operation 490 'add' 'a_37' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 491 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_21)   --->   "%lshr_ln67_14 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_37, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 491 'partselect' 'lshr_ln67_14' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 492 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_21)   --->   "%trunc_ln67_15 = trunc i32 %a_37" [sha256.cpp:67]   --->   Operation 492 'trunc' 'trunc_ln67_15' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 493 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_21)   --->   "%or_ln67_14 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_15, i30 %lshr_ln67_14" [sha256.cpp:67]   --->   Operation 493 'bitconcatenate' 'or_ln67_14' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 494 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_21)   --->   "%lshr_ln67_15 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_37, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 494 'partselect' 'lshr_ln67_15' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 495 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_21)   --->   "%trunc_ln67_16 = trunc i32 %a_37" [sha256.cpp:67]   --->   Operation 495 'trunc' 'trunc_ln67_16' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 496 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_21)   --->   "%or_ln67_15 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_16, i19 %lshr_ln67_15" [sha256.cpp:67]   --->   Operation 496 'bitconcatenate' 'or_ln67_15' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 497 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_21)   --->   "%lshr_ln67_16 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_37, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 497 'partselect' 'lshr_ln67_16' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 498 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_21)   --->   "%trunc_ln67_17 = trunc i32 %a_37" [sha256.cpp:67]   --->   Operation 498 'trunc' 'trunc_ln67_17' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 499 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_21)   --->   "%or_ln67_16 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_17, i10 %lshr_ln67_16" [sha256.cpp:67]   --->   Operation 499 'bitconcatenate' 'or_ln67_16' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 500 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_21)   --->   "%xor_ln67_20 = xor i32 %or_ln67_14, i32 %or_ln67_15" [sha256.cpp:67]   --->   Operation 500 'xor' 'xor_ln67_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 501 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_21 = xor i32 %xor_ln67_20, i32 %or_ln67_16" [sha256.cpp:67]   --->   Operation 501 'xor' 'xor_ln67_21' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 502 [1/1] (0.28ns)   --->   "%and_ln67_11 = and i32 %a_37, i32 %a_36" [sha256.cpp:67]   --->   Operation 502 'and' 'and_ln67_11' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 503 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_23)   --->   "%and_ln67_12 = and i32 %a_37, i32 %a_35" [sha256.cpp:67]   --->   Operation 503 'and' 'and_ln67_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 504 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_23)   --->   "%xor_ln67_22 = xor i32 %and_ln67_9, i32 %and_ln67_12" [sha256.cpp:67]   --->   Operation 504 'xor' 'xor_ln67_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 505 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_23 = xor i32 %xor_ln67_22, i32 %and_ln67_11" [sha256.cpp:67]   --->   Operation 505 'xor' 'xor_ln67_23' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 506 [1/1] (1.14ns)   --->   "%e_38 = add i32 %t1_5, i32 %a_34" [sha256.cpp:71]   --->   Operation 506 'add' 'e_38' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 507 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_10 = add i32 %xor_ln67_23, i32 %t1_5" [sha256.cpp:75]   --->   Operation 507 'add' 'add_ln75_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 508 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_38 = add i32 %add_ln75_10, i32 %xor_ln67_21" [sha256.cpp:75]   --->   Operation 508 'add' 'a_38' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 509 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_25)   --->   "%lshr_ln66_17 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_38, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 509 'partselect' 'lshr_ln66_17' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 510 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_25)   --->   "%trunc_ln66_18 = trunc i32 %e_38" [sha256.cpp:66]   --->   Operation 510 'trunc' 'trunc_ln66_18' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 511 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_25)   --->   "%or_ln66_17 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_18, i26 %lshr_ln66_17" [sha256.cpp:66]   --->   Operation 511 'bitconcatenate' 'or_ln66_17' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 512 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_25)   --->   "%lshr_ln66_18 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_38, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 512 'partselect' 'lshr_ln66_18' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 513 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_25)   --->   "%trunc_ln66_19 = trunc i32 %e_38" [sha256.cpp:66]   --->   Operation 513 'trunc' 'trunc_ln66_19' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 514 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_25)   --->   "%or_ln66_18 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_19, i21 %lshr_ln66_18" [sha256.cpp:66]   --->   Operation 514 'bitconcatenate' 'or_ln66_18' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 515 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_25)   --->   "%lshr_ln66_19 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_38, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 515 'partselect' 'lshr_ln66_19' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 516 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_25)   --->   "%trunc_ln66_20 = trunc i32 %e_38" [sha256.cpp:66]   --->   Operation 516 'trunc' 'trunc_ln66_20' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 517 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_25)   --->   "%or_ln66_19 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_20, i7 %lshr_ln66_19" [sha256.cpp:66]   --->   Operation 517 'bitconcatenate' 'or_ln66_19' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 518 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_25)   --->   "%xor_ln66_24 = xor i32 %or_ln66_17, i32 %or_ln66_18" [sha256.cpp:66]   --->   Operation 518 'xor' 'xor_ln66_24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 519 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_25 = xor i32 %xor_ln66_24, i32 %or_ln66_19" [sha256.cpp:66]   --->   Operation 519 'xor' 'xor_ln66_25' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 520 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_27)   --->   "%and_ln66_12 = and i32 %e_38, i32 %e_37" [sha256.cpp:66]   --->   Operation 520 'and' 'and_ln66_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 521 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_27)   --->   "%xor_ln66_26 = xor i32 %e_38, i32 4294967295" [sha256.cpp:66]   --->   Operation 521 'xor' 'xor_ln66_26' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 522 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_27)   --->   "%and_ln66_13 = and i32 %e_36, i32 %xor_ln66_26" [sha256.cpp:66]   --->   Operation 522 'and' 'and_ln66_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 523 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_27 = xor i32 %and_ln66_12, i32 %and_ln66_13" [sha256.cpp:66]   --->   Operation 523 'xor' 'xor_ln66_27' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 524 [1/2] (1.29ns)   --->   "%m_load_6 = load i6 %m_addr_6" [sha256.cpp:66]   --->   Operation 524 'load' 'm_load_6' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_25 : Operation 525 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_24 = add i32 %m_load_6, i32 %e_35" [sha256.cpp:66]   --->   Operation 525 'add' 'add_ln66_24' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 526 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_25 = add i32 %xor_ln66_25, i32 2453635748" [sha256.cpp:66]   --->   Operation 526 'add' 'add_ln66_25' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 527 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_26 = add i32 %add_ln66_25, i32 %xor_ln66_27" [sha256.cpp:66]   --->   Operation 527 'add' 'add_ln66_26' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 528 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_6 = add i32 %add_ln66_26, i32 %add_ln66_24" [sha256.cpp:66]   --->   Operation 528 'add' 't1_6' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 529 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_25)   --->   "%lshr_ln67_17 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_38, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 529 'partselect' 'lshr_ln67_17' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 530 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_25)   --->   "%trunc_ln67_18 = trunc i32 %a_38" [sha256.cpp:67]   --->   Operation 530 'trunc' 'trunc_ln67_18' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 531 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_25)   --->   "%or_ln67_17 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_18, i30 %lshr_ln67_17" [sha256.cpp:67]   --->   Operation 531 'bitconcatenate' 'or_ln67_17' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 532 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_25)   --->   "%lshr_ln67_18 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_38, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 532 'partselect' 'lshr_ln67_18' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 533 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_25)   --->   "%trunc_ln67_19 = trunc i32 %a_38" [sha256.cpp:67]   --->   Operation 533 'trunc' 'trunc_ln67_19' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 534 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_25)   --->   "%or_ln67_18 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_19, i19 %lshr_ln67_18" [sha256.cpp:67]   --->   Operation 534 'bitconcatenate' 'or_ln67_18' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 535 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_25)   --->   "%lshr_ln67_19 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_38, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 535 'partselect' 'lshr_ln67_19' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 536 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_25)   --->   "%trunc_ln67_20 = trunc i32 %a_38" [sha256.cpp:67]   --->   Operation 536 'trunc' 'trunc_ln67_20' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 537 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_25)   --->   "%or_ln67_19 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_20, i10 %lshr_ln67_19" [sha256.cpp:67]   --->   Operation 537 'bitconcatenate' 'or_ln67_19' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 538 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_25)   --->   "%xor_ln67_24 = xor i32 %or_ln67_17, i32 %or_ln67_18" [sha256.cpp:67]   --->   Operation 538 'xor' 'xor_ln67_24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 539 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_25 = xor i32 %xor_ln67_24, i32 %or_ln67_19" [sha256.cpp:67]   --->   Operation 539 'xor' 'xor_ln67_25' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 540 [1/1] (1.14ns)   --->   "%e_39 = add i32 %t1_6, i32 %a_35" [sha256.cpp:71]   --->   Operation 540 'add' 'e_39' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 541 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_29)   --->   "%lshr_ln66_20 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_39, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 541 'partselect' 'lshr_ln66_20' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 542 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_29)   --->   "%trunc_ln66_21 = trunc i32 %e_39" [sha256.cpp:66]   --->   Operation 542 'trunc' 'trunc_ln66_21' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 543 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_29)   --->   "%or_ln66_20 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_21, i26 %lshr_ln66_20" [sha256.cpp:66]   --->   Operation 543 'bitconcatenate' 'or_ln66_20' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 544 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_29)   --->   "%lshr_ln66_21 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_39, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 544 'partselect' 'lshr_ln66_21' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 545 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_29)   --->   "%trunc_ln66_22 = trunc i32 %e_39" [sha256.cpp:66]   --->   Operation 545 'trunc' 'trunc_ln66_22' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 546 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_29)   --->   "%or_ln66_21 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_22, i21 %lshr_ln66_21" [sha256.cpp:66]   --->   Operation 546 'bitconcatenate' 'or_ln66_21' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 547 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_29)   --->   "%lshr_ln66_22 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_39, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 547 'partselect' 'lshr_ln66_22' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 548 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_29)   --->   "%trunc_ln66_23 = trunc i32 %e_39" [sha256.cpp:66]   --->   Operation 548 'trunc' 'trunc_ln66_23' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 549 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_29)   --->   "%or_ln66_22 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_23, i7 %lshr_ln66_22" [sha256.cpp:66]   --->   Operation 549 'bitconcatenate' 'or_ln66_22' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 550 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_29)   --->   "%xor_ln66_28 = xor i32 %or_ln66_20, i32 %or_ln66_21" [sha256.cpp:66]   --->   Operation 550 'xor' 'xor_ln66_28' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 551 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_29 = xor i32 %xor_ln66_28, i32 %or_ln66_22" [sha256.cpp:66]   --->   Operation 551 'xor' 'xor_ln66_29' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 552 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_31)   --->   "%and_ln66_14 = and i32 %e_39, i32 %e_38" [sha256.cpp:66]   --->   Operation 552 'and' 'and_ln66_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 553 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_31)   --->   "%xor_ln66_30 = xor i32 %e_39, i32 4294967295" [sha256.cpp:66]   --->   Operation 553 'xor' 'xor_ln66_30' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 554 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_31)   --->   "%and_ln66_15 = and i32 %e_37, i32 %xor_ln66_30" [sha256.cpp:66]   --->   Operation 554 'and' 'and_ln66_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 555 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_31 = xor i32 %and_ln66_14, i32 %and_ln66_15" [sha256.cpp:66]   --->   Operation 555 'xor' 'xor_ln66_31' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 556 [1/2] (1.29ns)   --->   "%m_load_7 = load i6 %m_addr_7" [sha256.cpp:66]   --->   Operation 556 'load' 'm_load_7' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_25 : Operation 557 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_28 = add i32 %m_load_7, i32 %e_36" [sha256.cpp:66]   --->   Operation 557 'add' 'add_ln66_28' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 558 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_29 = add i32 %xor_ln66_29, i32 2870763221" [sha256.cpp:66]   --->   Operation 558 'add' 'add_ln66_29' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 559 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_30 = add i32 %add_ln66_29, i32 %xor_ln66_31" [sha256.cpp:66]   --->   Operation 559 'add' 'add_ln66_30' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 560 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_7 = add i32 %add_ln66_30, i32 %add_ln66_28" [sha256.cpp:66]   --->   Operation 560 'add' 't1_7' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 561 [2/2] (1.29ns)   --->   "%m_load_8 = load i6 %m_addr_8" [sha256.cpp:66]   --->   Operation 561 'load' 'm_load_8' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_25 : Operation 562 [2/2] (1.29ns)   --->   "%m_load_9 = load i6 %m_addr_9" [sha256.cpp:66]   --->   Operation 562 'load' 'm_load_9' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 26 <SV = 24> <Delay = 6.49>
ST_26 : Operation 563 [1/1] (0.28ns)   --->   "%and_ln67_13 = and i32 %a_38, i32 %a_37" [sha256.cpp:67]   --->   Operation 563 'and' 'and_ln67_13' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 564 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_27)   --->   "%and_ln67_14 = and i32 %a_38, i32 %a_36" [sha256.cpp:67]   --->   Operation 564 'and' 'and_ln67_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 565 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_27)   --->   "%xor_ln67_26 = xor i32 %and_ln67_11, i32 %and_ln67_14" [sha256.cpp:67]   --->   Operation 565 'xor' 'xor_ln67_26' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 566 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_27 = xor i32 %xor_ln67_26, i32 %and_ln67_13" [sha256.cpp:67]   --->   Operation 566 'xor' 'xor_ln67_27' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 567 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_12 = add i32 %xor_ln67_27, i32 %t1_6" [sha256.cpp:75]   --->   Operation 567 'add' 'add_ln75_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 568 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_39 = add i32 %add_ln75_12, i32 %xor_ln67_25" [sha256.cpp:75]   --->   Operation 568 'add' 'a_39' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 569 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_29)   --->   "%lshr_ln67_20 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_39, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 569 'partselect' 'lshr_ln67_20' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 570 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_29)   --->   "%trunc_ln67_21 = trunc i32 %a_39" [sha256.cpp:67]   --->   Operation 570 'trunc' 'trunc_ln67_21' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 571 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_29)   --->   "%or_ln67_20 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_21, i30 %lshr_ln67_20" [sha256.cpp:67]   --->   Operation 571 'bitconcatenate' 'or_ln67_20' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 572 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_29)   --->   "%lshr_ln67_21 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_39, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 572 'partselect' 'lshr_ln67_21' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 573 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_29)   --->   "%trunc_ln67_22 = trunc i32 %a_39" [sha256.cpp:67]   --->   Operation 573 'trunc' 'trunc_ln67_22' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 574 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_29)   --->   "%or_ln67_21 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_22, i19 %lshr_ln67_21" [sha256.cpp:67]   --->   Operation 574 'bitconcatenate' 'or_ln67_21' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 575 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_29)   --->   "%lshr_ln67_22 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_39, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 575 'partselect' 'lshr_ln67_22' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 576 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_29)   --->   "%trunc_ln67_23 = trunc i32 %a_39" [sha256.cpp:67]   --->   Operation 576 'trunc' 'trunc_ln67_23' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 577 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_29)   --->   "%or_ln67_22 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_23, i10 %lshr_ln67_22" [sha256.cpp:67]   --->   Operation 577 'bitconcatenate' 'or_ln67_22' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 578 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_29)   --->   "%xor_ln67_28 = xor i32 %or_ln67_20, i32 %or_ln67_21" [sha256.cpp:67]   --->   Operation 578 'xor' 'xor_ln67_28' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 579 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_29 = xor i32 %xor_ln67_28, i32 %or_ln67_22" [sha256.cpp:67]   --->   Operation 579 'xor' 'xor_ln67_29' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 580 [1/1] (0.28ns)   --->   "%and_ln67_15 = and i32 %a_39, i32 %a_38" [sha256.cpp:67]   --->   Operation 580 'and' 'and_ln67_15' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 581 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_31)   --->   "%and_ln67_16 = and i32 %a_39, i32 %a_37" [sha256.cpp:67]   --->   Operation 581 'and' 'and_ln67_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 582 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_31)   --->   "%xor_ln67_30 = xor i32 %and_ln67_13, i32 %and_ln67_16" [sha256.cpp:67]   --->   Operation 582 'xor' 'xor_ln67_30' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 583 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_31 = xor i32 %xor_ln67_30, i32 %and_ln67_15" [sha256.cpp:67]   --->   Operation 583 'xor' 'xor_ln67_31' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 584 [1/1] (1.14ns)   --->   "%e_40 = add i32 %t1_7, i32 %a_36" [sha256.cpp:71]   --->   Operation 584 'add' 'e_40' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 585 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_14 = add i32 %xor_ln67_31, i32 %t1_7" [sha256.cpp:75]   --->   Operation 585 'add' 'add_ln75_14' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 586 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_40 = add i32 %add_ln75_14, i32 %xor_ln67_29" [sha256.cpp:75]   --->   Operation 586 'add' 'a_40' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 587 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_33)   --->   "%lshr_ln66_23 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_40, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 587 'partselect' 'lshr_ln66_23' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 588 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_33)   --->   "%trunc_ln66_24 = trunc i32 %e_40" [sha256.cpp:66]   --->   Operation 588 'trunc' 'trunc_ln66_24' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 589 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_33)   --->   "%or_ln66_23 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_24, i26 %lshr_ln66_23" [sha256.cpp:66]   --->   Operation 589 'bitconcatenate' 'or_ln66_23' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 590 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_33)   --->   "%lshr_ln66_24 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_40, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 590 'partselect' 'lshr_ln66_24' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 591 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_33)   --->   "%trunc_ln66_25 = trunc i32 %e_40" [sha256.cpp:66]   --->   Operation 591 'trunc' 'trunc_ln66_25' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 592 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_33)   --->   "%or_ln66_24 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_25, i21 %lshr_ln66_24" [sha256.cpp:66]   --->   Operation 592 'bitconcatenate' 'or_ln66_24' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 593 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_33)   --->   "%lshr_ln66_25 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_40, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 593 'partselect' 'lshr_ln66_25' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 594 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_33)   --->   "%trunc_ln66_26 = trunc i32 %e_40" [sha256.cpp:66]   --->   Operation 594 'trunc' 'trunc_ln66_26' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 595 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_33)   --->   "%or_ln66_25 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_26, i7 %lshr_ln66_25" [sha256.cpp:66]   --->   Operation 595 'bitconcatenate' 'or_ln66_25' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 596 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_33)   --->   "%xor_ln66_32 = xor i32 %or_ln66_23, i32 %or_ln66_24" [sha256.cpp:66]   --->   Operation 596 'xor' 'xor_ln66_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 597 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_33 = xor i32 %xor_ln66_32, i32 %or_ln66_25" [sha256.cpp:66]   --->   Operation 597 'xor' 'xor_ln66_33' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 598 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_35)   --->   "%and_ln66_16 = and i32 %e_40, i32 %e_39" [sha256.cpp:66]   --->   Operation 598 'and' 'and_ln66_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 599 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_35)   --->   "%xor_ln66_34 = xor i32 %e_40, i32 4294967295" [sha256.cpp:66]   --->   Operation 599 'xor' 'xor_ln66_34' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 600 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_35)   --->   "%and_ln66_17 = and i32 %e_38, i32 %xor_ln66_34" [sha256.cpp:66]   --->   Operation 600 'and' 'and_ln66_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 601 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_35 = xor i32 %and_ln66_16, i32 %and_ln66_17" [sha256.cpp:66]   --->   Operation 601 'xor' 'xor_ln66_35' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 602 [1/2] (1.29ns)   --->   "%m_load_8 = load i6 %m_addr_8" [sha256.cpp:66]   --->   Operation 602 'load' 'm_load_8' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_26 : Operation 603 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_32 = add i32 %m_load_8, i32 %xor_ln66_35" [sha256.cpp:66]   --->   Operation 603 'add' 'add_ln66_32' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 604 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_33 = add i32 %xor_ln66_33, i32 3624381080" [sha256.cpp:66]   --->   Operation 604 'add' 'add_ln66_33' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 605 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_34 = add i32 %add_ln66_33, i32 %e_37" [sha256.cpp:66]   --->   Operation 605 'add' 'add_ln66_34' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 606 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_8 = add i32 %add_ln66_34, i32 %add_ln66_32" [sha256.cpp:66]   --->   Operation 606 'add' 't1_8' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 607 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_33)   --->   "%lshr_ln67_23 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_40, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 607 'partselect' 'lshr_ln67_23' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 608 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_33)   --->   "%trunc_ln67_24 = trunc i32 %a_40" [sha256.cpp:67]   --->   Operation 608 'trunc' 'trunc_ln67_24' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 609 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_33)   --->   "%or_ln67_23 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_24, i30 %lshr_ln67_23" [sha256.cpp:67]   --->   Operation 609 'bitconcatenate' 'or_ln67_23' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 610 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_33)   --->   "%lshr_ln67_24 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_40, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 610 'partselect' 'lshr_ln67_24' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 611 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_33)   --->   "%trunc_ln67_25 = trunc i32 %a_40" [sha256.cpp:67]   --->   Operation 611 'trunc' 'trunc_ln67_25' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 612 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_33)   --->   "%or_ln67_24 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_25, i19 %lshr_ln67_24" [sha256.cpp:67]   --->   Operation 612 'bitconcatenate' 'or_ln67_24' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 613 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_33)   --->   "%lshr_ln67_25 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_40, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 613 'partselect' 'lshr_ln67_25' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 614 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_33)   --->   "%trunc_ln67_26 = trunc i32 %a_40" [sha256.cpp:67]   --->   Operation 614 'trunc' 'trunc_ln67_26' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 615 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_33)   --->   "%or_ln67_25 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_26, i10 %lshr_ln67_25" [sha256.cpp:67]   --->   Operation 615 'bitconcatenate' 'or_ln67_25' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 616 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_33)   --->   "%xor_ln67_32 = xor i32 %or_ln67_23, i32 %or_ln67_24" [sha256.cpp:67]   --->   Operation 616 'xor' 'xor_ln67_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 617 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_33 = xor i32 %xor_ln67_32, i32 %or_ln67_25" [sha256.cpp:67]   --->   Operation 617 'xor' 'xor_ln67_33' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 618 [1/1] (1.14ns)   --->   "%e_41 = add i32 %t1_8, i32 %a_37" [sha256.cpp:71]   --->   Operation 618 'add' 'e_41' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 619 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_37)   --->   "%lshr_ln66_26 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_41, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 619 'partselect' 'lshr_ln66_26' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 620 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_37)   --->   "%trunc_ln66_27 = trunc i32 %e_41" [sha256.cpp:66]   --->   Operation 620 'trunc' 'trunc_ln66_27' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 621 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_37)   --->   "%or_ln66_26 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_27, i26 %lshr_ln66_26" [sha256.cpp:66]   --->   Operation 621 'bitconcatenate' 'or_ln66_26' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 622 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_37)   --->   "%lshr_ln66_27 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_41, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 622 'partselect' 'lshr_ln66_27' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 623 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_37)   --->   "%trunc_ln66_28 = trunc i32 %e_41" [sha256.cpp:66]   --->   Operation 623 'trunc' 'trunc_ln66_28' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 624 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_37)   --->   "%or_ln66_27 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_28, i21 %lshr_ln66_27" [sha256.cpp:66]   --->   Operation 624 'bitconcatenate' 'or_ln66_27' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 625 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_37)   --->   "%lshr_ln66_28 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_41, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 625 'partselect' 'lshr_ln66_28' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 626 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_37)   --->   "%trunc_ln66_29 = trunc i32 %e_41" [sha256.cpp:66]   --->   Operation 626 'trunc' 'trunc_ln66_29' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 627 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_37)   --->   "%or_ln66_28 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_29, i7 %lshr_ln66_28" [sha256.cpp:66]   --->   Operation 627 'bitconcatenate' 'or_ln66_28' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 628 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_37)   --->   "%xor_ln66_36 = xor i32 %or_ln66_26, i32 %or_ln66_27" [sha256.cpp:66]   --->   Operation 628 'xor' 'xor_ln66_36' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 629 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_37 = xor i32 %xor_ln66_36, i32 %or_ln66_28" [sha256.cpp:66]   --->   Operation 629 'xor' 'xor_ln66_37' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 630 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_39)   --->   "%and_ln66_18 = and i32 %e_41, i32 %e_40" [sha256.cpp:66]   --->   Operation 630 'and' 'and_ln66_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 631 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_39)   --->   "%xor_ln66_38 = xor i32 %e_41, i32 4294967295" [sha256.cpp:66]   --->   Operation 631 'xor' 'xor_ln66_38' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 632 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_39)   --->   "%and_ln66_19 = and i32 %e_39, i32 %xor_ln66_38" [sha256.cpp:66]   --->   Operation 632 'and' 'and_ln66_19' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 633 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_39 = xor i32 %and_ln66_18, i32 %and_ln66_19" [sha256.cpp:66]   --->   Operation 633 'xor' 'xor_ln66_39' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 634 [1/2] (1.29ns)   --->   "%m_load_9 = load i6 %m_addr_9" [sha256.cpp:66]   --->   Operation 634 'load' 'm_load_9' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_26 : Operation 635 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_36 = add i32 %m_load_9, i32 %xor_ln66_39" [sha256.cpp:66]   --->   Operation 635 'add' 'add_ln66_36' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 636 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_37 = add i32 %xor_ln66_37, i32 310598401" [sha256.cpp:66]   --->   Operation 636 'add' 'add_ln66_37' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 637 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_38 = add i32 %add_ln66_37, i32 %e_38" [sha256.cpp:66]   --->   Operation 637 'add' 'add_ln66_38' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 638 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_9 = add i32 %add_ln66_38, i32 %add_ln66_36" [sha256.cpp:66]   --->   Operation 638 'add' 't1_9' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 639 [2/2] (1.29ns)   --->   "%m_load_10 = load i6 %m_addr_10" [sha256.cpp:66]   --->   Operation 639 'load' 'm_load_10' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_26 : Operation 640 [2/2] (1.29ns)   --->   "%m_load_11 = load i6 %m_addr_11" [sha256.cpp:66]   --->   Operation 640 'load' 'm_load_11' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 27 <SV = 25> <Delay = 6.49>
ST_27 : Operation 641 [1/1] (0.28ns)   --->   "%and_ln67_17 = and i32 %a_40, i32 %a_39" [sha256.cpp:67]   --->   Operation 641 'and' 'and_ln67_17' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 642 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_35)   --->   "%and_ln67_18 = and i32 %a_40, i32 %a_38" [sha256.cpp:67]   --->   Operation 642 'and' 'and_ln67_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 643 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_35)   --->   "%xor_ln67_34 = xor i32 %and_ln67_15, i32 %and_ln67_18" [sha256.cpp:67]   --->   Operation 643 'xor' 'xor_ln67_34' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 644 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_35 = xor i32 %xor_ln67_34, i32 %and_ln67_17" [sha256.cpp:67]   --->   Operation 644 'xor' 'xor_ln67_35' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 645 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_16 = add i32 %xor_ln67_35, i32 %t1_8" [sha256.cpp:75]   --->   Operation 645 'add' 'add_ln75_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 646 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_41 = add i32 %add_ln75_16, i32 %xor_ln67_33" [sha256.cpp:75]   --->   Operation 646 'add' 'a_41' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 647 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_37)   --->   "%lshr_ln67_26 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_41, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 647 'partselect' 'lshr_ln67_26' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 648 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_37)   --->   "%trunc_ln67_27 = trunc i32 %a_41" [sha256.cpp:67]   --->   Operation 648 'trunc' 'trunc_ln67_27' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 649 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_37)   --->   "%or_ln67_26 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_27, i30 %lshr_ln67_26" [sha256.cpp:67]   --->   Operation 649 'bitconcatenate' 'or_ln67_26' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 650 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_37)   --->   "%lshr_ln67_27 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_41, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 650 'partselect' 'lshr_ln67_27' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 651 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_37)   --->   "%trunc_ln67_28 = trunc i32 %a_41" [sha256.cpp:67]   --->   Operation 651 'trunc' 'trunc_ln67_28' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 652 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_37)   --->   "%or_ln67_27 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_28, i19 %lshr_ln67_27" [sha256.cpp:67]   --->   Operation 652 'bitconcatenate' 'or_ln67_27' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 653 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_37)   --->   "%lshr_ln67_28 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_41, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 653 'partselect' 'lshr_ln67_28' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 654 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_37)   --->   "%trunc_ln67_29 = trunc i32 %a_41" [sha256.cpp:67]   --->   Operation 654 'trunc' 'trunc_ln67_29' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 655 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_37)   --->   "%or_ln67_28 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_29, i10 %lshr_ln67_28" [sha256.cpp:67]   --->   Operation 655 'bitconcatenate' 'or_ln67_28' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 656 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_37)   --->   "%xor_ln67_36 = xor i32 %or_ln67_26, i32 %or_ln67_27" [sha256.cpp:67]   --->   Operation 656 'xor' 'xor_ln67_36' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 657 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_37 = xor i32 %xor_ln67_36, i32 %or_ln67_28" [sha256.cpp:67]   --->   Operation 657 'xor' 'xor_ln67_37' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 658 [1/1] (0.28ns)   --->   "%and_ln67_19 = and i32 %a_41, i32 %a_40" [sha256.cpp:67]   --->   Operation 658 'and' 'and_ln67_19' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 659 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_39)   --->   "%and_ln67_20 = and i32 %a_41, i32 %a_39" [sha256.cpp:67]   --->   Operation 659 'and' 'and_ln67_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 660 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_39)   --->   "%xor_ln67_38 = xor i32 %and_ln67_17, i32 %and_ln67_20" [sha256.cpp:67]   --->   Operation 660 'xor' 'xor_ln67_38' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 661 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_39 = xor i32 %xor_ln67_38, i32 %and_ln67_19" [sha256.cpp:67]   --->   Operation 661 'xor' 'xor_ln67_39' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 662 [1/1] (1.14ns)   --->   "%e_42 = add i32 %t1_9, i32 %a_38" [sha256.cpp:71]   --->   Operation 662 'add' 'e_42' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 663 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_18 = add i32 %xor_ln67_39, i32 %t1_9" [sha256.cpp:75]   --->   Operation 663 'add' 'add_ln75_18' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 664 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_42 = add i32 %add_ln75_18, i32 %xor_ln67_37" [sha256.cpp:75]   --->   Operation 664 'add' 'a_42' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 665 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_41)   --->   "%lshr_ln66_29 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_42, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 665 'partselect' 'lshr_ln66_29' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 666 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_41)   --->   "%trunc_ln66_30 = trunc i32 %e_42" [sha256.cpp:66]   --->   Operation 666 'trunc' 'trunc_ln66_30' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 667 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_41)   --->   "%or_ln66_29 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_30, i26 %lshr_ln66_29" [sha256.cpp:66]   --->   Operation 667 'bitconcatenate' 'or_ln66_29' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 668 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_41)   --->   "%lshr_ln66_30 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_42, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 668 'partselect' 'lshr_ln66_30' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 669 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_41)   --->   "%trunc_ln66_31 = trunc i32 %e_42" [sha256.cpp:66]   --->   Operation 669 'trunc' 'trunc_ln66_31' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 670 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_41)   --->   "%or_ln66_30 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_31, i21 %lshr_ln66_30" [sha256.cpp:66]   --->   Operation 670 'bitconcatenate' 'or_ln66_30' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 671 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_41)   --->   "%lshr_ln66_31 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_42, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 671 'partselect' 'lshr_ln66_31' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 672 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_41)   --->   "%trunc_ln66_32 = trunc i32 %e_42" [sha256.cpp:66]   --->   Operation 672 'trunc' 'trunc_ln66_32' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 673 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_41)   --->   "%or_ln66_31 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_32, i7 %lshr_ln66_31" [sha256.cpp:66]   --->   Operation 673 'bitconcatenate' 'or_ln66_31' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 674 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_41)   --->   "%xor_ln66_40 = xor i32 %or_ln66_29, i32 %or_ln66_30" [sha256.cpp:66]   --->   Operation 674 'xor' 'xor_ln66_40' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 675 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_41 = xor i32 %xor_ln66_40, i32 %or_ln66_31" [sha256.cpp:66]   --->   Operation 675 'xor' 'xor_ln66_41' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 676 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_43)   --->   "%and_ln66_20 = and i32 %e_42, i32 %e_41" [sha256.cpp:66]   --->   Operation 676 'and' 'and_ln66_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 677 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_43)   --->   "%xor_ln66_42 = xor i32 %e_42, i32 4294967295" [sha256.cpp:66]   --->   Operation 677 'xor' 'xor_ln66_42' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 678 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_43)   --->   "%and_ln66_21 = and i32 %e_40, i32 %xor_ln66_42" [sha256.cpp:66]   --->   Operation 678 'and' 'and_ln66_21' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 679 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_43 = xor i32 %and_ln66_20, i32 %and_ln66_21" [sha256.cpp:66]   --->   Operation 679 'xor' 'xor_ln66_43' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 680 [1/2] (1.29ns)   --->   "%m_load_10 = load i6 %m_addr_10" [sha256.cpp:66]   --->   Operation 680 'load' 'm_load_10' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_27 : Operation 681 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_40 = add i32 %m_load_10, i32 %xor_ln66_43" [sha256.cpp:66]   --->   Operation 681 'add' 'add_ln66_40' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 682 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_41 = add i32 %xor_ln66_41, i32 607225278" [sha256.cpp:66]   --->   Operation 682 'add' 'add_ln66_41' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 683 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_42 = add i32 %add_ln66_41, i32 %e_39" [sha256.cpp:66]   --->   Operation 683 'add' 'add_ln66_42' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 684 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_10 = add i32 %add_ln66_42, i32 %add_ln66_40" [sha256.cpp:66]   --->   Operation 684 'add' 't1_10' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 685 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_41)   --->   "%lshr_ln67_29 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_42, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 685 'partselect' 'lshr_ln67_29' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 686 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_41)   --->   "%trunc_ln67_30 = trunc i32 %a_42" [sha256.cpp:67]   --->   Operation 686 'trunc' 'trunc_ln67_30' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 687 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_41)   --->   "%or_ln67_29 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_30, i30 %lshr_ln67_29" [sha256.cpp:67]   --->   Operation 687 'bitconcatenate' 'or_ln67_29' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 688 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_41)   --->   "%lshr_ln67_30 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_42, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 688 'partselect' 'lshr_ln67_30' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 689 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_41)   --->   "%trunc_ln67_31 = trunc i32 %a_42" [sha256.cpp:67]   --->   Operation 689 'trunc' 'trunc_ln67_31' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 690 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_41)   --->   "%or_ln67_30 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_31, i19 %lshr_ln67_30" [sha256.cpp:67]   --->   Operation 690 'bitconcatenate' 'or_ln67_30' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 691 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_41)   --->   "%lshr_ln67_31 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_42, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 691 'partselect' 'lshr_ln67_31' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 692 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_41)   --->   "%trunc_ln67_32 = trunc i32 %a_42" [sha256.cpp:67]   --->   Operation 692 'trunc' 'trunc_ln67_32' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 693 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_41)   --->   "%or_ln67_31 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_32, i10 %lshr_ln67_31" [sha256.cpp:67]   --->   Operation 693 'bitconcatenate' 'or_ln67_31' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 694 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_41)   --->   "%xor_ln67_40 = xor i32 %or_ln67_29, i32 %or_ln67_30" [sha256.cpp:67]   --->   Operation 694 'xor' 'xor_ln67_40' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 695 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_41 = xor i32 %xor_ln67_40, i32 %or_ln67_31" [sha256.cpp:67]   --->   Operation 695 'xor' 'xor_ln67_41' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 696 [1/1] (0.28ns)   --->   "%and_ln67_21 = and i32 %a_42, i32 %a_41" [sha256.cpp:67]   --->   Operation 696 'and' 'and_ln67_21' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 697 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_43)   --->   "%and_ln67_22 = and i32 %a_42, i32 %a_40" [sha256.cpp:67]   --->   Operation 697 'and' 'and_ln67_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 698 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_43)   --->   "%xor_ln67_42 = xor i32 %and_ln67_19, i32 %and_ln67_22" [sha256.cpp:67]   --->   Operation 698 'xor' 'xor_ln67_42' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 699 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_43 = xor i32 %xor_ln67_42, i32 %and_ln67_21" [sha256.cpp:67]   --->   Operation 699 'xor' 'xor_ln67_43' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 700 [1/1] (1.14ns)   --->   "%e_43 = add i32 %t1_10, i32 %a_39" [sha256.cpp:71]   --->   Operation 700 'add' 'e_43' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 701 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_20 = add i32 %xor_ln67_43, i32 %t1_10" [sha256.cpp:75]   --->   Operation 701 'add' 'add_ln75_20' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 702 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_43 = add i32 %add_ln75_20, i32 %xor_ln67_41" [sha256.cpp:75]   --->   Operation 702 'add' 'a_43' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 703 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_45)   --->   "%lshr_ln66_32 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_43, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 703 'partselect' 'lshr_ln66_32' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 704 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_45)   --->   "%trunc_ln66_33 = trunc i32 %e_43" [sha256.cpp:66]   --->   Operation 704 'trunc' 'trunc_ln66_33' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 705 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_45)   --->   "%or_ln66_32 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_33, i26 %lshr_ln66_32" [sha256.cpp:66]   --->   Operation 705 'bitconcatenate' 'or_ln66_32' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 706 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_45)   --->   "%lshr_ln66_33 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_43, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 706 'partselect' 'lshr_ln66_33' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 707 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_45)   --->   "%trunc_ln66_34 = trunc i32 %e_43" [sha256.cpp:66]   --->   Operation 707 'trunc' 'trunc_ln66_34' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 708 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_45)   --->   "%or_ln66_33 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_34, i21 %lshr_ln66_33" [sha256.cpp:66]   --->   Operation 708 'bitconcatenate' 'or_ln66_33' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 709 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_45)   --->   "%lshr_ln66_34 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_43, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 709 'partselect' 'lshr_ln66_34' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 710 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_45)   --->   "%trunc_ln66_35 = trunc i32 %e_43" [sha256.cpp:66]   --->   Operation 710 'trunc' 'trunc_ln66_35' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 711 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_45)   --->   "%or_ln66_34 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_35, i7 %lshr_ln66_34" [sha256.cpp:66]   --->   Operation 711 'bitconcatenate' 'or_ln66_34' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 712 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_45)   --->   "%xor_ln66_44 = xor i32 %or_ln66_32, i32 %or_ln66_33" [sha256.cpp:66]   --->   Operation 712 'xor' 'xor_ln66_44' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 713 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_45 = xor i32 %xor_ln66_44, i32 %or_ln66_34" [sha256.cpp:66]   --->   Operation 713 'xor' 'xor_ln66_45' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 714 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_47)   --->   "%and_ln66_22 = and i32 %e_43, i32 %e_42" [sha256.cpp:66]   --->   Operation 714 'and' 'and_ln66_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 715 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_47)   --->   "%xor_ln66_46 = xor i32 %e_43, i32 4294967295" [sha256.cpp:66]   --->   Operation 715 'xor' 'xor_ln66_46' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 716 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_47)   --->   "%and_ln66_23 = and i32 %e_41, i32 %xor_ln66_46" [sha256.cpp:66]   --->   Operation 716 'and' 'and_ln66_23' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 717 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_47 = xor i32 %and_ln66_22, i32 %and_ln66_23" [sha256.cpp:66]   --->   Operation 717 'xor' 'xor_ln66_47' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 718 [1/2] (1.29ns)   --->   "%m_load_11 = load i6 %m_addr_11" [sha256.cpp:66]   --->   Operation 718 'load' 'm_load_11' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_27 : Operation 719 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_44 = add i32 %m_load_11, i32 %xor_ln66_47" [sha256.cpp:66]   --->   Operation 719 'add' 'add_ln66_44' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 720 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_45 = add i32 %xor_ln66_45, i32 1426881987" [sha256.cpp:66]   --->   Operation 720 'add' 'add_ln66_45' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 721 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_46 = add i32 %add_ln66_45, i32 %e_40" [sha256.cpp:66]   --->   Operation 721 'add' 'add_ln66_46' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 722 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_11 = add i32 %add_ln66_46, i32 %add_ln66_44" [sha256.cpp:66]   --->   Operation 722 'add' 't1_11' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 723 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_45)   --->   "%lshr_ln67_32 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_43, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 723 'partselect' 'lshr_ln67_32' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 724 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_45)   --->   "%trunc_ln67_33 = trunc i32 %a_43" [sha256.cpp:67]   --->   Operation 724 'trunc' 'trunc_ln67_33' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 725 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_45)   --->   "%or_ln67_32 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_33, i30 %lshr_ln67_32" [sha256.cpp:67]   --->   Operation 725 'bitconcatenate' 'or_ln67_32' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 726 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_45)   --->   "%lshr_ln67_33 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_43, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 726 'partselect' 'lshr_ln67_33' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 727 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_45)   --->   "%trunc_ln67_34 = trunc i32 %a_43" [sha256.cpp:67]   --->   Operation 727 'trunc' 'trunc_ln67_34' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 728 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_45)   --->   "%or_ln67_33 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_34, i19 %lshr_ln67_33" [sha256.cpp:67]   --->   Operation 728 'bitconcatenate' 'or_ln67_33' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 729 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_45)   --->   "%lshr_ln67_34 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_43, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 729 'partselect' 'lshr_ln67_34' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 730 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_45)   --->   "%trunc_ln67_35 = trunc i32 %a_43" [sha256.cpp:67]   --->   Operation 730 'trunc' 'trunc_ln67_35' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 731 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_45)   --->   "%or_ln67_34 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_35, i10 %lshr_ln67_34" [sha256.cpp:67]   --->   Operation 731 'bitconcatenate' 'or_ln67_34' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 732 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_45)   --->   "%xor_ln67_44 = xor i32 %or_ln67_32, i32 %or_ln67_33" [sha256.cpp:67]   --->   Operation 732 'xor' 'xor_ln67_44' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 733 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_45 = xor i32 %xor_ln67_44, i32 %or_ln67_34" [sha256.cpp:67]   --->   Operation 733 'xor' 'xor_ln67_45' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 734 [2/2] (1.29ns)   --->   "%m_load_12 = load i6 %m_addr_12" [sha256.cpp:66]   --->   Operation 734 'load' 'm_load_12' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_27 : Operation 735 [2/2] (1.29ns)   --->   "%m_load_13 = load i6 %m_addr_13" [sha256.cpp:66]   --->   Operation 735 'load' 'm_load_13' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 28 <SV = 26> <Delay = 6.49>
ST_28 : Operation 736 [1/1] (0.28ns)   --->   "%and_ln67_23 = and i32 %a_43, i32 %a_42" [sha256.cpp:67]   --->   Operation 736 'and' 'and_ln67_23' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 737 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_47)   --->   "%and_ln67_24 = and i32 %a_43, i32 %a_41" [sha256.cpp:67]   --->   Operation 737 'and' 'and_ln67_24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 738 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_47)   --->   "%xor_ln67_46 = xor i32 %and_ln67_21, i32 %and_ln67_24" [sha256.cpp:67]   --->   Operation 738 'xor' 'xor_ln67_46' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 739 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_47 = xor i32 %xor_ln67_46, i32 %and_ln67_23" [sha256.cpp:67]   --->   Operation 739 'xor' 'xor_ln67_47' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 740 [1/1] (1.14ns)   --->   "%e_44 = add i32 %t1_11, i32 %a_40" [sha256.cpp:71]   --->   Operation 740 'add' 'e_44' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 741 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_22 = add i32 %xor_ln67_47, i32 %t1_11" [sha256.cpp:75]   --->   Operation 741 'add' 'add_ln75_22' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 742 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_44 = add i32 %add_ln75_22, i32 %xor_ln67_45" [sha256.cpp:75]   --->   Operation 742 'add' 'a_44' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 743 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_49)   --->   "%lshr_ln66_35 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_44, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 743 'partselect' 'lshr_ln66_35' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 744 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_49)   --->   "%trunc_ln66_36 = trunc i32 %e_44" [sha256.cpp:66]   --->   Operation 744 'trunc' 'trunc_ln66_36' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 745 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_49)   --->   "%or_ln66_35 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_36, i26 %lshr_ln66_35" [sha256.cpp:66]   --->   Operation 745 'bitconcatenate' 'or_ln66_35' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 746 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_49)   --->   "%lshr_ln66_36 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_44, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 746 'partselect' 'lshr_ln66_36' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 747 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_49)   --->   "%trunc_ln66_37 = trunc i32 %e_44" [sha256.cpp:66]   --->   Operation 747 'trunc' 'trunc_ln66_37' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 748 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_49)   --->   "%or_ln66_36 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_37, i21 %lshr_ln66_36" [sha256.cpp:66]   --->   Operation 748 'bitconcatenate' 'or_ln66_36' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 749 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_49)   --->   "%lshr_ln66_37 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_44, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 749 'partselect' 'lshr_ln66_37' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 750 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_49)   --->   "%trunc_ln66_38 = trunc i32 %e_44" [sha256.cpp:66]   --->   Operation 750 'trunc' 'trunc_ln66_38' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 751 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_49)   --->   "%or_ln66_37 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_38, i7 %lshr_ln66_37" [sha256.cpp:66]   --->   Operation 751 'bitconcatenate' 'or_ln66_37' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 752 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_49)   --->   "%xor_ln66_48 = xor i32 %or_ln66_35, i32 %or_ln66_36" [sha256.cpp:66]   --->   Operation 752 'xor' 'xor_ln66_48' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 753 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_49 = xor i32 %xor_ln66_48, i32 %or_ln66_37" [sha256.cpp:66]   --->   Operation 753 'xor' 'xor_ln66_49' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 754 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_51)   --->   "%and_ln66_24 = and i32 %e_44, i32 %e_43" [sha256.cpp:66]   --->   Operation 754 'and' 'and_ln66_24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 755 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_51)   --->   "%xor_ln66_50 = xor i32 %e_44, i32 4294967295" [sha256.cpp:66]   --->   Operation 755 'xor' 'xor_ln66_50' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 756 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_51)   --->   "%and_ln66_25 = and i32 %e_42, i32 %xor_ln66_50" [sha256.cpp:66]   --->   Operation 756 'and' 'and_ln66_25' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 757 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_51 = xor i32 %and_ln66_24, i32 %and_ln66_25" [sha256.cpp:66]   --->   Operation 757 'xor' 'xor_ln66_51' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 758 [1/2] (1.29ns)   --->   "%m_load_12 = load i6 %m_addr_12" [sha256.cpp:66]   --->   Operation 758 'load' 'm_load_12' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_28 : Operation 759 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_48 = add i32 %m_load_12, i32 %xor_ln66_51" [sha256.cpp:66]   --->   Operation 759 'add' 'add_ln66_48' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 760 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_49 = add i32 %xor_ln66_49, i32 1925078388" [sha256.cpp:66]   --->   Operation 760 'add' 'add_ln66_49' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 761 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_50 = add i32 %add_ln66_49, i32 %e_41" [sha256.cpp:66]   --->   Operation 761 'add' 'add_ln66_50' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 762 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_12 = add i32 %add_ln66_50, i32 %add_ln66_48" [sha256.cpp:66]   --->   Operation 762 'add' 't1_12' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 763 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_49)   --->   "%lshr_ln67_35 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_44, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 763 'partselect' 'lshr_ln67_35' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 764 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_49)   --->   "%trunc_ln67_36 = trunc i32 %a_44" [sha256.cpp:67]   --->   Operation 764 'trunc' 'trunc_ln67_36' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 765 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_49)   --->   "%or_ln67_35 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_36, i30 %lshr_ln67_35" [sha256.cpp:67]   --->   Operation 765 'bitconcatenate' 'or_ln67_35' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 766 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_49)   --->   "%lshr_ln67_36 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_44, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 766 'partselect' 'lshr_ln67_36' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 767 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_49)   --->   "%trunc_ln67_37 = trunc i32 %a_44" [sha256.cpp:67]   --->   Operation 767 'trunc' 'trunc_ln67_37' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 768 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_49)   --->   "%or_ln67_36 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_37, i19 %lshr_ln67_36" [sha256.cpp:67]   --->   Operation 768 'bitconcatenate' 'or_ln67_36' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 769 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_49)   --->   "%lshr_ln67_37 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_44, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 769 'partselect' 'lshr_ln67_37' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 770 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_49)   --->   "%trunc_ln67_38 = trunc i32 %a_44" [sha256.cpp:67]   --->   Operation 770 'trunc' 'trunc_ln67_38' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 771 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_49)   --->   "%or_ln67_37 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_38, i10 %lshr_ln67_37" [sha256.cpp:67]   --->   Operation 771 'bitconcatenate' 'or_ln67_37' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 772 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_49)   --->   "%xor_ln67_48 = xor i32 %or_ln67_35, i32 %or_ln67_36" [sha256.cpp:67]   --->   Operation 772 'xor' 'xor_ln67_48' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 773 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_49 = xor i32 %xor_ln67_48, i32 %or_ln67_37" [sha256.cpp:67]   --->   Operation 773 'xor' 'xor_ln67_49' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 774 [1/1] (0.28ns)   --->   "%and_ln67_25 = and i32 %a_44, i32 %a_43" [sha256.cpp:67]   --->   Operation 774 'and' 'and_ln67_25' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 775 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_51)   --->   "%and_ln67_26 = and i32 %a_44, i32 %a_42" [sha256.cpp:67]   --->   Operation 775 'and' 'and_ln67_26' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 776 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_51)   --->   "%xor_ln67_50 = xor i32 %and_ln67_23, i32 %and_ln67_26" [sha256.cpp:67]   --->   Operation 776 'xor' 'xor_ln67_50' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 777 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_51 = xor i32 %xor_ln67_50, i32 %and_ln67_25" [sha256.cpp:67]   --->   Operation 777 'xor' 'xor_ln67_51' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 778 [1/1] (1.14ns)   --->   "%e_45 = add i32 %t1_12, i32 %a_41" [sha256.cpp:71]   --->   Operation 778 'add' 'e_45' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 779 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_24 = add i32 %xor_ln67_51, i32 %t1_12" [sha256.cpp:75]   --->   Operation 779 'add' 'add_ln75_24' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 780 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_45 = add i32 %add_ln75_24, i32 %xor_ln67_49" [sha256.cpp:75]   --->   Operation 780 'add' 'a_45' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 781 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_53)   --->   "%lshr_ln66_38 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_45, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 781 'partselect' 'lshr_ln66_38' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 782 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_53)   --->   "%trunc_ln66_39 = trunc i32 %e_45" [sha256.cpp:66]   --->   Operation 782 'trunc' 'trunc_ln66_39' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 783 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_53)   --->   "%or_ln66_38 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_39, i26 %lshr_ln66_38" [sha256.cpp:66]   --->   Operation 783 'bitconcatenate' 'or_ln66_38' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 784 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_53)   --->   "%lshr_ln66_39 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_45, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 784 'partselect' 'lshr_ln66_39' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 785 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_53)   --->   "%trunc_ln66_40 = trunc i32 %e_45" [sha256.cpp:66]   --->   Operation 785 'trunc' 'trunc_ln66_40' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 786 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_53)   --->   "%or_ln66_39 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_40, i21 %lshr_ln66_39" [sha256.cpp:66]   --->   Operation 786 'bitconcatenate' 'or_ln66_39' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 787 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_53)   --->   "%lshr_ln66_40 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_45, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 787 'partselect' 'lshr_ln66_40' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 788 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_53)   --->   "%trunc_ln66_41 = trunc i32 %e_45" [sha256.cpp:66]   --->   Operation 788 'trunc' 'trunc_ln66_41' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 789 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_53)   --->   "%or_ln66_40 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_41, i7 %lshr_ln66_40" [sha256.cpp:66]   --->   Operation 789 'bitconcatenate' 'or_ln66_40' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 790 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_53)   --->   "%xor_ln66_52 = xor i32 %or_ln66_38, i32 %or_ln66_39" [sha256.cpp:66]   --->   Operation 790 'xor' 'xor_ln66_52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 791 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_53 = xor i32 %xor_ln66_52, i32 %or_ln66_40" [sha256.cpp:66]   --->   Operation 791 'xor' 'xor_ln66_53' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 792 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_55)   --->   "%and_ln66_26 = and i32 %e_45, i32 %e_44" [sha256.cpp:66]   --->   Operation 792 'and' 'and_ln66_26' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 793 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_55)   --->   "%xor_ln66_54 = xor i32 %e_45, i32 4294967295" [sha256.cpp:66]   --->   Operation 793 'xor' 'xor_ln66_54' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 794 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_55)   --->   "%and_ln66_27 = and i32 %e_43, i32 %xor_ln66_54" [sha256.cpp:66]   --->   Operation 794 'and' 'and_ln66_27' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 795 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_55 = xor i32 %and_ln66_26, i32 %and_ln66_27" [sha256.cpp:66]   --->   Operation 795 'xor' 'xor_ln66_55' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 796 [1/2] (1.29ns)   --->   "%m_load_13 = load i6 %m_addr_13" [sha256.cpp:66]   --->   Operation 796 'load' 'm_load_13' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_28 : Operation 797 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_52 = add i32 %m_load_13, i32 %e_42" [sha256.cpp:66]   --->   Operation 797 'add' 'add_ln66_52' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 798 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_53 = add i32 %xor_ln66_53, i32 2162078206" [sha256.cpp:66]   --->   Operation 798 'add' 'add_ln66_53' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 799 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_54 = add i32 %add_ln66_53, i32 %xor_ln66_55" [sha256.cpp:66]   --->   Operation 799 'add' 'add_ln66_54' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 800 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_13 = add i32 %add_ln66_54, i32 %add_ln66_52" [sha256.cpp:66]   --->   Operation 800 'add' 't1_13' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 801 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_53)   --->   "%lshr_ln67_38 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_45, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 801 'partselect' 'lshr_ln67_38' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 802 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_53)   --->   "%trunc_ln67_39 = trunc i32 %a_45" [sha256.cpp:67]   --->   Operation 802 'trunc' 'trunc_ln67_39' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 803 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_53)   --->   "%or_ln67_38 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_39, i30 %lshr_ln67_38" [sha256.cpp:67]   --->   Operation 803 'bitconcatenate' 'or_ln67_38' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 804 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_53)   --->   "%lshr_ln67_39 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_45, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 804 'partselect' 'lshr_ln67_39' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 805 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_53)   --->   "%trunc_ln67_40 = trunc i32 %a_45" [sha256.cpp:67]   --->   Operation 805 'trunc' 'trunc_ln67_40' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 806 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_53)   --->   "%or_ln67_39 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_40, i19 %lshr_ln67_39" [sha256.cpp:67]   --->   Operation 806 'bitconcatenate' 'or_ln67_39' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 807 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_53)   --->   "%lshr_ln67_40 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_45, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 807 'partselect' 'lshr_ln67_40' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 808 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_53)   --->   "%trunc_ln67_41 = trunc i32 %a_45" [sha256.cpp:67]   --->   Operation 808 'trunc' 'trunc_ln67_41' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 809 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_53)   --->   "%or_ln67_40 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_41, i10 %lshr_ln67_40" [sha256.cpp:67]   --->   Operation 809 'bitconcatenate' 'or_ln67_40' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 810 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_53)   --->   "%xor_ln67_52 = xor i32 %or_ln67_38, i32 %or_ln67_39" [sha256.cpp:67]   --->   Operation 810 'xor' 'xor_ln67_52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 811 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_53 = xor i32 %xor_ln67_52, i32 %or_ln67_40" [sha256.cpp:67]   --->   Operation 811 'xor' 'xor_ln67_53' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 812 [2/2] (1.29ns)   --->   "%m_load_14 = load i6 %m_addr_14" [sha256.cpp:66]   --->   Operation 812 'load' 'm_load_14' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_28 : Operation 813 [2/2] (1.29ns)   --->   "%m_load_15 = load i6 %m_addr_15" [sha256.cpp:66]   --->   Operation 813 'load' 'm_load_15' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 29 <SV = 27> <Delay = 6.49>
ST_29 : Operation 814 [1/1] (0.28ns)   --->   "%and_ln67_27 = and i32 %a_45, i32 %a_44" [sha256.cpp:67]   --->   Operation 814 'and' 'and_ln67_27' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 815 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_55)   --->   "%and_ln67_28 = and i32 %a_45, i32 %a_43" [sha256.cpp:67]   --->   Operation 815 'and' 'and_ln67_28' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 816 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_55)   --->   "%xor_ln67_54 = xor i32 %and_ln67_25, i32 %and_ln67_28" [sha256.cpp:67]   --->   Operation 816 'xor' 'xor_ln67_54' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 817 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_55 = xor i32 %xor_ln67_54, i32 %and_ln67_27" [sha256.cpp:67]   --->   Operation 817 'xor' 'xor_ln67_55' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 818 [1/1] (1.14ns)   --->   "%e_46 = add i32 %t1_13, i32 %a_42" [sha256.cpp:71]   --->   Operation 818 'add' 'e_46' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 819 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_26 = add i32 %xor_ln67_55, i32 %t1_13" [sha256.cpp:75]   --->   Operation 819 'add' 'add_ln75_26' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 820 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_46 = add i32 %add_ln75_26, i32 %xor_ln67_53" [sha256.cpp:75]   --->   Operation 820 'add' 'a_46' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 821 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_57)   --->   "%lshr_ln66_41 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_46, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 821 'partselect' 'lshr_ln66_41' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 822 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_57)   --->   "%trunc_ln66_42 = trunc i32 %e_46" [sha256.cpp:66]   --->   Operation 822 'trunc' 'trunc_ln66_42' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 823 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_57)   --->   "%or_ln66_41 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_42, i26 %lshr_ln66_41" [sha256.cpp:66]   --->   Operation 823 'bitconcatenate' 'or_ln66_41' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 824 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_57)   --->   "%lshr_ln66_42 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_46, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 824 'partselect' 'lshr_ln66_42' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 825 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_57)   --->   "%trunc_ln66_43 = trunc i32 %e_46" [sha256.cpp:66]   --->   Operation 825 'trunc' 'trunc_ln66_43' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 826 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_57)   --->   "%or_ln66_42 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_43, i21 %lshr_ln66_42" [sha256.cpp:66]   --->   Operation 826 'bitconcatenate' 'or_ln66_42' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 827 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_57)   --->   "%lshr_ln66_43 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_46, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 827 'partselect' 'lshr_ln66_43' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 828 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_57)   --->   "%trunc_ln66_44 = trunc i32 %e_46" [sha256.cpp:66]   --->   Operation 828 'trunc' 'trunc_ln66_44' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 829 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_57)   --->   "%or_ln66_43 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_44, i7 %lshr_ln66_43" [sha256.cpp:66]   --->   Operation 829 'bitconcatenate' 'or_ln66_43' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 830 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_57)   --->   "%xor_ln66_56 = xor i32 %or_ln66_41, i32 %or_ln66_42" [sha256.cpp:66]   --->   Operation 830 'xor' 'xor_ln66_56' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 831 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_57 = xor i32 %xor_ln66_56, i32 %or_ln66_43" [sha256.cpp:66]   --->   Operation 831 'xor' 'xor_ln66_57' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 832 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_59)   --->   "%and_ln66_28 = and i32 %e_46, i32 %e_45" [sha256.cpp:66]   --->   Operation 832 'and' 'and_ln66_28' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 833 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_59)   --->   "%xor_ln66_58 = xor i32 %e_46, i32 4294967295" [sha256.cpp:66]   --->   Operation 833 'xor' 'xor_ln66_58' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 834 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_59)   --->   "%and_ln66_29 = and i32 %e_44, i32 %xor_ln66_58" [sha256.cpp:66]   --->   Operation 834 'and' 'and_ln66_29' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 835 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_59 = xor i32 %and_ln66_28, i32 %and_ln66_29" [sha256.cpp:66]   --->   Operation 835 'xor' 'xor_ln66_59' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 836 [1/2] (1.29ns)   --->   "%m_load_14 = load i6 %m_addr_14" [sha256.cpp:66]   --->   Operation 836 'load' 'm_load_14' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_29 : Operation 837 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_56 = add i32 %m_load_14, i32 %e_43" [sha256.cpp:66]   --->   Operation 837 'add' 'add_ln66_56' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 838 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_57 = add i32 %xor_ln66_57, i32 2614888103" [sha256.cpp:66]   --->   Operation 838 'add' 'add_ln66_57' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 839 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_58 = add i32 %add_ln66_57, i32 %xor_ln66_59" [sha256.cpp:66]   --->   Operation 839 'add' 'add_ln66_58' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 840 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_14 = add i32 %add_ln66_58, i32 %add_ln66_56" [sha256.cpp:66]   --->   Operation 840 'add' 't1_14' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 841 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_57)   --->   "%lshr_ln67_41 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_46, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 841 'partselect' 'lshr_ln67_41' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 842 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_57)   --->   "%trunc_ln67_42 = trunc i32 %a_46" [sha256.cpp:67]   --->   Operation 842 'trunc' 'trunc_ln67_42' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 843 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_57)   --->   "%or_ln67_41 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_42, i30 %lshr_ln67_41" [sha256.cpp:67]   --->   Operation 843 'bitconcatenate' 'or_ln67_41' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 844 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_57)   --->   "%lshr_ln67_42 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_46, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 844 'partselect' 'lshr_ln67_42' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 845 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_57)   --->   "%trunc_ln67_43 = trunc i32 %a_46" [sha256.cpp:67]   --->   Operation 845 'trunc' 'trunc_ln67_43' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 846 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_57)   --->   "%or_ln67_42 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_43, i19 %lshr_ln67_42" [sha256.cpp:67]   --->   Operation 846 'bitconcatenate' 'or_ln67_42' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 847 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_57)   --->   "%lshr_ln67_43 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_46, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 847 'partselect' 'lshr_ln67_43' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 848 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_57)   --->   "%trunc_ln67_44 = trunc i32 %a_46" [sha256.cpp:67]   --->   Operation 848 'trunc' 'trunc_ln67_44' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 849 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_57)   --->   "%or_ln67_43 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_44, i10 %lshr_ln67_43" [sha256.cpp:67]   --->   Operation 849 'bitconcatenate' 'or_ln67_43' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 850 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_57)   --->   "%xor_ln67_56 = xor i32 %or_ln67_41, i32 %or_ln67_42" [sha256.cpp:67]   --->   Operation 850 'xor' 'xor_ln67_56' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 851 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_57 = xor i32 %xor_ln67_56, i32 %or_ln67_43" [sha256.cpp:67]   --->   Operation 851 'xor' 'xor_ln67_57' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 852 [1/1] (1.14ns)   --->   "%e_47 = add i32 %t1_14, i32 %a_43" [sha256.cpp:71]   --->   Operation 852 'add' 'e_47' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 853 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_61)   --->   "%lshr_ln66_44 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_47, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 853 'partselect' 'lshr_ln66_44' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 854 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_61)   --->   "%trunc_ln66_45 = trunc i32 %e_47" [sha256.cpp:66]   --->   Operation 854 'trunc' 'trunc_ln66_45' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 855 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_61)   --->   "%or_ln66_44 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_45, i26 %lshr_ln66_44" [sha256.cpp:66]   --->   Operation 855 'bitconcatenate' 'or_ln66_44' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 856 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_61)   --->   "%lshr_ln66_45 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_47, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 856 'partselect' 'lshr_ln66_45' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 857 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_61)   --->   "%trunc_ln66_46 = trunc i32 %e_47" [sha256.cpp:66]   --->   Operation 857 'trunc' 'trunc_ln66_46' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 858 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_61)   --->   "%or_ln66_45 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_46, i21 %lshr_ln66_45" [sha256.cpp:66]   --->   Operation 858 'bitconcatenate' 'or_ln66_45' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 859 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_61)   --->   "%lshr_ln66_46 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_47, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 859 'partselect' 'lshr_ln66_46' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 860 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_61)   --->   "%trunc_ln66_47 = trunc i32 %e_47" [sha256.cpp:66]   --->   Operation 860 'trunc' 'trunc_ln66_47' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 861 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_61)   --->   "%or_ln66_46 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_47, i7 %lshr_ln66_46" [sha256.cpp:66]   --->   Operation 861 'bitconcatenate' 'or_ln66_46' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 862 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_61)   --->   "%xor_ln66_60 = xor i32 %or_ln66_44, i32 %or_ln66_45" [sha256.cpp:66]   --->   Operation 862 'xor' 'xor_ln66_60' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 863 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_61 = xor i32 %xor_ln66_60, i32 %or_ln66_46" [sha256.cpp:66]   --->   Operation 863 'xor' 'xor_ln66_61' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 864 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_63)   --->   "%and_ln66_30 = and i32 %e_47, i32 %e_46" [sha256.cpp:66]   --->   Operation 864 'and' 'and_ln66_30' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 865 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_63)   --->   "%xor_ln66_62 = xor i32 %e_47, i32 4294967295" [sha256.cpp:66]   --->   Operation 865 'xor' 'xor_ln66_62' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 866 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_63)   --->   "%and_ln66_31 = and i32 %e_45, i32 %xor_ln66_62" [sha256.cpp:66]   --->   Operation 866 'and' 'and_ln66_31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 867 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_63 = xor i32 %and_ln66_30, i32 %and_ln66_31" [sha256.cpp:66]   --->   Operation 867 'xor' 'xor_ln66_63' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 868 [1/2] (1.29ns)   --->   "%m_load_15 = load i6 %m_addr_15" [sha256.cpp:66]   --->   Operation 868 'load' 'm_load_15' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_29 : Operation 869 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_60 = add i32 %m_load_15, i32 %xor_ln66_63" [sha256.cpp:66]   --->   Operation 869 'add' 'add_ln66_60' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 870 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_61 = add i32 %xor_ln66_61, i32 3248222580" [sha256.cpp:66]   --->   Operation 870 'add' 'add_ln66_61' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 871 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_62 = add i32 %add_ln66_61, i32 %e_44" [sha256.cpp:66]   --->   Operation 871 'add' 'add_ln66_62' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 872 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_15 = add i32 %add_ln66_62, i32 %add_ln66_60" [sha256.cpp:66]   --->   Operation 872 'add' 't1_15' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 873 [1/1] (0.00ns)   --->   "%m_addr_16 = getelementptr i32 %m, i64 0, i64 16" [sha256.cpp:66]   --->   Operation 873 'getelementptr' 'm_addr_16' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 874 [2/2] (1.29ns)   --->   "%m_load_16 = load i6 %m_addr_16" [sha256.cpp:66]   --->   Operation 874 'load' 'm_load_16' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_29 : Operation 875 [1/1] (0.00ns)   --->   "%m_addr_17 = getelementptr i32 %m, i64 0, i64 17" [sha256.cpp:66]   --->   Operation 875 'getelementptr' 'm_addr_17' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 876 [2/2] (1.29ns)   --->   "%m_load_17 = load i6 %m_addr_17" [sha256.cpp:66]   --->   Operation 876 'load' 'm_load_17' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 30 <SV = 28> <Delay = 6.49>
ST_30 : Operation 877 [1/1] (0.28ns)   --->   "%and_ln67_29 = and i32 %a_46, i32 %a_45" [sha256.cpp:67]   --->   Operation 877 'and' 'and_ln67_29' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 878 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_59)   --->   "%and_ln67_30 = and i32 %a_46, i32 %a_44" [sha256.cpp:67]   --->   Operation 878 'and' 'and_ln67_30' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 879 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_59)   --->   "%xor_ln67_58 = xor i32 %and_ln67_27, i32 %and_ln67_30" [sha256.cpp:67]   --->   Operation 879 'xor' 'xor_ln67_58' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 880 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_59 = xor i32 %xor_ln67_58, i32 %and_ln67_29" [sha256.cpp:67]   --->   Operation 880 'xor' 'xor_ln67_59' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 881 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_28 = add i32 %xor_ln67_59, i32 %t1_14" [sha256.cpp:75]   --->   Operation 881 'add' 'add_ln75_28' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 882 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_47 = add i32 %add_ln75_28, i32 %xor_ln67_57" [sha256.cpp:75]   --->   Operation 882 'add' 'a_47' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 883 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_61)   --->   "%lshr_ln67_44 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_47, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 883 'partselect' 'lshr_ln67_44' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 884 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_61)   --->   "%trunc_ln67_45 = trunc i32 %a_47" [sha256.cpp:67]   --->   Operation 884 'trunc' 'trunc_ln67_45' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 885 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_61)   --->   "%or_ln67_44 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_45, i30 %lshr_ln67_44" [sha256.cpp:67]   --->   Operation 885 'bitconcatenate' 'or_ln67_44' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 886 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_61)   --->   "%lshr_ln67_45 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_47, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 886 'partselect' 'lshr_ln67_45' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 887 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_61)   --->   "%trunc_ln67_46 = trunc i32 %a_47" [sha256.cpp:67]   --->   Operation 887 'trunc' 'trunc_ln67_46' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 888 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_61)   --->   "%or_ln67_45 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_46, i19 %lshr_ln67_45" [sha256.cpp:67]   --->   Operation 888 'bitconcatenate' 'or_ln67_45' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 889 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_61)   --->   "%lshr_ln67_46 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_47, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 889 'partselect' 'lshr_ln67_46' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 890 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_61)   --->   "%trunc_ln67_47 = trunc i32 %a_47" [sha256.cpp:67]   --->   Operation 890 'trunc' 'trunc_ln67_47' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 891 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_61)   --->   "%or_ln67_46 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_47, i10 %lshr_ln67_46" [sha256.cpp:67]   --->   Operation 891 'bitconcatenate' 'or_ln67_46' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 892 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_61)   --->   "%xor_ln67_60 = xor i32 %or_ln67_44, i32 %or_ln67_45" [sha256.cpp:67]   --->   Operation 892 'xor' 'xor_ln67_60' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 893 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_61 = xor i32 %xor_ln67_60, i32 %or_ln67_46" [sha256.cpp:67]   --->   Operation 893 'xor' 'xor_ln67_61' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 894 [1/1] (0.28ns)   --->   "%and_ln67_31 = and i32 %a_47, i32 %a_46" [sha256.cpp:67]   --->   Operation 894 'and' 'and_ln67_31' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 895 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_63)   --->   "%and_ln67_32 = and i32 %a_47, i32 %a_45" [sha256.cpp:67]   --->   Operation 895 'and' 'and_ln67_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 896 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_63)   --->   "%xor_ln67_62 = xor i32 %and_ln67_29, i32 %and_ln67_32" [sha256.cpp:67]   --->   Operation 896 'xor' 'xor_ln67_62' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 897 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_63 = xor i32 %xor_ln67_62, i32 %and_ln67_31" [sha256.cpp:67]   --->   Operation 897 'xor' 'xor_ln67_63' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 898 [1/1] (1.14ns)   --->   "%e_48 = add i32 %t1_15, i32 %a_44" [sha256.cpp:71]   --->   Operation 898 'add' 'e_48' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 899 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_30 = add i32 %xor_ln67_63, i32 %t1_15" [sha256.cpp:75]   --->   Operation 899 'add' 'add_ln75_30' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 900 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_48 = add i32 %add_ln75_30, i32 %xor_ln67_61" [sha256.cpp:75]   --->   Operation 900 'add' 'a_48' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 901 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_65)   --->   "%lshr_ln66_47 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_48, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 901 'partselect' 'lshr_ln66_47' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 902 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_65)   --->   "%trunc_ln66_48 = trunc i32 %e_48" [sha256.cpp:66]   --->   Operation 902 'trunc' 'trunc_ln66_48' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 903 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_65)   --->   "%or_ln66_47 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_48, i26 %lshr_ln66_47" [sha256.cpp:66]   --->   Operation 903 'bitconcatenate' 'or_ln66_47' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 904 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_65)   --->   "%lshr_ln66_48 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_48, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 904 'partselect' 'lshr_ln66_48' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 905 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_65)   --->   "%trunc_ln66_49 = trunc i32 %e_48" [sha256.cpp:66]   --->   Operation 905 'trunc' 'trunc_ln66_49' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 906 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_65)   --->   "%or_ln66_48 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_49, i21 %lshr_ln66_48" [sha256.cpp:66]   --->   Operation 906 'bitconcatenate' 'or_ln66_48' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 907 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_65)   --->   "%lshr_ln66_49 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_48, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 907 'partselect' 'lshr_ln66_49' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 908 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_65)   --->   "%trunc_ln66_50 = trunc i32 %e_48" [sha256.cpp:66]   --->   Operation 908 'trunc' 'trunc_ln66_50' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 909 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_65)   --->   "%or_ln66_49 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_50, i7 %lshr_ln66_49" [sha256.cpp:66]   --->   Operation 909 'bitconcatenate' 'or_ln66_49' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 910 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_65)   --->   "%xor_ln66_64 = xor i32 %or_ln66_47, i32 %or_ln66_48" [sha256.cpp:66]   --->   Operation 910 'xor' 'xor_ln66_64' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 911 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_65 = xor i32 %xor_ln66_64, i32 %or_ln66_49" [sha256.cpp:66]   --->   Operation 911 'xor' 'xor_ln66_65' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 912 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_67)   --->   "%and_ln66_32 = and i32 %e_48, i32 %e_47" [sha256.cpp:66]   --->   Operation 912 'and' 'and_ln66_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 913 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_67)   --->   "%xor_ln66_66 = xor i32 %e_48, i32 4294967295" [sha256.cpp:66]   --->   Operation 913 'xor' 'xor_ln66_66' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 914 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_67)   --->   "%and_ln66_33 = and i32 %e_46, i32 %xor_ln66_66" [sha256.cpp:66]   --->   Operation 914 'and' 'and_ln66_33' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 915 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_67 = xor i32 %and_ln66_32, i32 %and_ln66_33" [sha256.cpp:66]   --->   Operation 915 'xor' 'xor_ln66_67' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 916 [1/2] (1.29ns)   --->   "%m_load_16 = load i6 %m_addr_16" [sha256.cpp:66]   --->   Operation 916 'load' 'm_load_16' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_30 : Operation 917 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_64 = add i32 %m_load_16, i32 %xor_ln66_67" [sha256.cpp:66]   --->   Operation 917 'add' 'add_ln66_64' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 918 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_65 = add i32 %xor_ln66_65, i32 3835390401" [sha256.cpp:66]   --->   Operation 918 'add' 'add_ln66_65' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 919 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_66 = add i32 %add_ln66_65, i32 %e_45" [sha256.cpp:66]   --->   Operation 919 'add' 'add_ln66_66' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 920 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_16 = add i32 %add_ln66_66, i32 %add_ln66_64" [sha256.cpp:66]   --->   Operation 920 'add' 't1_16' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 921 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_65)   --->   "%lshr_ln67_47 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_48, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 921 'partselect' 'lshr_ln67_47' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 922 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_65)   --->   "%trunc_ln67_48 = trunc i32 %a_48" [sha256.cpp:67]   --->   Operation 922 'trunc' 'trunc_ln67_48' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 923 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_65)   --->   "%or_ln67_47 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_48, i30 %lshr_ln67_47" [sha256.cpp:67]   --->   Operation 923 'bitconcatenate' 'or_ln67_47' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 924 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_65)   --->   "%lshr_ln67_48 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_48, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 924 'partselect' 'lshr_ln67_48' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 925 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_65)   --->   "%trunc_ln67_49 = trunc i32 %a_48" [sha256.cpp:67]   --->   Operation 925 'trunc' 'trunc_ln67_49' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 926 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_65)   --->   "%or_ln67_48 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_49, i19 %lshr_ln67_48" [sha256.cpp:67]   --->   Operation 926 'bitconcatenate' 'or_ln67_48' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 927 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_65)   --->   "%lshr_ln67_49 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_48, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 927 'partselect' 'lshr_ln67_49' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 928 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_65)   --->   "%trunc_ln67_50 = trunc i32 %a_48" [sha256.cpp:67]   --->   Operation 928 'trunc' 'trunc_ln67_50' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 929 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_65)   --->   "%or_ln67_49 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_50, i10 %lshr_ln67_49" [sha256.cpp:67]   --->   Operation 929 'bitconcatenate' 'or_ln67_49' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 930 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_65)   --->   "%xor_ln67_64 = xor i32 %or_ln67_47, i32 %or_ln67_48" [sha256.cpp:67]   --->   Operation 930 'xor' 'xor_ln67_64' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 931 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_65 = xor i32 %xor_ln67_64, i32 %or_ln67_49" [sha256.cpp:67]   --->   Operation 931 'xor' 'xor_ln67_65' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 932 [1/1] (1.14ns)   --->   "%e_49 = add i32 %t1_16, i32 %a_45" [sha256.cpp:71]   --->   Operation 932 'add' 'e_49' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 933 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_69)   --->   "%lshr_ln66_50 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_49, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 933 'partselect' 'lshr_ln66_50' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 934 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_69)   --->   "%trunc_ln66_51 = trunc i32 %e_49" [sha256.cpp:66]   --->   Operation 934 'trunc' 'trunc_ln66_51' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 935 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_69)   --->   "%or_ln66_50 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_51, i26 %lshr_ln66_50" [sha256.cpp:66]   --->   Operation 935 'bitconcatenate' 'or_ln66_50' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 936 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_69)   --->   "%lshr_ln66_51 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_49, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 936 'partselect' 'lshr_ln66_51' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 937 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_69)   --->   "%trunc_ln66_52 = trunc i32 %e_49" [sha256.cpp:66]   --->   Operation 937 'trunc' 'trunc_ln66_52' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 938 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_69)   --->   "%or_ln66_51 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_52, i21 %lshr_ln66_51" [sha256.cpp:66]   --->   Operation 938 'bitconcatenate' 'or_ln66_51' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 939 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_69)   --->   "%lshr_ln66_52 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_49, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 939 'partselect' 'lshr_ln66_52' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 940 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_69)   --->   "%trunc_ln66_53 = trunc i32 %e_49" [sha256.cpp:66]   --->   Operation 940 'trunc' 'trunc_ln66_53' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 941 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_69)   --->   "%or_ln66_52 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_53, i7 %lshr_ln66_52" [sha256.cpp:66]   --->   Operation 941 'bitconcatenate' 'or_ln66_52' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 942 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_69)   --->   "%xor_ln66_68 = xor i32 %or_ln66_50, i32 %or_ln66_51" [sha256.cpp:66]   --->   Operation 942 'xor' 'xor_ln66_68' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 943 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_69 = xor i32 %xor_ln66_68, i32 %or_ln66_52" [sha256.cpp:66]   --->   Operation 943 'xor' 'xor_ln66_69' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 944 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_71)   --->   "%and_ln66_34 = and i32 %e_49, i32 %e_48" [sha256.cpp:66]   --->   Operation 944 'and' 'and_ln66_34' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 945 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_71)   --->   "%xor_ln66_70 = xor i32 %e_49, i32 4294967295" [sha256.cpp:66]   --->   Operation 945 'xor' 'xor_ln66_70' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 946 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_71)   --->   "%and_ln66_35 = and i32 %e_47, i32 %xor_ln66_70" [sha256.cpp:66]   --->   Operation 946 'and' 'and_ln66_35' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 947 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_71 = xor i32 %and_ln66_34, i32 %and_ln66_35" [sha256.cpp:66]   --->   Operation 947 'xor' 'xor_ln66_71' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 948 [1/2] (1.29ns)   --->   "%m_load_17 = load i6 %m_addr_17" [sha256.cpp:66]   --->   Operation 948 'load' 'm_load_17' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_30 : Operation 949 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_68 = add i32 %m_load_17, i32 %xor_ln66_71" [sha256.cpp:66]   --->   Operation 949 'add' 'add_ln66_68' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 950 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_69 = add i32 %xor_ln66_69, i32 4022224774" [sha256.cpp:66]   --->   Operation 950 'add' 'add_ln66_69' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 951 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_70 = add i32 %add_ln66_69, i32 %e_46" [sha256.cpp:66]   --->   Operation 951 'add' 'add_ln66_70' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 952 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_17 = add i32 %add_ln66_70, i32 %add_ln66_68" [sha256.cpp:66]   --->   Operation 952 'add' 't1_17' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 953 [1/1] (0.00ns)   --->   "%m_addr_18 = getelementptr i32 %m, i64 0, i64 18" [sha256.cpp:66]   --->   Operation 953 'getelementptr' 'm_addr_18' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 954 [2/2] (1.29ns)   --->   "%m_load_18 = load i6 %m_addr_18" [sha256.cpp:66]   --->   Operation 954 'load' 'm_load_18' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_30 : Operation 955 [1/1] (0.00ns)   --->   "%m_addr_19 = getelementptr i32 %m, i64 0, i64 19" [sha256.cpp:66]   --->   Operation 955 'getelementptr' 'm_addr_19' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 956 [2/2] (1.29ns)   --->   "%m_load_19 = load i6 %m_addr_19" [sha256.cpp:66]   --->   Operation 956 'load' 'm_load_19' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 31 <SV = 29> <Delay = 6.49>
ST_31 : Operation 957 [1/1] (0.28ns)   --->   "%and_ln67_33 = and i32 %a_48, i32 %a_47" [sha256.cpp:67]   --->   Operation 957 'and' 'and_ln67_33' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 958 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_67)   --->   "%and_ln67_34 = and i32 %a_48, i32 %a_46" [sha256.cpp:67]   --->   Operation 958 'and' 'and_ln67_34' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 959 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_67)   --->   "%xor_ln67_66 = xor i32 %and_ln67_31, i32 %and_ln67_34" [sha256.cpp:67]   --->   Operation 959 'xor' 'xor_ln67_66' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 960 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_67 = xor i32 %xor_ln67_66, i32 %and_ln67_33" [sha256.cpp:67]   --->   Operation 960 'xor' 'xor_ln67_67' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 961 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_32 = add i32 %xor_ln67_67, i32 %t1_16" [sha256.cpp:75]   --->   Operation 961 'add' 'add_ln75_32' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 962 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_49 = add i32 %add_ln75_32, i32 %xor_ln67_65" [sha256.cpp:75]   --->   Operation 962 'add' 'a_49' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 963 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_69)   --->   "%lshr_ln67_50 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_49, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 963 'partselect' 'lshr_ln67_50' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 964 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_69)   --->   "%trunc_ln67_51 = trunc i32 %a_49" [sha256.cpp:67]   --->   Operation 964 'trunc' 'trunc_ln67_51' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 965 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_69)   --->   "%or_ln67_50 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_51, i30 %lshr_ln67_50" [sha256.cpp:67]   --->   Operation 965 'bitconcatenate' 'or_ln67_50' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 966 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_69)   --->   "%lshr_ln67_51 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_49, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 966 'partselect' 'lshr_ln67_51' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 967 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_69)   --->   "%trunc_ln67_52 = trunc i32 %a_49" [sha256.cpp:67]   --->   Operation 967 'trunc' 'trunc_ln67_52' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 968 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_69)   --->   "%or_ln67_51 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_52, i19 %lshr_ln67_51" [sha256.cpp:67]   --->   Operation 968 'bitconcatenate' 'or_ln67_51' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 969 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_69)   --->   "%lshr_ln67_52 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_49, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 969 'partselect' 'lshr_ln67_52' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 970 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_69)   --->   "%trunc_ln67_53 = trunc i32 %a_49" [sha256.cpp:67]   --->   Operation 970 'trunc' 'trunc_ln67_53' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 971 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_69)   --->   "%or_ln67_52 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_53, i10 %lshr_ln67_52" [sha256.cpp:67]   --->   Operation 971 'bitconcatenate' 'or_ln67_52' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 972 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_69)   --->   "%xor_ln67_68 = xor i32 %or_ln67_50, i32 %or_ln67_51" [sha256.cpp:67]   --->   Operation 972 'xor' 'xor_ln67_68' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 973 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_69 = xor i32 %xor_ln67_68, i32 %or_ln67_52" [sha256.cpp:67]   --->   Operation 973 'xor' 'xor_ln67_69' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 974 [1/1] (0.28ns)   --->   "%and_ln67_35 = and i32 %a_49, i32 %a_48" [sha256.cpp:67]   --->   Operation 974 'and' 'and_ln67_35' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 975 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_71)   --->   "%and_ln67_36 = and i32 %a_49, i32 %a_47" [sha256.cpp:67]   --->   Operation 975 'and' 'and_ln67_36' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 976 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_71)   --->   "%xor_ln67_70 = xor i32 %and_ln67_33, i32 %and_ln67_36" [sha256.cpp:67]   --->   Operation 976 'xor' 'xor_ln67_70' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 977 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_71 = xor i32 %xor_ln67_70, i32 %and_ln67_35" [sha256.cpp:67]   --->   Operation 977 'xor' 'xor_ln67_71' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 978 [1/1] (1.14ns)   --->   "%e_50 = add i32 %t1_17, i32 %a_46" [sha256.cpp:71]   --->   Operation 978 'add' 'e_50' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 979 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_34 = add i32 %xor_ln67_71, i32 %t1_17" [sha256.cpp:75]   --->   Operation 979 'add' 'add_ln75_34' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 980 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_50 = add i32 %add_ln75_34, i32 %xor_ln67_69" [sha256.cpp:75]   --->   Operation 980 'add' 'a_50' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 981 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_73)   --->   "%lshr_ln66_53 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_50, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 981 'partselect' 'lshr_ln66_53' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 982 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_73)   --->   "%trunc_ln66_54 = trunc i32 %e_50" [sha256.cpp:66]   --->   Operation 982 'trunc' 'trunc_ln66_54' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 983 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_73)   --->   "%or_ln66_53 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_54, i26 %lshr_ln66_53" [sha256.cpp:66]   --->   Operation 983 'bitconcatenate' 'or_ln66_53' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 984 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_73)   --->   "%lshr_ln66_54 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_50, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 984 'partselect' 'lshr_ln66_54' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 985 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_73)   --->   "%trunc_ln66_55 = trunc i32 %e_50" [sha256.cpp:66]   --->   Operation 985 'trunc' 'trunc_ln66_55' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 986 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_73)   --->   "%or_ln66_54 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_55, i21 %lshr_ln66_54" [sha256.cpp:66]   --->   Operation 986 'bitconcatenate' 'or_ln66_54' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 987 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_73)   --->   "%lshr_ln66_55 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_50, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 987 'partselect' 'lshr_ln66_55' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 988 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_73)   --->   "%trunc_ln66_56 = trunc i32 %e_50" [sha256.cpp:66]   --->   Operation 988 'trunc' 'trunc_ln66_56' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 989 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_73)   --->   "%or_ln66_55 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_56, i7 %lshr_ln66_55" [sha256.cpp:66]   --->   Operation 989 'bitconcatenate' 'or_ln66_55' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 990 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_73)   --->   "%xor_ln66_72 = xor i32 %or_ln66_53, i32 %or_ln66_54" [sha256.cpp:66]   --->   Operation 990 'xor' 'xor_ln66_72' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 991 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_73 = xor i32 %xor_ln66_72, i32 %or_ln66_55" [sha256.cpp:66]   --->   Operation 991 'xor' 'xor_ln66_73' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 992 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_75)   --->   "%and_ln66_36 = and i32 %e_50, i32 %e_49" [sha256.cpp:66]   --->   Operation 992 'and' 'and_ln66_36' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 993 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_75)   --->   "%xor_ln66_74 = xor i32 %e_50, i32 4294967295" [sha256.cpp:66]   --->   Operation 993 'xor' 'xor_ln66_74' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 994 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_75)   --->   "%and_ln66_37 = and i32 %e_48, i32 %xor_ln66_74" [sha256.cpp:66]   --->   Operation 994 'and' 'and_ln66_37' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 995 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_75 = xor i32 %and_ln66_36, i32 %and_ln66_37" [sha256.cpp:66]   --->   Operation 995 'xor' 'xor_ln66_75' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 996 [1/2] (1.29ns)   --->   "%m_load_18 = load i6 %m_addr_18" [sha256.cpp:66]   --->   Operation 996 'load' 'm_load_18' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_31 : Operation 997 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_72 = add i32 %m_load_18, i32 %xor_ln66_75" [sha256.cpp:66]   --->   Operation 997 'add' 'add_ln66_72' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 998 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_73 = add i32 %xor_ln66_73, i32 264347078" [sha256.cpp:66]   --->   Operation 998 'add' 'add_ln66_73' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 999 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_74 = add i32 %add_ln66_73, i32 %e_47" [sha256.cpp:66]   --->   Operation 999 'add' 'add_ln66_74' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 1000 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_18 = add i32 %add_ln66_74, i32 %add_ln66_72" [sha256.cpp:66]   --->   Operation 1000 'add' 't1_18' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 1001 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_73)   --->   "%lshr_ln67_53 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_50, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1001 'partselect' 'lshr_ln67_53' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 1002 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_73)   --->   "%trunc_ln67_54 = trunc i32 %a_50" [sha256.cpp:67]   --->   Operation 1002 'trunc' 'trunc_ln67_54' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 1003 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_73)   --->   "%or_ln67_53 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_54, i30 %lshr_ln67_53" [sha256.cpp:67]   --->   Operation 1003 'bitconcatenate' 'or_ln67_53' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 1004 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_73)   --->   "%lshr_ln67_54 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_50, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1004 'partselect' 'lshr_ln67_54' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 1005 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_73)   --->   "%trunc_ln67_55 = trunc i32 %a_50" [sha256.cpp:67]   --->   Operation 1005 'trunc' 'trunc_ln67_55' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 1006 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_73)   --->   "%or_ln67_54 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_55, i19 %lshr_ln67_54" [sha256.cpp:67]   --->   Operation 1006 'bitconcatenate' 'or_ln67_54' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 1007 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_73)   --->   "%lshr_ln67_55 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_50, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1007 'partselect' 'lshr_ln67_55' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 1008 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_73)   --->   "%trunc_ln67_56 = trunc i32 %a_50" [sha256.cpp:67]   --->   Operation 1008 'trunc' 'trunc_ln67_56' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 1009 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_73)   --->   "%or_ln67_55 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_56, i10 %lshr_ln67_55" [sha256.cpp:67]   --->   Operation 1009 'bitconcatenate' 'or_ln67_55' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 1010 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_73)   --->   "%xor_ln67_72 = xor i32 %or_ln67_53, i32 %or_ln67_54" [sha256.cpp:67]   --->   Operation 1010 'xor' 'xor_ln67_72' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 1011 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_73 = xor i32 %xor_ln67_72, i32 %or_ln67_55" [sha256.cpp:67]   --->   Operation 1011 'xor' 'xor_ln67_73' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 1012 [1/1] (1.14ns)   --->   "%e_51 = add i32 %t1_18, i32 %a_47" [sha256.cpp:71]   --->   Operation 1012 'add' 'e_51' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 1013 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_77)   --->   "%lshr_ln66_56 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_51, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1013 'partselect' 'lshr_ln66_56' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 1014 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_77)   --->   "%trunc_ln66_57 = trunc i32 %e_51" [sha256.cpp:66]   --->   Operation 1014 'trunc' 'trunc_ln66_57' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 1015 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_77)   --->   "%or_ln66_56 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_57, i26 %lshr_ln66_56" [sha256.cpp:66]   --->   Operation 1015 'bitconcatenate' 'or_ln66_56' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 1016 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_77)   --->   "%lshr_ln66_57 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_51, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1016 'partselect' 'lshr_ln66_57' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 1017 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_77)   --->   "%trunc_ln66_58 = trunc i32 %e_51" [sha256.cpp:66]   --->   Operation 1017 'trunc' 'trunc_ln66_58' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 1018 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_77)   --->   "%or_ln66_57 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_58, i21 %lshr_ln66_57" [sha256.cpp:66]   --->   Operation 1018 'bitconcatenate' 'or_ln66_57' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 1019 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_77)   --->   "%lshr_ln66_58 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_51, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1019 'partselect' 'lshr_ln66_58' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 1020 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_77)   --->   "%trunc_ln66_59 = trunc i32 %e_51" [sha256.cpp:66]   --->   Operation 1020 'trunc' 'trunc_ln66_59' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 1021 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_77)   --->   "%or_ln66_58 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_59, i7 %lshr_ln66_58" [sha256.cpp:66]   --->   Operation 1021 'bitconcatenate' 'or_ln66_58' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 1022 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_77)   --->   "%xor_ln66_76 = xor i32 %or_ln66_56, i32 %or_ln66_57" [sha256.cpp:66]   --->   Operation 1022 'xor' 'xor_ln66_76' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 1023 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_77 = xor i32 %xor_ln66_76, i32 %or_ln66_58" [sha256.cpp:66]   --->   Operation 1023 'xor' 'xor_ln66_77' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 1024 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_79)   --->   "%and_ln66_38 = and i32 %e_51, i32 %e_50" [sha256.cpp:66]   --->   Operation 1024 'and' 'and_ln66_38' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 1025 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_79)   --->   "%xor_ln66_78 = xor i32 %e_51, i32 4294967295" [sha256.cpp:66]   --->   Operation 1025 'xor' 'xor_ln66_78' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 1026 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_79)   --->   "%and_ln66_39 = and i32 %e_49, i32 %xor_ln66_78" [sha256.cpp:66]   --->   Operation 1026 'and' 'and_ln66_39' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 1027 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_79 = xor i32 %and_ln66_38, i32 %and_ln66_39" [sha256.cpp:66]   --->   Operation 1027 'xor' 'xor_ln66_79' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 1028 [1/2] (1.29ns)   --->   "%m_load_19 = load i6 %m_addr_19" [sha256.cpp:66]   --->   Operation 1028 'load' 'm_load_19' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_31 : Operation 1029 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_76 = add i32 %m_load_19, i32 %xor_ln66_79" [sha256.cpp:66]   --->   Operation 1029 'add' 'add_ln66_76' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 1030 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_77 = add i32 %xor_ln66_77, i32 604807628" [sha256.cpp:66]   --->   Operation 1030 'add' 'add_ln66_77' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 1031 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_78 = add i32 %add_ln66_77, i32 %e_48" [sha256.cpp:66]   --->   Operation 1031 'add' 'add_ln66_78' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 1032 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_19 = add i32 %add_ln66_78, i32 %add_ln66_76" [sha256.cpp:66]   --->   Operation 1032 'add' 't1_19' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 1033 [1/1] (0.00ns)   --->   "%m_addr_20 = getelementptr i32 %m, i64 0, i64 20" [sha256.cpp:66]   --->   Operation 1033 'getelementptr' 'm_addr_20' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 1034 [2/2] (1.29ns)   --->   "%m_load_20 = load i6 %m_addr_20" [sha256.cpp:66]   --->   Operation 1034 'load' 'm_load_20' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_31 : Operation 1035 [1/1] (0.00ns)   --->   "%m_addr_21 = getelementptr i32 %m, i64 0, i64 21" [sha256.cpp:66]   --->   Operation 1035 'getelementptr' 'm_addr_21' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 1036 [2/2] (1.29ns)   --->   "%m_load_21 = load i6 %m_addr_21" [sha256.cpp:66]   --->   Operation 1036 'load' 'm_load_21' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 32 <SV = 30> <Delay = 6.49>
ST_32 : Operation 1037 [1/1] (0.28ns)   --->   "%and_ln67_37 = and i32 %a_50, i32 %a_49" [sha256.cpp:67]   --->   Operation 1037 'and' 'and_ln67_37' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1038 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_75)   --->   "%and_ln67_38 = and i32 %a_50, i32 %a_48" [sha256.cpp:67]   --->   Operation 1038 'and' 'and_ln67_38' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1039 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_75)   --->   "%xor_ln67_74 = xor i32 %and_ln67_35, i32 %and_ln67_38" [sha256.cpp:67]   --->   Operation 1039 'xor' 'xor_ln67_74' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1040 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_75 = xor i32 %xor_ln67_74, i32 %and_ln67_37" [sha256.cpp:67]   --->   Operation 1040 'xor' 'xor_ln67_75' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1041 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_36 = add i32 %xor_ln67_75, i32 %t1_18" [sha256.cpp:75]   --->   Operation 1041 'add' 'add_ln75_36' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 1042 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_51 = add i32 %add_ln75_36, i32 %xor_ln67_73" [sha256.cpp:75]   --->   Operation 1042 'add' 'a_51' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 1043 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_77)   --->   "%lshr_ln67_56 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_51, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1043 'partselect' 'lshr_ln67_56' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1044 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_77)   --->   "%trunc_ln67_57 = trunc i32 %a_51" [sha256.cpp:67]   --->   Operation 1044 'trunc' 'trunc_ln67_57' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1045 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_77)   --->   "%or_ln67_56 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_57, i30 %lshr_ln67_56" [sha256.cpp:67]   --->   Operation 1045 'bitconcatenate' 'or_ln67_56' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1046 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_77)   --->   "%lshr_ln67_57 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_51, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1046 'partselect' 'lshr_ln67_57' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1047 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_77)   --->   "%trunc_ln67_58 = trunc i32 %a_51" [sha256.cpp:67]   --->   Operation 1047 'trunc' 'trunc_ln67_58' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1048 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_77)   --->   "%or_ln67_57 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_58, i19 %lshr_ln67_57" [sha256.cpp:67]   --->   Operation 1048 'bitconcatenate' 'or_ln67_57' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1049 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_77)   --->   "%lshr_ln67_58 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_51, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1049 'partselect' 'lshr_ln67_58' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1050 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_77)   --->   "%trunc_ln67_59 = trunc i32 %a_51" [sha256.cpp:67]   --->   Operation 1050 'trunc' 'trunc_ln67_59' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1051 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_77)   --->   "%or_ln67_58 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_59, i10 %lshr_ln67_58" [sha256.cpp:67]   --->   Operation 1051 'bitconcatenate' 'or_ln67_58' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1052 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_77)   --->   "%xor_ln67_76 = xor i32 %or_ln67_56, i32 %or_ln67_57" [sha256.cpp:67]   --->   Operation 1052 'xor' 'xor_ln67_76' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1053 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_77 = xor i32 %xor_ln67_76, i32 %or_ln67_58" [sha256.cpp:67]   --->   Operation 1053 'xor' 'xor_ln67_77' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1054 [1/1] (0.28ns)   --->   "%and_ln67_39 = and i32 %a_51, i32 %a_50" [sha256.cpp:67]   --->   Operation 1054 'and' 'and_ln67_39' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1055 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_79)   --->   "%and_ln67_40 = and i32 %a_51, i32 %a_49" [sha256.cpp:67]   --->   Operation 1055 'and' 'and_ln67_40' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1056 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_79)   --->   "%xor_ln67_78 = xor i32 %and_ln67_37, i32 %and_ln67_40" [sha256.cpp:67]   --->   Operation 1056 'xor' 'xor_ln67_78' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1057 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_79 = xor i32 %xor_ln67_78, i32 %and_ln67_39" [sha256.cpp:67]   --->   Operation 1057 'xor' 'xor_ln67_79' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1058 [1/1] (1.14ns)   --->   "%e_52 = add i32 %t1_19, i32 %a_48" [sha256.cpp:71]   --->   Operation 1058 'add' 'e_52' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1059 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_38 = add i32 %xor_ln67_79, i32 %t1_19" [sha256.cpp:75]   --->   Operation 1059 'add' 'add_ln75_38' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 1060 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_52 = add i32 %add_ln75_38, i32 %xor_ln67_77" [sha256.cpp:75]   --->   Operation 1060 'add' 'a_52' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 1061 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_81)   --->   "%lshr_ln66_59 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_52, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1061 'partselect' 'lshr_ln66_59' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1062 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_81)   --->   "%trunc_ln66_60 = trunc i32 %e_52" [sha256.cpp:66]   --->   Operation 1062 'trunc' 'trunc_ln66_60' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1063 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_81)   --->   "%or_ln66_59 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_60, i26 %lshr_ln66_59" [sha256.cpp:66]   --->   Operation 1063 'bitconcatenate' 'or_ln66_59' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1064 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_81)   --->   "%lshr_ln66_60 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_52, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1064 'partselect' 'lshr_ln66_60' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1065 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_81)   --->   "%trunc_ln66_61 = trunc i32 %e_52" [sha256.cpp:66]   --->   Operation 1065 'trunc' 'trunc_ln66_61' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1066 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_81)   --->   "%or_ln66_60 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_61, i21 %lshr_ln66_60" [sha256.cpp:66]   --->   Operation 1066 'bitconcatenate' 'or_ln66_60' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1067 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_81)   --->   "%lshr_ln66_61 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_52, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1067 'partselect' 'lshr_ln66_61' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1068 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_81)   --->   "%trunc_ln66_62 = trunc i32 %e_52" [sha256.cpp:66]   --->   Operation 1068 'trunc' 'trunc_ln66_62' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1069 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_81)   --->   "%or_ln66_61 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_62, i7 %lshr_ln66_61" [sha256.cpp:66]   --->   Operation 1069 'bitconcatenate' 'or_ln66_61' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1070 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_81)   --->   "%xor_ln66_80 = xor i32 %or_ln66_59, i32 %or_ln66_60" [sha256.cpp:66]   --->   Operation 1070 'xor' 'xor_ln66_80' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1071 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_81 = xor i32 %xor_ln66_80, i32 %or_ln66_61" [sha256.cpp:66]   --->   Operation 1071 'xor' 'xor_ln66_81' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1072 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_83)   --->   "%and_ln66_40 = and i32 %e_52, i32 %e_51" [sha256.cpp:66]   --->   Operation 1072 'and' 'and_ln66_40' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1073 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_83)   --->   "%xor_ln66_82 = xor i32 %e_52, i32 4294967295" [sha256.cpp:66]   --->   Operation 1073 'xor' 'xor_ln66_82' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1074 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_83)   --->   "%and_ln66_41 = and i32 %e_50, i32 %xor_ln66_82" [sha256.cpp:66]   --->   Operation 1074 'and' 'and_ln66_41' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1075 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_83 = xor i32 %and_ln66_40, i32 %and_ln66_41" [sha256.cpp:66]   --->   Operation 1075 'xor' 'xor_ln66_83' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1076 [1/2] (1.29ns)   --->   "%m_load_20 = load i6 %m_addr_20" [sha256.cpp:66]   --->   Operation 1076 'load' 'm_load_20' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_32 : Operation 1077 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_80 = add i32 %m_load_20, i32 %xor_ln66_83" [sha256.cpp:66]   --->   Operation 1077 'add' 'add_ln66_80' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 1078 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_81 = add i32 %xor_ln66_81, i32 770255983" [sha256.cpp:66]   --->   Operation 1078 'add' 'add_ln66_81' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 1079 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_82 = add i32 %add_ln66_81, i32 %e_49" [sha256.cpp:66]   --->   Operation 1079 'add' 'add_ln66_82' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 1080 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_20 = add i32 %add_ln66_82, i32 %add_ln66_80" [sha256.cpp:66]   --->   Operation 1080 'add' 't1_20' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 1081 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_81)   --->   "%lshr_ln67_59 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_52, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1081 'partselect' 'lshr_ln67_59' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1082 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_81)   --->   "%trunc_ln67_60 = trunc i32 %a_52" [sha256.cpp:67]   --->   Operation 1082 'trunc' 'trunc_ln67_60' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1083 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_81)   --->   "%or_ln67_59 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_60, i30 %lshr_ln67_59" [sha256.cpp:67]   --->   Operation 1083 'bitconcatenate' 'or_ln67_59' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1084 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_81)   --->   "%lshr_ln67_60 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_52, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1084 'partselect' 'lshr_ln67_60' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1085 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_81)   --->   "%trunc_ln67_61 = trunc i32 %a_52" [sha256.cpp:67]   --->   Operation 1085 'trunc' 'trunc_ln67_61' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1086 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_81)   --->   "%or_ln67_60 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_61, i19 %lshr_ln67_60" [sha256.cpp:67]   --->   Operation 1086 'bitconcatenate' 'or_ln67_60' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1087 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_81)   --->   "%lshr_ln67_61 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_52, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1087 'partselect' 'lshr_ln67_61' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1088 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_81)   --->   "%trunc_ln67_62 = trunc i32 %a_52" [sha256.cpp:67]   --->   Operation 1088 'trunc' 'trunc_ln67_62' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1089 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_81)   --->   "%or_ln67_61 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_62, i10 %lshr_ln67_61" [sha256.cpp:67]   --->   Operation 1089 'bitconcatenate' 'or_ln67_61' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1090 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_81)   --->   "%xor_ln67_80 = xor i32 %or_ln67_59, i32 %or_ln67_60" [sha256.cpp:67]   --->   Operation 1090 'xor' 'xor_ln67_80' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1091 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_81 = xor i32 %xor_ln67_80, i32 %or_ln67_61" [sha256.cpp:67]   --->   Operation 1091 'xor' 'xor_ln67_81' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1092 [1/1] (0.28ns)   --->   "%and_ln67_41 = and i32 %a_52, i32 %a_51" [sha256.cpp:67]   --->   Operation 1092 'and' 'and_ln67_41' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1093 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_83)   --->   "%and_ln67_42 = and i32 %a_52, i32 %a_50" [sha256.cpp:67]   --->   Operation 1093 'and' 'and_ln67_42' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1094 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_83)   --->   "%xor_ln67_82 = xor i32 %and_ln67_39, i32 %and_ln67_42" [sha256.cpp:67]   --->   Operation 1094 'xor' 'xor_ln67_82' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1095 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_83 = xor i32 %xor_ln67_82, i32 %and_ln67_41" [sha256.cpp:67]   --->   Operation 1095 'xor' 'xor_ln67_83' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1096 [1/1] (1.14ns)   --->   "%e_53 = add i32 %t1_20, i32 %a_49" [sha256.cpp:71]   --->   Operation 1096 'add' 'e_53' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1097 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_40 = add i32 %xor_ln67_83, i32 %t1_20" [sha256.cpp:75]   --->   Operation 1097 'add' 'add_ln75_40' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 1098 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_53 = add i32 %add_ln75_40, i32 %xor_ln67_81" [sha256.cpp:75]   --->   Operation 1098 'add' 'a_53' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 1099 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_85)   --->   "%lshr_ln66_62 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_53, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1099 'partselect' 'lshr_ln66_62' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1100 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_85)   --->   "%trunc_ln66_63 = trunc i32 %e_53" [sha256.cpp:66]   --->   Operation 1100 'trunc' 'trunc_ln66_63' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1101 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_85)   --->   "%or_ln66_62 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_63, i26 %lshr_ln66_62" [sha256.cpp:66]   --->   Operation 1101 'bitconcatenate' 'or_ln66_62' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1102 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_85)   --->   "%lshr_ln66_63 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_53, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1102 'partselect' 'lshr_ln66_63' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1103 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_85)   --->   "%trunc_ln66_64 = trunc i32 %e_53" [sha256.cpp:66]   --->   Operation 1103 'trunc' 'trunc_ln66_64' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1104 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_85)   --->   "%or_ln66_63 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_64, i21 %lshr_ln66_63" [sha256.cpp:66]   --->   Operation 1104 'bitconcatenate' 'or_ln66_63' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1105 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_85)   --->   "%lshr_ln66_64 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_53, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1105 'partselect' 'lshr_ln66_64' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1106 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_85)   --->   "%trunc_ln66_65 = trunc i32 %e_53" [sha256.cpp:66]   --->   Operation 1106 'trunc' 'trunc_ln66_65' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1107 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_85)   --->   "%or_ln66_64 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_65, i7 %lshr_ln66_64" [sha256.cpp:66]   --->   Operation 1107 'bitconcatenate' 'or_ln66_64' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1108 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_85)   --->   "%xor_ln66_84 = xor i32 %or_ln66_62, i32 %or_ln66_63" [sha256.cpp:66]   --->   Operation 1108 'xor' 'xor_ln66_84' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1109 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_85 = xor i32 %xor_ln66_84, i32 %or_ln66_64" [sha256.cpp:66]   --->   Operation 1109 'xor' 'xor_ln66_85' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1110 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_87)   --->   "%and_ln66_42 = and i32 %e_53, i32 %e_52" [sha256.cpp:66]   --->   Operation 1110 'and' 'and_ln66_42' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1111 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_87)   --->   "%xor_ln66_86 = xor i32 %e_53, i32 4294967295" [sha256.cpp:66]   --->   Operation 1111 'xor' 'xor_ln66_86' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1112 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_87)   --->   "%and_ln66_43 = and i32 %e_51, i32 %xor_ln66_86" [sha256.cpp:66]   --->   Operation 1112 'and' 'and_ln66_43' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1113 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_87 = xor i32 %and_ln66_42, i32 %and_ln66_43" [sha256.cpp:66]   --->   Operation 1113 'xor' 'xor_ln66_87' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1114 [1/2] (1.29ns)   --->   "%m_load_21 = load i6 %m_addr_21" [sha256.cpp:66]   --->   Operation 1114 'load' 'm_load_21' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_32 : Operation 1115 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_84 = add i32 %m_load_21, i32 %xor_ln66_87" [sha256.cpp:66]   --->   Operation 1115 'add' 'add_ln66_84' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 1116 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_85 = add i32 %xor_ln66_85, i32 1249150122" [sha256.cpp:66]   --->   Operation 1116 'add' 'add_ln66_85' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 1117 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_86 = add i32 %add_ln66_85, i32 %e_50" [sha256.cpp:66]   --->   Operation 1117 'add' 'add_ln66_86' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 1118 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_21 = add i32 %add_ln66_86, i32 %add_ln66_84" [sha256.cpp:66]   --->   Operation 1118 'add' 't1_21' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 1119 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_85)   --->   "%lshr_ln67_62 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_53, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1119 'partselect' 'lshr_ln67_62' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1120 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_85)   --->   "%trunc_ln67_63 = trunc i32 %a_53" [sha256.cpp:67]   --->   Operation 1120 'trunc' 'trunc_ln67_63' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1121 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_85)   --->   "%or_ln67_62 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_63, i30 %lshr_ln67_62" [sha256.cpp:67]   --->   Operation 1121 'bitconcatenate' 'or_ln67_62' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1122 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_85)   --->   "%lshr_ln67_63 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_53, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1122 'partselect' 'lshr_ln67_63' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1123 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_85)   --->   "%trunc_ln67_64 = trunc i32 %a_53" [sha256.cpp:67]   --->   Operation 1123 'trunc' 'trunc_ln67_64' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1124 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_85)   --->   "%or_ln67_63 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_64, i19 %lshr_ln67_63" [sha256.cpp:67]   --->   Operation 1124 'bitconcatenate' 'or_ln67_63' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1125 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_85)   --->   "%lshr_ln67_64 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_53, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1125 'partselect' 'lshr_ln67_64' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1126 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_85)   --->   "%trunc_ln67_65 = trunc i32 %a_53" [sha256.cpp:67]   --->   Operation 1126 'trunc' 'trunc_ln67_65' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1127 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_85)   --->   "%or_ln67_64 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_65, i10 %lshr_ln67_64" [sha256.cpp:67]   --->   Operation 1127 'bitconcatenate' 'or_ln67_64' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1128 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_85)   --->   "%xor_ln67_84 = xor i32 %or_ln67_62, i32 %or_ln67_63" [sha256.cpp:67]   --->   Operation 1128 'xor' 'xor_ln67_84' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1129 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_85 = xor i32 %xor_ln67_84, i32 %or_ln67_64" [sha256.cpp:67]   --->   Operation 1129 'xor' 'xor_ln67_85' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 1130 [1/1] (0.00ns)   --->   "%m_addr_22 = getelementptr i32 %m, i64 0, i64 22" [sha256.cpp:66]   --->   Operation 1130 'getelementptr' 'm_addr_22' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1131 [2/2] (1.29ns)   --->   "%m_load_22 = load i6 %m_addr_22" [sha256.cpp:66]   --->   Operation 1131 'load' 'm_load_22' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_32 : Operation 1132 [1/1] (0.00ns)   --->   "%m_addr_23 = getelementptr i32 %m, i64 0, i64 23" [sha256.cpp:66]   --->   Operation 1132 'getelementptr' 'm_addr_23' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 1133 [2/2] (1.29ns)   --->   "%m_load_23 = load i6 %m_addr_23" [sha256.cpp:66]   --->   Operation 1133 'load' 'm_load_23' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 33 <SV = 31> <Delay = 6.49>
ST_33 : Operation 1134 [1/1] (0.28ns)   --->   "%and_ln67_43 = and i32 %a_53, i32 %a_52" [sha256.cpp:67]   --->   Operation 1134 'and' 'and_ln67_43' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1135 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_87)   --->   "%and_ln67_44 = and i32 %a_53, i32 %a_51" [sha256.cpp:67]   --->   Operation 1135 'and' 'and_ln67_44' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1136 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_87)   --->   "%xor_ln67_86 = xor i32 %and_ln67_41, i32 %and_ln67_44" [sha256.cpp:67]   --->   Operation 1136 'xor' 'xor_ln67_86' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1137 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_87 = xor i32 %xor_ln67_86, i32 %and_ln67_43" [sha256.cpp:67]   --->   Operation 1137 'xor' 'xor_ln67_87' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1138 [1/1] (1.14ns)   --->   "%e_54 = add i32 %t1_21, i32 %a_50" [sha256.cpp:71]   --->   Operation 1138 'add' 'e_54' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1139 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_42 = add i32 %xor_ln67_87, i32 %t1_21" [sha256.cpp:75]   --->   Operation 1139 'add' 'add_ln75_42' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 1140 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_54 = add i32 %add_ln75_42, i32 %xor_ln67_85" [sha256.cpp:75]   --->   Operation 1140 'add' 'a_54' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 1141 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_89)   --->   "%lshr_ln66_65 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_54, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1141 'partselect' 'lshr_ln66_65' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1142 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_89)   --->   "%trunc_ln66_66 = trunc i32 %e_54" [sha256.cpp:66]   --->   Operation 1142 'trunc' 'trunc_ln66_66' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1143 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_89)   --->   "%or_ln66_65 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_66, i26 %lshr_ln66_65" [sha256.cpp:66]   --->   Operation 1143 'bitconcatenate' 'or_ln66_65' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1144 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_89)   --->   "%lshr_ln66_66 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_54, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1144 'partselect' 'lshr_ln66_66' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1145 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_89)   --->   "%trunc_ln66_67 = trunc i32 %e_54" [sha256.cpp:66]   --->   Operation 1145 'trunc' 'trunc_ln66_67' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1146 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_89)   --->   "%or_ln66_66 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_67, i21 %lshr_ln66_66" [sha256.cpp:66]   --->   Operation 1146 'bitconcatenate' 'or_ln66_66' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1147 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_89)   --->   "%lshr_ln66_67 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_54, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1147 'partselect' 'lshr_ln66_67' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1148 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_89)   --->   "%trunc_ln66_68 = trunc i32 %e_54" [sha256.cpp:66]   --->   Operation 1148 'trunc' 'trunc_ln66_68' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1149 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_89)   --->   "%or_ln66_67 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_68, i7 %lshr_ln66_67" [sha256.cpp:66]   --->   Operation 1149 'bitconcatenate' 'or_ln66_67' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1150 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_89)   --->   "%xor_ln66_88 = xor i32 %or_ln66_65, i32 %or_ln66_66" [sha256.cpp:66]   --->   Operation 1150 'xor' 'xor_ln66_88' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1151 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_89 = xor i32 %xor_ln66_88, i32 %or_ln66_67" [sha256.cpp:66]   --->   Operation 1151 'xor' 'xor_ln66_89' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1152 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_91)   --->   "%and_ln66_44 = and i32 %e_54, i32 %e_53" [sha256.cpp:66]   --->   Operation 1152 'and' 'and_ln66_44' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1153 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_91)   --->   "%xor_ln66_90 = xor i32 %e_54, i32 4294967295" [sha256.cpp:66]   --->   Operation 1153 'xor' 'xor_ln66_90' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1154 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_91)   --->   "%and_ln66_45 = and i32 %e_52, i32 %xor_ln66_90" [sha256.cpp:66]   --->   Operation 1154 'and' 'and_ln66_45' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1155 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_91 = xor i32 %and_ln66_44, i32 %and_ln66_45" [sha256.cpp:66]   --->   Operation 1155 'xor' 'xor_ln66_91' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1156 [1/2] (1.29ns)   --->   "%m_load_22 = load i6 %m_addr_22" [sha256.cpp:66]   --->   Operation 1156 'load' 'm_load_22' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_33 : Operation 1157 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_88 = add i32 %m_load_22, i32 %xor_ln66_91" [sha256.cpp:66]   --->   Operation 1157 'add' 'add_ln66_88' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 1158 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_89 = add i32 %xor_ln66_89, i32 1555081692" [sha256.cpp:66]   --->   Operation 1158 'add' 'add_ln66_89' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 1159 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_90 = add i32 %add_ln66_89, i32 %e_51" [sha256.cpp:66]   --->   Operation 1159 'add' 'add_ln66_90' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 1160 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_22 = add i32 %add_ln66_90, i32 %add_ln66_88" [sha256.cpp:66]   --->   Operation 1160 'add' 't1_22' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 1161 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_89)   --->   "%lshr_ln67_65 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_54, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1161 'partselect' 'lshr_ln67_65' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1162 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_89)   --->   "%trunc_ln67_66 = trunc i32 %a_54" [sha256.cpp:67]   --->   Operation 1162 'trunc' 'trunc_ln67_66' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1163 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_89)   --->   "%or_ln67_65 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_66, i30 %lshr_ln67_65" [sha256.cpp:67]   --->   Operation 1163 'bitconcatenate' 'or_ln67_65' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1164 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_89)   --->   "%lshr_ln67_66 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_54, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1164 'partselect' 'lshr_ln67_66' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1165 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_89)   --->   "%trunc_ln67_67 = trunc i32 %a_54" [sha256.cpp:67]   --->   Operation 1165 'trunc' 'trunc_ln67_67' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1166 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_89)   --->   "%or_ln67_66 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_67, i19 %lshr_ln67_66" [sha256.cpp:67]   --->   Operation 1166 'bitconcatenate' 'or_ln67_66' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1167 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_89)   --->   "%lshr_ln67_67 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_54, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1167 'partselect' 'lshr_ln67_67' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1168 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_89)   --->   "%trunc_ln67_68 = trunc i32 %a_54" [sha256.cpp:67]   --->   Operation 1168 'trunc' 'trunc_ln67_68' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1169 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_89)   --->   "%or_ln67_67 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_68, i10 %lshr_ln67_67" [sha256.cpp:67]   --->   Operation 1169 'bitconcatenate' 'or_ln67_67' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1170 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_89)   --->   "%xor_ln67_88 = xor i32 %or_ln67_65, i32 %or_ln67_66" [sha256.cpp:67]   --->   Operation 1170 'xor' 'xor_ln67_88' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1171 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_89 = xor i32 %xor_ln67_88, i32 %or_ln67_67" [sha256.cpp:67]   --->   Operation 1171 'xor' 'xor_ln67_89' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1172 [1/1] (0.28ns)   --->   "%and_ln67_45 = and i32 %a_54, i32 %a_53" [sha256.cpp:67]   --->   Operation 1172 'and' 'and_ln67_45' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1173 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_91)   --->   "%and_ln67_46 = and i32 %a_54, i32 %a_52" [sha256.cpp:67]   --->   Operation 1173 'and' 'and_ln67_46' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1174 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_91)   --->   "%xor_ln67_90 = xor i32 %and_ln67_43, i32 %and_ln67_46" [sha256.cpp:67]   --->   Operation 1174 'xor' 'xor_ln67_90' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1175 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_91 = xor i32 %xor_ln67_90, i32 %and_ln67_45" [sha256.cpp:67]   --->   Operation 1175 'xor' 'xor_ln67_91' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1176 [1/1] (1.14ns)   --->   "%e_55 = add i32 %t1_22, i32 %a_51" [sha256.cpp:71]   --->   Operation 1176 'add' 'e_55' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1177 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_44 = add i32 %xor_ln67_91, i32 %t1_22" [sha256.cpp:75]   --->   Operation 1177 'add' 'add_ln75_44' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 1178 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_55 = add i32 %add_ln75_44, i32 %xor_ln67_89" [sha256.cpp:75]   --->   Operation 1178 'add' 'a_55' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 1179 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_93)   --->   "%lshr_ln66_68 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_55, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1179 'partselect' 'lshr_ln66_68' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1180 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_93)   --->   "%trunc_ln66_69 = trunc i32 %e_55" [sha256.cpp:66]   --->   Operation 1180 'trunc' 'trunc_ln66_69' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1181 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_93)   --->   "%or_ln66_68 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_69, i26 %lshr_ln66_68" [sha256.cpp:66]   --->   Operation 1181 'bitconcatenate' 'or_ln66_68' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1182 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_93)   --->   "%lshr_ln66_69 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_55, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1182 'partselect' 'lshr_ln66_69' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1183 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_93)   --->   "%trunc_ln66_70 = trunc i32 %e_55" [sha256.cpp:66]   --->   Operation 1183 'trunc' 'trunc_ln66_70' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1184 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_93)   --->   "%or_ln66_69 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_70, i21 %lshr_ln66_69" [sha256.cpp:66]   --->   Operation 1184 'bitconcatenate' 'or_ln66_69' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1185 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_93)   --->   "%lshr_ln66_70 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_55, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1185 'partselect' 'lshr_ln66_70' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1186 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_93)   --->   "%trunc_ln66_71 = trunc i32 %e_55" [sha256.cpp:66]   --->   Operation 1186 'trunc' 'trunc_ln66_71' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1187 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_93)   --->   "%or_ln66_70 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_71, i7 %lshr_ln66_70" [sha256.cpp:66]   --->   Operation 1187 'bitconcatenate' 'or_ln66_70' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1188 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_93)   --->   "%xor_ln66_92 = xor i32 %or_ln66_68, i32 %or_ln66_69" [sha256.cpp:66]   --->   Operation 1188 'xor' 'xor_ln66_92' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1189 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_93 = xor i32 %xor_ln66_92, i32 %or_ln66_70" [sha256.cpp:66]   --->   Operation 1189 'xor' 'xor_ln66_93' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1190 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_95)   --->   "%and_ln66_46 = and i32 %e_55, i32 %e_54" [sha256.cpp:66]   --->   Operation 1190 'and' 'and_ln66_46' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1191 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_95)   --->   "%xor_ln66_94 = xor i32 %e_55, i32 4294967295" [sha256.cpp:66]   --->   Operation 1191 'xor' 'xor_ln66_94' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1192 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_95)   --->   "%and_ln66_47 = and i32 %e_53, i32 %xor_ln66_94" [sha256.cpp:66]   --->   Operation 1192 'and' 'and_ln66_47' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1193 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_95 = xor i32 %and_ln66_46, i32 %and_ln66_47" [sha256.cpp:66]   --->   Operation 1193 'xor' 'xor_ln66_95' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1194 [1/2] (1.29ns)   --->   "%m_load_23 = load i6 %m_addr_23" [sha256.cpp:66]   --->   Operation 1194 'load' 'm_load_23' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_33 : Operation 1195 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_92 = add i32 %m_load_23, i32 %xor_ln66_95" [sha256.cpp:66]   --->   Operation 1195 'add' 'add_ln66_92' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 1196 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_93 = add i32 %xor_ln66_93, i32 1996064986" [sha256.cpp:66]   --->   Operation 1196 'add' 'add_ln66_93' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 1197 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_94 = add i32 %add_ln66_93, i32 %e_52" [sha256.cpp:66]   --->   Operation 1197 'add' 'add_ln66_94' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 1198 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_23 = add i32 %add_ln66_94, i32 %add_ln66_92" [sha256.cpp:66]   --->   Operation 1198 'add' 't1_23' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 1199 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_93)   --->   "%lshr_ln67_68 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_55, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1199 'partselect' 'lshr_ln67_68' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1200 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_93)   --->   "%trunc_ln67_69 = trunc i32 %a_55" [sha256.cpp:67]   --->   Operation 1200 'trunc' 'trunc_ln67_69' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1201 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_93)   --->   "%or_ln67_68 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_69, i30 %lshr_ln67_68" [sha256.cpp:67]   --->   Operation 1201 'bitconcatenate' 'or_ln67_68' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1202 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_93)   --->   "%lshr_ln67_69 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_55, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1202 'partselect' 'lshr_ln67_69' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1203 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_93)   --->   "%trunc_ln67_70 = trunc i32 %a_55" [sha256.cpp:67]   --->   Operation 1203 'trunc' 'trunc_ln67_70' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1204 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_93)   --->   "%or_ln67_69 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_70, i19 %lshr_ln67_69" [sha256.cpp:67]   --->   Operation 1204 'bitconcatenate' 'or_ln67_69' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1205 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_93)   --->   "%lshr_ln67_70 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_55, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1205 'partselect' 'lshr_ln67_70' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1206 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_93)   --->   "%trunc_ln67_71 = trunc i32 %a_55" [sha256.cpp:67]   --->   Operation 1206 'trunc' 'trunc_ln67_71' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1207 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_93)   --->   "%or_ln67_70 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_71, i10 %lshr_ln67_70" [sha256.cpp:67]   --->   Operation 1207 'bitconcatenate' 'or_ln67_70' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1208 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_93)   --->   "%xor_ln67_92 = xor i32 %or_ln67_68, i32 %or_ln67_69" [sha256.cpp:67]   --->   Operation 1208 'xor' 'xor_ln67_92' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1209 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_93 = xor i32 %xor_ln67_92, i32 %or_ln67_70" [sha256.cpp:67]   --->   Operation 1209 'xor' 'xor_ln67_93' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 1210 [1/1] (0.00ns)   --->   "%m_addr_24 = getelementptr i32 %m, i64 0, i64 24" [sha256.cpp:66]   --->   Operation 1210 'getelementptr' 'm_addr_24' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1211 [2/2] (1.29ns)   --->   "%m_load_24 = load i6 %m_addr_24" [sha256.cpp:66]   --->   Operation 1211 'load' 'm_load_24' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_33 : Operation 1212 [1/1] (0.00ns)   --->   "%m_addr_25 = getelementptr i32 %m, i64 0, i64 25" [sha256.cpp:66]   --->   Operation 1212 'getelementptr' 'm_addr_25' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 1213 [2/2] (1.29ns)   --->   "%m_load_25 = load i6 %m_addr_25" [sha256.cpp:66]   --->   Operation 1213 'load' 'm_load_25' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 34 <SV = 32> <Delay = 6.49>
ST_34 : Operation 1214 [1/1] (0.28ns)   --->   "%and_ln67_47 = and i32 %a_55, i32 %a_54" [sha256.cpp:67]   --->   Operation 1214 'and' 'and_ln67_47' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 1215 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_95)   --->   "%and_ln67_48 = and i32 %a_55, i32 %a_53" [sha256.cpp:67]   --->   Operation 1215 'and' 'and_ln67_48' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 1216 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_95)   --->   "%xor_ln67_94 = xor i32 %and_ln67_45, i32 %and_ln67_48" [sha256.cpp:67]   --->   Operation 1216 'xor' 'xor_ln67_94' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 1217 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_95 = xor i32 %xor_ln67_94, i32 %and_ln67_47" [sha256.cpp:67]   --->   Operation 1217 'xor' 'xor_ln67_95' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 1218 [1/1] (1.14ns)   --->   "%e_56 = add i32 %t1_23, i32 %a_52" [sha256.cpp:71]   --->   Operation 1218 'add' 'e_56' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 1219 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_46 = add i32 %xor_ln67_95, i32 %t1_23" [sha256.cpp:75]   --->   Operation 1219 'add' 'add_ln75_46' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 1220 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_56 = add i32 %add_ln75_46, i32 %xor_ln67_93" [sha256.cpp:75]   --->   Operation 1220 'add' 'a_56' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 1221 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_97)   --->   "%lshr_ln66_71 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_56, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1221 'partselect' 'lshr_ln66_71' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1222 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_97)   --->   "%trunc_ln66_72 = trunc i32 %e_56" [sha256.cpp:66]   --->   Operation 1222 'trunc' 'trunc_ln66_72' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1223 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_97)   --->   "%or_ln66_71 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_72, i26 %lshr_ln66_71" [sha256.cpp:66]   --->   Operation 1223 'bitconcatenate' 'or_ln66_71' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1224 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_97)   --->   "%lshr_ln66_72 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_56, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1224 'partselect' 'lshr_ln66_72' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1225 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_97)   --->   "%trunc_ln66_73 = trunc i32 %e_56" [sha256.cpp:66]   --->   Operation 1225 'trunc' 'trunc_ln66_73' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1226 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_97)   --->   "%or_ln66_72 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_73, i21 %lshr_ln66_72" [sha256.cpp:66]   --->   Operation 1226 'bitconcatenate' 'or_ln66_72' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1227 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_97)   --->   "%lshr_ln66_73 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_56, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1227 'partselect' 'lshr_ln66_73' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1228 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_97)   --->   "%trunc_ln66_74 = trunc i32 %e_56" [sha256.cpp:66]   --->   Operation 1228 'trunc' 'trunc_ln66_74' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1229 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_97)   --->   "%or_ln66_73 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_74, i7 %lshr_ln66_73" [sha256.cpp:66]   --->   Operation 1229 'bitconcatenate' 'or_ln66_73' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1230 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_97)   --->   "%xor_ln66_96 = xor i32 %or_ln66_71, i32 %or_ln66_72" [sha256.cpp:66]   --->   Operation 1230 'xor' 'xor_ln66_96' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 1231 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_97 = xor i32 %xor_ln66_96, i32 %or_ln66_73" [sha256.cpp:66]   --->   Operation 1231 'xor' 'xor_ln66_97' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 1232 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_99)   --->   "%and_ln66_48 = and i32 %e_56, i32 %e_55" [sha256.cpp:66]   --->   Operation 1232 'and' 'and_ln66_48' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 1233 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_99)   --->   "%xor_ln66_98 = xor i32 %e_56, i32 4294967295" [sha256.cpp:66]   --->   Operation 1233 'xor' 'xor_ln66_98' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 1234 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_99)   --->   "%and_ln66_49 = and i32 %e_54, i32 %xor_ln66_98" [sha256.cpp:66]   --->   Operation 1234 'and' 'and_ln66_49' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 1235 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_99 = xor i32 %and_ln66_48, i32 %and_ln66_49" [sha256.cpp:66]   --->   Operation 1235 'xor' 'xor_ln66_99' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 1236 [1/2] (1.29ns)   --->   "%m_load_24 = load i6 %m_addr_24" [sha256.cpp:66]   --->   Operation 1236 'load' 'm_load_24' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_34 : Operation 1237 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_96 = add i32 %m_load_24, i32 %e_53" [sha256.cpp:66]   --->   Operation 1237 'add' 'add_ln66_96' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 1238 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_97 = add i32 %xor_ln66_97, i32 2554220882" [sha256.cpp:66]   --->   Operation 1238 'add' 'add_ln66_97' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 1239 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_98 = add i32 %add_ln66_97, i32 %xor_ln66_99" [sha256.cpp:66]   --->   Operation 1239 'add' 'add_ln66_98' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 1240 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_24 = add i32 %add_ln66_98, i32 %add_ln66_96" [sha256.cpp:66]   --->   Operation 1240 'add' 't1_24' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 1241 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_97)   --->   "%lshr_ln67_71 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_56, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1241 'partselect' 'lshr_ln67_71' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1242 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_97)   --->   "%trunc_ln67_72 = trunc i32 %a_56" [sha256.cpp:67]   --->   Operation 1242 'trunc' 'trunc_ln67_72' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1243 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_97)   --->   "%or_ln67_71 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_72, i30 %lshr_ln67_71" [sha256.cpp:67]   --->   Operation 1243 'bitconcatenate' 'or_ln67_71' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1244 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_97)   --->   "%lshr_ln67_72 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_56, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1244 'partselect' 'lshr_ln67_72' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1245 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_97)   --->   "%trunc_ln67_73 = trunc i32 %a_56" [sha256.cpp:67]   --->   Operation 1245 'trunc' 'trunc_ln67_73' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1246 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_97)   --->   "%or_ln67_72 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_73, i19 %lshr_ln67_72" [sha256.cpp:67]   --->   Operation 1246 'bitconcatenate' 'or_ln67_72' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1247 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_97)   --->   "%lshr_ln67_73 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_56, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1247 'partselect' 'lshr_ln67_73' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1248 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_97)   --->   "%trunc_ln67_74 = trunc i32 %a_56" [sha256.cpp:67]   --->   Operation 1248 'trunc' 'trunc_ln67_74' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1249 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_97)   --->   "%or_ln67_73 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_74, i10 %lshr_ln67_73" [sha256.cpp:67]   --->   Operation 1249 'bitconcatenate' 'or_ln67_73' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1250 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_97)   --->   "%xor_ln67_96 = xor i32 %or_ln67_71, i32 %or_ln67_72" [sha256.cpp:67]   --->   Operation 1250 'xor' 'xor_ln67_96' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 1251 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_97 = xor i32 %xor_ln67_96, i32 %or_ln67_73" [sha256.cpp:67]   --->   Operation 1251 'xor' 'xor_ln67_97' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 1252 [1/1] (1.14ns)   --->   "%e_57 = add i32 %t1_24, i32 %a_53" [sha256.cpp:71]   --->   Operation 1252 'add' 'e_57' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 1253 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_101)   --->   "%lshr_ln66_74 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_57, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1253 'partselect' 'lshr_ln66_74' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1254 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_101)   --->   "%trunc_ln66_75 = trunc i32 %e_57" [sha256.cpp:66]   --->   Operation 1254 'trunc' 'trunc_ln66_75' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1255 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_101)   --->   "%or_ln66_74 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_75, i26 %lshr_ln66_74" [sha256.cpp:66]   --->   Operation 1255 'bitconcatenate' 'or_ln66_74' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1256 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_101)   --->   "%lshr_ln66_75 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_57, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1256 'partselect' 'lshr_ln66_75' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1257 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_101)   --->   "%trunc_ln66_76 = trunc i32 %e_57" [sha256.cpp:66]   --->   Operation 1257 'trunc' 'trunc_ln66_76' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1258 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_101)   --->   "%or_ln66_75 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_76, i21 %lshr_ln66_75" [sha256.cpp:66]   --->   Operation 1258 'bitconcatenate' 'or_ln66_75' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1259 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_101)   --->   "%lshr_ln66_76 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_57, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1259 'partselect' 'lshr_ln66_76' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1260 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_101)   --->   "%trunc_ln66_77 = trunc i32 %e_57" [sha256.cpp:66]   --->   Operation 1260 'trunc' 'trunc_ln66_77' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1261 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_101)   --->   "%or_ln66_76 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_77, i7 %lshr_ln66_76" [sha256.cpp:66]   --->   Operation 1261 'bitconcatenate' 'or_ln66_76' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1262 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_101)   --->   "%xor_ln66_100 = xor i32 %or_ln66_74, i32 %or_ln66_75" [sha256.cpp:66]   --->   Operation 1262 'xor' 'xor_ln66_100' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 1263 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_101 = xor i32 %xor_ln66_100, i32 %or_ln66_76" [sha256.cpp:66]   --->   Operation 1263 'xor' 'xor_ln66_101' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 1264 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_103)   --->   "%and_ln66_50 = and i32 %e_57, i32 %e_56" [sha256.cpp:66]   --->   Operation 1264 'and' 'and_ln66_50' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 1265 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_103)   --->   "%xor_ln66_102 = xor i32 %e_57, i32 4294967295" [sha256.cpp:66]   --->   Operation 1265 'xor' 'xor_ln66_102' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 1266 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_103)   --->   "%and_ln66_51 = and i32 %e_55, i32 %xor_ln66_102" [sha256.cpp:66]   --->   Operation 1266 'and' 'and_ln66_51' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 1267 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_103 = xor i32 %and_ln66_50, i32 %and_ln66_51" [sha256.cpp:66]   --->   Operation 1267 'xor' 'xor_ln66_103' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 1268 [1/2] (1.29ns)   --->   "%m_load_25 = load i6 %m_addr_25" [sha256.cpp:66]   --->   Operation 1268 'load' 'm_load_25' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_34 : Operation 1269 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_100 = add i32 %m_load_25, i32 %e_54" [sha256.cpp:66]   --->   Operation 1269 'add' 'add_ln66_100' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 1270 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_101 = add i32 %xor_ln66_101, i32 2821834349" [sha256.cpp:66]   --->   Operation 1270 'add' 'add_ln66_101' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 1271 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_102 = add i32 %add_ln66_101, i32 %xor_ln66_103" [sha256.cpp:66]   --->   Operation 1271 'add' 'add_ln66_102' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 1272 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_25 = add i32 %add_ln66_102, i32 %add_ln66_100" [sha256.cpp:66]   --->   Operation 1272 'add' 't1_25' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 1273 [1/1] (0.00ns)   --->   "%m_addr_26 = getelementptr i32 %m, i64 0, i64 26" [sha256.cpp:66]   --->   Operation 1273 'getelementptr' 'm_addr_26' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1274 [2/2] (1.29ns)   --->   "%m_load_26 = load i6 %m_addr_26" [sha256.cpp:66]   --->   Operation 1274 'load' 'm_load_26' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_34 : Operation 1275 [1/1] (0.00ns)   --->   "%m_addr_27 = getelementptr i32 %m, i64 0, i64 27" [sha256.cpp:66]   --->   Operation 1275 'getelementptr' 'm_addr_27' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 1276 [2/2] (1.29ns)   --->   "%m_load_27 = load i6 %m_addr_27" [sha256.cpp:66]   --->   Operation 1276 'load' 'm_load_27' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 35 <SV = 33> <Delay = 6.49>
ST_35 : Operation 1277 [1/1] (0.28ns)   --->   "%and_ln67_49 = and i32 %a_56, i32 %a_55" [sha256.cpp:67]   --->   Operation 1277 'and' 'and_ln67_49' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1278 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_99)   --->   "%and_ln67_50 = and i32 %a_56, i32 %a_54" [sha256.cpp:67]   --->   Operation 1278 'and' 'and_ln67_50' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1279 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_99)   --->   "%xor_ln67_98 = xor i32 %and_ln67_47, i32 %and_ln67_50" [sha256.cpp:67]   --->   Operation 1279 'xor' 'xor_ln67_98' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1280 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_99 = xor i32 %xor_ln67_98, i32 %and_ln67_49" [sha256.cpp:67]   --->   Operation 1280 'xor' 'xor_ln67_99' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1281 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_48 = add i32 %xor_ln67_99, i32 %t1_24" [sha256.cpp:75]   --->   Operation 1281 'add' 'add_ln75_48' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 1282 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_57 = add i32 %add_ln75_48, i32 %xor_ln67_97" [sha256.cpp:75]   --->   Operation 1282 'add' 'a_57' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 1283 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_101)   --->   "%lshr_ln67_74 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_57, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1283 'partselect' 'lshr_ln67_74' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1284 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_101)   --->   "%trunc_ln67_75 = trunc i32 %a_57" [sha256.cpp:67]   --->   Operation 1284 'trunc' 'trunc_ln67_75' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1285 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_101)   --->   "%or_ln67_74 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_75, i30 %lshr_ln67_74" [sha256.cpp:67]   --->   Operation 1285 'bitconcatenate' 'or_ln67_74' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1286 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_101)   --->   "%lshr_ln67_75 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_57, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1286 'partselect' 'lshr_ln67_75' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1287 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_101)   --->   "%trunc_ln67_76 = trunc i32 %a_57" [sha256.cpp:67]   --->   Operation 1287 'trunc' 'trunc_ln67_76' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1288 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_101)   --->   "%or_ln67_75 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_76, i19 %lshr_ln67_75" [sha256.cpp:67]   --->   Operation 1288 'bitconcatenate' 'or_ln67_75' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1289 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_101)   --->   "%lshr_ln67_76 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_57, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1289 'partselect' 'lshr_ln67_76' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1290 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_101)   --->   "%trunc_ln67_77 = trunc i32 %a_57" [sha256.cpp:67]   --->   Operation 1290 'trunc' 'trunc_ln67_77' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1291 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_101)   --->   "%or_ln67_76 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_77, i10 %lshr_ln67_76" [sha256.cpp:67]   --->   Operation 1291 'bitconcatenate' 'or_ln67_76' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1292 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_101)   --->   "%xor_ln67_100 = xor i32 %or_ln67_74, i32 %or_ln67_75" [sha256.cpp:67]   --->   Operation 1292 'xor' 'xor_ln67_100' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1293 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_101 = xor i32 %xor_ln67_100, i32 %or_ln67_76" [sha256.cpp:67]   --->   Operation 1293 'xor' 'xor_ln67_101' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1294 [1/1] (0.28ns)   --->   "%and_ln67_51 = and i32 %a_57, i32 %a_56" [sha256.cpp:67]   --->   Operation 1294 'and' 'and_ln67_51' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1295 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_103)   --->   "%and_ln67_52 = and i32 %a_57, i32 %a_55" [sha256.cpp:67]   --->   Operation 1295 'and' 'and_ln67_52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1296 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_103)   --->   "%xor_ln67_102 = xor i32 %and_ln67_49, i32 %and_ln67_52" [sha256.cpp:67]   --->   Operation 1296 'xor' 'xor_ln67_102' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1297 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_103 = xor i32 %xor_ln67_102, i32 %and_ln67_51" [sha256.cpp:67]   --->   Operation 1297 'xor' 'xor_ln67_103' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1298 [1/1] (1.14ns)   --->   "%e_58 = add i32 %t1_25, i32 %a_54" [sha256.cpp:71]   --->   Operation 1298 'add' 'e_58' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1299 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_50 = add i32 %xor_ln67_103, i32 %t1_25" [sha256.cpp:75]   --->   Operation 1299 'add' 'add_ln75_50' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 1300 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_58 = add i32 %add_ln75_50, i32 %xor_ln67_101" [sha256.cpp:75]   --->   Operation 1300 'add' 'a_58' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 1301 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_105)   --->   "%lshr_ln66_77 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_58, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1301 'partselect' 'lshr_ln66_77' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1302 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_105)   --->   "%trunc_ln66_78 = trunc i32 %e_58" [sha256.cpp:66]   --->   Operation 1302 'trunc' 'trunc_ln66_78' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1303 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_105)   --->   "%or_ln66_77 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_78, i26 %lshr_ln66_77" [sha256.cpp:66]   --->   Operation 1303 'bitconcatenate' 'or_ln66_77' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1304 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_105)   --->   "%lshr_ln66_78 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_58, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1304 'partselect' 'lshr_ln66_78' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1305 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_105)   --->   "%trunc_ln66_79 = trunc i32 %e_58" [sha256.cpp:66]   --->   Operation 1305 'trunc' 'trunc_ln66_79' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1306 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_105)   --->   "%or_ln66_78 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_79, i21 %lshr_ln66_78" [sha256.cpp:66]   --->   Operation 1306 'bitconcatenate' 'or_ln66_78' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1307 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_105)   --->   "%lshr_ln66_79 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_58, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1307 'partselect' 'lshr_ln66_79' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1308 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_105)   --->   "%trunc_ln66_80 = trunc i32 %e_58" [sha256.cpp:66]   --->   Operation 1308 'trunc' 'trunc_ln66_80' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1309 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_105)   --->   "%or_ln66_79 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_80, i7 %lshr_ln66_79" [sha256.cpp:66]   --->   Operation 1309 'bitconcatenate' 'or_ln66_79' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1310 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_105)   --->   "%xor_ln66_104 = xor i32 %or_ln66_77, i32 %or_ln66_78" [sha256.cpp:66]   --->   Operation 1310 'xor' 'xor_ln66_104' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1311 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_105 = xor i32 %xor_ln66_104, i32 %or_ln66_79" [sha256.cpp:66]   --->   Operation 1311 'xor' 'xor_ln66_105' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1312 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_107)   --->   "%and_ln66_52 = and i32 %e_58, i32 %e_57" [sha256.cpp:66]   --->   Operation 1312 'and' 'and_ln66_52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1313 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_107)   --->   "%xor_ln66_106 = xor i32 %e_58, i32 4294967295" [sha256.cpp:66]   --->   Operation 1313 'xor' 'xor_ln66_106' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1314 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_107)   --->   "%and_ln66_53 = and i32 %e_56, i32 %xor_ln66_106" [sha256.cpp:66]   --->   Operation 1314 'and' 'and_ln66_53' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1315 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_107 = xor i32 %and_ln66_52, i32 %and_ln66_53" [sha256.cpp:66]   --->   Operation 1315 'xor' 'xor_ln66_107' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1316 [1/2] (1.29ns)   --->   "%m_load_26 = load i6 %m_addr_26" [sha256.cpp:66]   --->   Operation 1316 'load' 'm_load_26' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_35 : Operation 1317 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_104 = add i32 %m_load_26, i32 %e_55" [sha256.cpp:66]   --->   Operation 1317 'add' 'add_ln66_104' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 1318 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_105 = add i32 %xor_ln66_105, i32 2952996808" [sha256.cpp:66]   --->   Operation 1318 'add' 'add_ln66_105' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 1319 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_106 = add i32 %add_ln66_105, i32 %xor_ln66_107" [sha256.cpp:66]   --->   Operation 1319 'add' 'add_ln66_106' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 1320 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_26 = add i32 %add_ln66_106, i32 %add_ln66_104" [sha256.cpp:66]   --->   Operation 1320 'add' 't1_26' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 1321 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_105)   --->   "%lshr_ln67_77 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_58, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1321 'partselect' 'lshr_ln67_77' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1322 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_105)   --->   "%trunc_ln67_78 = trunc i32 %a_58" [sha256.cpp:67]   --->   Operation 1322 'trunc' 'trunc_ln67_78' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1323 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_105)   --->   "%or_ln67_77 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_78, i30 %lshr_ln67_77" [sha256.cpp:67]   --->   Operation 1323 'bitconcatenate' 'or_ln67_77' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1324 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_105)   --->   "%lshr_ln67_78 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_58, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1324 'partselect' 'lshr_ln67_78' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1325 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_105)   --->   "%trunc_ln67_79 = trunc i32 %a_58" [sha256.cpp:67]   --->   Operation 1325 'trunc' 'trunc_ln67_79' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1326 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_105)   --->   "%or_ln67_78 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_79, i19 %lshr_ln67_78" [sha256.cpp:67]   --->   Operation 1326 'bitconcatenate' 'or_ln67_78' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1327 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_105)   --->   "%lshr_ln67_79 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_58, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1327 'partselect' 'lshr_ln67_79' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1328 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_105)   --->   "%trunc_ln67_80 = trunc i32 %a_58" [sha256.cpp:67]   --->   Operation 1328 'trunc' 'trunc_ln67_80' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1329 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_105)   --->   "%or_ln67_79 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_80, i10 %lshr_ln67_79" [sha256.cpp:67]   --->   Operation 1329 'bitconcatenate' 'or_ln67_79' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1330 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_105)   --->   "%xor_ln67_104 = xor i32 %or_ln67_77, i32 %or_ln67_78" [sha256.cpp:67]   --->   Operation 1330 'xor' 'xor_ln67_104' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1331 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_105 = xor i32 %xor_ln67_104, i32 %or_ln67_79" [sha256.cpp:67]   --->   Operation 1331 'xor' 'xor_ln67_105' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1332 [1/1] (0.28ns)   --->   "%and_ln67_53 = and i32 %a_58, i32 %a_57" [sha256.cpp:67]   --->   Operation 1332 'and' 'and_ln67_53' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1333 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_107)   --->   "%and_ln67_54 = and i32 %a_58, i32 %a_56" [sha256.cpp:67]   --->   Operation 1333 'and' 'and_ln67_54' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1334 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_107)   --->   "%xor_ln67_106 = xor i32 %and_ln67_51, i32 %and_ln67_54" [sha256.cpp:67]   --->   Operation 1334 'xor' 'xor_ln67_106' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1335 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_107 = xor i32 %xor_ln67_106, i32 %and_ln67_53" [sha256.cpp:67]   --->   Operation 1335 'xor' 'xor_ln67_107' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1336 [1/1] (1.14ns)   --->   "%e_59 = add i32 %t1_26, i32 %a_55" [sha256.cpp:71]   --->   Operation 1336 'add' 'e_59' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1337 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_52 = add i32 %xor_ln67_107, i32 %t1_26" [sha256.cpp:75]   --->   Operation 1337 'add' 'add_ln75_52' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 1338 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_59 = add i32 %add_ln75_52, i32 %xor_ln67_105" [sha256.cpp:75]   --->   Operation 1338 'add' 'a_59' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 1339 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_109)   --->   "%lshr_ln66_80 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_59, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1339 'partselect' 'lshr_ln66_80' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1340 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_109)   --->   "%trunc_ln66_81 = trunc i32 %e_59" [sha256.cpp:66]   --->   Operation 1340 'trunc' 'trunc_ln66_81' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1341 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_109)   --->   "%or_ln66_80 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_81, i26 %lshr_ln66_80" [sha256.cpp:66]   --->   Operation 1341 'bitconcatenate' 'or_ln66_80' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1342 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_109)   --->   "%lshr_ln66_81 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_59, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1342 'partselect' 'lshr_ln66_81' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1343 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_109)   --->   "%trunc_ln66_82 = trunc i32 %e_59" [sha256.cpp:66]   --->   Operation 1343 'trunc' 'trunc_ln66_82' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1344 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_109)   --->   "%or_ln66_81 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_82, i21 %lshr_ln66_81" [sha256.cpp:66]   --->   Operation 1344 'bitconcatenate' 'or_ln66_81' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1345 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_109)   --->   "%lshr_ln66_82 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_59, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1345 'partselect' 'lshr_ln66_82' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1346 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_109)   --->   "%trunc_ln66_83 = trunc i32 %e_59" [sha256.cpp:66]   --->   Operation 1346 'trunc' 'trunc_ln66_83' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1347 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_109)   --->   "%or_ln66_82 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_83, i7 %lshr_ln66_82" [sha256.cpp:66]   --->   Operation 1347 'bitconcatenate' 'or_ln66_82' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1348 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_109)   --->   "%xor_ln66_108 = xor i32 %or_ln66_80, i32 %or_ln66_81" [sha256.cpp:66]   --->   Operation 1348 'xor' 'xor_ln66_108' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1349 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_109 = xor i32 %xor_ln66_108, i32 %or_ln66_82" [sha256.cpp:66]   --->   Operation 1349 'xor' 'xor_ln66_109' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1350 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_111)   --->   "%and_ln66_54 = and i32 %e_59, i32 %e_58" [sha256.cpp:66]   --->   Operation 1350 'and' 'and_ln66_54' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1351 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_111)   --->   "%xor_ln66_110 = xor i32 %e_59, i32 4294967295" [sha256.cpp:66]   --->   Operation 1351 'xor' 'xor_ln66_110' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1352 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_111)   --->   "%and_ln66_55 = and i32 %e_57, i32 %xor_ln66_110" [sha256.cpp:66]   --->   Operation 1352 'and' 'and_ln66_55' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1353 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_111 = xor i32 %and_ln66_54, i32 %and_ln66_55" [sha256.cpp:66]   --->   Operation 1353 'xor' 'xor_ln66_111' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1354 [1/2] (1.29ns)   --->   "%m_load_27 = load i6 %m_addr_27" [sha256.cpp:66]   --->   Operation 1354 'load' 'm_load_27' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_35 : Operation 1355 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_108 = add i32 %m_load_27, i32 %e_56" [sha256.cpp:66]   --->   Operation 1355 'add' 'add_ln66_108' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 1356 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_109 = add i32 %xor_ln66_109, i32 3210313671" [sha256.cpp:66]   --->   Operation 1356 'add' 'add_ln66_109' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 1357 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_110 = add i32 %add_ln66_109, i32 %xor_ln66_111" [sha256.cpp:66]   --->   Operation 1357 'add' 'add_ln66_110' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 1358 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_27 = add i32 %add_ln66_110, i32 %add_ln66_108" [sha256.cpp:66]   --->   Operation 1358 'add' 't1_27' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 1359 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_109)   --->   "%lshr_ln67_80 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_59, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1359 'partselect' 'lshr_ln67_80' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1360 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_109)   --->   "%trunc_ln67_81 = trunc i32 %a_59" [sha256.cpp:67]   --->   Operation 1360 'trunc' 'trunc_ln67_81' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1361 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_109)   --->   "%or_ln67_80 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_81, i30 %lshr_ln67_80" [sha256.cpp:67]   --->   Operation 1361 'bitconcatenate' 'or_ln67_80' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1362 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_109)   --->   "%lshr_ln67_81 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_59, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1362 'partselect' 'lshr_ln67_81' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1363 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_109)   --->   "%trunc_ln67_82 = trunc i32 %a_59" [sha256.cpp:67]   --->   Operation 1363 'trunc' 'trunc_ln67_82' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1364 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_109)   --->   "%or_ln67_81 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_82, i19 %lshr_ln67_81" [sha256.cpp:67]   --->   Operation 1364 'bitconcatenate' 'or_ln67_81' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1365 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_109)   --->   "%lshr_ln67_82 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_59, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1365 'partselect' 'lshr_ln67_82' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1366 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_109)   --->   "%trunc_ln67_83 = trunc i32 %a_59" [sha256.cpp:67]   --->   Operation 1366 'trunc' 'trunc_ln67_83' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1367 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_109)   --->   "%or_ln67_82 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_83, i10 %lshr_ln67_82" [sha256.cpp:67]   --->   Operation 1367 'bitconcatenate' 'or_ln67_82' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1368 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_109)   --->   "%xor_ln67_108 = xor i32 %or_ln67_80, i32 %or_ln67_81" [sha256.cpp:67]   --->   Operation 1368 'xor' 'xor_ln67_108' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1369 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_109 = xor i32 %xor_ln67_108, i32 %or_ln67_82" [sha256.cpp:67]   --->   Operation 1369 'xor' 'xor_ln67_109' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 1370 [1/1] (0.00ns)   --->   "%m_addr_28 = getelementptr i32 %m, i64 0, i64 28" [sha256.cpp:66]   --->   Operation 1370 'getelementptr' 'm_addr_28' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1371 [2/2] (1.29ns)   --->   "%m_load_28 = load i6 %m_addr_28" [sha256.cpp:66]   --->   Operation 1371 'load' 'm_load_28' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_35 : Operation 1372 [1/1] (0.00ns)   --->   "%m_addr_29 = getelementptr i32 %m, i64 0, i64 29" [sha256.cpp:66]   --->   Operation 1372 'getelementptr' 'm_addr_29' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 1373 [2/2] (1.29ns)   --->   "%m_load_29 = load i6 %m_addr_29" [sha256.cpp:66]   --->   Operation 1373 'load' 'm_load_29' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 36 <SV = 34> <Delay = 6.49>
ST_36 : Operation 1374 [1/1] (0.28ns)   --->   "%and_ln67_55 = and i32 %a_59, i32 %a_58" [sha256.cpp:67]   --->   Operation 1374 'and' 'and_ln67_55' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1375 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_111)   --->   "%and_ln67_56 = and i32 %a_59, i32 %a_57" [sha256.cpp:67]   --->   Operation 1375 'and' 'and_ln67_56' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1376 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_111)   --->   "%xor_ln67_110 = xor i32 %and_ln67_53, i32 %and_ln67_56" [sha256.cpp:67]   --->   Operation 1376 'xor' 'xor_ln67_110' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1377 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_111 = xor i32 %xor_ln67_110, i32 %and_ln67_55" [sha256.cpp:67]   --->   Operation 1377 'xor' 'xor_ln67_111' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1378 [1/1] (1.14ns)   --->   "%e_60 = add i32 %t1_27, i32 %a_56" [sha256.cpp:71]   --->   Operation 1378 'add' 'e_60' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1379 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_54 = add i32 %xor_ln67_111, i32 %t1_27" [sha256.cpp:75]   --->   Operation 1379 'add' 'add_ln75_54' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 1380 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_60 = add i32 %add_ln75_54, i32 %xor_ln67_109" [sha256.cpp:75]   --->   Operation 1380 'add' 'a_60' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 1381 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_113)   --->   "%lshr_ln66_83 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_60, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1381 'partselect' 'lshr_ln66_83' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1382 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_113)   --->   "%trunc_ln66_84 = trunc i32 %e_60" [sha256.cpp:66]   --->   Operation 1382 'trunc' 'trunc_ln66_84' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1383 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_113)   --->   "%or_ln66_83 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_84, i26 %lshr_ln66_83" [sha256.cpp:66]   --->   Operation 1383 'bitconcatenate' 'or_ln66_83' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1384 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_113)   --->   "%lshr_ln66_84 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_60, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1384 'partselect' 'lshr_ln66_84' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1385 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_113)   --->   "%trunc_ln66_85 = trunc i32 %e_60" [sha256.cpp:66]   --->   Operation 1385 'trunc' 'trunc_ln66_85' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1386 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_113)   --->   "%or_ln66_84 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_85, i21 %lshr_ln66_84" [sha256.cpp:66]   --->   Operation 1386 'bitconcatenate' 'or_ln66_84' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1387 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_113)   --->   "%lshr_ln66_85 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_60, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1387 'partselect' 'lshr_ln66_85' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1388 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_113)   --->   "%trunc_ln66_86 = trunc i32 %e_60" [sha256.cpp:66]   --->   Operation 1388 'trunc' 'trunc_ln66_86' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1389 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_113)   --->   "%or_ln66_85 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_86, i7 %lshr_ln66_85" [sha256.cpp:66]   --->   Operation 1389 'bitconcatenate' 'or_ln66_85' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1390 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_113)   --->   "%xor_ln66_112 = xor i32 %or_ln66_83, i32 %or_ln66_84" [sha256.cpp:66]   --->   Operation 1390 'xor' 'xor_ln66_112' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1391 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_113 = xor i32 %xor_ln66_112, i32 %or_ln66_85" [sha256.cpp:66]   --->   Operation 1391 'xor' 'xor_ln66_113' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1392 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_115)   --->   "%and_ln66_56 = and i32 %e_60, i32 %e_59" [sha256.cpp:66]   --->   Operation 1392 'and' 'and_ln66_56' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1393 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_115)   --->   "%xor_ln66_114 = xor i32 %e_60, i32 4294967295" [sha256.cpp:66]   --->   Operation 1393 'xor' 'xor_ln66_114' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1394 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_115)   --->   "%and_ln66_57 = and i32 %e_58, i32 %xor_ln66_114" [sha256.cpp:66]   --->   Operation 1394 'and' 'and_ln66_57' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1395 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_115 = xor i32 %and_ln66_56, i32 %and_ln66_57" [sha256.cpp:66]   --->   Operation 1395 'xor' 'xor_ln66_115' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1396 [1/2] (1.29ns)   --->   "%m_load_28 = load i6 %m_addr_28" [sha256.cpp:66]   --->   Operation 1396 'load' 'm_load_28' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_36 : Operation 1397 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_112 = add i32 %m_load_28, i32 %xor_ln66_115" [sha256.cpp:66]   --->   Operation 1397 'add' 'add_ln66_112' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 1398 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_113 = add i32 %xor_ln66_113, i32 3336571891" [sha256.cpp:66]   --->   Operation 1398 'add' 'add_ln66_113' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 1399 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_114 = add i32 %add_ln66_113, i32 %e_57" [sha256.cpp:66]   --->   Operation 1399 'add' 'add_ln66_114' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 1400 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_28 = add i32 %add_ln66_114, i32 %add_ln66_112" [sha256.cpp:66]   --->   Operation 1400 'add' 't1_28' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 1401 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_113)   --->   "%lshr_ln67_83 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_60, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1401 'partselect' 'lshr_ln67_83' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1402 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_113)   --->   "%trunc_ln67_84 = trunc i32 %a_60" [sha256.cpp:67]   --->   Operation 1402 'trunc' 'trunc_ln67_84' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1403 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_113)   --->   "%or_ln67_83 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_84, i30 %lshr_ln67_83" [sha256.cpp:67]   --->   Operation 1403 'bitconcatenate' 'or_ln67_83' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1404 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_113)   --->   "%lshr_ln67_84 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_60, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1404 'partselect' 'lshr_ln67_84' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1405 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_113)   --->   "%trunc_ln67_85 = trunc i32 %a_60" [sha256.cpp:67]   --->   Operation 1405 'trunc' 'trunc_ln67_85' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1406 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_113)   --->   "%or_ln67_84 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_85, i19 %lshr_ln67_84" [sha256.cpp:67]   --->   Operation 1406 'bitconcatenate' 'or_ln67_84' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1407 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_113)   --->   "%lshr_ln67_85 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_60, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1407 'partselect' 'lshr_ln67_85' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1408 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_113)   --->   "%trunc_ln67_86 = trunc i32 %a_60" [sha256.cpp:67]   --->   Operation 1408 'trunc' 'trunc_ln67_86' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1409 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_113)   --->   "%or_ln67_85 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_86, i10 %lshr_ln67_85" [sha256.cpp:67]   --->   Operation 1409 'bitconcatenate' 'or_ln67_85' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1410 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_113)   --->   "%xor_ln67_112 = xor i32 %or_ln67_83, i32 %or_ln67_84" [sha256.cpp:67]   --->   Operation 1410 'xor' 'xor_ln67_112' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1411 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_113 = xor i32 %xor_ln67_112, i32 %or_ln67_85" [sha256.cpp:67]   --->   Operation 1411 'xor' 'xor_ln67_113' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1412 [1/1] (0.28ns)   --->   "%and_ln67_57 = and i32 %a_60, i32 %a_59" [sha256.cpp:67]   --->   Operation 1412 'and' 'and_ln67_57' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1413 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_115)   --->   "%and_ln67_58 = and i32 %a_60, i32 %a_58" [sha256.cpp:67]   --->   Operation 1413 'and' 'and_ln67_58' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1414 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_115)   --->   "%xor_ln67_114 = xor i32 %and_ln67_55, i32 %and_ln67_58" [sha256.cpp:67]   --->   Operation 1414 'xor' 'xor_ln67_114' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1415 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_115 = xor i32 %xor_ln67_114, i32 %and_ln67_57" [sha256.cpp:67]   --->   Operation 1415 'xor' 'xor_ln67_115' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1416 [1/1] (1.14ns)   --->   "%e_61 = add i32 %t1_28, i32 %a_57" [sha256.cpp:71]   --->   Operation 1416 'add' 'e_61' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1417 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_56 = add i32 %xor_ln67_115, i32 %t1_28" [sha256.cpp:75]   --->   Operation 1417 'add' 'add_ln75_56' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 1418 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_61 = add i32 %add_ln75_56, i32 %xor_ln67_113" [sha256.cpp:75]   --->   Operation 1418 'add' 'a_61' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 1419 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_117)   --->   "%lshr_ln66_86 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_61, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1419 'partselect' 'lshr_ln66_86' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1420 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_117)   --->   "%trunc_ln66_87 = trunc i32 %e_61" [sha256.cpp:66]   --->   Operation 1420 'trunc' 'trunc_ln66_87' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1421 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_117)   --->   "%or_ln66_86 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_87, i26 %lshr_ln66_86" [sha256.cpp:66]   --->   Operation 1421 'bitconcatenate' 'or_ln66_86' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1422 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_117)   --->   "%lshr_ln66_87 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_61, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1422 'partselect' 'lshr_ln66_87' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1423 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_117)   --->   "%trunc_ln66_88 = trunc i32 %e_61" [sha256.cpp:66]   --->   Operation 1423 'trunc' 'trunc_ln66_88' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1424 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_117)   --->   "%or_ln66_87 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_88, i21 %lshr_ln66_87" [sha256.cpp:66]   --->   Operation 1424 'bitconcatenate' 'or_ln66_87' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1425 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_117)   --->   "%lshr_ln66_88 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_61, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1425 'partselect' 'lshr_ln66_88' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1426 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_117)   --->   "%trunc_ln66_89 = trunc i32 %e_61" [sha256.cpp:66]   --->   Operation 1426 'trunc' 'trunc_ln66_89' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1427 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_117)   --->   "%or_ln66_88 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_89, i7 %lshr_ln66_88" [sha256.cpp:66]   --->   Operation 1427 'bitconcatenate' 'or_ln66_88' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1428 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_117)   --->   "%xor_ln66_116 = xor i32 %or_ln66_86, i32 %or_ln66_87" [sha256.cpp:66]   --->   Operation 1428 'xor' 'xor_ln66_116' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1429 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_117 = xor i32 %xor_ln66_116, i32 %or_ln66_88" [sha256.cpp:66]   --->   Operation 1429 'xor' 'xor_ln66_117' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1430 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_119)   --->   "%and_ln66_58 = and i32 %e_61, i32 %e_60" [sha256.cpp:66]   --->   Operation 1430 'and' 'and_ln66_58' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1431 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_119)   --->   "%xor_ln66_118 = xor i32 %e_61, i32 4294967295" [sha256.cpp:66]   --->   Operation 1431 'xor' 'xor_ln66_118' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1432 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_119)   --->   "%and_ln66_59 = and i32 %e_59, i32 %xor_ln66_118" [sha256.cpp:66]   --->   Operation 1432 'and' 'and_ln66_59' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1433 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_119 = xor i32 %and_ln66_58, i32 %and_ln66_59" [sha256.cpp:66]   --->   Operation 1433 'xor' 'xor_ln66_119' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1434 [1/2] (1.29ns)   --->   "%m_load_29 = load i6 %m_addr_29" [sha256.cpp:66]   --->   Operation 1434 'load' 'm_load_29' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_36 : Operation 1435 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_116 = add i32 %m_load_29, i32 %xor_ln66_119" [sha256.cpp:66]   --->   Operation 1435 'add' 'add_ln66_116' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 1436 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_117 = add i32 %xor_ln66_117, i32 3584528711" [sha256.cpp:66]   --->   Operation 1436 'add' 'add_ln66_117' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 1437 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_118 = add i32 %add_ln66_117, i32 %e_58" [sha256.cpp:66]   --->   Operation 1437 'add' 'add_ln66_118' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 1438 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_29 = add i32 %add_ln66_118, i32 %add_ln66_116" [sha256.cpp:66]   --->   Operation 1438 'add' 't1_29' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 1439 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_117)   --->   "%lshr_ln67_86 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_61, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1439 'partselect' 'lshr_ln67_86' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1440 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_117)   --->   "%trunc_ln67_87 = trunc i32 %a_61" [sha256.cpp:67]   --->   Operation 1440 'trunc' 'trunc_ln67_87' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1441 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_117)   --->   "%or_ln67_86 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_87, i30 %lshr_ln67_86" [sha256.cpp:67]   --->   Operation 1441 'bitconcatenate' 'or_ln67_86' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1442 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_117)   --->   "%lshr_ln67_87 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_61, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1442 'partselect' 'lshr_ln67_87' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1443 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_117)   --->   "%trunc_ln67_88 = trunc i32 %a_61" [sha256.cpp:67]   --->   Operation 1443 'trunc' 'trunc_ln67_88' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1444 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_117)   --->   "%or_ln67_87 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_88, i19 %lshr_ln67_87" [sha256.cpp:67]   --->   Operation 1444 'bitconcatenate' 'or_ln67_87' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1445 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_117)   --->   "%lshr_ln67_88 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_61, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1445 'partselect' 'lshr_ln67_88' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1446 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_117)   --->   "%trunc_ln67_89 = trunc i32 %a_61" [sha256.cpp:67]   --->   Operation 1446 'trunc' 'trunc_ln67_89' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1447 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_117)   --->   "%or_ln67_88 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_89, i10 %lshr_ln67_88" [sha256.cpp:67]   --->   Operation 1447 'bitconcatenate' 'or_ln67_88' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1448 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_117)   --->   "%xor_ln67_116 = xor i32 %or_ln67_86, i32 %or_ln67_87" [sha256.cpp:67]   --->   Operation 1448 'xor' 'xor_ln67_116' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1449 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_117 = xor i32 %xor_ln67_116, i32 %or_ln67_88" [sha256.cpp:67]   --->   Operation 1449 'xor' 'xor_ln67_117' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 1450 [1/1] (0.00ns)   --->   "%m_addr_30 = getelementptr i32 %m, i64 0, i64 30" [sha256.cpp:66]   --->   Operation 1450 'getelementptr' 'm_addr_30' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1451 [2/2] (1.29ns)   --->   "%m_load_30 = load i6 %m_addr_30" [sha256.cpp:66]   --->   Operation 1451 'load' 'm_load_30' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_36 : Operation 1452 [1/1] (0.00ns)   --->   "%m_addr_31 = getelementptr i32 %m, i64 0, i64 31" [sha256.cpp:66]   --->   Operation 1452 'getelementptr' 'm_addr_31' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 1453 [2/2] (1.29ns)   --->   "%m_load_31 = load i6 %m_addr_31" [sha256.cpp:66]   --->   Operation 1453 'load' 'm_load_31' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 37 <SV = 35> <Delay = 6.49>
ST_37 : Operation 1454 [1/1] (0.28ns)   --->   "%and_ln67_59 = and i32 %a_61, i32 %a_60" [sha256.cpp:67]   --->   Operation 1454 'and' 'and_ln67_59' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1455 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_119)   --->   "%and_ln67_60 = and i32 %a_61, i32 %a_59" [sha256.cpp:67]   --->   Operation 1455 'and' 'and_ln67_60' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1456 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_119)   --->   "%xor_ln67_118 = xor i32 %and_ln67_57, i32 %and_ln67_60" [sha256.cpp:67]   --->   Operation 1456 'xor' 'xor_ln67_118' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1457 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_119 = xor i32 %xor_ln67_118, i32 %and_ln67_59" [sha256.cpp:67]   --->   Operation 1457 'xor' 'xor_ln67_119' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1458 [1/1] (1.14ns)   --->   "%e_62 = add i32 %t1_29, i32 %a_58" [sha256.cpp:71]   --->   Operation 1458 'add' 'e_62' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1459 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_58 = add i32 %xor_ln67_119, i32 %t1_29" [sha256.cpp:75]   --->   Operation 1459 'add' 'add_ln75_58' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 1460 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_62 = add i32 %add_ln75_58, i32 %xor_ln67_117" [sha256.cpp:75]   --->   Operation 1460 'add' 'a_62' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 1461 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_121)   --->   "%lshr_ln66_89 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_62, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1461 'partselect' 'lshr_ln66_89' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1462 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_121)   --->   "%trunc_ln66_90 = trunc i32 %e_62" [sha256.cpp:66]   --->   Operation 1462 'trunc' 'trunc_ln66_90' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1463 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_121)   --->   "%or_ln66_89 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_90, i26 %lshr_ln66_89" [sha256.cpp:66]   --->   Operation 1463 'bitconcatenate' 'or_ln66_89' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1464 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_121)   --->   "%lshr_ln66_90 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_62, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1464 'partselect' 'lshr_ln66_90' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1465 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_121)   --->   "%trunc_ln66_91 = trunc i32 %e_62" [sha256.cpp:66]   --->   Operation 1465 'trunc' 'trunc_ln66_91' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1466 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_121)   --->   "%or_ln66_90 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_91, i21 %lshr_ln66_90" [sha256.cpp:66]   --->   Operation 1466 'bitconcatenate' 'or_ln66_90' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1467 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_121)   --->   "%lshr_ln66_91 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_62, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1467 'partselect' 'lshr_ln66_91' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1468 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_121)   --->   "%trunc_ln66_92 = trunc i32 %e_62" [sha256.cpp:66]   --->   Operation 1468 'trunc' 'trunc_ln66_92' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1469 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_121)   --->   "%or_ln66_91 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_92, i7 %lshr_ln66_91" [sha256.cpp:66]   --->   Operation 1469 'bitconcatenate' 'or_ln66_91' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1470 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_121)   --->   "%xor_ln66_120 = xor i32 %or_ln66_89, i32 %or_ln66_90" [sha256.cpp:66]   --->   Operation 1470 'xor' 'xor_ln66_120' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1471 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_121 = xor i32 %xor_ln66_120, i32 %or_ln66_91" [sha256.cpp:66]   --->   Operation 1471 'xor' 'xor_ln66_121' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1472 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_123)   --->   "%and_ln66_60 = and i32 %e_62, i32 %e_61" [sha256.cpp:66]   --->   Operation 1472 'and' 'and_ln66_60' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1473 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_123)   --->   "%xor_ln66_122 = xor i32 %e_62, i32 4294967295" [sha256.cpp:66]   --->   Operation 1473 'xor' 'xor_ln66_122' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1474 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_123)   --->   "%and_ln66_61 = and i32 %e_60, i32 %xor_ln66_122" [sha256.cpp:66]   --->   Operation 1474 'and' 'and_ln66_61' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1475 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_123 = xor i32 %and_ln66_60, i32 %and_ln66_61" [sha256.cpp:66]   --->   Operation 1475 'xor' 'xor_ln66_123' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1476 [1/2] (1.29ns)   --->   "%m_load_30 = load i6 %m_addr_30" [sha256.cpp:66]   --->   Operation 1476 'load' 'm_load_30' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_37 : Operation 1477 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_120 = add i32 %m_load_30, i32 %xor_ln66_123" [sha256.cpp:66]   --->   Operation 1477 'add' 'add_ln66_120' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 1478 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_121 = add i32 %xor_ln66_121, i32 113926993" [sha256.cpp:66]   --->   Operation 1478 'add' 'add_ln66_121' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 1479 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_122 = add i32 %add_ln66_121, i32 %e_59" [sha256.cpp:66]   --->   Operation 1479 'add' 'add_ln66_122' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 1480 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_30 = add i32 %add_ln66_122, i32 %add_ln66_120" [sha256.cpp:66]   --->   Operation 1480 'add' 't1_30' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 1481 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_121)   --->   "%lshr_ln67_89 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_62, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1481 'partselect' 'lshr_ln67_89' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1482 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_121)   --->   "%trunc_ln67_90 = trunc i32 %a_62" [sha256.cpp:67]   --->   Operation 1482 'trunc' 'trunc_ln67_90' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1483 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_121)   --->   "%or_ln67_89 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_90, i30 %lshr_ln67_89" [sha256.cpp:67]   --->   Operation 1483 'bitconcatenate' 'or_ln67_89' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1484 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_121)   --->   "%lshr_ln67_90 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_62, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1484 'partselect' 'lshr_ln67_90' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1485 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_121)   --->   "%trunc_ln67_91 = trunc i32 %a_62" [sha256.cpp:67]   --->   Operation 1485 'trunc' 'trunc_ln67_91' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1486 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_121)   --->   "%or_ln67_90 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_91, i19 %lshr_ln67_90" [sha256.cpp:67]   --->   Operation 1486 'bitconcatenate' 'or_ln67_90' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1487 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_121)   --->   "%lshr_ln67_91 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_62, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1487 'partselect' 'lshr_ln67_91' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1488 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_121)   --->   "%trunc_ln67_92 = trunc i32 %a_62" [sha256.cpp:67]   --->   Operation 1488 'trunc' 'trunc_ln67_92' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1489 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_121)   --->   "%or_ln67_91 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_92, i10 %lshr_ln67_91" [sha256.cpp:67]   --->   Operation 1489 'bitconcatenate' 'or_ln67_91' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1490 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_121)   --->   "%xor_ln67_120 = xor i32 %or_ln67_89, i32 %or_ln67_90" [sha256.cpp:67]   --->   Operation 1490 'xor' 'xor_ln67_120' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1491 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_121 = xor i32 %xor_ln67_120, i32 %or_ln67_91" [sha256.cpp:67]   --->   Operation 1491 'xor' 'xor_ln67_121' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1492 [1/1] (0.28ns)   --->   "%and_ln67_61 = and i32 %a_62, i32 %a_61" [sha256.cpp:67]   --->   Operation 1492 'and' 'and_ln67_61' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1493 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_123)   --->   "%and_ln67_62 = and i32 %a_62, i32 %a_60" [sha256.cpp:67]   --->   Operation 1493 'and' 'and_ln67_62' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1494 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_123)   --->   "%xor_ln67_122 = xor i32 %and_ln67_59, i32 %and_ln67_62" [sha256.cpp:67]   --->   Operation 1494 'xor' 'xor_ln67_122' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1495 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_123 = xor i32 %xor_ln67_122, i32 %and_ln67_61" [sha256.cpp:67]   --->   Operation 1495 'xor' 'xor_ln67_123' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1496 [1/1] (1.14ns)   --->   "%e_63 = add i32 %t1_30, i32 %a_59" [sha256.cpp:71]   --->   Operation 1496 'add' 'e_63' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1497 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_60 = add i32 %xor_ln67_123, i32 %t1_30" [sha256.cpp:75]   --->   Operation 1497 'add' 'add_ln75_60' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 1498 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_63 = add i32 %add_ln75_60, i32 %xor_ln67_121" [sha256.cpp:75]   --->   Operation 1498 'add' 'a_63' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 1499 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_125)   --->   "%lshr_ln66_92 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_63, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1499 'partselect' 'lshr_ln66_92' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1500 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_125)   --->   "%trunc_ln66_93 = trunc i32 %e_63" [sha256.cpp:66]   --->   Operation 1500 'trunc' 'trunc_ln66_93' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1501 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_125)   --->   "%or_ln66_92 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_93, i26 %lshr_ln66_92" [sha256.cpp:66]   --->   Operation 1501 'bitconcatenate' 'or_ln66_92' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1502 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_125)   --->   "%lshr_ln66_93 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_63, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1502 'partselect' 'lshr_ln66_93' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1503 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_125)   --->   "%trunc_ln66_94 = trunc i32 %e_63" [sha256.cpp:66]   --->   Operation 1503 'trunc' 'trunc_ln66_94' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1504 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_125)   --->   "%or_ln66_93 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_94, i21 %lshr_ln66_93" [sha256.cpp:66]   --->   Operation 1504 'bitconcatenate' 'or_ln66_93' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1505 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_125)   --->   "%lshr_ln66_94 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_63, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1505 'partselect' 'lshr_ln66_94' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1506 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_125)   --->   "%trunc_ln66_95 = trunc i32 %e_63" [sha256.cpp:66]   --->   Operation 1506 'trunc' 'trunc_ln66_95' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1507 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_125)   --->   "%or_ln66_94 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_95, i7 %lshr_ln66_94" [sha256.cpp:66]   --->   Operation 1507 'bitconcatenate' 'or_ln66_94' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1508 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_125)   --->   "%xor_ln66_124 = xor i32 %or_ln66_92, i32 %or_ln66_93" [sha256.cpp:66]   --->   Operation 1508 'xor' 'xor_ln66_124' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1509 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_125 = xor i32 %xor_ln66_124, i32 %or_ln66_94" [sha256.cpp:66]   --->   Operation 1509 'xor' 'xor_ln66_125' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1510 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_127)   --->   "%and_ln66_62 = and i32 %e_63, i32 %e_62" [sha256.cpp:66]   --->   Operation 1510 'and' 'and_ln66_62' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1511 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_127)   --->   "%xor_ln66_126 = xor i32 %e_63, i32 4294967295" [sha256.cpp:66]   --->   Operation 1511 'xor' 'xor_ln66_126' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1512 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_127)   --->   "%and_ln66_63 = and i32 %e_61, i32 %xor_ln66_126" [sha256.cpp:66]   --->   Operation 1512 'and' 'and_ln66_63' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1513 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_127 = xor i32 %and_ln66_62, i32 %and_ln66_63" [sha256.cpp:66]   --->   Operation 1513 'xor' 'xor_ln66_127' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1514 [1/2] (1.29ns)   --->   "%m_load_31 = load i6 %m_addr_31" [sha256.cpp:66]   --->   Operation 1514 'load' 'm_load_31' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_37 : Operation 1515 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_124 = add i32 %m_load_31, i32 %xor_ln66_127" [sha256.cpp:66]   --->   Operation 1515 'add' 'add_ln66_124' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 1516 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_125 = add i32 %xor_ln66_125, i32 338241895" [sha256.cpp:66]   --->   Operation 1516 'add' 'add_ln66_125' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 1517 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_126 = add i32 %add_ln66_125, i32 %e_60" [sha256.cpp:66]   --->   Operation 1517 'add' 'add_ln66_126' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 1518 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_31 = add i32 %add_ln66_126, i32 %add_ln66_124" [sha256.cpp:66]   --->   Operation 1518 'add' 't1_31' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 1519 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_125)   --->   "%lshr_ln67_92 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_63, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1519 'partselect' 'lshr_ln67_92' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1520 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_125)   --->   "%trunc_ln67_93 = trunc i32 %a_63" [sha256.cpp:67]   --->   Operation 1520 'trunc' 'trunc_ln67_93' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1521 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_125)   --->   "%or_ln67_92 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_93, i30 %lshr_ln67_92" [sha256.cpp:67]   --->   Operation 1521 'bitconcatenate' 'or_ln67_92' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1522 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_125)   --->   "%lshr_ln67_93 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_63, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1522 'partselect' 'lshr_ln67_93' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1523 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_125)   --->   "%trunc_ln67_94 = trunc i32 %a_63" [sha256.cpp:67]   --->   Operation 1523 'trunc' 'trunc_ln67_94' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1524 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_125)   --->   "%or_ln67_93 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_94, i19 %lshr_ln67_93" [sha256.cpp:67]   --->   Operation 1524 'bitconcatenate' 'or_ln67_93' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1525 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_125)   --->   "%lshr_ln67_94 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_63, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1525 'partselect' 'lshr_ln67_94' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1526 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_125)   --->   "%trunc_ln67_95 = trunc i32 %a_63" [sha256.cpp:67]   --->   Operation 1526 'trunc' 'trunc_ln67_95' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1527 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_125)   --->   "%or_ln67_94 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_95, i10 %lshr_ln67_94" [sha256.cpp:67]   --->   Operation 1527 'bitconcatenate' 'or_ln67_94' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1528 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_125)   --->   "%xor_ln67_124 = xor i32 %or_ln67_92, i32 %or_ln67_93" [sha256.cpp:67]   --->   Operation 1528 'xor' 'xor_ln67_124' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1529 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_125 = xor i32 %xor_ln67_124, i32 %or_ln67_94" [sha256.cpp:67]   --->   Operation 1529 'xor' 'xor_ln67_125' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 1530 [1/1] (0.00ns)   --->   "%m_addr_32 = getelementptr i32 %m, i64 0, i64 32" [sha256.cpp:66]   --->   Operation 1530 'getelementptr' 'm_addr_32' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1531 [2/2] (1.29ns)   --->   "%m_load_32 = load i6 %m_addr_32" [sha256.cpp:66]   --->   Operation 1531 'load' 'm_load_32' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_37 : Operation 1532 [1/1] (0.00ns)   --->   "%m_addr_33 = getelementptr i32 %m, i64 0, i64 33" [sha256.cpp:66]   --->   Operation 1532 'getelementptr' 'm_addr_33' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 1533 [2/2] (1.29ns)   --->   "%m_load_33 = load i6 %m_addr_33" [sha256.cpp:66]   --->   Operation 1533 'load' 'm_load_33' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 38 <SV = 36> <Delay = 6.49>
ST_38 : Operation 1534 [1/1] (0.28ns)   --->   "%and_ln67_63 = and i32 %a_63, i32 %a_62" [sha256.cpp:67]   --->   Operation 1534 'and' 'and_ln67_63' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1535 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_127)   --->   "%and_ln67_64 = and i32 %a_63, i32 %a_61" [sha256.cpp:67]   --->   Operation 1535 'and' 'and_ln67_64' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1536 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_127)   --->   "%xor_ln67_126 = xor i32 %and_ln67_61, i32 %and_ln67_64" [sha256.cpp:67]   --->   Operation 1536 'xor' 'xor_ln67_126' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1537 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_127 = xor i32 %xor_ln67_126, i32 %and_ln67_63" [sha256.cpp:67]   --->   Operation 1537 'xor' 'xor_ln67_127' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1538 [1/1] (1.14ns)   --->   "%e_64 = add i32 %t1_31, i32 %a_60" [sha256.cpp:71]   --->   Operation 1538 'add' 'e_64' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1539 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_62 = add i32 %xor_ln67_127, i32 %t1_31" [sha256.cpp:75]   --->   Operation 1539 'add' 'add_ln75_62' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 1540 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_64 = add i32 %add_ln75_62, i32 %xor_ln67_125" [sha256.cpp:75]   --->   Operation 1540 'add' 'a_64' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 1541 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_129)   --->   "%lshr_ln66_95 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_64, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1541 'partselect' 'lshr_ln66_95' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1542 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_129)   --->   "%trunc_ln66_96 = trunc i32 %e_64" [sha256.cpp:66]   --->   Operation 1542 'trunc' 'trunc_ln66_96' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1543 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_129)   --->   "%or_ln66_95 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_96, i26 %lshr_ln66_95" [sha256.cpp:66]   --->   Operation 1543 'bitconcatenate' 'or_ln66_95' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1544 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_129)   --->   "%lshr_ln66_96 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_64, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1544 'partselect' 'lshr_ln66_96' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1545 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_129)   --->   "%trunc_ln66_97 = trunc i32 %e_64" [sha256.cpp:66]   --->   Operation 1545 'trunc' 'trunc_ln66_97' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1546 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_129)   --->   "%or_ln66_96 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_97, i21 %lshr_ln66_96" [sha256.cpp:66]   --->   Operation 1546 'bitconcatenate' 'or_ln66_96' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1547 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_129)   --->   "%lshr_ln66_97 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_64, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1547 'partselect' 'lshr_ln66_97' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1548 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_129)   --->   "%trunc_ln66_98 = trunc i32 %e_64" [sha256.cpp:66]   --->   Operation 1548 'trunc' 'trunc_ln66_98' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1549 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_129)   --->   "%or_ln66_97 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_98, i7 %lshr_ln66_97" [sha256.cpp:66]   --->   Operation 1549 'bitconcatenate' 'or_ln66_97' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1550 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_129)   --->   "%xor_ln66_128 = xor i32 %or_ln66_95, i32 %or_ln66_96" [sha256.cpp:66]   --->   Operation 1550 'xor' 'xor_ln66_128' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1551 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_129 = xor i32 %xor_ln66_128, i32 %or_ln66_97" [sha256.cpp:66]   --->   Operation 1551 'xor' 'xor_ln66_129' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1552 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_131)   --->   "%and_ln66_64 = and i32 %e_64, i32 %e_63" [sha256.cpp:66]   --->   Operation 1552 'and' 'and_ln66_64' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1553 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_131)   --->   "%xor_ln66_130 = xor i32 %e_64, i32 4294967295" [sha256.cpp:66]   --->   Operation 1553 'xor' 'xor_ln66_130' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1554 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_131)   --->   "%and_ln66_65 = and i32 %e_62, i32 %xor_ln66_130" [sha256.cpp:66]   --->   Operation 1554 'and' 'and_ln66_65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1555 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_131 = xor i32 %and_ln66_64, i32 %and_ln66_65" [sha256.cpp:66]   --->   Operation 1555 'xor' 'xor_ln66_131' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1556 [1/2] (1.29ns)   --->   "%m_load_32 = load i6 %m_addr_32" [sha256.cpp:66]   --->   Operation 1556 'load' 'm_load_32' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_38 : Operation 1557 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_128 = add i32 %m_load_32, i32 %xor_ln66_131" [sha256.cpp:66]   --->   Operation 1557 'add' 'add_ln66_128' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 1558 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_129 = add i32 %xor_ln66_129, i32 666307205" [sha256.cpp:66]   --->   Operation 1558 'add' 'add_ln66_129' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 1559 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_130 = add i32 %add_ln66_129, i32 %e_61" [sha256.cpp:66]   --->   Operation 1559 'add' 'add_ln66_130' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 1560 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_32 = add i32 %add_ln66_130, i32 %add_ln66_128" [sha256.cpp:66]   --->   Operation 1560 'add' 't1_32' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 1561 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_129)   --->   "%lshr_ln67_95 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_64, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1561 'partselect' 'lshr_ln67_95' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1562 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_129)   --->   "%trunc_ln67_96 = trunc i32 %a_64" [sha256.cpp:67]   --->   Operation 1562 'trunc' 'trunc_ln67_96' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1563 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_129)   --->   "%or_ln67_95 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_96, i30 %lshr_ln67_95" [sha256.cpp:67]   --->   Operation 1563 'bitconcatenate' 'or_ln67_95' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1564 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_129)   --->   "%lshr_ln67_96 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_64, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1564 'partselect' 'lshr_ln67_96' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1565 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_129)   --->   "%trunc_ln67_97 = trunc i32 %a_64" [sha256.cpp:67]   --->   Operation 1565 'trunc' 'trunc_ln67_97' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1566 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_129)   --->   "%or_ln67_96 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_97, i19 %lshr_ln67_96" [sha256.cpp:67]   --->   Operation 1566 'bitconcatenate' 'or_ln67_96' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1567 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_129)   --->   "%lshr_ln67_97 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_64, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1567 'partselect' 'lshr_ln67_97' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1568 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_129)   --->   "%trunc_ln67_98 = trunc i32 %a_64" [sha256.cpp:67]   --->   Operation 1568 'trunc' 'trunc_ln67_98' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1569 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_129)   --->   "%or_ln67_97 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_98, i10 %lshr_ln67_97" [sha256.cpp:67]   --->   Operation 1569 'bitconcatenate' 'or_ln67_97' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1570 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_129)   --->   "%xor_ln67_128 = xor i32 %or_ln67_95, i32 %or_ln67_96" [sha256.cpp:67]   --->   Operation 1570 'xor' 'xor_ln67_128' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1571 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_129 = xor i32 %xor_ln67_128, i32 %or_ln67_97" [sha256.cpp:67]   --->   Operation 1571 'xor' 'xor_ln67_129' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1572 [1/1] (0.28ns)   --->   "%and_ln67_65 = and i32 %a_64, i32 %a_63" [sha256.cpp:67]   --->   Operation 1572 'and' 'and_ln67_65' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1573 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_131)   --->   "%and_ln67_66 = and i32 %a_64, i32 %a_62" [sha256.cpp:67]   --->   Operation 1573 'and' 'and_ln67_66' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1574 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_131)   --->   "%xor_ln67_130 = xor i32 %and_ln67_63, i32 %and_ln67_66" [sha256.cpp:67]   --->   Operation 1574 'xor' 'xor_ln67_130' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1575 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_131 = xor i32 %xor_ln67_130, i32 %and_ln67_65" [sha256.cpp:67]   --->   Operation 1575 'xor' 'xor_ln67_131' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1576 [1/1] (1.14ns)   --->   "%e_65 = add i32 %t1_32, i32 %a_61" [sha256.cpp:71]   --->   Operation 1576 'add' 'e_65' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1577 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_64 = add i32 %xor_ln67_131, i32 %t1_32" [sha256.cpp:75]   --->   Operation 1577 'add' 'add_ln75_64' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 1578 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_65 = add i32 %add_ln75_64, i32 %xor_ln67_129" [sha256.cpp:75]   --->   Operation 1578 'add' 'a_65' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 1579 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_133)   --->   "%lshr_ln66_98 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_65, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1579 'partselect' 'lshr_ln66_98' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1580 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_133)   --->   "%trunc_ln66_99 = trunc i32 %e_65" [sha256.cpp:66]   --->   Operation 1580 'trunc' 'trunc_ln66_99' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1581 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_133)   --->   "%or_ln66_98 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_99, i26 %lshr_ln66_98" [sha256.cpp:66]   --->   Operation 1581 'bitconcatenate' 'or_ln66_98' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1582 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_133)   --->   "%lshr_ln66_99 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_65, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1582 'partselect' 'lshr_ln66_99' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1583 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_133)   --->   "%trunc_ln66_100 = trunc i32 %e_65" [sha256.cpp:66]   --->   Operation 1583 'trunc' 'trunc_ln66_100' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1584 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_133)   --->   "%or_ln66_99 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_100, i21 %lshr_ln66_99" [sha256.cpp:66]   --->   Operation 1584 'bitconcatenate' 'or_ln66_99' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1585 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_133)   --->   "%lshr_ln66_100 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_65, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1585 'partselect' 'lshr_ln66_100' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1586 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_133)   --->   "%trunc_ln66_101 = trunc i32 %e_65" [sha256.cpp:66]   --->   Operation 1586 'trunc' 'trunc_ln66_101' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1587 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_133)   --->   "%or_ln66_100 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_101, i7 %lshr_ln66_100" [sha256.cpp:66]   --->   Operation 1587 'bitconcatenate' 'or_ln66_100' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1588 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_133)   --->   "%xor_ln66_132 = xor i32 %or_ln66_98, i32 %or_ln66_99" [sha256.cpp:66]   --->   Operation 1588 'xor' 'xor_ln66_132' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1589 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_133 = xor i32 %xor_ln66_132, i32 %or_ln66_100" [sha256.cpp:66]   --->   Operation 1589 'xor' 'xor_ln66_133' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1590 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_135)   --->   "%and_ln66_66 = and i32 %e_65, i32 %e_64" [sha256.cpp:66]   --->   Operation 1590 'and' 'and_ln66_66' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1591 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_135)   --->   "%xor_ln66_134 = xor i32 %e_65, i32 4294967295" [sha256.cpp:66]   --->   Operation 1591 'xor' 'xor_ln66_134' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1592 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_135)   --->   "%and_ln66_67 = and i32 %e_63, i32 %xor_ln66_134" [sha256.cpp:66]   --->   Operation 1592 'and' 'and_ln66_67' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1593 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_135 = xor i32 %and_ln66_66, i32 %and_ln66_67" [sha256.cpp:66]   --->   Operation 1593 'xor' 'xor_ln66_135' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1594 [1/2] (1.29ns)   --->   "%m_load_33 = load i6 %m_addr_33" [sha256.cpp:66]   --->   Operation 1594 'load' 'm_load_33' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_38 : Operation 1595 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_132 = add i32 %m_load_33, i32 %xor_ln66_135" [sha256.cpp:66]   --->   Operation 1595 'add' 'add_ln66_132' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 1596 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_133 = add i32 %xor_ln66_133, i32 773529912" [sha256.cpp:66]   --->   Operation 1596 'add' 'add_ln66_133' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 1597 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_134 = add i32 %add_ln66_133, i32 %e_62" [sha256.cpp:66]   --->   Operation 1597 'add' 'add_ln66_134' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 1598 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_33 = add i32 %add_ln66_134, i32 %add_ln66_132" [sha256.cpp:66]   --->   Operation 1598 'add' 't1_33' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 1599 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_133)   --->   "%lshr_ln67_98 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_65, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1599 'partselect' 'lshr_ln67_98' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1600 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_133)   --->   "%trunc_ln67_99 = trunc i32 %a_65" [sha256.cpp:67]   --->   Operation 1600 'trunc' 'trunc_ln67_99' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1601 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_133)   --->   "%or_ln67_98 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_99, i30 %lshr_ln67_98" [sha256.cpp:67]   --->   Operation 1601 'bitconcatenate' 'or_ln67_98' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1602 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_133)   --->   "%lshr_ln67_99 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_65, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1602 'partselect' 'lshr_ln67_99' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1603 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_133)   --->   "%trunc_ln67_100 = trunc i32 %a_65" [sha256.cpp:67]   --->   Operation 1603 'trunc' 'trunc_ln67_100' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1604 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_133)   --->   "%or_ln67_99 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_100, i19 %lshr_ln67_99" [sha256.cpp:67]   --->   Operation 1604 'bitconcatenate' 'or_ln67_99' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1605 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_133)   --->   "%lshr_ln67_100 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_65, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1605 'partselect' 'lshr_ln67_100' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1606 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_133)   --->   "%trunc_ln67_101 = trunc i32 %a_65" [sha256.cpp:67]   --->   Operation 1606 'trunc' 'trunc_ln67_101' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1607 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_133)   --->   "%or_ln67_100 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_101, i10 %lshr_ln67_100" [sha256.cpp:67]   --->   Operation 1607 'bitconcatenate' 'or_ln67_100' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1608 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_133)   --->   "%xor_ln67_132 = xor i32 %or_ln67_98, i32 %or_ln67_99" [sha256.cpp:67]   --->   Operation 1608 'xor' 'xor_ln67_132' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1609 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_133 = xor i32 %xor_ln67_132, i32 %or_ln67_100" [sha256.cpp:67]   --->   Operation 1609 'xor' 'xor_ln67_133' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 1610 [1/1] (0.00ns)   --->   "%m_addr_34 = getelementptr i32 %m, i64 0, i64 34" [sha256.cpp:66]   --->   Operation 1610 'getelementptr' 'm_addr_34' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1611 [2/2] (1.29ns)   --->   "%m_load_34 = load i6 %m_addr_34" [sha256.cpp:66]   --->   Operation 1611 'load' 'm_load_34' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_38 : Operation 1612 [1/1] (0.00ns)   --->   "%m_addr_35 = getelementptr i32 %m, i64 0, i64 35" [sha256.cpp:66]   --->   Operation 1612 'getelementptr' 'm_addr_35' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 1613 [2/2] (1.29ns)   --->   "%m_load_35 = load i6 %m_addr_35" [sha256.cpp:66]   --->   Operation 1613 'load' 'm_load_35' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 39 <SV = 37> <Delay = 6.49>
ST_39 : Operation 1614 [1/1] (0.28ns)   --->   "%and_ln67_67 = and i32 %a_65, i32 %a_64" [sha256.cpp:67]   --->   Operation 1614 'and' 'and_ln67_67' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1615 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_135)   --->   "%and_ln67_68 = and i32 %a_65, i32 %a_63" [sha256.cpp:67]   --->   Operation 1615 'and' 'and_ln67_68' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1616 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_135)   --->   "%xor_ln67_134 = xor i32 %and_ln67_65, i32 %and_ln67_68" [sha256.cpp:67]   --->   Operation 1616 'xor' 'xor_ln67_134' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1617 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_135 = xor i32 %xor_ln67_134, i32 %and_ln67_67" [sha256.cpp:67]   --->   Operation 1617 'xor' 'xor_ln67_135' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1618 [1/1] (1.14ns)   --->   "%e_66 = add i32 %t1_33, i32 %a_62" [sha256.cpp:71]   --->   Operation 1618 'add' 'e_66' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1619 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_66 = add i32 %xor_ln67_135, i32 %t1_33" [sha256.cpp:75]   --->   Operation 1619 'add' 'add_ln75_66' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 1620 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_66 = add i32 %add_ln75_66, i32 %xor_ln67_133" [sha256.cpp:75]   --->   Operation 1620 'add' 'a_66' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 1621 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_137)   --->   "%lshr_ln66_101 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_66, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1621 'partselect' 'lshr_ln66_101' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1622 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_137)   --->   "%trunc_ln66_102 = trunc i32 %e_66" [sha256.cpp:66]   --->   Operation 1622 'trunc' 'trunc_ln66_102' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1623 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_137)   --->   "%or_ln66_101 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_102, i26 %lshr_ln66_101" [sha256.cpp:66]   --->   Operation 1623 'bitconcatenate' 'or_ln66_101' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1624 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_137)   --->   "%lshr_ln66_102 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_66, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1624 'partselect' 'lshr_ln66_102' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1625 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_137)   --->   "%trunc_ln66_103 = trunc i32 %e_66" [sha256.cpp:66]   --->   Operation 1625 'trunc' 'trunc_ln66_103' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1626 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_137)   --->   "%or_ln66_102 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_103, i21 %lshr_ln66_102" [sha256.cpp:66]   --->   Operation 1626 'bitconcatenate' 'or_ln66_102' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1627 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_137)   --->   "%lshr_ln66_103 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_66, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1627 'partselect' 'lshr_ln66_103' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1628 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_137)   --->   "%trunc_ln66_104 = trunc i32 %e_66" [sha256.cpp:66]   --->   Operation 1628 'trunc' 'trunc_ln66_104' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1629 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_137)   --->   "%or_ln66_103 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_104, i7 %lshr_ln66_103" [sha256.cpp:66]   --->   Operation 1629 'bitconcatenate' 'or_ln66_103' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1630 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_137)   --->   "%xor_ln66_136 = xor i32 %or_ln66_101, i32 %or_ln66_102" [sha256.cpp:66]   --->   Operation 1630 'xor' 'xor_ln66_136' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1631 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_137 = xor i32 %xor_ln66_136, i32 %or_ln66_103" [sha256.cpp:66]   --->   Operation 1631 'xor' 'xor_ln66_137' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1632 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_139)   --->   "%and_ln66_68 = and i32 %e_66, i32 %e_65" [sha256.cpp:66]   --->   Operation 1632 'and' 'and_ln66_68' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1633 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_139)   --->   "%xor_ln66_138 = xor i32 %e_66, i32 4294967295" [sha256.cpp:66]   --->   Operation 1633 'xor' 'xor_ln66_138' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1634 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_139)   --->   "%and_ln66_69 = and i32 %e_64, i32 %xor_ln66_138" [sha256.cpp:66]   --->   Operation 1634 'and' 'and_ln66_69' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1635 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_139 = xor i32 %and_ln66_68, i32 %and_ln66_69" [sha256.cpp:66]   --->   Operation 1635 'xor' 'xor_ln66_139' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1636 [1/2] (1.29ns)   --->   "%m_load_34 = load i6 %m_addr_34" [sha256.cpp:66]   --->   Operation 1636 'load' 'm_load_34' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_39 : Operation 1637 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_136 = add i32 %m_load_34, i32 %xor_ln66_139" [sha256.cpp:66]   --->   Operation 1637 'add' 'add_ln66_136' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 1638 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_137 = add i32 %xor_ln66_137, i32 1294757372" [sha256.cpp:66]   --->   Operation 1638 'add' 'add_ln66_137' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 1639 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_138 = add i32 %add_ln66_137, i32 %e_63" [sha256.cpp:66]   --->   Operation 1639 'add' 'add_ln66_138' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 1640 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_34 = add i32 %add_ln66_138, i32 %add_ln66_136" [sha256.cpp:66]   --->   Operation 1640 'add' 't1_34' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 1641 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_137)   --->   "%lshr_ln67_101 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_66, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1641 'partselect' 'lshr_ln67_101' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1642 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_137)   --->   "%trunc_ln67_102 = trunc i32 %a_66" [sha256.cpp:67]   --->   Operation 1642 'trunc' 'trunc_ln67_102' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1643 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_137)   --->   "%or_ln67_101 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_102, i30 %lshr_ln67_101" [sha256.cpp:67]   --->   Operation 1643 'bitconcatenate' 'or_ln67_101' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1644 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_137)   --->   "%lshr_ln67_102 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_66, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1644 'partselect' 'lshr_ln67_102' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1645 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_137)   --->   "%trunc_ln67_103 = trunc i32 %a_66" [sha256.cpp:67]   --->   Operation 1645 'trunc' 'trunc_ln67_103' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1646 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_137)   --->   "%or_ln67_102 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_103, i19 %lshr_ln67_102" [sha256.cpp:67]   --->   Operation 1646 'bitconcatenate' 'or_ln67_102' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1647 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_137)   --->   "%lshr_ln67_103 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_66, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1647 'partselect' 'lshr_ln67_103' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1648 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_137)   --->   "%trunc_ln67_104 = trunc i32 %a_66" [sha256.cpp:67]   --->   Operation 1648 'trunc' 'trunc_ln67_104' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1649 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_137)   --->   "%or_ln67_103 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_104, i10 %lshr_ln67_103" [sha256.cpp:67]   --->   Operation 1649 'bitconcatenate' 'or_ln67_103' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1650 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_137)   --->   "%xor_ln67_136 = xor i32 %or_ln67_101, i32 %or_ln67_102" [sha256.cpp:67]   --->   Operation 1650 'xor' 'xor_ln67_136' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1651 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_137 = xor i32 %xor_ln67_136, i32 %or_ln67_103" [sha256.cpp:67]   --->   Operation 1651 'xor' 'xor_ln67_137' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1652 [1/1] (0.28ns)   --->   "%and_ln67_69 = and i32 %a_66, i32 %a_65" [sha256.cpp:67]   --->   Operation 1652 'and' 'and_ln67_69' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1653 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_139)   --->   "%and_ln67_70 = and i32 %a_66, i32 %a_64" [sha256.cpp:67]   --->   Operation 1653 'and' 'and_ln67_70' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1654 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_139)   --->   "%xor_ln67_138 = xor i32 %and_ln67_67, i32 %and_ln67_70" [sha256.cpp:67]   --->   Operation 1654 'xor' 'xor_ln67_138' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1655 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_139 = xor i32 %xor_ln67_138, i32 %and_ln67_69" [sha256.cpp:67]   --->   Operation 1655 'xor' 'xor_ln67_139' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1656 [1/1] (1.14ns)   --->   "%e_67 = add i32 %t1_34, i32 %a_63" [sha256.cpp:71]   --->   Operation 1656 'add' 'e_67' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1657 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_68 = add i32 %xor_ln67_139, i32 %t1_34" [sha256.cpp:75]   --->   Operation 1657 'add' 'add_ln75_68' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 1658 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_67 = add i32 %add_ln75_68, i32 %xor_ln67_137" [sha256.cpp:75]   --->   Operation 1658 'add' 'a_67' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 1659 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_141)   --->   "%lshr_ln66_104 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_67, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1659 'partselect' 'lshr_ln66_104' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1660 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_141)   --->   "%trunc_ln66_105 = trunc i32 %e_67" [sha256.cpp:66]   --->   Operation 1660 'trunc' 'trunc_ln66_105' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1661 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_141)   --->   "%or_ln66_104 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_105, i26 %lshr_ln66_104" [sha256.cpp:66]   --->   Operation 1661 'bitconcatenate' 'or_ln66_104' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1662 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_141)   --->   "%lshr_ln66_105 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_67, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1662 'partselect' 'lshr_ln66_105' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1663 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_141)   --->   "%trunc_ln66_106 = trunc i32 %e_67" [sha256.cpp:66]   --->   Operation 1663 'trunc' 'trunc_ln66_106' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1664 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_141)   --->   "%or_ln66_105 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_106, i21 %lshr_ln66_105" [sha256.cpp:66]   --->   Operation 1664 'bitconcatenate' 'or_ln66_105' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1665 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_141)   --->   "%lshr_ln66_106 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_67, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1665 'partselect' 'lshr_ln66_106' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1666 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_141)   --->   "%trunc_ln66_107 = trunc i32 %e_67" [sha256.cpp:66]   --->   Operation 1666 'trunc' 'trunc_ln66_107' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1667 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_141)   --->   "%or_ln66_106 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_107, i7 %lshr_ln66_106" [sha256.cpp:66]   --->   Operation 1667 'bitconcatenate' 'or_ln66_106' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1668 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_141)   --->   "%xor_ln66_140 = xor i32 %or_ln66_104, i32 %or_ln66_105" [sha256.cpp:66]   --->   Operation 1668 'xor' 'xor_ln66_140' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1669 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_141 = xor i32 %xor_ln66_140, i32 %or_ln66_106" [sha256.cpp:66]   --->   Operation 1669 'xor' 'xor_ln66_141' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1670 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_143)   --->   "%and_ln66_70 = and i32 %e_67, i32 %e_66" [sha256.cpp:66]   --->   Operation 1670 'and' 'and_ln66_70' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1671 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_143)   --->   "%xor_ln66_142 = xor i32 %e_67, i32 4294967295" [sha256.cpp:66]   --->   Operation 1671 'xor' 'xor_ln66_142' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1672 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_143)   --->   "%and_ln66_71 = and i32 %e_65, i32 %xor_ln66_142" [sha256.cpp:66]   --->   Operation 1672 'and' 'and_ln66_71' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1673 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_143 = xor i32 %and_ln66_70, i32 %and_ln66_71" [sha256.cpp:66]   --->   Operation 1673 'xor' 'xor_ln66_143' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1674 [1/2] (1.29ns)   --->   "%m_load_35 = load i6 %m_addr_35" [sha256.cpp:66]   --->   Operation 1674 'load' 'm_load_35' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_39 : Operation 1675 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_140 = add i32 %m_load_35, i32 %xor_ln66_143" [sha256.cpp:66]   --->   Operation 1675 'add' 'add_ln66_140' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 1676 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_141 = add i32 %xor_ln66_141, i32 1396182291" [sha256.cpp:66]   --->   Operation 1676 'add' 'add_ln66_141' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 1677 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_142 = add i32 %add_ln66_141, i32 %e_64" [sha256.cpp:66]   --->   Operation 1677 'add' 'add_ln66_142' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 1678 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_35 = add i32 %add_ln66_142, i32 %add_ln66_140" [sha256.cpp:66]   --->   Operation 1678 'add' 't1_35' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 1679 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_141)   --->   "%lshr_ln67_104 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_67, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1679 'partselect' 'lshr_ln67_104' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1680 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_141)   --->   "%trunc_ln67_105 = trunc i32 %a_67" [sha256.cpp:67]   --->   Operation 1680 'trunc' 'trunc_ln67_105' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1681 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_141)   --->   "%or_ln67_104 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_105, i30 %lshr_ln67_104" [sha256.cpp:67]   --->   Operation 1681 'bitconcatenate' 'or_ln67_104' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1682 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_141)   --->   "%lshr_ln67_105 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_67, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1682 'partselect' 'lshr_ln67_105' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1683 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_141)   --->   "%trunc_ln67_106 = trunc i32 %a_67" [sha256.cpp:67]   --->   Operation 1683 'trunc' 'trunc_ln67_106' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1684 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_141)   --->   "%or_ln67_105 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_106, i19 %lshr_ln67_105" [sha256.cpp:67]   --->   Operation 1684 'bitconcatenate' 'or_ln67_105' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1685 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_141)   --->   "%lshr_ln67_106 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_67, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1685 'partselect' 'lshr_ln67_106' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1686 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_141)   --->   "%trunc_ln67_107 = trunc i32 %a_67" [sha256.cpp:67]   --->   Operation 1686 'trunc' 'trunc_ln67_107' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1687 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_141)   --->   "%or_ln67_106 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_107, i10 %lshr_ln67_106" [sha256.cpp:67]   --->   Operation 1687 'bitconcatenate' 'or_ln67_106' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1688 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_141)   --->   "%xor_ln67_140 = xor i32 %or_ln67_104, i32 %or_ln67_105" [sha256.cpp:67]   --->   Operation 1688 'xor' 'xor_ln67_140' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1689 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_141 = xor i32 %xor_ln67_140, i32 %or_ln67_106" [sha256.cpp:67]   --->   Operation 1689 'xor' 'xor_ln67_141' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 1690 [1/1] (0.00ns)   --->   "%m_addr_36 = getelementptr i32 %m, i64 0, i64 36" [sha256.cpp:66]   --->   Operation 1690 'getelementptr' 'm_addr_36' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1691 [2/2] (1.29ns)   --->   "%m_load_36 = load i6 %m_addr_36" [sha256.cpp:66]   --->   Operation 1691 'load' 'm_load_36' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_39 : Operation 1692 [1/1] (0.00ns)   --->   "%m_addr_37 = getelementptr i32 %m, i64 0, i64 37" [sha256.cpp:66]   --->   Operation 1692 'getelementptr' 'm_addr_37' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 1693 [2/2] (1.29ns)   --->   "%m_load_37 = load i6 %m_addr_37" [sha256.cpp:66]   --->   Operation 1693 'load' 'm_load_37' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 40 <SV = 38> <Delay = 6.49>
ST_40 : Operation 1694 [1/1] (0.28ns)   --->   "%and_ln67_71 = and i32 %a_67, i32 %a_66" [sha256.cpp:67]   --->   Operation 1694 'and' 'and_ln67_71' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 1695 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_143)   --->   "%and_ln67_72 = and i32 %a_67, i32 %a_65" [sha256.cpp:67]   --->   Operation 1695 'and' 'and_ln67_72' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 1696 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_143)   --->   "%xor_ln67_142 = xor i32 %and_ln67_69, i32 %and_ln67_72" [sha256.cpp:67]   --->   Operation 1696 'xor' 'xor_ln67_142' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 1697 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_143 = xor i32 %xor_ln67_142, i32 %and_ln67_71" [sha256.cpp:67]   --->   Operation 1697 'xor' 'xor_ln67_143' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 1698 [1/1] (1.14ns)   --->   "%e_68 = add i32 %t1_35, i32 %a_64" [sha256.cpp:71]   --->   Operation 1698 'add' 'e_68' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 1699 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_70 = add i32 %xor_ln67_143, i32 %t1_35" [sha256.cpp:75]   --->   Operation 1699 'add' 'add_ln75_70' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 1700 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_68 = add i32 %add_ln75_70, i32 %xor_ln67_141" [sha256.cpp:75]   --->   Operation 1700 'add' 'a_68' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 1701 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_145)   --->   "%lshr_ln66_107 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_68, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1701 'partselect' 'lshr_ln66_107' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1702 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_145)   --->   "%trunc_ln66_108 = trunc i32 %e_68" [sha256.cpp:66]   --->   Operation 1702 'trunc' 'trunc_ln66_108' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1703 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_145)   --->   "%or_ln66_107 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_108, i26 %lshr_ln66_107" [sha256.cpp:66]   --->   Operation 1703 'bitconcatenate' 'or_ln66_107' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1704 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_145)   --->   "%lshr_ln66_108 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_68, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1704 'partselect' 'lshr_ln66_108' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1705 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_145)   --->   "%trunc_ln66_109 = trunc i32 %e_68" [sha256.cpp:66]   --->   Operation 1705 'trunc' 'trunc_ln66_109' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1706 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_145)   --->   "%or_ln66_108 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_109, i21 %lshr_ln66_108" [sha256.cpp:66]   --->   Operation 1706 'bitconcatenate' 'or_ln66_108' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1707 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_145)   --->   "%lshr_ln66_109 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_68, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1707 'partselect' 'lshr_ln66_109' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1708 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_145)   --->   "%trunc_ln66_110 = trunc i32 %e_68" [sha256.cpp:66]   --->   Operation 1708 'trunc' 'trunc_ln66_110' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1709 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_145)   --->   "%or_ln66_109 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_110, i7 %lshr_ln66_109" [sha256.cpp:66]   --->   Operation 1709 'bitconcatenate' 'or_ln66_109' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1710 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_145)   --->   "%xor_ln66_144 = xor i32 %or_ln66_107, i32 %or_ln66_108" [sha256.cpp:66]   --->   Operation 1710 'xor' 'xor_ln66_144' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 1711 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_145 = xor i32 %xor_ln66_144, i32 %or_ln66_109" [sha256.cpp:66]   --->   Operation 1711 'xor' 'xor_ln66_145' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 1712 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_147)   --->   "%and_ln66_72 = and i32 %e_68, i32 %e_67" [sha256.cpp:66]   --->   Operation 1712 'and' 'and_ln66_72' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 1713 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_147)   --->   "%xor_ln66_146 = xor i32 %e_68, i32 4294967295" [sha256.cpp:66]   --->   Operation 1713 'xor' 'xor_ln66_146' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 1714 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_147)   --->   "%and_ln66_73 = and i32 %e_66, i32 %xor_ln66_146" [sha256.cpp:66]   --->   Operation 1714 'and' 'and_ln66_73' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 1715 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_147 = xor i32 %and_ln66_72, i32 %and_ln66_73" [sha256.cpp:66]   --->   Operation 1715 'xor' 'xor_ln66_147' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 1716 [1/2] (1.29ns)   --->   "%m_load_36 = load i6 %m_addr_36" [sha256.cpp:66]   --->   Operation 1716 'load' 'm_load_36' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_40 : Operation 1717 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_144 = add i32 %m_load_36, i32 %xor_ln66_147" [sha256.cpp:66]   --->   Operation 1717 'add' 'add_ln66_144' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 1718 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_145 = add i32 %xor_ln66_145, i32 1695183700" [sha256.cpp:66]   --->   Operation 1718 'add' 'add_ln66_145' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 1719 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_146 = add i32 %add_ln66_145, i32 %e_65" [sha256.cpp:66]   --->   Operation 1719 'add' 'add_ln66_146' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 1720 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_36 = add i32 %add_ln66_146, i32 %add_ln66_144" [sha256.cpp:66]   --->   Operation 1720 'add' 't1_36' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 1721 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_145)   --->   "%lshr_ln67_107 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_68, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1721 'partselect' 'lshr_ln67_107' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1722 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_145)   --->   "%trunc_ln67_108 = trunc i32 %a_68" [sha256.cpp:67]   --->   Operation 1722 'trunc' 'trunc_ln67_108' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1723 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_145)   --->   "%or_ln67_107 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_108, i30 %lshr_ln67_107" [sha256.cpp:67]   --->   Operation 1723 'bitconcatenate' 'or_ln67_107' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1724 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_145)   --->   "%lshr_ln67_108 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_68, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1724 'partselect' 'lshr_ln67_108' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1725 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_145)   --->   "%trunc_ln67_109 = trunc i32 %a_68" [sha256.cpp:67]   --->   Operation 1725 'trunc' 'trunc_ln67_109' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1726 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_145)   --->   "%or_ln67_108 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_109, i19 %lshr_ln67_108" [sha256.cpp:67]   --->   Operation 1726 'bitconcatenate' 'or_ln67_108' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1727 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_145)   --->   "%lshr_ln67_109 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_68, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1727 'partselect' 'lshr_ln67_109' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1728 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_145)   --->   "%trunc_ln67_110 = trunc i32 %a_68" [sha256.cpp:67]   --->   Operation 1728 'trunc' 'trunc_ln67_110' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1729 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_145)   --->   "%or_ln67_109 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_110, i10 %lshr_ln67_109" [sha256.cpp:67]   --->   Operation 1729 'bitconcatenate' 'or_ln67_109' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1730 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_145)   --->   "%xor_ln67_144 = xor i32 %or_ln67_107, i32 %or_ln67_108" [sha256.cpp:67]   --->   Operation 1730 'xor' 'xor_ln67_144' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 1731 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_145 = xor i32 %xor_ln67_144, i32 %or_ln67_109" [sha256.cpp:67]   --->   Operation 1731 'xor' 'xor_ln67_145' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 1732 [1/1] (1.14ns)   --->   "%e_69 = add i32 %t1_36, i32 %a_65" [sha256.cpp:71]   --->   Operation 1732 'add' 'e_69' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 1733 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_149)   --->   "%lshr_ln66_110 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_69, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1733 'partselect' 'lshr_ln66_110' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1734 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_149)   --->   "%trunc_ln66_111 = trunc i32 %e_69" [sha256.cpp:66]   --->   Operation 1734 'trunc' 'trunc_ln66_111' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1735 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_149)   --->   "%or_ln66_110 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_111, i26 %lshr_ln66_110" [sha256.cpp:66]   --->   Operation 1735 'bitconcatenate' 'or_ln66_110' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1736 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_149)   --->   "%lshr_ln66_111 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_69, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1736 'partselect' 'lshr_ln66_111' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1737 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_149)   --->   "%trunc_ln66_112 = trunc i32 %e_69" [sha256.cpp:66]   --->   Operation 1737 'trunc' 'trunc_ln66_112' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1738 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_149)   --->   "%or_ln66_111 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_112, i21 %lshr_ln66_111" [sha256.cpp:66]   --->   Operation 1738 'bitconcatenate' 'or_ln66_111' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1739 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_149)   --->   "%lshr_ln66_112 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_69, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1739 'partselect' 'lshr_ln66_112' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1740 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_149)   --->   "%trunc_ln66_113 = trunc i32 %e_69" [sha256.cpp:66]   --->   Operation 1740 'trunc' 'trunc_ln66_113' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1741 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_149)   --->   "%or_ln66_112 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_113, i7 %lshr_ln66_112" [sha256.cpp:66]   --->   Operation 1741 'bitconcatenate' 'or_ln66_112' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1742 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_149)   --->   "%xor_ln66_148 = xor i32 %or_ln66_110, i32 %or_ln66_111" [sha256.cpp:66]   --->   Operation 1742 'xor' 'xor_ln66_148' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 1743 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_149 = xor i32 %xor_ln66_148, i32 %or_ln66_112" [sha256.cpp:66]   --->   Operation 1743 'xor' 'xor_ln66_149' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 1744 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_151)   --->   "%and_ln66_74 = and i32 %e_69, i32 %e_68" [sha256.cpp:66]   --->   Operation 1744 'and' 'and_ln66_74' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 1745 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_151)   --->   "%xor_ln66_150 = xor i32 %e_69, i32 4294967295" [sha256.cpp:66]   --->   Operation 1745 'xor' 'xor_ln66_150' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 1746 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_151)   --->   "%and_ln66_75 = and i32 %e_67, i32 %xor_ln66_150" [sha256.cpp:66]   --->   Operation 1746 'and' 'and_ln66_75' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 1747 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_151 = xor i32 %and_ln66_74, i32 %and_ln66_75" [sha256.cpp:66]   --->   Operation 1747 'xor' 'xor_ln66_151' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 1748 [1/2] (1.29ns)   --->   "%m_load_37 = load i6 %m_addr_37" [sha256.cpp:66]   --->   Operation 1748 'load' 'm_load_37' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_40 : Operation 1749 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_148 = add i32 %m_load_37, i32 %xor_ln66_151" [sha256.cpp:66]   --->   Operation 1749 'add' 'add_ln66_148' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 1750 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_149 = add i32 %xor_ln66_149, i32 1986661051" [sha256.cpp:66]   --->   Operation 1750 'add' 'add_ln66_149' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 1751 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_150 = add i32 %add_ln66_149, i32 %e_66" [sha256.cpp:66]   --->   Operation 1751 'add' 'add_ln66_150' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 1752 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_37 = add i32 %add_ln66_150, i32 %add_ln66_148" [sha256.cpp:66]   --->   Operation 1752 'add' 't1_37' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 1753 [1/1] (0.00ns)   --->   "%m_addr_38 = getelementptr i32 %m, i64 0, i64 38" [sha256.cpp:66]   --->   Operation 1753 'getelementptr' 'm_addr_38' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1754 [2/2] (1.29ns)   --->   "%m_load_38 = load i6 %m_addr_38" [sha256.cpp:66]   --->   Operation 1754 'load' 'm_load_38' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_40 : Operation 1755 [1/1] (0.00ns)   --->   "%m_addr_39 = getelementptr i32 %m, i64 0, i64 39" [sha256.cpp:66]   --->   Operation 1755 'getelementptr' 'm_addr_39' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 1756 [2/2] (1.29ns)   --->   "%m_load_39 = load i6 %m_addr_39" [sha256.cpp:66]   --->   Operation 1756 'load' 'm_load_39' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 41 <SV = 39> <Delay = 6.49>
ST_41 : Operation 1757 [1/1] (0.28ns)   --->   "%and_ln67_73 = and i32 %a_68, i32 %a_67" [sha256.cpp:67]   --->   Operation 1757 'and' 'and_ln67_73' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1758 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_147)   --->   "%and_ln67_74 = and i32 %a_68, i32 %a_66" [sha256.cpp:67]   --->   Operation 1758 'and' 'and_ln67_74' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1759 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_147)   --->   "%xor_ln67_146 = xor i32 %and_ln67_71, i32 %and_ln67_74" [sha256.cpp:67]   --->   Operation 1759 'xor' 'xor_ln67_146' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1760 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_147 = xor i32 %xor_ln67_146, i32 %and_ln67_73" [sha256.cpp:67]   --->   Operation 1760 'xor' 'xor_ln67_147' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1761 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_72 = add i32 %xor_ln67_147, i32 %t1_36" [sha256.cpp:75]   --->   Operation 1761 'add' 'add_ln75_72' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 1762 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_69 = add i32 %add_ln75_72, i32 %xor_ln67_145" [sha256.cpp:75]   --->   Operation 1762 'add' 'a_69' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 1763 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_149)   --->   "%lshr_ln67_110 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_69, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1763 'partselect' 'lshr_ln67_110' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1764 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_149)   --->   "%trunc_ln67_111 = trunc i32 %a_69" [sha256.cpp:67]   --->   Operation 1764 'trunc' 'trunc_ln67_111' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1765 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_149)   --->   "%or_ln67_110 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_111, i30 %lshr_ln67_110" [sha256.cpp:67]   --->   Operation 1765 'bitconcatenate' 'or_ln67_110' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1766 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_149)   --->   "%lshr_ln67_111 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_69, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1766 'partselect' 'lshr_ln67_111' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1767 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_149)   --->   "%trunc_ln67_112 = trunc i32 %a_69" [sha256.cpp:67]   --->   Operation 1767 'trunc' 'trunc_ln67_112' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1768 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_149)   --->   "%or_ln67_111 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_112, i19 %lshr_ln67_111" [sha256.cpp:67]   --->   Operation 1768 'bitconcatenate' 'or_ln67_111' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1769 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_149)   --->   "%lshr_ln67_112 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_69, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1769 'partselect' 'lshr_ln67_112' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1770 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_149)   --->   "%trunc_ln67_113 = trunc i32 %a_69" [sha256.cpp:67]   --->   Operation 1770 'trunc' 'trunc_ln67_113' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1771 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_149)   --->   "%or_ln67_112 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_113, i10 %lshr_ln67_112" [sha256.cpp:67]   --->   Operation 1771 'bitconcatenate' 'or_ln67_112' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1772 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_149)   --->   "%xor_ln67_148 = xor i32 %or_ln67_110, i32 %or_ln67_111" [sha256.cpp:67]   --->   Operation 1772 'xor' 'xor_ln67_148' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1773 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_149 = xor i32 %xor_ln67_148, i32 %or_ln67_112" [sha256.cpp:67]   --->   Operation 1773 'xor' 'xor_ln67_149' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1774 [1/1] (0.28ns)   --->   "%and_ln67_75 = and i32 %a_69, i32 %a_68" [sha256.cpp:67]   --->   Operation 1774 'and' 'and_ln67_75' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1775 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_151)   --->   "%and_ln67_76 = and i32 %a_69, i32 %a_67" [sha256.cpp:67]   --->   Operation 1775 'and' 'and_ln67_76' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1776 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_151)   --->   "%xor_ln67_150 = xor i32 %and_ln67_73, i32 %and_ln67_76" [sha256.cpp:67]   --->   Operation 1776 'xor' 'xor_ln67_150' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1777 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_151 = xor i32 %xor_ln67_150, i32 %and_ln67_75" [sha256.cpp:67]   --->   Operation 1777 'xor' 'xor_ln67_151' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1778 [1/1] (1.14ns)   --->   "%e_70 = add i32 %t1_37, i32 %a_66" [sha256.cpp:71]   --->   Operation 1778 'add' 'e_70' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1779 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_74 = add i32 %xor_ln67_151, i32 %t1_37" [sha256.cpp:75]   --->   Operation 1779 'add' 'add_ln75_74' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 1780 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_70 = add i32 %add_ln75_74, i32 %xor_ln67_149" [sha256.cpp:75]   --->   Operation 1780 'add' 'a_70' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 1781 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_153)   --->   "%lshr_ln66_113 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_70, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1781 'partselect' 'lshr_ln66_113' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1782 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_153)   --->   "%trunc_ln66_114 = trunc i32 %e_70" [sha256.cpp:66]   --->   Operation 1782 'trunc' 'trunc_ln66_114' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1783 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_153)   --->   "%or_ln66_113 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_114, i26 %lshr_ln66_113" [sha256.cpp:66]   --->   Operation 1783 'bitconcatenate' 'or_ln66_113' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1784 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_153)   --->   "%lshr_ln66_114 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_70, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1784 'partselect' 'lshr_ln66_114' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1785 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_153)   --->   "%trunc_ln66_115 = trunc i32 %e_70" [sha256.cpp:66]   --->   Operation 1785 'trunc' 'trunc_ln66_115' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1786 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_153)   --->   "%or_ln66_114 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_115, i21 %lshr_ln66_114" [sha256.cpp:66]   --->   Operation 1786 'bitconcatenate' 'or_ln66_114' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1787 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_153)   --->   "%lshr_ln66_115 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_70, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1787 'partselect' 'lshr_ln66_115' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1788 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_153)   --->   "%trunc_ln66_116 = trunc i32 %e_70" [sha256.cpp:66]   --->   Operation 1788 'trunc' 'trunc_ln66_116' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1789 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_153)   --->   "%or_ln66_115 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_116, i7 %lshr_ln66_115" [sha256.cpp:66]   --->   Operation 1789 'bitconcatenate' 'or_ln66_115' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1790 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_153)   --->   "%xor_ln66_152 = xor i32 %or_ln66_113, i32 %or_ln66_114" [sha256.cpp:66]   --->   Operation 1790 'xor' 'xor_ln66_152' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1791 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_153 = xor i32 %xor_ln66_152, i32 %or_ln66_115" [sha256.cpp:66]   --->   Operation 1791 'xor' 'xor_ln66_153' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1792 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_155)   --->   "%and_ln66_76 = and i32 %e_70, i32 %e_69" [sha256.cpp:66]   --->   Operation 1792 'and' 'and_ln66_76' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1793 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_155)   --->   "%xor_ln66_154 = xor i32 %e_70, i32 4294967295" [sha256.cpp:66]   --->   Operation 1793 'xor' 'xor_ln66_154' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1794 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_155)   --->   "%and_ln66_77 = and i32 %e_68, i32 %xor_ln66_154" [sha256.cpp:66]   --->   Operation 1794 'and' 'and_ln66_77' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1795 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_155 = xor i32 %and_ln66_76, i32 %and_ln66_77" [sha256.cpp:66]   --->   Operation 1795 'xor' 'xor_ln66_155' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1796 [1/2] (1.29ns)   --->   "%m_load_38 = load i6 %m_addr_38" [sha256.cpp:66]   --->   Operation 1796 'load' 'm_load_38' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_41 : Operation 1797 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_152 = add i32 %m_load_38, i32 %e_67" [sha256.cpp:66]   --->   Operation 1797 'add' 'add_ln66_152' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 1798 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_153 = add i32 %xor_ln66_153, i32 2177026350" [sha256.cpp:66]   --->   Operation 1798 'add' 'add_ln66_153' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 1799 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_154 = add i32 %add_ln66_153, i32 %xor_ln66_155" [sha256.cpp:66]   --->   Operation 1799 'add' 'add_ln66_154' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 1800 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_38 = add i32 %add_ln66_154, i32 %add_ln66_152" [sha256.cpp:66]   --->   Operation 1800 'add' 't1_38' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 1801 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_153)   --->   "%lshr_ln67_113 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_70, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1801 'partselect' 'lshr_ln67_113' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1802 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_153)   --->   "%trunc_ln67_114 = trunc i32 %a_70" [sha256.cpp:67]   --->   Operation 1802 'trunc' 'trunc_ln67_114' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1803 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_153)   --->   "%or_ln67_113 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_114, i30 %lshr_ln67_113" [sha256.cpp:67]   --->   Operation 1803 'bitconcatenate' 'or_ln67_113' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1804 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_153)   --->   "%lshr_ln67_114 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_70, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1804 'partselect' 'lshr_ln67_114' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1805 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_153)   --->   "%trunc_ln67_115 = trunc i32 %a_70" [sha256.cpp:67]   --->   Operation 1805 'trunc' 'trunc_ln67_115' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1806 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_153)   --->   "%or_ln67_114 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_115, i19 %lshr_ln67_114" [sha256.cpp:67]   --->   Operation 1806 'bitconcatenate' 'or_ln67_114' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1807 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_153)   --->   "%lshr_ln67_115 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_70, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1807 'partselect' 'lshr_ln67_115' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1808 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_153)   --->   "%trunc_ln67_116 = trunc i32 %a_70" [sha256.cpp:67]   --->   Operation 1808 'trunc' 'trunc_ln67_116' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1809 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_153)   --->   "%or_ln67_115 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_116, i10 %lshr_ln67_115" [sha256.cpp:67]   --->   Operation 1809 'bitconcatenate' 'or_ln67_115' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1810 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_153)   --->   "%xor_ln67_152 = xor i32 %or_ln67_113, i32 %or_ln67_114" [sha256.cpp:67]   --->   Operation 1810 'xor' 'xor_ln67_152' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1811 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_153 = xor i32 %xor_ln67_152, i32 %or_ln67_115" [sha256.cpp:67]   --->   Operation 1811 'xor' 'xor_ln67_153' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1812 [1/1] (0.28ns)   --->   "%and_ln67_77 = and i32 %a_70, i32 %a_69" [sha256.cpp:67]   --->   Operation 1812 'and' 'and_ln67_77' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1813 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_155)   --->   "%and_ln67_78 = and i32 %a_70, i32 %a_68" [sha256.cpp:67]   --->   Operation 1813 'and' 'and_ln67_78' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1814 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_155)   --->   "%xor_ln67_154 = xor i32 %and_ln67_75, i32 %and_ln67_78" [sha256.cpp:67]   --->   Operation 1814 'xor' 'xor_ln67_154' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1815 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_155 = xor i32 %xor_ln67_154, i32 %and_ln67_77" [sha256.cpp:67]   --->   Operation 1815 'xor' 'xor_ln67_155' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1816 [1/1] (1.14ns)   --->   "%e_71 = add i32 %t1_38, i32 %a_67" [sha256.cpp:71]   --->   Operation 1816 'add' 'e_71' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1817 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_76 = add i32 %xor_ln67_155, i32 %t1_38" [sha256.cpp:75]   --->   Operation 1817 'add' 'add_ln75_76' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 1818 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_71 = add i32 %add_ln75_76, i32 %xor_ln67_153" [sha256.cpp:75]   --->   Operation 1818 'add' 'a_71' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 1819 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_157)   --->   "%lshr_ln66_116 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_71, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1819 'partselect' 'lshr_ln66_116' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1820 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_157)   --->   "%trunc_ln66_117 = trunc i32 %e_71" [sha256.cpp:66]   --->   Operation 1820 'trunc' 'trunc_ln66_117' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1821 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_157)   --->   "%or_ln66_116 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_117, i26 %lshr_ln66_116" [sha256.cpp:66]   --->   Operation 1821 'bitconcatenate' 'or_ln66_116' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1822 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_157)   --->   "%lshr_ln66_117 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_71, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1822 'partselect' 'lshr_ln66_117' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1823 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_157)   --->   "%trunc_ln66_118 = trunc i32 %e_71" [sha256.cpp:66]   --->   Operation 1823 'trunc' 'trunc_ln66_118' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1824 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_157)   --->   "%or_ln66_117 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_118, i21 %lshr_ln66_117" [sha256.cpp:66]   --->   Operation 1824 'bitconcatenate' 'or_ln66_117' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1825 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_157)   --->   "%lshr_ln66_118 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_71, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1825 'partselect' 'lshr_ln66_118' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1826 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_157)   --->   "%trunc_ln66_119 = trunc i32 %e_71" [sha256.cpp:66]   --->   Operation 1826 'trunc' 'trunc_ln66_119' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1827 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_157)   --->   "%or_ln66_118 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_119, i7 %lshr_ln66_118" [sha256.cpp:66]   --->   Operation 1827 'bitconcatenate' 'or_ln66_118' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1828 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_157)   --->   "%xor_ln66_156 = xor i32 %or_ln66_116, i32 %or_ln66_117" [sha256.cpp:66]   --->   Operation 1828 'xor' 'xor_ln66_156' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1829 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_157 = xor i32 %xor_ln66_156, i32 %or_ln66_118" [sha256.cpp:66]   --->   Operation 1829 'xor' 'xor_ln66_157' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1830 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_159)   --->   "%and_ln66_78 = and i32 %e_71, i32 %e_70" [sha256.cpp:66]   --->   Operation 1830 'and' 'and_ln66_78' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1831 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_159)   --->   "%xor_ln66_158 = xor i32 %e_71, i32 4294967295" [sha256.cpp:66]   --->   Operation 1831 'xor' 'xor_ln66_158' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1832 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_159)   --->   "%and_ln66_79 = and i32 %e_69, i32 %xor_ln66_158" [sha256.cpp:66]   --->   Operation 1832 'and' 'and_ln66_79' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1833 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_159 = xor i32 %and_ln66_78, i32 %and_ln66_79" [sha256.cpp:66]   --->   Operation 1833 'xor' 'xor_ln66_159' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1834 [1/2] (1.29ns)   --->   "%m_load_39 = load i6 %m_addr_39" [sha256.cpp:66]   --->   Operation 1834 'load' 'm_load_39' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_41 : Operation 1835 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_156 = add i32 %m_load_39, i32 %e_68" [sha256.cpp:66]   --->   Operation 1835 'add' 'add_ln66_156' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 1836 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_157 = add i32 %xor_ln66_157, i32 2456956037" [sha256.cpp:66]   --->   Operation 1836 'add' 'add_ln66_157' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 1837 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_158 = add i32 %add_ln66_157, i32 %xor_ln66_159" [sha256.cpp:66]   --->   Operation 1837 'add' 'add_ln66_158' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 1838 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_39 = add i32 %add_ln66_158, i32 %add_ln66_156" [sha256.cpp:66]   --->   Operation 1838 'add' 't1_39' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 1839 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_157)   --->   "%lshr_ln67_116 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_71, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1839 'partselect' 'lshr_ln67_116' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1840 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_157)   --->   "%trunc_ln67_117 = trunc i32 %a_71" [sha256.cpp:67]   --->   Operation 1840 'trunc' 'trunc_ln67_117' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1841 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_157)   --->   "%or_ln67_116 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_117, i30 %lshr_ln67_116" [sha256.cpp:67]   --->   Operation 1841 'bitconcatenate' 'or_ln67_116' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1842 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_157)   --->   "%lshr_ln67_117 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_71, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1842 'partselect' 'lshr_ln67_117' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1843 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_157)   --->   "%trunc_ln67_118 = trunc i32 %a_71" [sha256.cpp:67]   --->   Operation 1843 'trunc' 'trunc_ln67_118' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1844 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_157)   --->   "%or_ln67_117 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_118, i19 %lshr_ln67_117" [sha256.cpp:67]   --->   Operation 1844 'bitconcatenate' 'or_ln67_117' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1845 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_157)   --->   "%lshr_ln67_118 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_71, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1845 'partselect' 'lshr_ln67_118' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1846 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_157)   --->   "%trunc_ln67_119 = trunc i32 %a_71" [sha256.cpp:67]   --->   Operation 1846 'trunc' 'trunc_ln67_119' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1847 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_157)   --->   "%or_ln67_118 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_119, i10 %lshr_ln67_118" [sha256.cpp:67]   --->   Operation 1847 'bitconcatenate' 'or_ln67_118' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1848 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_157)   --->   "%xor_ln67_156 = xor i32 %or_ln67_116, i32 %or_ln67_117" [sha256.cpp:67]   --->   Operation 1848 'xor' 'xor_ln67_156' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1849 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_157 = xor i32 %xor_ln67_156, i32 %or_ln67_118" [sha256.cpp:67]   --->   Operation 1849 'xor' 'xor_ln67_157' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 1850 [1/1] (0.00ns)   --->   "%m_addr_40 = getelementptr i32 %m, i64 0, i64 40" [sha256.cpp:66]   --->   Operation 1850 'getelementptr' 'm_addr_40' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1851 [2/2] (1.29ns)   --->   "%m_load_40 = load i6 %m_addr_40" [sha256.cpp:66]   --->   Operation 1851 'load' 'm_load_40' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_41 : Operation 1852 [1/1] (0.00ns)   --->   "%m_addr_41 = getelementptr i32 %m, i64 0, i64 41" [sha256.cpp:66]   --->   Operation 1852 'getelementptr' 'm_addr_41' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 1853 [2/2] (1.29ns)   --->   "%m_load_41 = load i6 %m_addr_41" [sha256.cpp:66]   --->   Operation 1853 'load' 'm_load_41' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 42 <SV = 40> <Delay = 6.49>
ST_42 : Operation 1854 [1/1] (0.28ns)   --->   "%and_ln67_79 = and i32 %a_71, i32 %a_70" [sha256.cpp:67]   --->   Operation 1854 'and' 'and_ln67_79' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1855 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_159)   --->   "%and_ln67_80 = and i32 %a_71, i32 %a_69" [sha256.cpp:67]   --->   Operation 1855 'and' 'and_ln67_80' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1856 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_159)   --->   "%xor_ln67_158 = xor i32 %and_ln67_77, i32 %and_ln67_80" [sha256.cpp:67]   --->   Operation 1856 'xor' 'xor_ln67_158' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1857 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_159 = xor i32 %xor_ln67_158, i32 %and_ln67_79" [sha256.cpp:67]   --->   Operation 1857 'xor' 'xor_ln67_159' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1858 [1/1] (1.14ns)   --->   "%e_72 = add i32 %t1_39, i32 %a_68" [sha256.cpp:71]   --->   Operation 1858 'add' 'e_72' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1859 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_78 = add i32 %xor_ln67_159, i32 %t1_39" [sha256.cpp:75]   --->   Operation 1859 'add' 'add_ln75_78' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_42 : Operation 1860 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_72 = add i32 %add_ln75_78, i32 %xor_ln67_157" [sha256.cpp:75]   --->   Operation 1860 'add' 'a_72' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_42 : Operation 1861 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_161)   --->   "%lshr_ln66_119 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_72, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1861 'partselect' 'lshr_ln66_119' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1862 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_161)   --->   "%trunc_ln66_120 = trunc i32 %e_72" [sha256.cpp:66]   --->   Operation 1862 'trunc' 'trunc_ln66_120' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1863 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_161)   --->   "%or_ln66_119 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_120, i26 %lshr_ln66_119" [sha256.cpp:66]   --->   Operation 1863 'bitconcatenate' 'or_ln66_119' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1864 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_161)   --->   "%lshr_ln66_120 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_72, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1864 'partselect' 'lshr_ln66_120' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1865 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_161)   --->   "%trunc_ln66_121 = trunc i32 %e_72" [sha256.cpp:66]   --->   Operation 1865 'trunc' 'trunc_ln66_121' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1866 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_161)   --->   "%or_ln66_120 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_121, i21 %lshr_ln66_120" [sha256.cpp:66]   --->   Operation 1866 'bitconcatenate' 'or_ln66_120' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1867 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_161)   --->   "%lshr_ln66_121 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_72, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1867 'partselect' 'lshr_ln66_121' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1868 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_161)   --->   "%trunc_ln66_122 = trunc i32 %e_72" [sha256.cpp:66]   --->   Operation 1868 'trunc' 'trunc_ln66_122' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1869 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_161)   --->   "%or_ln66_121 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_122, i7 %lshr_ln66_121" [sha256.cpp:66]   --->   Operation 1869 'bitconcatenate' 'or_ln66_121' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1870 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_161)   --->   "%xor_ln66_160 = xor i32 %or_ln66_119, i32 %or_ln66_120" [sha256.cpp:66]   --->   Operation 1870 'xor' 'xor_ln66_160' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1871 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_161 = xor i32 %xor_ln66_160, i32 %or_ln66_121" [sha256.cpp:66]   --->   Operation 1871 'xor' 'xor_ln66_161' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1872 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_163)   --->   "%and_ln66_80 = and i32 %e_72, i32 %e_71" [sha256.cpp:66]   --->   Operation 1872 'and' 'and_ln66_80' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1873 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_163)   --->   "%xor_ln66_162 = xor i32 %e_72, i32 4294967295" [sha256.cpp:66]   --->   Operation 1873 'xor' 'xor_ln66_162' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1874 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_163)   --->   "%and_ln66_81 = and i32 %e_70, i32 %xor_ln66_162" [sha256.cpp:66]   --->   Operation 1874 'and' 'and_ln66_81' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1875 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_163 = xor i32 %and_ln66_80, i32 %and_ln66_81" [sha256.cpp:66]   --->   Operation 1875 'xor' 'xor_ln66_163' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1876 [1/2] (1.29ns)   --->   "%m_load_40 = load i6 %m_addr_40" [sha256.cpp:66]   --->   Operation 1876 'load' 'm_load_40' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_42 : Operation 1877 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_160 = add i32 %m_load_40, i32 %e_69" [sha256.cpp:66]   --->   Operation 1877 'add' 'add_ln66_160' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_42 : Operation 1878 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_161 = add i32 %xor_ln66_161, i32 2730485921" [sha256.cpp:66]   --->   Operation 1878 'add' 'add_ln66_161' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_42 : Operation 1879 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_162 = add i32 %add_ln66_161, i32 %xor_ln66_163" [sha256.cpp:66]   --->   Operation 1879 'add' 'add_ln66_162' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_42 : Operation 1880 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_40 = add i32 %add_ln66_162, i32 %add_ln66_160" [sha256.cpp:66]   --->   Operation 1880 'add' 't1_40' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_42 : Operation 1881 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_161)   --->   "%lshr_ln67_119 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_72, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1881 'partselect' 'lshr_ln67_119' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1882 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_161)   --->   "%trunc_ln67_120 = trunc i32 %a_72" [sha256.cpp:67]   --->   Operation 1882 'trunc' 'trunc_ln67_120' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1883 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_161)   --->   "%or_ln67_119 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_120, i30 %lshr_ln67_119" [sha256.cpp:67]   --->   Operation 1883 'bitconcatenate' 'or_ln67_119' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1884 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_161)   --->   "%lshr_ln67_120 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_72, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1884 'partselect' 'lshr_ln67_120' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1885 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_161)   --->   "%trunc_ln67_121 = trunc i32 %a_72" [sha256.cpp:67]   --->   Operation 1885 'trunc' 'trunc_ln67_121' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1886 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_161)   --->   "%or_ln67_120 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_121, i19 %lshr_ln67_120" [sha256.cpp:67]   --->   Operation 1886 'bitconcatenate' 'or_ln67_120' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1887 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_161)   --->   "%lshr_ln67_121 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_72, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1887 'partselect' 'lshr_ln67_121' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1888 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_161)   --->   "%trunc_ln67_122 = trunc i32 %a_72" [sha256.cpp:67]   --->   Operation 1888 'trunc' 'trunc_ln67_122' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1889 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_161)   --->   "%or_ln67_121 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_122, i10 %lshr_ln67_121" [sha256.cpp:67]   --->   Operation 1889 'bitconcatenate' 'or_ln67_121' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1890 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_161)   --->   "%xor_ln67_160 = xor i32 %or_ln67_119, i32 %or_ln67_120" [sha256.cpp:67]   --->   Operation 1890 'xor' 'xor_ln67_160' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1891 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_161 = xor i32 %xor_ln67_160, i32 %or_ln67_121" [sha256.cpp:67]   --->   Operation 1891 'xor' 'xor_ln67_161' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1892 [1/1] (1.14ns)   --->   "%e_73 = add i32 %t1_40, i32 %a_69" [sha256.cpp:71]   --->   Operation 1892 'add' 'e_73' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1893 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_165)   --->   "%lshr_ln66_122 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_73, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1893 'partselect' 'lshr_ln66_122' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1894 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_165)   --->   "%trunc_ln66_123 = trunc i32 %e_73" [sha256.cpp:66]   --->   Operation 1894 'trunc' 'trunc_ln66_123' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1895 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_165)   --->   "%or_ln66_122 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_123, i26 %lshr_ln66_122" [sha256.cpp:66]   --->   Operation 1895 'bitconcatenate' 'or_ln66_122' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1896 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_165)   --->   "%lshr_ln66_123 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_73, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1896 'partselect' 'lshr_ln66_123' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1897 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_165)   --->   "%trunc_ln66_124 = trunc i32 %e_73" [sha256.cpp:66]   --->   Operation 1897 'trunc' 'trunc_ln66_124' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1898 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_165)   --->   "%or_ln66_123 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_124, i21 %lshr_ln66_123" [sha256.cpp:66]   --->   Operation 1898 'bitconcatenate' 'or_ln66_123' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1899 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_165)   --->   "%lshr_ln66_124 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_73, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1899 'partselect' 'lshr_ln66_124' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1900 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_165)   --->   "%trunc_ln66_125 = trunc i32 %e_73" [sha256.cpp:66]   --->   Operation 1900 'trunc' 'trunc_ln66_125' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1901 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_165)   --->   "%or_ln66_124 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_125, i7 %lshr_ln66_124" [sha256.cpp:66]   --->   Operation 1901 'bitconcatenate' 'or_ln66_124' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1902 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_165)   --->   "%xor_ln66_164 = xor i32 %or_ln66_122, i32 %or_ln66_123" [sha256.cpp:66]   --->   Operation 1902 'xor' 'xor_ln66_164' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1903 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_165 = xor i32 %xor_ln66_164, i32 %or_ln66_124" [sha256.cpp:66]   --->   Operation 1903 'xor' 'xor_ln66_165' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1904 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_167)   --->   "%and_ln66_82 = and i32 %e_73, i32 %e_72" [sha256.cpp:66]   --->   Operation 1904 'and' 'and_ln66_82' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1905 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_167)   --->   "%xor_ln66_166 = xor i32 %e_73, i32 4294967295" [sha256.cpp:66]   --->   Operation 1905 'xor' 'xor_ln66_166' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1906 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_167)   --->   "%and_ln66_83 = and i32 %e_71, i32 %xor_ln66_166" [sha256.cpp:66]   --->   Operation 1906 'and' 'and_ln66_83' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1907 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_167 = xor i32 %and_ln66_82, i32 %and_ln66_83" [sha256.cpp:66]   --->   Operation 1907 'xor' 'xor_ln66_167' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 1908 [1/2] (1.29ns)   --->   "%m_load_41 = load i6 %m_addr_41" [sha256.cpp:66]   --->   Operation 1908 'load' 'm_load_41' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_42 : Operation 1909 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_164 = add i32 %m_load_41, i32 %e_70" [sha256.cpp:66]   --->   Operation 1909 'add' 'add_ln66_164' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_42 : Operation 1910 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_165 = add i32 %xor_ln66_165, i32 2820302411" [sha256.cpp:66]   --->   Operation 1910 'add' 'add_ln66_165' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_42 : Operation 1911 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_166 = add i32 %add_ln66_165, i32 %xor_ln66_167" [sha256.cpp:66]   --->   Operation 1911 'add' 'add_ln66_166' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_42 : Operation 1912 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_41 = add i32 %add_ln66_166, i32 %add_ln66_164" [sha256.cpp:66]   --->   Operation 1912 'add' 't1_41' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_42 : Operation 1913 [1/1] (0.00ns)   --->   "%m_addr_42 = getelementptr i32 %m, i64 0, i64 42" [sha256.cpp:66]   --->   Operation 1913 'getelementptr' 'm_addr_42' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1914 [2/2] (1.29ns)   --->   "%m_load_42 = load i6 %m_addr_42" [sha256.cpp:66]   --->   Operation 1914 'load' 'm_load_42' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_42 : Operation 1915 [1/1] (0.00ns)   --->   "%m_addr_43 = getelementptr i32 %m, i64 0, i64 43" [sha256.cpp:66]   --->   Operation 1915 'getelementptr' 'm_addr_43' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 1916 [2/2] (1.29ns)   --->   "%m_load_43 = load i6 %m_addr_43" [sha256.cpp:66]   --->   Operation 1916 'load' 'm_load_43' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 43 <SV = 41> <Delay = 6.49>
ST_43 : Operation 1917 [1/1] (0.28ns)   --->   "%and_ln67_81 = and i32 %a_72, i32 %a_71" [sha256.cpp:67]   --->   Operation 1917 'and' 'and_ln67_81' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1918 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_163)   --->   "%and_ln67_82 = and i32 %a_72, i32 %a_70" [sha256.cpp:67]   --->   Operation 1918 'and' 'and_ln67_82' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1919 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_163)   --->   "%xor_ln67_162 = xor i32 %and_ln67_79, i32 %and_ln67_82" [sha256.cpp:67]   --->   Operation 1919 'xor' 'xor_ln67_162' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1920 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_163 = xor i32 %xor_ln67_162, i32 %and_ln67_81" [sha256.cpp:67]   --->   Operation 1920 'xor' 'xor_ln67_163' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1921 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_80 = add i32 %xor_ln67_163, i32 %t1_40" [sha256.cpp:75]   --->   Operation 1921 'add' 'add_ln75_80' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_43 : Operation 1922 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_73 = add i32 %add_ln75_80, i32 %xor_ln67_161" [sha256.cpp:75]   --->   Operation 1922 'add' 'a_73' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_43 : Operation 1923 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_165)   --->   "%lshr_ln67_122 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_73, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1923 'partselect' 'lshr_ln67_122' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1924 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_165)   --->   "%trunc_ln67_123 = trunc i32 %a_73" [sha256.cpp:67]   --->   Operation 1924 'trunc' 'trunc_ln67_123' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1925 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_165)   --->   "%or_ln67_122 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_123, i30 %lshr_ln67_122" [sha256.cpp:67]   --->   Operation 1925 'bitconcatenate' 'or_ln67_122' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1926 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_165)   --->   "%lshr_ln67_123 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_73, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1926 'partselect' 'lshr_ln67_123' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1927 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_165)   --->   "%trunc_ln67_124 = trunc i32 %a_73" [sha256.cpp:67]   --->   Operation 1927 'trunc' 'trunc_ln67_124' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1928 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_165)   --->   "%or_ln67_123 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_124, i19 %lshr_ln67_123" [sha256.cpp:67]   --->   Operation 1928 'bitconcatenate' 'or_ln67_123' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1929 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_165)   --->   "%lshr_ln67_124 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_73, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1929 'partselect' 'lshr_ln67_124' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1930 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_165)   --->   "%trunc_ln67_125 = trunc i32 %a_73" [sha256.cpp:67]   --->   Operation 1930 'trunc' 'trunc_ln67_125' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1931 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_165)   --->   "%or_ln67_124 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_125, i10 %lshr_ln67_124" [sha256.cpp:67]   --->   Operation 1931 'bitconcatenate' 'or_ln67_124' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1932 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_165)   --->   "%xor_ln67_164 = xor i32 %or_ln67_122, i32 %or_ln67_123" [sha256.cpp:67]   --->   Operation 1932 'xor' 'xor_ln67_164' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1933 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_165 = xor i32 %xor_ln67_164, i32 %or_ln67_124" [sha256.cpp:67]   --->   Operation 1933 'xor' 'xor_ln67_165' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1934 [1/1] (0.28ns)   --->   "%and_ln67_83 = and i32 %a_73, i32 %a_72" [sha256.cpp:67]   --->   Operation 1934 'and' 'and_ln67_83' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1935 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_167)   --->   "%and_ln67_84 = and i32 %a_73, i32 %a_71" [sha256.cpp:67]   --->   Operation 1935 'and' 'and_ln67_84' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1936 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_167)   --->   "%xor_ln67_166 = xor i32 %and_ln67_81, i32 %and_ln67_84" [sha256.cpp:67]   --->   Operation 1936 'xor' 'xor_ln67_166' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1937 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_167 = xor i32 %xor_ln67_166, i32 %and_ln67_83" [sha256.cpp:67]   --->   Operation 1937 'xor' 'xor_ln67_167' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1938 [1/1] (1.14ns)   --->   "%e_74 = add i32 %t1_41, i32 %a_70" [sha256.cpp:71]   --->   Operation 1938 'add' 'e_74' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1939 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_82 = add i32 %xor_ln67_167, i32 %t1_41" [sha256.cpp:75]   --->   Operation 1939 'add' 'add_ln75_82' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_43 : Operation 1940 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_74 = add i32 %add_ln75_82, i32 %xor_ln67_165" [sha256.cpp:75]   --->   Operation 1940 'add' 'a_74' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_43 : Operation 1941 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_169)   --->   "%lshr_ln66_125 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_74, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1941 'partselect' 'lshr_ln66_125' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1942 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_169)   --->   "%trunc_ln66_126 = trunc i32 %e_74" [sha256.cpp:66]   --->   Operation 1942 'trunc' 'trunc_ln66_126' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1943 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_169)   --->   "%or_ln66_125 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_126, i26 %lshr_ln66_125" [sha256.cpp:66]   --->   Operation 1943 'bitconcatenate' 'or_ln66_125' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1944 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_169)   --->   "%lshr_ln66_126 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_74, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1944 'partselect' 'lshr_ln66_126' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1945 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_169)   --->   "%trunc_ln66_127 = trunc i32 %e_74" [sha256.cpp:66]   --->   Operation 1945 'trunc' 'trunc_ln66_127' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1946 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_169)   --->   "%or_ln66_126 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_127, i21 %lshr_ln66_126" [sha256.cpp:66]   --->   Operation 1946 'bitconcatenate' 'or_ln66_126' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1947 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_169)   --->   "%lshr_ln66_127 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_74, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1947 'partselect' 'lshr_ln66_127' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1948 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_169)   --->   "%trunc_ln66_128 = trunc i32 %e_74" [sha256.cpp:66]   --->   Operation 1948 'trunc' 'trunc_ln66_128' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1949 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_169)   --->   "%or_ln66_127 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_128, i7 %lshr_ln66_127" [sha256.cpp:66]   --->   Operation 1949 'bitconcatenate' 'or_ln66_127' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1950 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_169)   --->   "%xor_ln66_168 = xor i32 %or_ln66_125, i32 %or_ln66_126" [sha256.cpp:66]   --->   Operation 1950 'xor' 'xor_ln66_168' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1951 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_169 = xor i32 %xor_ln66_168, i32 %or_ln66_127" [sha256.cpp:66]   --->   Operation 1951 'xor' 'xor_ln66_169' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1952 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_171)   --->   "%and_ln66_84 = and i32 %e_74, i32 %e_73" [sha256.cpp:66]   --->   Operation 1952 'and' 'and_ln66_84' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1953 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_171)   --->   "%xor_ln66_170 = xor i32 %e_74, i32 4294967295" [sha256.cpp:66]   --->   Operation 1953 'xor' 'xor_ln66_170' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1954 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_171)   --->   "%and_ln66_85 = and i32 %e_72, i32 %xor_ln66_170" [sha256.cpp:66]   --->   Operation 1954 'and' 'and_ln66_85' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1955 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_171 = xor i32 %and_ln66_84, i32 %and_ln66_85" [sha256.cpp:66]   --->   Operation 1955 'xor' 'xor_ln66_171' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1956 [1/2] (1.29ns)   --->   "%m_load_42 = load i6 %m_addr_42" [sha256.cpp:66]   --->   Operation 1956 'load' 'm_load_42' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_43 : Operation 1957 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_168 = add i32 %m_load_42, i32 %xor_ln66_171" [sha256.cpp:66]   --->   Operation 1957 'add' 'add_ln66_168' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_43 : Operation 1958 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_169 = add i32 %xor_ln66_169, i32 3259730800" [sha256.cpp:66]   --->   Operation 1958 'add' 'add_ln66_169' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_43 : Operation 1959 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_170 = add i32 %add_ln66_169, i32 %e_71" [sha256.cpp:66]   --->   Operation 1959 'add' 'add_ln66_170' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_43 : Operation 1960 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_42 = add i32 %add_ln66_170, i32 %add_ln66_168" [sha256.cpp:66]   --->   Operation 1960 'add' 't1_42' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_43 : Operation 1961 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_169)   --->   "%lshr_ln67_125 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_74, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1961 'partselect' 'lshr_ln67_125' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1962 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_169)   --->   "%trunc_ln67_126 = trunc i32 %a_74" [sha256.cpp:67]   --->   Operation 1962 'trunc' 'trunc_ln67_126' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1963 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_169)   --->   "%or_ln67_125 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_126, i30 %lshr_ln67_125" [sha256.cpp:67]   --->   Operation 1963 'bitconcatenate' 'or_ln67_125' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1964 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_169)   --->   "%lshr_ln67_126 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_74, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 1964 'partselect' 'lshr_ln67_126' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1965 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_169)   --->   "%trunc_ln67_127 = trunc i32 %a_74" [sha256.cpp:67]   --->   Operation 1965 'trunc' 'trunc_ln67_127' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1966 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_169)   --->   "%or_ln67_126 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_127, i19 %lshr_ln67_126" [sha256.cpp:67]   --->   Operation 1966 'bitconcatenate' 'or_ln67_126' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1967 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_169)   --->   "%lshr_ln67_127 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_74, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 1967 'partselect' 'lshr_ln67_127' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1968 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_169)   --->   "%trunc_ln67_128 = trunc i32 %a_74" [sha256.cpp:67]   --->   Operation 1968 'trunc' 'trunc_ln67_128' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1969 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_169)   --->   "%or_ln67_127 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_128, i10 %lshr_ln67_127" [sha256.cpp:67]   --->   Operation 1969 'bitconcatenate' 'or_ln67_127' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1970 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_169)   --->   "%xor_ln67_168 = xor i32 %or_ln67_125, i32 %or_ln67_126" [sha256.cpp:67]   --->   Operation 1970 'xor' 'xor_ln67_168' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1971 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_169 = xor i32 %xor_ln67_168, i32 %or_ln67_127" [sha256.cpp:67]   --->   Operation 1971 'xor' 'xor_ln67_169' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1972 [1/1] (0.28ns)   --->   "%and_ln67_85 = and i32 %a_74, i32 %a_73" [sha256.cpp:67]   --->   Operation 1972 'and' 'and_ln67_85' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1973 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_171)   --->   "%and_ln67_86 = and i32 %a_74, i32 %a_72" [sha256.cpp:67]   --->   Operation 1973 'and' 'and_ln67_86' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1974 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_171)   --->   "%xor_ln67_170 = xor i32 %and_ln67_83, i32 %and_ln67_86" [sha256.cpp:67]   --->   Operation 1974 'xor' 'xor_ln67_170' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1975 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_171 = xor i32 %xor_ln67_170, i32 %and_ln67_85" [sha256.cpp:67]   --->   Operation 1975 'xor' 'xor_ln67_171' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1976 [1/1] (1.14ns)   --->   "%e_75 = add i32 %t1_42, i32 %a_71" [sha256.cpp:71]   --->   Operation 1976 'add' 'e_75' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1977 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_84 = add i32 %xor_ln67_171, i32 %t1_42" [sha256.cpp:75]   --->   Operation 1977 'add' 'add_ln75_84' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_43 : Operation 1978 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_75 = add i32 %add_ln75_84, i32 %xor_ln67_169" [sha256.cpp:75]   --->   Operation 1978 'add' 'a_75' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_43 : Operation 1979 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_173)   --->   "%lshr_ln66_128 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_75, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 1979 'partselect' 'lshr_ln66_128' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1980 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_173)   --->   "%trunc_ln66_129 = trunc i32 %e_75" [sha256.cpp:66]   --->   Operation 1980 'trunc' 'trunc_ln66_129' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1981 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_173)   --->   "%or_ln66_128 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_129, i26 %lshr_ln66_128" [sha256.cpp:66]   --->   Operation 1981 'bitconcatenate' 'or_ln66_128' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1982 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_173)   --->   "%lshr_ln66_129 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_75, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 1982 'partselect' 'lshr_ln66_129' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1983 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_173)   --->   "%trunc_ln66_130 = trunc i32 %e_75" [sha256.cpp:66]   --->   Operation 1983 'trunc' 'trunc_ln66_130' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1984 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_173)   --->   "%or_ln66_129 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_130, i21 %lshr_ln66_129" [sha256.cpp:66]   --->   Operation 1984 'bitconcatenate' 'or_ln66_129' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1985 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_173)   --->   "%lshr_ln66_130 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_75, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 1985 'partselect' 'lshr_ln66_130' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1986 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_173)   --->   "%trunc_ln66_131 = trunc i32 %e_75" [sha256.cpp:66]   --->   Operation 1986 'trunc' 'trunc_ln66_131' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1987 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_173)   --->   "%or_ln66_130 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_131, i7 %lshr_ln66_130" [sha256.cpp:66]   --->   Operation 1987 'bitconcatenate' 'or_ln66_130' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 1988 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_173)   --->   "%xor_ln66_172 = xor i32 %or_ln66_128, i32 %or_ln66_129" [sha256.cpp:66]   --->   Operation 1988 'xor' 'xor_ln66_172' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1989 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_173 = xor i32 %xor_ln66_172, i32 %or_ln66_130" [sha256.cpp:66]   --->   Operation 1989 'xor' 'xor_ln66_173' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1990 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_175)   --->   "%and_ln66_86 = and i32 %e_75, i32 %e_74" [sha256.cpp:66]   --->   Operation 1990 'and' 'and_ln66_86' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1991 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_175)   --->   "%xor_ln66_174 = xor i32 %e_75, i32 4294967295" [sha256.cpp:66]   --->   Operation 1991 'xor' 'xor_ln66_174' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1992 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_175)   --->   "%and_ln66_87 = and i32 %e_73, i32 %xor_ln66_174" [sha256.cpp:66]   --->   Operation 1992 'and' 'and_ln66_87' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1993 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_175 = xor i32 %and_ln66_86, i32 %and_ln66_87" [sha256.cpp:66]   --->   Operation 1993 'xor' 'xor_ln66_175' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 1994 [1/2] (1.29ns)   --->   "%m_load_43 = load i6 %m_addr_43" [sha256.cpp:66]   --->   Operation 1994 'load' 'm_load_43' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_43 : Operation 1995 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_172 = add i32 %m_load_43, i32 %xor_ln66_175" [sha256.cpp:66]   --->   Operation 1995 'add' 'add_ln66_172' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_43 : Operation 1996 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_173 = add i32 %xor_ln66_173, i32 3345764771" [sha256.cpp:66]   --->   Operation 1996 'add' 'add_ln66_173' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_43 : Operation 1997 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_174 = add i32 %add_ln66_173, i32 %e_72" [sha256.cpp:66]   --->   Operation 1997 'add' 'add_ln66_174' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_43 : Operation 1998 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_43 = add i32 %add_ln66_174, i32 %add_ln66_172" [sha256.cpp:66]   --->   Operation 1998 'add' 't1_43' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_43 : Operation 1999 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_173)   --->   "%lshr_ln67_128 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_75, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 1999 'partselect' 'lshr_ln67_128' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 2000 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_173)   --->   "%trunc_ln67_129 = trunc i32 %a_75" [sha256.cpp:67]   --->   Operation 2000 'trunc' 'trunc_ln67_129' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 2001 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_173)   --->   "%or_ln67_128 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_129, i30 %lshr_ln67_128" [sha256.cpp:67]   --->   Operation 2001 'bitconcatenate' 'or_ln67_128' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 2002 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_173)   --->   "%lshr_ln67_129 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_75, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2002 'partselect' 'lshr_ln67_129' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 2003 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_173)   --->   "%trunc_ln67_130 = trunc i32 %a_75" [sha256.cpp:67]   --->   Operation 2003 'trunc' 'trunc_ln67_130' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 2004 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_173)   --->   "%or_ln67_129 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_130, i19 %lshr_ln67_129" [sha256.cpp:67]   --->   Operation 2004 'bitconcatenate' 'or_ln67_129' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 2005 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_173)   --->   "%lshr_ln67_130 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_75, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2005 'partselect' 'lshr_ln67_130' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 2006 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_173)   --->   "%trunc_ln67_131 = trunc i32 %a_75" [sha256.cpp:67]   --->   Operation 2006 'trunc' 'trunc_ln67_131' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 2007 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_173)   --->   "%or_ln67_130 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_131, i10 %lshr_ln67_130" [sha256.cpp:67]   --->   Operation 2007 'bitconcatenate' 'or_ln67_130' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 2008 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_173)   --->   "%xor_ln67_172 = xor i32 %or_ln67_128, i32 %or_ln67_129" [sha256.cpp:67]   --->   Operation 2008 'xor' 'xor_ln67_172' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 2009 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_173 = xor i32 %xor_ln67_172, i32 %or_ln67_130" [sha256.cpp:67]   --->   Operation 2009 'xor' 'xor_ln67_173' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 2010 [1/1] (0.00ns)   --->   "%m_addr_44 = getelementptr i32 %m, i64 0, i64 44" [sha256.cpp:66]   --->   Operation 2010 'getelementptr' 'm_addr_44' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 2011 [2/2] (1.29ns)   --->   "%m_load_44 = load i6 %m_addr_44" [sha256.cpp:66]   --->   Operation 2011 'load' 'm_load_44' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_43 : Operation 2012 [1/1] (0.00ns)   --->   "%m_addr_45 = getelementptr i32 %m, i64 0, i64 45" [sha256.cpp:66]   --->   Operation 2012 'getelementptr' 'm_addr_45' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 2013 [2/2] (1.29ns)   --->   "%m_load_45 = load i6 %m_addr_45" [sha256.cpp:66]   --->   Operation 2013 'load' 'm_load_45' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 44 <SV = 42> <Delay = 6.49>
ST_44 : Operation 2014 [1/1] (0.28ns)   --->   "%and_ln67_87 = and i32 %a_75, i32 %a_74" [sha256.cpp:67]   --->   Operation 2014 'and' 'and_ln67_87' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 2015 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_175)   --->   "%and_ln67_88 = and i32 %a_75, i32 %a_73" [sha256.cpp:67]   --->   Operation 2015 'and' 'and_ln67_88' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 2016 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_175)   --->   "%xor_ln67_174 = xor i32 %and_ln67_85, i32 %and_ln67_88" [sha256.cpp:67]   --->   Operation 2016 'xor' 'xor_ln67_174' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 2017 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_175 = xor i32 %xor_ln67_174, i32 %and_ln67_87" [sha256.cpp:67]   --->   Operation 2017 'xor' 'xor_ln67_175' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 2018 [1/1] (1.14ns)   --->   "%e_76 = add i32 %t1_43, i32 %a_72" [sha256.cpp:71]   --->   Operation 2018 'add' 'e_76' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 2019 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_86 = add i32 %xor_ln67_175, i32 %t1_43" [sha256.cpp:75]   --->   Operation 2019 'add' 'add_ln75_86' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_44 : Operation 2020 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_76 = add i32 %add_ln75_86, i32 %xor_ln67_173" [sha256.cpp:75]   --->   Operation 2020 'add' 'a_76' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_44 : Operation 2021 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_177)   --->   "%lshr_ln66_131 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_76, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 2021 'partselect' 'lshr_ln66_131' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2022 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_177)   --->   "%trunc_ln66_132 = trunc i32 %e_76" [sha256.cpp:66]   --->   Operation 2022 'trunc' 'trunc_ln66_132' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2023 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_177)   --->   "%or_ln66_131 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_132, i26 %lshr_ln66_131" [sha256.cpp:66]   --->   Operation 2023 'bitconcatenate' 'or_ln66_131' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2024 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_177)   --->   "%lshr_ln66_132 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_76, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 2024 'partselect' 'lshr_ln66_132' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2025 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_177)   --->   "%trunc_ln66_133 = trunc i32 %e_76" [sha256.cpp:66]   --->   Operation 2025 'trunc' 'trunc_ln66_133' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2026 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_177)   --->   "%or_ln66_132 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_133, i21 %lshr_ln66_132" [sha256.cpp:66]   --->   Operation 2026 'bitconcatenate' 'or_ln66_132' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2027 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_177)   --->   "%lshr_ln66_133 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_76, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 2027 'partselect' 'lshr_ln66_133' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2028 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_177)   --->   "%trunc_ln66_134 = trunc i32 %e_76" [sha256.cpp:66]   --->   Operation 2028 'trunc' 'trunc_ln66_134' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2029 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_177)   --->   "%or_ln66_133 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_134, i7 %lshr_ln66_133" [sha256.cpp:66]   --->   Operation 2029 'bitconcatenate' 'or_ln66_133' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2030 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_177)   --->   "%xor_ln66_176 = xor i32 %or_ln66_131, i32 %or_ln66_132" [sha256.cpp:66]   --->   Operation 2030 'xor' 'xor_ln66_176' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 2031 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_177 = xor i32 %xor_ln66_176, i32 %or_ln66_133" [sha256.cpp:66]   --->   Operation 2031 'xor' 'xor_ln66_177' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 2032 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_179)   --->   "%and_ln66_88 = and i32 %e_76, i32 %e_75" [sha256.cpp:66]   --->   Operation 2032 'and' 'and_ln66_88' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 2033 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_179)   --->   "%xor_ln66_178 = xor i32 %e_76, i32 4294967295" [sha256.cpp:66]   --->   Operation 2033 'xor' 'xor_ln66_178' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 2034 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_179)   --->   "%and_ln66_89 = and i32 %e_74, i32 %xor_ln66_178" [sha256.cpp:66]   --->   Operation 2034 'and' 'and_ln66_89' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 2035 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_179 = xor i32 %and_ln66_88, i32 %and_ln66_89" [sha256.cpp:66]   --->   Operation 2035 'xor' 'xor_ln66_179' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 2036 [1/2] (1.29ns)   --->   "%m_load_44 = load i6 %m_addr_44" [sha256.cpp:66]   --->   Operation 2036 'load' 'm_load_44' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_44 : Operation 2037 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_176 = add i32 %m_load_44, i32 %xor_ln66_179" [sha256.cpp:66]   --->   Operation 2037 'add' 'add_ln66_176' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_44 : Operation 2038 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_177 = add i32 %xor_ln66_177, i32 3516065817" [sha256.cpp:66]   --->   Operation 2038 'add' 'add_ln66_177' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_44 : Operation 2039 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_178 = add i32 %add_ln66_177, i32 %e_73" [sha256.cpp:66]   --->   Operation 2039 'add' 'add_ln66_178' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_44 : Operation 2040 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_44 = add i32 %add_ln66_178, i32 %add_ln66_176" [sha256.cpp:66]   --->   Operation 2040 'add' 't1_44' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_44 : Operation 2041 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_177)   --->   "%lshr_ln67_131 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_76, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 2041 'partselect' 'lshr_ln67_131' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2042 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_177)   --->   "%trunc_ln67_132 = trunc i32 %a_76" [sha256.cpp:67]   --->   Operation 2042 'trunc' 'trunc_ln67_132' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2043 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_177)   --->   "%or_ln67_131 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_132, i30 %lshr_ln67_131" [sha256.cpp:67]   --->   Operation 2043 'bitconcatenate' 'or_ln67_131' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2044 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_177)   --->   "%lshr_ln67_132 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_76, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2044 'partselect' 'lshr_ln67_132' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2045 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_177)   --->   "%trunc_ln67_133 = trunc i32 %a_76" [sha256.cpp:67]   --->   Operation 2045 'trunc' 'trunc_ln67_133' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2046 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_177)   --->   "%or_ln67_132 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_133, i19 %lshr_ln67_132" [sha256.cpp:67]   --->   Operation 2046 'bitconcatenate' 'or_ln67_132' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2047 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_177)   --->   "%lshr_ln67_133 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_76, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2047 'partselect' 'lshr_ln67_133' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2048 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_177)   --->   "%trunc_ln67_134 = trunc i32 %a_76" [sha256.cpp:67]   --->   Operation 2048 'trunc' 'trunc_ln67_134' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2049 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_177)   --->   "%or_ln67_133 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_134, i10 %lshr_ln67_133" [sha256.cpp:67]   --->   Operation 2049 'bitconcatenate' 'or_ln67_133' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2050 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_177)   --->   "%xor_ln67_176 = xor i32 %or_ln67_131, i32 %or_ln67_132" [sha256.cpp:67]   --->   Operation 2050 'xor' 'xor_ln67_176' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 2051 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_177 = xor i32 %xor_ln67_176, i32 %or_ln67_133" [sha256.cpp:67]   --->   Operation 2051 'xor' 'xor_ln67_177' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 2052 [1/1] (1.14ns)   --->   "%e_77 = add i32 %t1_44, i32 %a_73" [sha256.cpp:71]   --->   Operation 2052 'add' 'e_77' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 2053 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_181)   --->   "%lshr_ln66_134 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_77, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 2053 'partselect' 'lshr_ln66_134' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2054 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_181)   --->   "%trunc_ln66_135 = trunc i32 %e_77" [sha256.cpp:66]   --->   Operation 2054 'trunc' 'trunc_ln66_135' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2055 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_181)   --->   "%or_ln66_134 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_135, i26 %lshr_ln66_134" [sha256.cpp:66]   --->   Operation 2055 'bitconcatenate' 'or_ln66_134' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2056 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_181)   --->   "%lshr_ln66_135 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_77, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 2056 'partselect' 'lshr_ln66_135' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2057 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_181)   --->   "%trunc_ln66_136 = trunc i32 %e_77" [sha256.cpp:66]   --->   Operation 2057 'trunc' 'trunc_ln66_136' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2058 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_181)   --->   "%or_ln66_135 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_136, i21 %lshr_ln66_135" [sha256.cpp:66]   --->   Operation 2058 'bitconcatenate' 'or_ln66_135' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2059 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_181)   --->   "%lshr_ln66_136 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_77, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 2059 'partselect' 'lshr_ln66_136' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2060 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_181)   --->   "%trunc_ln66_137 = trunc i32 %e_77" [sha256.cpp:66]   --->   Operation 2060 'trunc' 'trunc_ln66_137' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2061 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_181)   --->   "%or_ln66_136 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_137, i7 %lshr_ln66_136" [sha256.cpp:66]   --->   Operation 2061 'bitconcatenate' 'or_ln66_136' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2062 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_181)   --->   "%xor_ln66_180 = xor i32 %or_ln66_134, i32 %or_ln66_135" [sha256.cpp:66]   --->   Operation 2062 'xor' 'xor_ln66_180' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 2063 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_181 = xor i32 %xor_ln66_180, i32 %or_ln66_136" [sha256.cpp:66]   --->   Operation 2063 'xor' 'xor_ln66_181' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 2064 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_183)   --->   "%and_ln66_90 = and i32 %e_77, i32 %e_76" [sha256.cpp:66]   --->   Operation 2064 'and' 'and_ln66_90' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 2065 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_183)   --->   "%xor_ln66_182 = xor i32 %e_77, i32 4294967295" [sha256.cpp:66]   --->   Operation 2065 'xor' 'xor_ln66_182' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 2066 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_183)   --->   "%and_ln66_91 = and i32 %e_75, i32 %xor_ln66_182" [sha256.cpp:66]   --->   Operation 2066 'and' 'and_ln66_91' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 2067 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_183 = xor i32 %and_ln66_90, i32 %and_ln66_91" [sha256.cpp:66]   --->   Operation 2067 'xor' 'xor_ln66_183' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 2068 [1/2] (1.29ns)   --->   "%m_load_45 = load i6 %m_addr_45" [sha256.cpp:66]   --->   Operation 2068 'load' 'm_load_45' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_44 : Operation 2069 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_180 = add i32 %m_load_45, i32 %xor_ln66_183" [sha256.cpp:66]   --->   Operation 2069 'add' 'add_ln66_180' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_44 : Operation 2070 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_181 = add i32 %xor_ln66_181, i32 3600352804" [sha256.cpp:66]   --->   Operation 2070 'add' 'add_ln66_181' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_44 : Operation 2071 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_182 = add i32 %add_ln66_181, i32 %e_74" [sha256.cpp:66]   --->   Operation 2071 'add' 'add_ln66_182' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_44 : Operation 2072 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_45 = add i32 %add_ln66_182, i32 %add_ln66_180" [sha256.cpp:66]   --->   Operation 2072 'add' 't1_45' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_44 : Operation 2073 [1/1] (0.00ns)   --->   "%m_addr_46 = getelementptr i32 %m, i64 0, i64 46" [sha256.cpp:66]   --->   Operation 2073 'getelementptr' 'm_addr_46' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2074 [2/2] (1.29ns)   --->   "%m_load_46 = load i6 %m_addr_46" [sha256.cpp:66]   --->   Operation 2074 'load' 'm_load_46' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_44 : Operation 2075 [1/1] (0.00ns)   --->   "%m_addr_47 = getelementptr i32 %m, i64 0, i64 47" [sha256.cpp:66]   --->   Operation 2075 'getelementptr' 'm_addr_47' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 2076 [2/2] (1.29ns)   --->   "%m_load_47 = load i6 %m_addr_47" [sha256.cpp:66]   --->   Operation 2076 'load' 'm_load_47' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 45 <SV = 43> <Delay = 6.49>
ST_45 : Operation 2077 [1/1] (0.28ns)   --->   "%and_ln67_89 = and i32 %a_76, i32 %a_75" [sha256.cpp:67]   --->   Operation 2077 'and' 'and_ln67_89' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2078 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_179)   --->   "%and_ln67_90 = and i32 %a_76, i32 %a_74" [sha256.cpp:67]   --->   Operation 2078 'and' 'and_ln67_90' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2079 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_179)   --->   "%xor_ln67_178 = xor i32 %and_ln67_87, i32 %and_ln67_90" [sha256.cpp:67]   --->   Operation 2079 'xor' 'xor_ln67_178' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2080 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_179 = xor i32 %xor_ln67_178, i32 %and_ln67_89" [sha256.cpp:67]   --->   Operation 2080 'xor' 'xor_ln67_179' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2081 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_88 = add i32 %xor_ln67_179, i32 %t1_44" [sha256.cpp:75]   --->   Operation 2081 'add' 'add_ln75_88' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_45 : Operation 2082 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_77 = add i32 %add_ln75_88, i32 %xor_ln67_177" [sha256.cpp:75]   --->   Operation 2082 'add' 'a_77' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_45 : Operation 2083 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_181)   --->   "%lshr_ln67_134 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_77, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 2083 'partselect' 'lshr_ln67_134' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2084 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_181)   --->   "%trunc_ln67_135 = trunc i32 %a_77" [sha256.cpp:67]   --->   Operation 2084 'trunc' 'trunc_ln67_135' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2085 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_181)   --->   "%or_ln67_134 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_135, i30 %lshr_ln67_134" [sha256.cpp:67]   --->   Operation 2085 'bitconcatenate' 'or_ln67_134' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2086 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_181)   --->   "%lshr_ln67_135 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_77, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2086 'partselect' 'lshr_ln67_135' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2087 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_181)   --->   "%trunc_ln67_136 = trunc i32 %a_77" [sha256.cpp:67]   --->   Operation 2087 'trunc' 'trunc_ln67_136' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2088 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_181)   --->   "%or_ln67_135 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_136, i19 %lshr_ln67_135" [sha256.cpp:67]   --->   Operation 2088 'bitconcatenate' 'or_ln67_135' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2089 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_181)   --->   "%lshr_ln67_136 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_77, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2089 'partselect' 'lshr_ln67_136' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2090 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_181)   --->   "%trunc_ln67_137 = trunc i32 %a_77" [sha256.cpp:67]   --->   Operation 2090 'trunc' 'trunc_ln67_137' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2091 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_181)   --->   "%or_ln67_136 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_137, i10 %lshr_ln67_136" [sha256.cpp:67]   --->   Operation 2091 'bitconcatenate' 'or_ln67_136' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2092 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_181)   --->   "%xor_ln67_180 = xor i32 %or_ln67_134, i32 %or_ln67_135" [sha256.cpp:67]   --->   Operation 2092 'xor' 'xor_ln67_180' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2093 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_181 = xor i32 %xor_ln67_180, i32 %or_ln67_136" [sha256.cpp:67]   --->   Operation 2093 'xor' 'xor_ln67_181' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2094 [1/1] (0.28ns)   --->   "%and_ln67_91 = and i32 %a_77, i32 %a_76" [sha256.cpp:67]   --->   Operation 2094 'and' 'and_ln67_91' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2095 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_183)   --->   "%and_ln67_92 = and i32 %a_77, i32 %a_75" [sha256.cpp:67]   --->   Operation 2095 'and' 'and_ln67_92' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2096 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_183)   --->   "%xor_ln67_182 = xor i32 %and_ln67_89, i32 %and_ln67_92" [sha256.cpp:67]   --->   Operation 2096 'xor' 'xor_ln67_182' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2097 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_183 = xor i32 %xor_ln67_182, i32 %and_ln67_91" [sha256.cpp:67]   --->   Operation 2097 'xor' 'xor_ln67_183' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2098 [1/1] (1.14ns)   --->   "%e_78 = add i32 %t1_45, i32 %a_74" [sha256.cpp:71]   --->   Operation 2098 'add' 'e_78' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2099 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_90 = add i32 %xor_ln67_183, i32 %t1_45" [sha256.cpp:75]   --->   Operation 2099 'add' 'add_ln75_90' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_45 : Operation 2100 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_78 = add i32 %add_ln75_90, i32 %xor_ln67_181" [sha256.cpp:75]   --->   Operation 2100 'add' 'a_78' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_45 : Operation 2101 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_185)   --->   "%lshr_ln66_137 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_78, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 2101 'partselect' 'lshr_ln66_137' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2102 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_185)   --->   "%trunc_ln66_138 = trunc i32 %e_78" [sha256.cpp:66]   --->   Operation 2102 'trunc' 'trunc_ln66_138' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2103 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_185)   --->   "%or_ln66_137 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_138, i26 %lshr_ln66_137" [sha256.cpp:66]   --->   Operation 2103 'bitconcatenate' 'or_ln66_137' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2104 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_185)   --->   "%lshr_ln66_138 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_78, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 2104 'partselect' 'lshr_ln66_138' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2105 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_185)   --->   "%trunc_ln66_139 = trunc i32 %e_78" [sha256.cpp:66]   --->   Operation 2105 'trunc' 'trunc_ln66_139' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2106 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_185)   --->   "%or_ln66_138 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_139, i21 %lshr_ln66_138" [sha256.cpp:66]   --->   Operation 2106 'bitconcatenate' 'or_ln66_138' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2107 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_185)   --->   "%lshr_ln66_139 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_78, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 2107 'partselect' 'lshr_ln66_139' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2108 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_185)   --->   "%trunc_ln66_140 = trunc i32 %e_78" [sha256.cpp:66]   --->   Operation 2108 'trunc' 'trunc_ln66_140' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2109 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_185)   --->   "%or_ln66_139 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_140, i7 %lshr_ln66_139" [sha256.cpp:66]   --->   Operation 2109 'bitconcatenate' 'or_ln66_139' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2110 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_185)   --->   "%xor_ln66_184 = xor i32 %or_ln66_137, i32 %or_ln66_138" [sha256.cpp:66]   --->   Operation 2110 'xor' 'xor_ln66_184' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2111 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_185 = xor i32 %xor_ln66_184, i32 %or_ln66_139" [sha256.cpp:66]   --->   Operation 2111 'xor' 'xor_ln66_185' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2112 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_187)   --->   "%and_ln66_92 = and i32 %e_78, i32 %e_77" [sha256.cpp:66]   --->   Operation 2112 'and' 'and_ln66_92' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2113 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_187)   --->   "%xor_ln66_186 = xor i32 %e_78, i32 4294967295" [sha256.cpp:66]   --->   Operation 2113 'xor' 'xor_ln66_186' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2114 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_187)   --->   "%and_ln66_93 = and i32 %e_76, i32 %xor_ln66_186" [sha256.cpp:66]   --->   Operation 2114 'and' 'and_ln66_93' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2115 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_187 = xor i32 %and_ln66_92, i32 %and_ln66_93" [sha256.cpp:66]   --->   Operation 2115 'xor' 'xor_ln66_187' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2116 [1/2] (1.29ns)   --->   "%m_load_46 = load i6 %m_addr_46" [sha256.cpp:66]   --->   Operation 2116 'load' 'm_load_46' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_45 : Operation 2117 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_184 = add i32 %m_load_46, i32 %xor_ln66_187" [sha256.cpp:66]   --->   Operation 2117 'add' 'add_ln66_184' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_45 : Operation 2118 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_185 = add i32 %xor_ln66_185, i32 4094571909" [sha256.cpp:66]   --->   Operation 2118 'add' 'add_ln66_185' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_45 : Operation 2119 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_186 = add i32 %add_ln66_185, i32 %e_75" [sha256.cpp:66]   --->   Operation 2119 'add' 'add_ln66_186' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_45 : Operation 2120 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_46 = add i32 %add_ln66_186, i32 %add_ln66_184" [sha256.cpp:66]   --->   Operation 2120 'add' 't1_46' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_45 : Operation 2121 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_185)   --->   "%lshr_ln67_137 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_78, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 2121 'partselect' 'lshr_ln67_137' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2122 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_185)   --->   "%trunc_ln67_138 = trunc i32 %a_78" [sha256.cpp:67]   --->   Operation 2122 'trunc' 'trunc_ln67_138' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2123 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_185)   --->   "%or_ln67_137 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_138, i30 %lshr_ln67_137" [sha256.cpp:67]   --->   Operation 2123 'bitconcatenate' 'or_ln67_137' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2124 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_185)   --->   "%lshr_ln67_138 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_78, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2124 'partselect' 'lshr_ln67_138' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2125 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_185)   --->   "%trunc_ln67_139 = trunc i32 %a_78" [sha256.cpp:67]   --->   Operation 2125 'trunc' 'trunc_ln67_139' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2126 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_185)   --->   "%or_ln67_138 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_139, i19 %lshr_ln67_138" [sha256.cpp:67]   --->   Operation 2126 'bitconcatenate' 'or_ln67_138' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2127 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_185)   --->   "%lshr_ln67_139 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_78, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2127 'partselect' 'lshr_ln67_139' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2128 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_185)   --->   "%trunc_ln67_140 = trunc i32 %a_78" [sha256.cpp:67]   --->   Operation 2128 'trunc' 'trunc_ln67_140' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2129 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_185)   --->   "%or_ln67_139 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_140, i10 %lshr_ln67_139" [sha256.cpp:67]   --->   Operation 2129 'bitconcatenate' 'or_ln67_139' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2130 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_185)   --->   "%xor_ln67_184 = xor i32 %or_ln67_137, i32 %or_ln67_138" [sha256.cpp:67]   --->   Operation 2130 'xor' 'xor_ln67_184' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2131 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_185 = xor i32 %xor_ln67_184, i32 %or_ln67_139" [sha256.cpp:67]   --->   Operation 2131 'xor' 'xor_ln67_185' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2132 [1/1] (0.28ns)   --->   "%and_ln67_93 = and i32 %a_78, i32 %a_77" [sha256.cpp:67]   --->   Operation 2132 'and' 'and_ln67_93' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2133 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_187)   --->   "%and_ln67_94 = and i32 %a_78, i32 %a_76" [sha256.cpp:67]   --->   Operation 2133 'and' 'and_ln67_94' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2134 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_187)   --->   "%xor_ln67_186 = xor i32 %and_ln67_91, i32 %and_ln67_94" [sha256.cpp:67]   --->   Operation 2134 'xor' 'xor_ln67_186' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2135 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_187 = xor i32 %xor_ln67_186, i32 %and_ln67_93" [sha256.cpp:67]   --->   Operation 2135 'xor' 'xor_ln67_187' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2136 [1/1] (1.14ns)   --->   "%e_79 = add i32 %t1_46, i32 %a_75" [sha256.cpp:71]   --->   Operation 2136 'add' 'e_79' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2137 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_92 = add i32 %xor_ln67_187, i32 %t1_46" [sha256.cpp:75]   --->   Operation 2137 'add' 'add_ln75_92' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_45 : Operation 2138 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_79 = add i32 %add_ln75_92, i32 %xor_ln67_185" [sha256.cpp:75]   --->   Operation 2138 'add' 'a_79' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_45 : Operation 2139 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_189)   --->   "%lshr_ln66_140 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_79, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 2139 'partselect' 'lshr_ln66_140' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2140 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_189)   --->   "%trunc_ln66_141 = trunc i32 %e_79" [sha256.cpp:66]   --->   Operation 2140 'trunc' 'trunc_ln66_141' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2141 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_189)   --->   "%or_ln66_140 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_141, i26 %lshr_ln66_140" [sha256.cpp:66]   --->   Operation 2141 'bitconcatenate' 'or_ln66_140' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2142 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_189)   --->   "%lshr_ln66_141 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_79, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 2142 'partselect' 'lshr_ln66_141' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2143 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_189)   --->   "%trunc_ln66_142 = trunc i32 %e_79" [sha256.cpp:66]   --->   Operation 2143 'trunc' 'trunc_ln66_142' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2144 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_189)   --->   "%or_ln66_141 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_142, i21 %lshr_ln66_141" [sha256.cpp:66]   --->   Operation 2144 'bitconcatenate' 'or_ln66_141' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2145 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_189)   --->   "%lshr_ln66_142 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_79, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 2145 'partselect' 'lshr_ln66_142' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2146 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_189)   --->   "%trunc_ln66_143 = trunc i32 %e_79" [sha256.cpp:66]   --->   Operation 2146 'trunc' 'trunc_ln66_143' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2147 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_189)   --->   "%or_ln66_142 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_143, i7 %lshr_ln66_142" [sha256.cpp:66]   --->   Operation 2147 'bitconcatenate' 'or_ln66_142' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2148 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_189)   --->   "%xor_ln66_188 = xor i32 %or_ln66_140, i32 %or_ln66_141" [sha256.cpp:66]   --->   Operation 2148 'xor' 'xor_ln66_188' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2149 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_189 = xor i32 %xor_ln66_188, i32 %or_ln66_142" [sha256.cpp:66]   --->   Operation 2149 'xor' 'xor_ln66_189' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2150 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_191)   --->   "%and_ln66_94 = and i32 %e_79, i32 %e_78" [sha256.cpp:66]   --->   Operation 2150 'and' 'and_ln66_94' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2151 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_191)   --->   "%xor_ln66_190 = xor i32 %e_79, i32 4294967295" [sha256.cpp:66]   --->   Operation 2151 'xor' 'xor_ln66_190' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2152 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_191)   --->   "%and_ln66_95 = and i32 %e_77, i32 %xor_ln66_190" [sha256.cpp:66]   --->   Operation 2152 'and' 'and_ln66_95' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2153 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_191 = xor i32 %and_ln66_94, i32 %and_ln66_95" [sha256.cpp:66]   --->   Operation 2153 'xor' 'xor_ln66_191' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2154 [1/2] (1.29ns)   --->   "%m_load_47 = load i6 %m_addr_47" [sha256.cpp:66]   --->   Operation 2154 'load' 'm_load_47' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_45 : Operation 2155 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_188 = add i32 %m_load_47, i32 %xor_ln66_191" [sha256.cpp:66]   --->   Operation 2155 'add' 'add_ln66_188' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_45 : Operation 2156 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_189 = add i32 %xor_ln66_189, i32 275423344" [sha256.cpp:66]   --->   Operation 2156 'add' 'add_ln66_189' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_45 : Operation 2157 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_190 = add i32 %add_ln66_189, i32 %e_76" [sha256.cpp:66]   --->   Operation 2157 'add' 'add_ln66_190' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_45 : Operation 2158 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_47 = add i32 %add_ln66_190, i32 %add_ln66_188" [sha256.cpp:66]   --->   Operation 2158 'add' 't1_47' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_45 : Operation 2159 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_189)   --->   "%lshr_ln67_140 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_79, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 2159 'partselect' 'lshr_ln67_140' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2160 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_189)   --->   "%trunc_ln67_141 = trunc i32 %a_79" [sha256.cpp:67]   --->   Operation 2160 'trunc' 'trunc_ln67_141' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2161 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_189)   --->   "%or_ln67_140 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_141, i30 %lshr_ln67_140" [sha256.cpp:67]   --->   Operation 2161 'bitconcatenate' 'or_ln67_140' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2162 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_189)   --->   "%lshr_ln67_141 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_79, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2162 'partselect' 'lshr_ln67_141' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2163 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_189)   --->   "%trunc_ln67_142 = trunc i32 %a_79" [sha256.cpp:67]   --->   Operation 2163 'trunc' 'trunc_ln67_142' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2164 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_189)   --->   "%or_ln67_141 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_142, i19 %lshr_ln67_141" [sha256.cpp:67]   --->   Operation 2164 'bitconcatenate' 'or_ln67_141' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2165 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_189)   --->   "%lshr_ln67_142 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_79, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2165 'partselect' 'lshr_ln67_142' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2166 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_189)   --->   "%trunc_ln67_143 = trunc i32 %a_79" [sha256.cpp:67]   --->   Operation 2166 'trunc' 'trunc_ln67_143' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2167 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_189)   --->   "%or_ln67_142 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_143, i10 %lshr_ln67_142" [sha256.cpp:67]   --->   Operation 2167 'bitconcatenate' 'or_ln67_142' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2168 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_189)   --->   "%xor_ln67_188 = xor i32 %or_ln67_140, i32 %or_ln67_141" [sha256.cpp:67]   --->   Operation 2168 'xor' 'xor_ln67_188' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2169 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_189 = xor i32 %xor_ln67_188, i32 %or_ln67_142" [sha256.cpp:67]   --->   Operation 2169 'xor' 'xor_ln67_189' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 2170 [1/1] (0.00ns)   --->   "%m_addr_48 = getelementptr i32 %m, i64 0, i64 48" [sha256.cpp:66]   --->   Operation 2170 'getelementptr' 'm_addr_48' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2171 [2/2] (1.29ns)   --->   "%m_load_48 = load i6 %m_addr_48" [sha256.cpp:66]   --->   Operation 2171 'load' 'm_load_48' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_45 : Operation 2172 [1/1] (0.00ns)   --->   "%m_addr_49 = getelementptr i32 %m, i64 0, i64 49" [sha256.cpp:66]   --->   Operation 2172 'getelementptr' 'm_addr_49' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 2173 [2/2] (1.29ns)   --->   "%m_load_49 = load i6 %m_addr_49" [sha256.cpp:66]   --->   Operation 2173 'load' 'm_load_49' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 46 <SV = 44> <Delay = 6.49>
ST_46 : Operation 2174 [1/1] (0.28ns)   --->   "%and_ln67_95 = and i32 %a_79, i32 %a_78" [sha256.cpp:67]   --->   Operation 2174 'and' 'and_ln67_95' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2175 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_191)   --->   "%and_ln67_96 = and i32 %a_79, i32 %a_77" [sha256.cpp:67]   --->   Operation 2175 'and' 'and_ln67_96' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2176 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_191)   --->   "%xor_ln67_190 = xor i32 %and_ln67_93, i32 %and_ln67_96" [sha256.cpp:67]   --->   Operation 2176 'xor' 'xor_ln67_190' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2177 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_191 = xor i32 %xor_ln67_190, i32 %and_ln67_95" [sha256.cpp:67]   --->   Operation 2177 'xor' 'xor_ln67_191' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2178 [1/1] (1.14ns)   --->   "%e_80 = add i32 %t1_47, i32 %a_76" [sha256.cpp:71]   --->   Operation 2178 'add' 'e_80' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2179 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_94 = add i32 %xor_ln67_191, i32 %t1_47" [sha256.cpp:75]   --->   Operation 2179 'add' 'add_ln75_94' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_46 : Operation 2180 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_80 = add i32 %add_ln75_94, i32 %xor_ln67_189" [sha256.cpp:75]   --->   Operation 2180 'add' 'a_80' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_46 : Operation 2181 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_193)   --->   "%lshr_ln66_143 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_80, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 2181 'partselect' 'lshr_ln66_143' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2182 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_193)   --->   "%trunc_ln66_144 = trunc i32 %e_80" [sha256.cpp:66]   --->   Operation 2182 'trunc' 'trunc_ln66_144' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2183 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_193)   --->   "%or_ln66_143 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_144, i26 %lshr_ln66_143" [sha256.cpp:66]   --->   Operation 2183 'bitconcatenate' 'or_ln66_143' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2184 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_193)   --->   "%lshr_ln66_144 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_80, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 2184 'partselect' 'lshr_ln66_144' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2185 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_193)   --->   "%trunc_ln66_145 = trunc i32 %e_80" [sha256.cpp:66]   --->   Operation 2185 'trunc' 'trunc_ln66_145' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2186 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_193)   --->   "%or_ln66_144 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_145, i21 %lshr_ln66_144" [sha256.cpp:66]   --->   Operation 2186 'bitconcatenate' 'or_ln66_144' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2187 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_193)   --->   "%lshr_ln66_145 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_80, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 2187 'partselect' 'lshr_ln66_145' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2188 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_193)   --->   "%trunc_ln66_146 = trunc i32 %e_80" [sha256.cpp:66]   --->   Operation 2188 'trunc' 'trunc_ln66_146' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2189 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_193)   --->   "%or_ln66_145 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_146, i7 %lshr_ln66_145" [sha256.cpp:66]   --->   Operation 2189 'bitconcatenate' 'or_ln66_145' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2190 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_193)   --->   "%xor_ln66_192 = xor i32 %or_ln66_143, i32 %or_ln66_144" [sha256.cpp:66]   --->   Operation 2190 'xor' 'xor_ln66_192' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2191 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_193 = xor i32 %xor_ln66_192, i32 %or_ln66_145" [sha256.cpp:66]   --->   Operation 2191 'xor' 'xor_ln66_193' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2192 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_195)   --->   "%and_ln66_96 = and i32 %e_80, i32 %e_79" [sha256.cpp:66]   --->   Operation 2192 'and' 'and_ln66_96' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2193 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_195)   --->   "%xor_ln66_194 = xor i32 %e_80, i32 4294967295" [sha256.cpp:66]   --->   Operation 2193 'xor' 'xor_ln66_194' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2194 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_195)   --->   "%and_ln66_97 = and i32 %e_78, i32 %xor_ln66_194" [sha256.cpp:66]   --->   Operation 2194 'and' 'and_ln66_97' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2195 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_195 = xor i32 %and_ln66_96, i32 %and_ln66_97" [sha256.cpp:66]   --->   Operation 2195 'xor' 'xor_ln66_195' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2196 [1/2] (1.29ns)   --->   "%m_load_48 = load i6 %m_addr_48" [sha256.cpp:66]   --->   Operation 2196 'load' 'm_load_48' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_46 : Operation 2197 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_192 = add i32 %m_load_48, i32 %xor_ln66_195" [sha256.cpp:66]   --->   Operation 2197 'add' 'add_ln66_192' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_46 : Operation 2198 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_193 = add i32 %xor_ln66_193, i32 430227734" [sha256.cpp:66]   --->   Operation 2198 'add' 'add_ln66_193' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_46 : Operation 2199 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_194 = add i32 %add_ln66_193, i32 %e_77" [sha256.cpp:66]   --->   Operation 2199 'add' 'add_ln66_194' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_46 : Operation 2200 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_48 = add i32 %add_ln66_194, i32 %add_ln66_192" [sha256.cpp:66]   --->   Operation 2200 'add' 't1_48' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_46 : Operation 2201 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_193)   --->   "%lshr_ln67_143 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_80, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 2201 'partselect' 'lshr_ln67_143' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2202 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_193)   --->   "%trunc_ln67_144 = trunc i32 %a_80" [sha256.cpp:67]   --->   Operation 2202 'trunc' 'trunc_ln67_144' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2203 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_193)   --->   "%or_ln67_143 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_144, i30 %lshr_ln67_143" [sha256.cpp:67]   --->   Operation 2203 'bitconcatenate' 'or_ln67_143' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2204 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_193)   --->   "%lshr_ln67_144 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_80, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2204 'partselect' 'lshr_ln67_144' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2205 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_193)   --->   "%trunc_ln67_145 = trunc i32 %a_80" [sha256.cpp:67]   --->   Operation 2205 'trunc' 'trunc_ln67_145' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2206 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_193)   --->   "%or_ln67_144 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_145, i19 %lshr_ln67_144" [sha256.cpp:67]   --->   Operation 2206 'bitconcatenate' 'or_ln67_144' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2207 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_193)   --->   "%lshr_ln67_145 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_80, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2207 'partselect' 'lshr_ln67_145' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2208 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_193)   --->   "%trunc_ln67_146 = trunc i32 %a_80" [sha256.cpp:67]   --->   Operation 2208 'trunc' 'trunc_ln67_146' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2209 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_193)   --->   "%or_ln67_145 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_146, i10 %lshr_ln67_145" [sha256.cpp:67]   --->   Operation 2209 'bitconcatenate' 'or_ln67_145' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2210 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_193)   --->   "%xor_ln67_192 = xor i32 %or_ln67_143, i32 %or_ln67_144" [sha256.cpp:67]   --->   Operation 2210 'xor' 'xor_ln67_192' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2211 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_193 = xor i32 %xor_ln67_192, i32 %or_ln67_145" [sha256.cpp:67]   --->   Operation 2211 'xor' 'xor_ln67_193' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2212 [1/1] (0.28ns)   --->   "%and_ln67_97 = and i32 %a_80, i32 %a_79" [sha256.cpp:67]   --->   Operation 2212 'and' 'and_ln67_97' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2213 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_195)   --->   "%and_ln67_98 = and i32 %a_80, i32 %a_78" [sha256.cpp:67]   --->   Operation 2213 'and' 'and_ln67_98' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2214 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_195)   --->   "%xor_ln67_194 = xor i32 %and_ln67_95, i32 %and_ln67_98" [sha256.cpp:67]   --->   Operation 2214 'xor' 'xor_ln67_194' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2215 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_195 = xor i32 %xor_ln67_194, i32 %and_ln67_97" [sha256.cpp:67]   --->   Operation 2215 'xor' 'xor_ln67_195' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2216 [1/1] (1.14ns)   --->   "%e_81 = add i32 %t1_48, i32 %a_77" [sha256.cpp:71]   --->   Operation 2216 'add' 'e_81' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2217 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_96 = add i32 %xor_ln67_195, i32 %t1_48" [sha256.cpp:75]   --->   Operation 2217 'add' 'add_ln75_96' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_46 : Operation 2218 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_81 = add i32 %add_ln75_96, i32 %xor_ln67_193" [sha256.cpp:75]   --->   Operation 2218 'add' 'a_81' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_46 : Operation 2219 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_197)   --->   "%lshr_ln66_146 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_81, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 2219 'partselect' 'lshr_ln66_146' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2220 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_197)   --->   "%trunc_ln66_147 = trunc i32 %e_81" [sha256.cpp:66]   --->   Operation 2220 'trunc' 'trunc_ln66_147' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2221 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_197)   --->   "%or_ln66_146 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_147, i26 %lshr_ln66_146" [sha256.cpp:66]   --->   Operation 2221 'bitconcatenate' 'or_ln66_146' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2222 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_197)   --->   "%lshr_ln66_147 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_81, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 2222 'partselect' 'lshr_ln66_147' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2223 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_197)   --->   "%trunc_ln66_148 = trunc i32 %e_81" [sha256.cpp:66]   --->   Operation 2223 'trunc' 'trunc_ln66_148' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2224 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_197)   --->   "%or_ln66_147 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_148, i21 %lshr_ln66_147" [sha256.cpp:66]   --->   Operation 2224 'bitconcatenate' 'or_ln66_147' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2225 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_197)   --->   "%lshr_ln66_148 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_81, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 2225 'partselect' 'lshr_ln66_148' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2226 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_197)   --->   "%trunc_ln66_149 = trunc i32 %e_81" [sha256.cpp:66]   --->   Operation 2226 'trunc' 'trunc_ln66_149' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2227 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_197)   --->   "%or_ln66_148 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_149, i7 %lshr_ln66_148" [sha256.cpp:66]   --->   Operation 2227 'bitconcatenate' 'or_ln66_148' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2228 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_197)   --->   "%xor_ln66_196 = xor i32 %or_ln66_146, i32 %or_ln66_147" [sha256.cpp:66]   --->   Operation 2228 'xor' 'xor_ln66_196' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2229 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_197 = xor i32 %xor_ln66_196, i32 %or_ln66_148" [sha256.cpp:66]   --->   Operation 2229 'xor' 'xor_ln66_197' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2230 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_199)   --->   "%and_ln66_98 = and i32 %e_81, i32 %e_80" [sha256.cpp:66]   --->   Operation 2230 'and' 'and_ln66_98' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2231 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_199)   --->   "%xor_ln66_198 = xor i32 %e_81, i32 4294967295" [sha256.cpp:66]   --->   Operation 2231 'xor' 'xor_ln66_198' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2232 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_199)   --->   "%and_ln66_99 = and i32 %e_79, i32 %xor_ln66_198" [sha256.cpp:66]   --->   Operation 2232 'and' 'and_ln66_99' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2233 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_199 = xor i32 %and_ln66_98, i32 %and_ln66_99" [sha256.cpp:66]   --->   Operation 2233 'xor' 'xor_ln66_199' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2234 [1/2] (1.29ns)   --->   "%m_load_49 = load i6 %m_addr_49" [sha256.cpp:66]   --->   Operation 2234 'load' 'm_load_49' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_46 : Operation 2235 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_196 = add i32 %m_load_49, i32 %xor_ln66_199" [sha256.cpp:66]   --->   Operation 2235 'add' 'add_ln66_196' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_46 : Operation 2236 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_197 = add i32 %xor_ln66_197, i32 506948616" [sha256.cpp:66]   --->   Operation 2236 'add' 'add_ln66_197' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_46 : Operation 2237 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_198 = add i32 %add_ln66_197, i32 %e_78" [sha256.cpp:66]   --->   Operation 2237 'add' 'add_ln66_198' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_46 : Operation 2238 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_49 = add i32 %add_ln66_198, i32 %add_ln66_196" [sha256.cpp:66]   --->   Operation 2238 'add' 't1_49' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_46 : Operation 2239 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_197)   --->   "%lshr_ln67_146 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_81, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 2239 'partselect' 'lshr_ln67_146' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2240 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_197)   --->   "%trunc_ln67_147 = trunc i32 %a_81" [sha256.cpp:67]   --->   Operation 2240 'trunc' 'trunc_ln67_147' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2241 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_197)   --->   "%or_ln67_146 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_147, i30 %lshr_ln67_146" [sha256.cpp:67]   --->   Operation 2241 'bitconcatenate' 'or_ln67_146' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2242 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_197)   --->   "%lshr_ln67_147 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_81, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2242 'partselect' 'lshr_ln67_147' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2243 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_197)   --->   "%trunc_ln67_148 = trunc i32 %a_81" [sha256.cpp:67]   --->   Operation 2243 'trunc' 'trunc_ln67_148' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2244 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_197)   --->   "%or_ln67_147 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_148, i19 %lshr_ln67_147" [sha256.cpp:67]   --->   Operation 2244 'bitconcatenate' 'or_ln67_147' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2245 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_197)   --->   "%lshr_ln67_148 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_81, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2245 'partselect' 'lshr_ln67_148' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2246 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_197)   --->   "%trunc_ln67_149 = trunc i32 %a_81" [sha256.cpp:67]   --->   Operation 2246 'trunc' 'trunc_ln67_149' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2247 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_197)   --->   "%or_ln67_148 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_149, i10 %lshr_ln67_148" [sha256.cpp:67]   --->   Operation 2247 'bitconcatenate' 'or_ln67_148' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2248 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_197)   --->   "%xor_ln67_196 = xor i32 %or_ln67_146, i32 %or_ln67_147" [sha256.cpp:67]   --->   Operation 2248 'xor' 'xor_ln67_196' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2249 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_197 = xor i32 %xor_ln67_196, i32 %or_ln67_148" [sha256.cpp:67]   --->   Operation 2249 'xor' 'xor_ln67_197' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 2250 [1/1] (0.00ns)   --->   "%m_addr_50 = getelementptr i32 %m, i64 0, i64 50" [sha256.cpp:66]   --->   Operation 2250 'getelementptr' 'm_addr_50' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2251 [2/2] (1.29ns)   --->   "%m_load_50 = load i6 %m_addr_50" [sha256.cpp:66]   --->   Operation 2251 'load' 'm_load_50' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_46 : Operation 2252 [1/1] (0.00ns)   --->   "%m_addr_51 = getelementptr i32 %m, i64 0, i64 51" [sha256.cpp:66]   --->   Operation 2252 'getelementptr' 'm_addr_51' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 2253 [2/2] (1.29ns)   --->   "%m_load_51 = load i6 %m_addr_51" [sha256.cpp:66]   --->   Operation 2253 'load' 'm_load_51' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 47 <SV = 45> <Delay = 6.49>
ST_47 : Operation 2254 [1/1] (0.28ns)   --->   "%and_ln67_99 = and i32 %a_81, i32 %a_80" [sha256.cpp:67]   --->   Operation 2254 'and' 'and_ln67_99' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2255 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_199)   --->   "%and_ln67_100 = and i32 %a_81, i32 %a_79" [sha256.cpp:67]   --->   Operation 2255 'and' 'and_ln67_100' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2256 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_199)   --->   "%xor_ln67_198 = xor i32 %and_ln67_97, i32 %and_ln67_100" [sha256.cpp:67]   --->   Operation 2256 'xor' 'xor_ln67_198' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2257 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_199 = xor i32 %xor_ln67_198, i32 %and_ln67_99" [sha256.cpp:67]   --->   Operation 2257 'xor' 'xor_ln67_199' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2258 [1/1] (1.14ns)   --->   "%e_82 = add i32 %t1_49, i32 %a_78" [sha256.cpp:71]   --->   Operation 2258 'add' 'e_82' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2259 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_98 = add i32 %xor_ln67_199, i32 %t1_49" [sha256.cpp:75]   --->   Operation 2259 'add' 'add_ln75_98' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_47 : Operation 2260 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_82 = add i32 %add_ln75_98, i32 %xor_ln67_197" [sha256.cpp:75]   --->   Operation 2260 'add' 'a_82' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_47 : Operation 2261 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_201)   --->   "%lshr_ln66_149 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_82, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 2261 'partselect' 'lshr_ln66_149' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2262 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_201)   --->   "%trunc_ln66_150 = trunc i32 %e_82" [sha256.cpp:66]   --->   Operation 2262 'trunc' 'trunc_ln66_150' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2263 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_201)   --->   "%or_ln66_149 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_150, i26 %lshr_ln66_149" [sha256.cpp:66]   --->   Operation 2263 'bitconcatenate' 'or_ln66_149' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2264 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_201)   --->   "%lshr_ln66_150 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_82, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 2264 'partselect' 'lshr_ln66_150' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2265 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_201)   --->   "%trunc_ln66_151 = trunc i32 %e_82" [sha256.cpp:66]   --->   Operation 2265 'trunc' 'trunc_ln66_151' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2266 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_201)   --->   "%or_ln66_150 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_151, i21 %lshr_ln66_150" [sha256.cpp:66]   --->   Operation 2266 'bitconcatenate' 'or_ln66_150' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2267 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_201)   --->   "%lshr_ln66_151 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_82, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 2267 'partselect' 'lshr_ln66_151' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2268 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_201)   --->   "%trunc_ln66_152 = trunc i32 %e_82" [sha256.cpp:66]   --->   Operation 2268 'trunc' 'trunc_ln66_152' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2269 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_201)   --->   "%or_ln66_151 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_152, i7 %lshr_ln66_151" [sha256.cpp:66]   --->   Operation 2269 'bitconcatenate' 'or_ln66_151' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2270 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_201)   --->   "%xor_ln66_200 = xor i32 %or_ln66_149, i32 %or_ln66_150" [sha256.cpp:66]   --->   Operation 2270 'xor' 'xor_ln66_200' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2271 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_201 = xor i32 %xor_ln66_200, i32 %or_ln66_151" [sha256.cpp:66]   --->   Operation 2271 'xor' 'xor_ln66_201' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2272 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_203)   --->   "%and_ln66_100 = and i32 %e_82, i32 %e_81" [sha256.cpp:66]   --->   Operation 2272 'and' 'and_ln66_100' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2273 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_203)   --->   "%xor_ln66_202 = xor i32 %e_82, i32 4294967295" [sha256.cpp:66]   --->   Operation 2273 'xor' 'xor_ln66_202' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2274 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_203)   --->   "%and_ln66_101 = and i32 %e_80, i32 %xor_ln66_202" [sha256.cpp:66]   --->   Operation 2274 'and' 'and_ln66_101' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2275 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_203 = xor i32 %and_ln66_100, i32 %and_ln66_101" [sha256.cpp:66]   --->   Operation 2275 'xor' 'xor_ln66_203' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2276 [1/2] (1.29ns)   --->   "%m_load_50 = load i6 %m_addr_50" [sha256.cpp:66]   --->   Operation 2276 'load' 'm_load_50' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_47 : Operation 2277 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_200 = add i32 %m_load_50, i32 %xor_ln66_203" [sha256.cpp:66]   --->   Operation 2277 'add' 'add_ln66_200' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_47 : Operation 2278 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_201 = add i32 %xor_ln66_201, i32 659060556" [sha256.cpp:66]   --->   Operation 2278 'add' 'add_ln66_201' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_47 : Operation 2279 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_202 = add i32 %add_ln66_201, i32 %e_79" [sha256.cpp:66]   --->   Operation 2279 'add' 'add_ln66_202' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_47 : Operation 2280 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_50 = add i32 %add_ln66_202, i32 %add_ln66_200" [sha256.cpp:66]   --->   Operation 2280 'add' 't1_50' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_47 : Operation 2281 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_201)   --->   "%lshr_ln67_149 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_82, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 2281 'partselect' 'lshr_ln67_149' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2282 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_201)   --->   "%trunc_ln67_150 = trunc i32 %a_82" [sha256.cpp:67]   --->   Operation 2282 'trunc' 'trunc_ln67_150' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2283 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_201)   --->   "%or_ln67_149 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_150, i30 %lshr_ln67_149" [sha256.cpp:67]   --->   Operation 2283 'bitconcatenate' 'or_ln67_149' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2284 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_201)   --->   "%lshr_ln67_150 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_82, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2284 'partselect' 'lshr_ln67_150' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2285 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_201)   --->   "%trunc_ln67_151 = trunc i32 %a_82" [sha256.cpp:67]   --->   Operation 2285 'trunc' 'trunc_ln67_151' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2286 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_201)   --->   "%or_ln67_150 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_151, i19 %lshr_ln67_150" [sha256.cpp:67]   --->   Operation 2286 'bitconcatenate' 'or_ln67_150' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2287 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_201)   --->   "%lshr_ln67_151 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_82, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2287 'partselect' 'lshr_ln67_151' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2288 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_201)   --->   "%trunc_ln67_152 = trunc i32 %a_82" [sha256.cpp:67]   --->   Operation 2288 'trunc' 'trunc_ln67_152' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2289 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_201)   --->   "%or_ln67_151 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_152, i10 %lshr_ln67_151" [sha256.cpp:67]   --->   Operation 2289 'bitconcatenate' 'or_ln67_151' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2290 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_201)   --->   "%xor_ln67_200 = xor i32 %or_ln67_149, i32 %or_ln67_150" [sha256.cpp:67]   --->   Operation 2290 'xor' 'xor_ln67_200' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2291 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_201 = xor i32 %xor_ln67_200, i32 %or_ln67_151" [sha256.cpp:67]   --->   Operation 2291 'xor' 'xor_ln67_201' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2292 [1/1] (0.28ns)   --->   "%and_ln67_101 = and i32 %a_82, i32 %a_81" [sha256.cpp:67]   --->   Operation 2292 'and' 'and_ln67_101' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2293 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_203)   --->   "%and_ln67_102 = and i32 %a_82, i32 %a_80" [sha256.cpp:67]   --->   Operation 2293 'and' 'and_ln67_102' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2294 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_203)   --->   "%xor_ln67_202 = xor i32 %and_ln67_99, i32 %and_ln67_102" [sha256.cpp:67]   --->   Operation 2294 'xor' 'xor_ln67_202' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2295 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_203 = xor i32 %xor_ln67_202, i32 %and_ln67_101" [sha256.cpp:67]   --->   Operation 2295 'xor' 'xor_ln67_203' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2296 [1/1] (1.14ns)   --->   "%e_83 = add i32 %t1_50, i32 %a_79" [sha256.cpp:71]   --->   Operation 2296 'add' 'e_83' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2297 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_100 = add i32 %xor_ln67_203, i32 %t1_50" [sha256.cpp:75]   --->   Operation 2297 'add' 'add_ln75_100' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_47 : Operation 2298 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_83 = add i32 %add_ln75_100, i32 %xor_ln67_201" [sha256.cpp:75]   --->   Operation 2298 'add' 'a_83' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_47 : Operation 2299 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_205)   --->   "%lshr_ln66_152 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_83, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 2299 'partselect' 'lshr_ln66_152' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2300 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_205)   --->   "%trunc_ln66_153 = trunc i32 %e_83" [sha256.cpp:66]   --->   Operation 2300 'trunc' 'trunc_ln66_153' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2301 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_205)   --->   "%or_ln66_152 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_153, i26 %lshr_ln66_152" [sha256.cpp:66]   --->   Operation 2301 'bitconcatenate' 'or_ln66_152' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2302 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_205)   --->   "%lshr_ln66_153 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_83, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 2302 'partselect' 'lshr_ln66_153' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2303 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_205)   --->   "%trunc_ln66_154 = trunc i32 %e_83" [sha256.cpp:66]   --->   Operation 2303 'trunc' 'trunc_ln66_154' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2304 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_205)   --->   "%or_ln66_153 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_154, i21 %lshr_ln66_153" [sha256.cpp:66]   --->   Operation 2304 'bitconcatenate' 'or_ln66_153' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2305 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_205)   --->   "%lshr_ln66_154 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_83, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 2305 'partselect' 'lshr_ln66_154' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2306 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_205)   --->   "%trunc_ln66_155 = trunc i32 %e_83" [sha256.cpp:66]   --->   Operation 2306 'trunc' 'trunc_ln66_155' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2307 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_205)   --->   "%or_ln66_154 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_155, i7 %lshr_ln66_154" [sha256.cpp:66]   --->   Operation 2307 'bitconcatenate' 'or_ln66_154' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2308 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_205)   --->   "%xor_ln66_204 = xor i32 %or_ln66_152, i32 %or_ln66_153" [sha256.cpp:66]   --->   Operation 2308 'xor' 'xor_ln66_204' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2309 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_205 = xor i32 %xor_ln66_204, i32 %or_ln66_154" [sha256.cpp:66]   --->   Operation 2309 'xor' 'xor_ln66_205' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2310 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_207)   --->   "%and_ln66_102 = and i32 %e_83, i32 %e_82" [sha256.cpp:66]   --->   Operation 2310 'and' 'and_ln66_102' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2311 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_207)   --->   "%xor_ln66_206 = xor i32 %e_83, i32 4294967295" [sha256.cpp:66]   --->   Operation 2311 'xor' 'xor_ln66_206' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2312 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_207)   --->   "%and_ln66_103 = and i32 %e_81, i32 %xor_ln66_206" [sha256.cpp:66]   --->   Operation 2312 'and' 'and_ln66_103' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2313 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_207 = xor i32 %and_ln66_102, i32 %and_ln66_103" [sha256.cpp:66]   --->   Operation 2313 'xor' 'xor_ln66_207' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2314 [1/2] (1.29ns)   --->   "%m_load_51 = load i6 %m_addr_51" [sha256.cpp:66]   --->   Operation 2314 'load' 'm_load_51' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_47 : Operation 2315 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_204 = add i32 %m_load_51, i32 %xor_ln66_207" [sha256.cpp:66]   --->   Operation 2315 'add' 'add_ln66_204' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_47 : Operation 2316 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_205 = add i32 %xor_ln66_205, i32 883997877" [sha256.cpp:66]   --->   Operation 2316 'add' 'add_ln66_205' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_47 : Operation 2317 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_206 = add i32 %add_ln66_205, i32 %e_80" [sha256.cpp:66]   --->   Operation 2317 'add' 'add_ln66_206' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_47 : Operation 2318 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_51 = add i32 %add_ln66_206, i32 %add_ln66_204" [sha256.cpp:66]   --->   Operation 2318 'add' 't1_51' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_47 : Operation 2319 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_205)   --->   "%lshr_ln67_152 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_83, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 2319 'partselect' 'lshr_ln67_152' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2320 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_205)   --->   "%trunc_ln67_153 = trunc i32 %a_83" [sha256.cpp:67]   --->   Operation 2320 'trunc' 'trunc_ln67_153' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2321 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_205)   --->   "%or_ln67_152 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_153, i30 %lshr_ln67_152" [sha256.cpp:67]   --->   Operation 2321 'bitconcatenate' 'or_ln67_152' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2322 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_205)   --->   "%lshr_ln67_153 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_83, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2322 'partselect' 'lshr_ln67_153' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2323 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_205)   --->   "%trunc_ln67_154 = trunc i32 %a_83" [sha256.cpp:67]   --->   Operation 2323 'trunc' 'trunc_ln67_154' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2324 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_205)   --->   "%or_ln67_153 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_154, i19 %lshr_ln67_153" [sha256.cpp:67]   --->   Operation 2324 'bitconcatenate' 'or_ln67_153' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2325 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_205)   --->   "%lshr_ln67_154 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_83, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2325 'partselect' 'lshr_ln67_154' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2326 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_205)   --->   "%trunc_ln67_155 = trunc i32 %a_83" [sha256.cpp:67]   --->   Operation 2326 'trunc' 'trunc_ln67_155' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2327 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_205)   --->   "%or_ln67_154 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_155, i10 %lshr_ln67_154" [sha256.cpp:67]   --->   Operation 2327 'bitconcatenate' 'or_ln67_154' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2328 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_205)   --->   "%xor_ln67_204 = xor i32 %or_ln67_152, i32 %or_ln67_153" [sha256.cpp:67]   --->   Operation 2328 'xor' 'xor_ln67_204' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2329 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_205 = xor i32 %xor_ln67_204, i32 %or_ln67_154" [sha256.cpp:67]   --->   Operation 2329 'xor' 'xor_ln67_205' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 2330 [1/1] (0.00ns)   --->   "%m_addr_52 = getelementptr i32 %m, i64 0, i64 52" [sha256.cpp:66]   --->   Operation 2330 'getelementptr' 'm_addr_52' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2331 [2/2] (1.29ns)   --->   "%m_load_52 = load i6 %m_addr_52" [sha256.cpp:66]   --->   Operation 2331 'load' 'm_load_52' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_47 : Operation 2332 [1/1] (0.00ns)   --->   "%m_addr_53 = getelementptr i32 %m, i64 0, i64 53" [sha256.cpp:66]   --->   Operation 2332 'getelementptr' 'm_addr_53' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 2333 [2/2] (1.29ns)   --->   "%m_load_53 = load i6 %m_addr_53" [sha256.cpp:66]   --->   Operation 2333 'load' 'm_load_53' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 48 <SV = 46> <Delay = 6.49>
ST_48 : Operation 2334 [1/1] (0.28ns)   --->   "%and_ln67_103 = and i32 %a_83, i32 %a_82" [sha256.cpp:67]   --->   Operation 2334 'and' 'and_ln67_103' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 2335 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_207)   --->   "%and_ln67_104 = and i32 %a_83, i32 %a_81" [sha256.cpp:67]   --->   Operation 2335 'and' 'and_ln67_104' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 2336 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_207)   --->   "%xor_ln67_206 = xor i32 %and_ln67_101, i32 %and_ln67_104" [sha256.cpp:67]   --->   Operation 2336 'xor' 'xor_ln67_206' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 2337 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_207 = xor i32 %xor_ln67_206, i32 %and_ln67_103" [sha256.cpp:67]   --->   Operation 2337 'xor' 'xor_ln67_207' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 2338 [1/1] (1.14ns)   --->   "%e_84 = add i32 %t1_51, i32 %a_80" [sha256.cpp:71]   --->   Operation 2338 'add' 'e_84' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 2339 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_102 = add i32 %xor_ln67_207, i32 %t1_51" [sha256.cpp:75]   --->   Operation 2339 'add' 'add_ln75_102' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_48 : Operation 2340 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_84 = add i32 %add_ln75_102, i32 %xor_ln67_205" [sha256.cpp:75]   --->   Operation 2340 'add' 'a_84' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_48 : Operation 2341 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_209)   --->   "%lshr_ln66_155 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_84, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 2341 'partselect' 'lshr_ln66_155' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2342 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_209)   --->   "%trunc_ln66_156 = trunc i32 %e_84" [sha256.cpp:66]   --->   Operation 2342 'trunc' 'trunc_ln66_156' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2343 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_209)   --->   "%or_ln66_155 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_156, i26 %lshr_ln66_155" [sha256.cpp:66]   --->   Operation 2343 'bitconcatenate' 'or_ln66_155' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2344 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_209)   --->   "%lshr_ln66_156 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_84, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 2344 'partselect' 'lshr_ln66_156' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2345 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_209)   --->   "%trunc_ln66_157 = trunc i32 %e_84" [sha256.cpp:66]   --->   Operation 2345 'trunc' 'trunc_ln66_157' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2346 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_209)   --->   "%or_ln66_156 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_157, i21 %lshr_ln66_156" [sha256.cpp:66]   --->   Operation 2346 'bitconcatenate' 'or_ln66_156' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2347 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_209)   --->   "%lshr_ln66_157 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_84, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 2347 'partselect' 'lshr_ln66_157' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2348 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_209)   --->   "%trunc_ln66_158 = trunc i32 %e_84" [sha256.cpp:66]   --->   Operation 2348 'trunc' 'trunc_ln66_158' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2349 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_209)   --->   "%or_ln66_157 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_158, i7 %lshr_ln66_157" [sha256.cpp:66]   --->   Operation 2349 'bitconcatenate' 'or_ln66_157' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2350 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_209)   --->   "%xor_ln66_208 = xor i32 %or_ln66_155, i32 %or_ln66_156" [sha256.cpp:66]   --->   Operation 2350 'xor' 'xor_ln66_208' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 2351 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_209 = xor i32 %xor_ln66_208, i32 %or_ln66_157" [sha256.cpp:66]   --->   Operation 2351 'xor' 'xor_ln66_209' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 2352 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_211)   --->   "%and_ln66_104 = and i32 %e_84, i32 %e_83" [sha256.cpp:66]   --->   Operation 2352 'and' 'and_ln66_104' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 2353 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_211)   --->   "%xor_ln66_210 = xor i32 %e_84, i32 4294967295" [sha256.cpp:66]   --->   Operation 2353 'xor' 'xor_ln66_210' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 2354 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_211)   --->   "%and_ln66_105 = and i32 %e_82, i32 %xor_ln66_210" [sha256.cpp:66]   --->   Operation 2354 'and' 'and_ln66_105' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 2355 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_211 = xor i32 %and_ln66_104, i32 %and_ln66_105" [sha256.cpp:66]   --->   Operation 2355 'xor' 'xor_ln66_211' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 2356 [1/2] (1.29ns)   --->   "%m_load_52 = load i6 %m_addr_52" [sha256.cpp:66]   --->   Operation 2356 'load' 'm_load_52' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_48 : Operation 2357 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_208 = add i32 %m_load_52, i32 %xor_ln66_211" [sha256.cpp:66]   --->   Operation 2357 'add' 'add_ln66_208' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_48 : Operation 2358 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_209 = add i32 %xor_ln66_209, i32 958139571" [sha256.cpp:66]   --->   Operation 2358 'add' 'add_ln66_209' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_48 : Operation 2359 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_210 = add i32 %add_ln66_209, i32 %e_81" [sha256.cpp:66]   --->   Operation 2359 'add' 'add_ln66_210' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_48 : Operation 2360 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_52 = add i32 %add_ln66_210, i32 %add_ln66_208" [sha256.cpp:66]   --->   Operation 2360 'add' 't1_52' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_48 : Operation 2361 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_209)   --->   "%lshr_ln67_155 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_84, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 2361 'partselect' 'lshr_ln67_155' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2362 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_209)   --->   "%trunc_ln67_156 = trunc i32 %a_84" [sha256.cpp:67]   --->   Operation 2362 'trunc' 'trunc_ln67_156' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2363 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_209)   --->   "%or_ln67_155 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_156, i30 %lshr_ln67_155" [sha256.cpp:67]   --->   Operation 2363 'bitconcatenate' 'or_ln67_155' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2364 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_209)   --->   "%lshr_ln67_156 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_84, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2364 'partselect' 'lshr_ln67_156' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2365 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_209)   --->   "%trunc_ln67_157 = trunc i32 %a_84" [sha256.cpp:67]   --->   Operation 2365 'trunc' 'trunc_ln67_157' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2366 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_209)   --->   "%or_ln67_156 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_157, i19 %lshr_ln67_156" [sha256.cpp:67]   --->   Operation 2366 'bitconcatenate' 'or_ln67_156' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2367 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_209)   --->   "%lshr_ln67_157 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_84, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2367 'partselect' 'lshr_ln67_157' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2368 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_209)   --->   "%trunc_ln67_158 = trunc i32 %a_84" [sha256.cpp:67]   --->   Operation 2368 'trunc' 'trunc_ln67_158' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2369 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_209)   --->   "%or_ln67_157 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_158, i10 %lshr_ln67_157" [sha256.cpp:67]   --->   Operation 2369 'bitconcatenate' 'or_ln67_157' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2370 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_209)   --->   "%xor_ln67_208 = xor i32 %or_ln67_155, i32 %or_ln67_156" [sha256.cpp:67]   --->   Operation 2370 'xor' 'xor_ln67_208' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 2371 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_209 = xor i32 %xor_ln67_208, i32 %or_ln67_157" [sha256.cpp:67]   --->   Operation 2371 'xor' 'xor_ln67_209' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 2372 [1/1] (1.14ns)   --->   "%e_85 = add i32 %t1_52, i32 %a_81" [sha256.cpp:71]   --->   Operation 2372 'add' 'e_85' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 2373 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_213)   --->   "%lshr_ln66_158 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_85, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 2373 'partselect' 'lshr_ln66_158' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2374 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_213)   --->   "%trunc_ln66_159 = trunc i32 %e_85" [sha256.cpp:66]   --->   Operation 2374 'trunc' 'trunc_ln66_159' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2375 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_213)   --->   "%or_ln66_158 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_159, i26 %lshr_ln66_158" [sha256.cpp:66]   --->   Operation 2375 'bitconcatenate' 'or_ln66_158' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2376 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_213)   --->   "%lshr_ln66_159 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_85, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 2376 'partselect' 'lshr_ln66_159' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2377 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_213)   --->   "%trunc_ln66_160 = trunc i32 %e_85" [sha256.cpp:66]   --->   Operation 2377 'trunc' 'trunc_ln66_160' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2378 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_213)   --->   "%or_ln66_159 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_160, i21 %lshr_ln66_159" [sha256.cpp:66]   --->   Operation 2378 'bitconcatenate' 'or_ln66_159' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2379 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_213)   --->   "%lshr_ln66_160 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_85, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 2379 'partselect' 'lshr_ln66_160' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2380 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_213)   --->   "%trunc_ln66_161 = trunc i32 %e_85" [sha256.cpp:66]   --->   Operation 2380 'trunc' 'trunc_ln66_161' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2381 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_213)   --->   "%or_ln66_160 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_161, i7 %lshr_ln66_160" [sha256.cpp:66]   --->   Operation 2381 'bitconcatenate' 'or_ln66_160' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2382 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_213)   --->   "%xor_ln66_212 = xor i32 %or_ln66_158, i32 %or_ln66_159" [sha256.cpp:66]   --->   Operation 2382 'xor' 'xor_ln66_212' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 2383 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_213 = xor i32 %xor_ln66_212, i32 %or_ln66_160" [sha256.cpp:66]   --->   Operation 2383 'xor' 'xor_ln66_213' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 2384 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_215)   --->   "%and_ln66_106 = and i32 %e_85, i32 %e_84" [sha256.cpp:66]   --->   Operation 2384 'and' 'and_ln66_106' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 2385 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_215)   --->   "%xor_ln66_214 = xor i32 %e_85, i32 4294967295" [sha256.cpp:66]   --->   Operation 2385 'xor' 'xor_ln66_214' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 2386 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_215)   --->   "%and_ln66_107 = and i32 %e_83, i32 %xor_ln66_214" [sha256.cpp:66]   --->   Operation 2386 'and' 'and_ln66_107' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 2387 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_215 = xor i32 %and_ln66_106, i32 %and_ln66_107" [sha256.cpp:66]   --->   Operation 2387 'xor' 'xor_ln66_215' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 2388 [1/2] (1.29ns)   --->   "%m_load_53 = load i6 %m_addr_53" [sha256.cpp:66]   --->   Operation 2388 'load' 'm_load_53' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_48 : Operation 2389 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_212 = add i32 %m_load_53, i32 %xor_ln66_215" [sha256.cpp:66]   --->   Operation 2389 'add' 'add_ln66_212' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_48 : Operation 2390 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_213 = add i32 %xor_ln66_213, i32 1322822218" [sha256.cpp:66]   --->   Operation 2390 'add' 'add_ln66_213' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_48 : Operation 2391 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_214 = add i32 %add_ln66_213, i32 %e_82" [sha256.cpp:66]   --->   Operation 2391 'add' 'add_ln66_214' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_48 : Operation 2392 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_53 = add i32 %add_ln66_214, i32 %add_ln66_212" [sha256.cpp:66]   --->   Operation 2392 'add' 't1_53' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_48 : Operation 2393 [1/1] (0.00ns)   --->   "%m_addr_54 = getelementptr i32 %m, i64 0, i64 54" [sha256.cpp:66]   --->   Operation 2393 'getelementptr' 'm_addr_54' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2394 [2/2] (1.29ns)   --->   "%m_load_54 = load i6 %m_addr_54" [sha256.cpp:66]   --->   Operation 2394 'load' 'm_load_54' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_48 : Operation 2395 [1/1] (0.00ns)   --->   "%m_addr_55 = getelementptr i32 %m, i64 0, i64 55" [sha256.cpp:66]   --->   Operation 2395 'getelementptr' 'm_addr_55' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 2396 [2/2] (1.29ns)   --->   "%m_load_55 = load i6 %m_addr_55" [sha256.cpp:66]   --->   Operation 2396 'load' 'm_load_55' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 49 <SV = 47> <Delay = 6.49>
ST_49 : Operation 2397 [1/1] (0.28ns)   --->   "%and_ln67_105 = and i32 %a_84, i32 %a_83" [sha256.cpp:67]   --->   Operation 2397 'and' 'and_ln67_105' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2398 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_211)   --->   "%and_ln67_106 = and i32 %a_84, i32 %a_82" [sha256.cpp:67]   --->   Operation 2398 'and' 'and_ln67_106' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2399 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_211)   --->   "%xor_ln67_210 = xor i32 %and_ln67_103, i32 %and_ln67_106" [sha256.cpp:67]   --->   Operation 2399 'xor' 'xor_ln67_210' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2400 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_211 = xor i32 %xor_ln67_210, i32 %and_ln67_105" [sha256.cpp:67]   --->   Operation 2400 'xor' 'xor_ln67_211' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2401 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_104 = add i32 %xor_ln67_211, i32 %t1_52" [sha256.cpp:75]   --->   Operation 2401 'add' 'add_ln75_104' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_49 : Operation 2402 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_85 = add i32 %add_ln75_104, i32 %xor_ln67_209" [sha256.cpp:75]   --->   Operation 2402 'add' 'a_85' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_49 : Operation 2403 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_213)   --->   "%lshr_ln67_158 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_85, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 2403 'partselect' 'lshr_ln67_158' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2404 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_213)   --->   "%trunc_ln67_159 = trunc i32 %a_85" [sha256.cpp:67]   --->   Operation 2404 'trunc' 'trunc_ln67_159' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2405 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_213)   --->   "%or_ln67_158 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_159, i30 %lshr_ln67_158" [sha256.cpp:67]   --->   Operation 2405 'bitconcatenate' 'or_ln67_158' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2406 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_213)   --->   "%lshr_ln67_159 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_85, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2406 'partselect' 'lshr_ln67_159' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2407 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_213)   --->   "%trunc_ln67_160 = trunc i32 %a_85" [sha256.cpp:67]   --->   Operation 2407 'trunc' 'trunc_ln67_160' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2408 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_213)   --->   "%or_ln67_159 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_160, i19 %lshr_ln67_159" [sha256.cpp:67]   --->   Operation 2408 'bitconcatenate' 'or_ln67_159' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2409 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_213)   --->   "%lshr_ln67_160 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_85, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2409 'partselect' 'lshr_ln67_160' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2410 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_213)   --->   "%trunc_ln67_161 = trunc i32 %a_85" [sha256.cpp:67]   --->   Operation 2410 'trunc' 'trunc_ln67_161' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2411 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_213)   --->   "%or_ln67_160 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_161, i10 %lshr_ln67_160" [sha256.cpp:67]   --->   Operation 2411 'bitconcatenate' 'or_ln67_160' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2412 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_213)   --->   "%xor_ln67_212 = xor i32 %or_ln67_158, i32 %or_ln67_159" [sha256.cpp:67]   --->   Operation 2412 'xor' 'xor_ln67_212' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2413 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_213 = xor i32 %xor_ln67_212, i32 %or_ln67_160" [sha256.cpp:67]   --->   Operation 2413 'xor' 'xor_ln67_213' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2414 [1/1] (0.28ns)   --->   "%and_ln67_107 = and i32 %a_85, i32 %a_84" [sha256.cpp:67]   --->   Operation 2414 'and' 'and_ln67_107' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2415 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_215)   --->   "%and_ln67_108 = and i32 %a_85, i32 %a_83" [sha256.cpp:67]   --->   Operation 2415 'and' 'and_ln67_108' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2416 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_215)   --->   "%xor_ln67_214 = xor i32 %and_ln67_105, i32 %and_ln67_108" [sha256.cpp:67]   --->   Operation 2416 'xor' 'xor_ln67_214' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2417 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_215 = xor i32 %xor_ln67_214, i32 %and_ln67_107" [sha256.cpp:67]   --->   Operation 2417 'xor' 'xor_ln67_215' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2418 [1/1] (1.14ns)   --->   "%e_86 = add i32 %t1_53, i32 %a_82" [sha256.cpp:71]   --->   Operation 2418 'add' 'e_86' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2419 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_106 = add i32 %xor_ln67_215, i32 %t1_53" [sha256.cpp:75]   --->   Operation 2419 'add' 'add_ln75_106' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_49 : Operation 2420 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_86 = add i32 %add_ln75_106, i32 %xor_ln67_213" [sha256.cpp:75]   --->   Operation 2420 'add' 'a_86' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_49 : Operation 2421 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_217)   --->   "%lshr_ln66_161 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_86, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 2421 'partselect' 'lshr_ln66_161' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2422 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_217)   --->   "%trunc_ln66_162 = trunc i32 %e_86" [sha256.cpp:66]   --->   Operation 2422 'trunc' 'trunc_ln66_162' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2423 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_217)   --->   "%or_ln66_161 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_162, i26 %lshr_ln66_161" [sha256.cpp:66]   --->   Operation 2423 'bitconcatenate' 'or_ln66_161' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2424 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_217)   --->   "%lshr_ln66_162 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_86, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 2424 'partselect' 'lshr_ln66_162' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2425 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_217)   --->   "%trunc_ln66_163 = trunc i32 %e_86" [sha256.cpp:66]   --->   Operation 2425 'trunc' 'trunc_ln66_163' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2426 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_217)   --->   "%or_ln66_162 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_163, i21 %lshr_ln66_162" [sha256.cpp:66]   --->   Operation 2426 'bitconcatenate' 'or_ln66_162' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2427 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_217)   --->   "%lshr_ln66_163 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_86, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 2427 'partselect' 'lshr_ln66_163' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2428 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_217)   --->   "%trunc_ln66_164 = trunc i32 %e_86" [sha256.cpp:66]   --->   Operation 2428 'trunc' 'trunc_ln66_164' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2429 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_217)   --->   "%or_ln66_163 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_164, i7 %lshr_ln66_163" [sha256.cpp:66]   --->   Operation 2429 'bitconcatenate' 'or_ln66_163' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2430 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_217)   --->   "%xor_ln66_216 = xor i32 %or_ln66_161, i32 %or_ln66_162" [sha256.cpp:66]   --->   Operation 2430 'xor' 'xor_ln66_216' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2431 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_217 = xor i32 %xor_ln66_216, i32 %or_ln66_163" [sha256.cpp:66]   --->   Operation 2431 'xor' 'xor_ln66_217' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2432 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_219)   --->   "%and_ln66_108 = and i32 %e_86, i32 %e_85" [sha256.cpp:66]   --->   Operation 2432 'and' 'and_ln66_108' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2433 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_219)   --->   "%xor_ln66_218 = xor i32 %e_86, i32 4294967295" [sha256.cpp:66]   --->   Operation 2433 'xor' 'xor_ln66_218' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2434 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_219)   --->   "%and_ln66_109 = and i32 %e_84, i32 %xor_ln66_218" [sha256.cpp:66]   --->   Operation 2434 'and' 'and_ln66_109' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2435 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_219 = xor i32 %and_ln66_108, i32 %and_ln66_109" [sha256.cpp:66]   --->   Operation 2435 'xor' 'xor_ln66_219' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2436 [1/2] (1.29ns)   --->   "%m_load_54 = load i6 %m_addr_54" [sha256.cpp:66]   --->   Operation 2436 'load' 'm_load_54' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_49 : Operation 2437 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_216 = add i32 %m_load_54, i32 %xor_ln66_219" [sha256.cpp:66]   --->   Operation 2437 'add' 'add_ln66_216' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_49 : Operation 2438 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_217 = add i32 %xor_ln66_217, i32 1537002063" [sha256.cpp:66]   --->   Operation 2438 'add' 'add_ln66_217' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_49 : Operation 2439 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_218 = add i32 %add_ln66_217, i32 %e_83" [sha256.cpp:66]   --->   Operation 2439 'add' 'add_ln66_218' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_49 : Operation 2440 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_54 = add i32 %add_ln66_218, i32 %add_ln66_216" [sha256.cpp:66]   --->   Operation 2440 'add' 't1_54' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_49 : Operation 2441 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_217)   --->   "%lshr_ln67_161 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_86, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 2441 'partselect' 'lshr_ln67_161' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2442 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_217)   --->   "%trunc_ln67_162 = trunc i32 %a_86" [sha256.cpp:67]   --->   Operation 2442 'trunc' 'trunc_ln67_162' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2443 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_217)   --->   "%or_ln67_161 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_162, i30 %lshr_ln67_161" [sha256.cpp:67]   --->   Operation 2443 'bitconcatenate' 'or_ln67_161' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2444 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_217)   --->   "%lshr_ln67_162 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_86, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2444 'partselect' 'lshr_ln67_162' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2445 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_217)   --->   "%trunc_ln67_163 = trunc i32 %a_86" [sha256.cpp:67]   --->   Operation 2445 'trunc' 'trunc_ln67_163' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2446 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_217)   --->   "%or_ln67_162 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_163, i19 %lshr_ln67_162" [sha256.cpp:67]   --->   Operation 2446 'bitconcatenate' 'or_ln67_162' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2447 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_217)   --->   "%lshr_ln67_163 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_86, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2447 'partselect' 'lshr_ln67_163' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2448 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_217)   --->   "%trunc_ln67_164 = trunc i32 %a_86" [sha256.cpp:67]   --->   Operation 2448 'trunc' 'trunc_ln67_164' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2449 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_217)   --->   "%or_ln67_163 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_164, i10 %lshr_ln67_163" [sha256.cpp:67]   --->   Operation 2449 'bitconcatenate' 'or_ln67_163' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2450 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_217)   --->   "%xor_ln67_216 = xor i32 %or_ln67_161, i32 %or_ln67_162" [sha256.cpp:67]   --->   Operation 2450 'xor' 'xor_ln67_216' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2451 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_217 = xor i32 %xor_ln67_216, i32 %or_ln67_163" [sha256.cpp:67]   --->   Operation 2451 'xor' 'xor_ln67_217' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2452 [1/1] (1.14ns)   --->   "%e_87 = add i32 %t1_54, i32 %a_83" [sha256.cpp:71]   --->   Operation 2452 'add' 'e_87' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2453 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_221)   --->   "%lshr_ln66_164 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_87, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 2453 'partselect' 'lshr_ln66_164' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2454 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_221)   --->   "%trunc_ln66_165 = trunc i32 %e_87" [sha256.cpp:66]   --->   Operation 2454 'trunc' 'trunc_ln66_165' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2455 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_221)   --->   "%or_ln66_164 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_165, i26 %lshr_ln66_164" [sha256.cpp:66]   --->   Operation 2455 'bitconcatenate' 'or_ln66_164' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2456 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_221)   --->   "%lshr_ln66_165 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_87, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 2456 'partselect' 'lshr_ln66_165' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2457 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_221)   --->   "%trunc_ln66_166 = trunc i32 %e_87" [sha256.cpp:66]   --->   Operation 2457 'trunc' 'trunc_ln66_166' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2458 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_221)   --->   "%or_ln66_165 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_166, i21 %lshr_ln66_165" [sha256.cpp:66]   --->   Operation 2458 'bitconcatenate' 'or_ln66_165' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2459 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_221)   --->   "%lshr_ln66_166 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_87, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 2459 'partselect' 'lshr_ln66_166' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2460 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_221)   --->   "%trunc_ln66_167 = trunc i32 %e_87" [sha256.cpp:66]   --->   Operation 2460 'trunc' 'trunc_ln66_167' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2461 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_221)   --->   "%or_ln66_166 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_167, i7 %lshr_ln66_166" [sha256.cpp:66]   --->   Operation 2461 'bitconcatenate' 'or_ln66_166' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2462 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_221)   --->   "%xor_ln66_220 = xor i32 %or_ln66_164, i32 %or_ln66_165" [sha256.cpp:66]   --->   Operation 2462 'xor' 'xor_ln66_220' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2463 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_221 = xor i32 %xor_ln66_220, i32 %or_ln66_166" [sha256.cpp:66]   --->   Operation 2463 'xor' 'xor_ln66_221' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2464 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_223)   --->   "%and_ln66_110 = and i32 %e_87, i32 %e_86" [sha256.cpp:66]   --->   Operation 2464 'and' 'and_ln66_110' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2465 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_223)   --->   "%xor_ln66_222 = xor i32 %e_87, i32 4294967295" [sha256.cpp:66]   --->   Operation 2465 'xor' 'xor_ln66_222' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2466 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_223)   --->   "%and_ln66_111 = and i32 %e_85, i32 %xor_ln66_222" [sha256.cpp:66]   --->   Operation 2466 'and' 'and_ln66_111' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2467 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_223 = xor i32 %and_ln66_110, i32 %and_ln66_111" [sha256.cpp:66]   --->   Operation 2467 'xor' 'xor_ln66_223' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 2468 [1/2] (1.29ns)   --->   "%m_load_55 = load i6 %m_addr_55" [sha256.cpp:66]   --->   Operation 2468 'load' 'm_load_55' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_49 : Operation 2469 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_220 = add i32 %m_load_55, i32 %xor_ln66_223" [sha256.cpp:66]   --->   Operation 2469 'add' 'add_ln66_220' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_49 : Operation 2470 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_221 = add i32 %xor_ln66_221, i32 1747873779" [sha256.cpp:66]   --->   Operation 2470 'add' 'add_ln66_221' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_49 : Operation 2471 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_222 = add i32 %add_ln66_221, i32 %e_84" [sha256.cpp:66]   --->   Operation 2471 'add' 'add_ln66_222' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_49 : Operation 2472 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_55 = add i32 %add_ln66_222, i32 %add_ln66_220" [sha256.cpp:66]   --->   Operation 2472 'add' 't1_55' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_49 : Operation 2473 [1/1] (0.00ns)   --->   "%m_addr_56 = getelementptr i32 %m, i64 0, i64 56" [sha256.cpp:66]   --->   Operation 2473 'getelementptr' 'm_addr_56' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2474 [2/2] (1.29ns)   --->   "%m_load_56 = load i6 %m_addr_56" [sha256.cpp:66]   --->   Operation 2474 'load' 'm_load_56' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_49 : Operation 2475 [1/1] (0.00ns)   --->   "%m_addr_57 = getelementptr i32 %m, i64 0, i64 57" [sha256.cpp:66]   --->   Operation 2475 'getelementptr' 'm_addr_57' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 2476 [2/2] (1.29ns)   --->   "%m_load_57 = load i6 %m_addr_57" [sha256.cpp:66]   --->   Operation 2476 'load' 'm_load_57' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 50 <SV = 48> <Delay = 6.49>
ST_50 : Operation 2477 [1/1] (0.28ns)   --->   "%and_ln67_109 = and i32 %a_86, i32 %a_85" [sha256.cpp:67]   --->   Operation 2477 'and' 'and_ln67_109' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2478 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_219)   --->   "%and_ln67_110 = and i32 %a_86, i32 %a_84" [sha256.cpp:67]   --->   Operation 2478 'and' 'and_ln67_110' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2479 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_219)   --->   "%xor_ln67_218 = xor i32 %and_ln67_107, i32 %and_ln67_110" [sha256.cpp:67]   --->   Operation 2479 'xor' 'xor_ln67_218' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2480 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_219 = xor i32 %xor_ln67_218, i32 %and_ln67_109" [sha256.cpp:67]   --->   Operation 2480 'xor' 'xor_ln67_219' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2481 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_108 = add i32 %xor_ln67_219, i32 %t1_54" [sha256.cpp:75]   --->   Operation 2481 'add' 'add_ln75_108' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_50 : Operation 2482 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_87 = add i32 %add_ln75_108, i32 %xor_ln67_217" [sha256.cpp:75]   --->   Operation 2482 'add' 'a_87' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_50 : Operation 2483 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_221)   --->   "%lshr_ln67_164 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_87, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 2483 'partselect' 'lshr_ln67_164' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2484 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_221)   --->   "%trunc_ln67_165 = trunc i32 %a_87" [sha256.cpp:67]   --->   Operation 2484 'trunc' 'trunc_ln67_165' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2485 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_221)   --->   "%or_ln67_164 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_165, i30 %lshr_ln67_164" [sha256.cpp:67]   --->   Operation 2485 'bitconcatenate' 'or_ln67_164' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2486 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_221)   --->   "%lshr_ln67_165 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_87, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2486 'partselect' 'lshr_ln67_165' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2487 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_221)   --->   "%trunc_ln67_166 = trunc i32 %a_87" [sha256.cpp:67]   --->   Operation 2487 'trunc' 'trunc_ln67_166' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2488 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_221)   --->   "%or_ln67_165 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_166, i19 %lshr_ln67_165" [sha256.cpp:67]   --->   Operation 2488 'bitconcatenate' 'or_ln67_165' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2489 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_221)   --->   "%lshr_ln67_166 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_87, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2489 'partselect' 'lshr_ln67_166' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2490 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_221)   --->   "%trunc_ln67_167 = trunc i32 %a_87" [sha256.cpp:67]   --->   Operation 2490 'trunc' 'trunc_ln67_167' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2491 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_221)   --->   "%or_ln67_166 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_167, i10 %lshr_ln67_166" [sha256.cpp:67]   --->   Operation 2491 'bitconcatenate' 'or_ln67_166' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2492 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_221)   --->   "%xor_ln67_220 = xor i32 %or_ln67_164, i32 %or_ln67_165" [sha256.cpp:67]   --->   Operation 2492 'xor' 'xor_ln67_220' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2493 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_221 = xor i32 %xor_ln67_220, i32 %or_ln67_166" [sha256.cpp:67]   --->   Operation 2493 'xor' 'xor_ln67_221' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2494 [1/1] (0.28ns)   --->   "%and_ln67_111 = and i32 %a_87, i32 %a_86" [sha256.cpp:67]   --->   Operation 2494 'and' 'and_ln67_111' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2495 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_223)   --->   "%and_ln67_112 = and i32 %a_87, i32 %a_85" [sha256.cpp:67]   --->   Operation 2495 'and' 'and_ln67_112' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2496 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_223)   --->   "%xor_ln67_222 = xor i32 %and_ln67_109, i32 %and_ln67_112" [sha256.cpp:67]   --->   Operation 2496 'xor' 'xor_ln67_222' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2497 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_223 = xor i32 %xor_ln67_222, i32 %and_ln67_111" [sha256.cpp:67]   --->   Operation 2497 'xor' 'xor_ln67_223' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2498 [1/1] (1.14ns)   --->   "%e_88 = add i32 %t1_55, i32 %a_84" [sha256.cpp:71]   --->   Operation 2498 'add' 'e_88' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2499 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_110 = add i32 %xor_ln67_223, i32 %t1_55" [sha256.cpp:75]   --->   Operation 2499 'add' 'add_ln75_110' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_50 : Operation 2500 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_88 = add i32 %add_ln75_110, i32 %xor_ln67_221" [sha256.cpp:75]   --->   Operation 2500 'add' 'a_88' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_50 : Operation 2501 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_225)   --->   "%lshr_ln66_167 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_88, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 2501 'partselect' 'lshr_ln66_167' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2502 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_225)   --->   "%trunc_ln66_168 = trunc i32 %e_88" [sha256.cpp:66]   --->   Operation 2502 'trunc' 'trunc_ln66_168' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2503 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_225)   --->   "%or_ln66_167 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_168, i26 %lshr_ln66_167" [sha256.cpp:66]   --->   Operation 2503 'bitconcatenate' 'or_ln66_167' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2504 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_225)   --->   "%lshr_ln66_168 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_88, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 2504 'partselect' 'lshr_ln66_168' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2505 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_225)   --->   "%trunc_ln66_169 = trunc i32 %e_88" [sha256.cpp:66]   --->   Operation 2505 'trunc' 'trunc_ln66_169' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2506 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_225)   --->   "%or_ln66_168 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_169, i21 %lshr_ln66_168" [sha256.cpp:66]   --->   Operation 2506 'bitconcatenate' 'or_ln66_168' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2507 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_225)   --->   "%lshr_ln66_169 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_88, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 2507 'partselect' 'lshr_ln66_169' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2508 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_225)   --->   "%trunc_ln66_170 = trunc i32 %e_88" [sha256.cpp:66]   --->   Operation 2508 'trunc' 'trunc_ln66_170' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2509 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_225)   --->   "%or_ln66_169 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_170, i7 %lshr_ln66_169" [sha256.cpp:66]   --->   Operation 2509 'bitconcatenate' 'or_ln66_169' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2510 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_225)   --->   "%xor_ln66_224 = xor i32 %or_ln66_167, i32 %or_ln66_168" [sha256.cpp:66]   --->   Operation 2510 'xor' 'xor_ln66_224' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2511 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_225 = xor i32 %xor_ln66_224, i32 %or_ln66_169" [sha256.cpp:66]   --->   Operation 2511 'xor' 'xor_ln66_225' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2512 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_227)   --->   "%and_ln66_112 = and i32 %e_88, i32 %e_87" [sha256.cpp:66]   --->   Operation 2512 'and' 'and_ln66_112' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2513 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_227)   --->   "%xor_ln66_226 = xor i32 %e_88, i32 4294967295" [sha256.cpp:66]   --->   Operation 2513 'xor' 'xor_ln66_226' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2514 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_227)   --->   "%and_ln66_113 = and i32 %e_86, i32 %xor_ln66_226" [sha256.cpp:66]   --->   Operation 2514 'and' 'and_ln66_113' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2515 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_227 = xor i32 %and_ln66_112, i32 %and_ln66_113" [sha256.cpp:66]   --->   Operation 2515 'xor' 'xor_ln66_227' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2516 [1/2] (1.29ns)   --->   "%m_load_56 = load i6 %m_addr_56" [sha256.cpp:66]   --->   Operation 2516 'load' 'm_load_56' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_50 : Operation 2517 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_224 = add i32 %m_load_56, i32 %xor_ln66_227" [sha256.cpp:66]   --->   Operation 2517 'add' 'add_ln66_224' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_50 : Operation 2518 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_225 = add i32 %xor_ln66_225, i32 1955562222" [sha256.cpp:66]   --->   Operation 2518 'add' 'add_ln66_225' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_50 : Operation 2519 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_226 = add i32 %add_ln66_225, i32 %e_85" [sha256.cpp:66]   --->   Operation 2519 'add' 'add_ln66_226' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_50 : Operation 2520 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_56 = add i32 %add_ln66_226, i32 %add_ln66_224" [sha256.cpp:66]   --->   Operation 2520 'add' 't1_56' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_50 : Operation 2521 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_225)   --->   "%lshr_ln67_167 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_88, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 2521 'partselect' 'lshr_ln67_167' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2522 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_225)   --->   "%trunc_ln67_168 = trunc i32 %a_88" [sha256.cpp:67]   --->   Operation 2522 'trunc' 'trunc_ln67_168' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2523 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_225)   --->   "%or_ln67_167 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_168, i30 %lshr_ln67_167" [sha256.cpp:67]   --->   Operation 2523 'bitconcatenate' 'or_ln67_167' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2524 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_225)   --->   "%lshr_ln67_168 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_88, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2524 'partselect' 'lshr_ln67_168' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2525 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_225)   --->   "%trunc_ln67_169 = trunc i32 %a_88" [sha256.cpp:67]   --->   Operation 2525 'trunc' 'trunc_ln67_169' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2526 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_225)   --->   "%or_ln67_168 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_169, i19 %lshr_ln67_168" [sha256.cpp:67]   --->   Operation 2526 'bitconcatenate' 'or_ln67_168' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2527 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_225)   --->   "%lshr_ln67_169 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_88, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2527 'partselect' 'lshr_ln67_169' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2528 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_225)   --->   "%trunc_ln67_170 = trunc i32 %a_88" [sha256.cpp:67]   --->   Operation 2528 'trunc' 'trunc_ln67_170' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2529 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_225)   --->   "%or_ln67_169 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_170, i10 %lshr_ln67_169" [sha256.cpp:67]   --->   Operation 2529 'bitconcatenate' 'or_ln67_169' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2530 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_225)   --->   "%xor_ln67_224 = xor i32 %or_ln67_167, i32 %or_ln67_168" [sha256.cpp:67]   --->   Operation 2530 'xor' 'xor_ln67_224' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2531 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_225 = xor i32 %xor_ln67_224, i32 %or_ln67_169" [sha256.cpp:67]   --->   Operation 2531 'xor' 'xor_ln67_225' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2532 [1/1] (1.14ns)   --->   "%e_89 = add i32 %t1_56, i32 %a_85" [sha256.cpp:71]   --->   Operation 2532 'add' 'e_89' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2533 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_229)   --->   "%lshr_ln66_170 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_89, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 2533 'partselect' 'lshr_ln66_170' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2534 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_229)   --->   "%trunc_ln66_171 = trunc i32 %e_89" [sha256.cpp:66]   --->   Operation 2534 'trunc' 'trunc_ln66_171' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2535 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_229)   --->   "%or_ln66_170 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_171, i26 %lshr_ln66_170" [sha256.cpp:66]   --->   Operation 2535 'bitconcatenate' 'or_ln66_170' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2536 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_229)   --->   "%lshr_ln66_171 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_89, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 2536 'partselect' 'lshr_ln66_171' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2537 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_229)   --->   "%trunc_ln66_172 = trunc i32 %e_89" [sha256.cpp:66]   --->   Operation 2537 'trunc' 'trunc_ln66_172' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2538 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_229)   --->   "%or_ln66_171 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_172, i21 %lshr_ln66_171" [sha256.cpp:66]   --->   Operation 2538 'bitconcatenate' 'or_ln66_171' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2539 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_229)   --->   "%lshr_ln66_172 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_89, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 2539 'partselect' 'lshr_ln66_172' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2540 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_229)   --->   "%trunc_ln66_173 = trunc i32 %e_89" [sha256.cpp:66]   --->   Operation 2540 'trunc' 'trunc_ln66_173' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2541 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_229)   --->   "%or_ln66_172 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_173, i7 %lshr_ln66_172" [sha256.cpp:66]   --->   Operation 2541 'bitconcatenate' 'or_ln66_172' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2542 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_229)   --->   "%xor_ln66_228 = xor i32 %or_ln66_170, i32 %or_ln66_171" [sha256.cpp:66]   --->   Operation 2542 'xor' 'xor_ln66_228' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2543 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_229 = xor i32 %xor_ln66_228, i32 %or_ln66_172" [sha256.cpp:66]   --->   Operation 2543 'xor' 'xor_ln66_229' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2544 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_231)   --->   "%and_ln66_114 = and i32 %e_89, i32 %e_88" [sha256.cpp:66]   --->   Operation 2544 'and' 'and_ln66_114' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2545 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_231)   --->   "%xor_ln66_230 = xor i32 %e_89, i32 4294967295" [sha256.cpp:66]   --->   Operation 2545 'xor' 'xor_ln66_230' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2546 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_231)   --->   "%and_ln66_115 = and i32 %e_87, i32 %xor_ln66_230" [sha256.cpp:66]   --->   Operation 2546 'and' 'and_ln66_115' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2547 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_231 = xor i32 %and_ln66_114, i32 %and_ln66_115" [sha256.cpp:66]   --->   Operation 2547 'xor' 'xor_ln66_231' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 2548 [1/2] (1.29ns)   --->   "%m_load_57 = load i6 %m_addr_57" [sha256.cpp:66]   --->   Operation 2548 'load' 'm_load_57' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_50 : Operation 2549 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_228 = add i32 %m_load_57, i32 %xor_ln66_231" [sha256.cpp:66]   --->   Operation 2549 'add' 'add_ln66_228' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_50 : Operation 2550 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_229 = add i32 %xor_ln66_229, i32 2024104815" [sha256.cpp:66]   --->   Operation 2550 'add' 'add_ln66_229' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_50 : Operation 2551 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_230 = add i32 %add_ln66_229, i32 %e_86" [sha256.cpp:66]   --->   Operation 2551 'add' 'add_ln66_230' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_50 : Operation 2552 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_57 = add i32 %add_ln66_230, i32 %add_ln66_228" [sha256.cpp:66]   --->   Operation 2552 'add' 't1_57' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_50 : Operation 2553 [1/1] (0.00ns)   --->   "%m_addr_58 = getelementptr i32 %m, i64 0, i64 58" [sha256.cpp:66]   --->   Operation 2553 'getelementptr' 'm_addr_58' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2554 [2/2] (1.29ns)   --->   "%m_load_58 = load i6 %m_addr_58" [sha256.cpp:66]   --->   Operation 2554 'load' 'm_load_58' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_50 : Operation 2555 [1/1] (0.00ns)   --->   "%m_addr_59 = getelementptr i32 %m, i64 0, i64 59" [sha256.cpp:66]   --->   Operation 2555 'getelementptr' 'm_addr_59' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 2556 [2/2] (1.29ns)   --->   "%m_load_59 = load i6 %m_addr_59" [sha256.cpp:66]   --->   Operation 2556 'load' 'm_load_59' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>

State 51 <SV = 49> <Delay = 6.49>
ST_51 : Operation 2557 [1/1] (0.28ns)   --->   "%and_ln67_113 = and i32 %a_88, i32 %a_87" [sha256.cpp:67]   --->   Operation 2557 'and' 'and_ln67_113' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2558 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_227)   --->   "%and_ln67_114 = and i32 %a_88, i32 %a_86" [sha256.cpp:67]   --->   Operation 2558 'and' 'and_ln67_114' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2559 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_227)   --->   "%xor_ln67_226 = xor i32 %and_ln67_111, i32 %and_ln67_114" [sha256.cpp:67]   --->   Operation 2559 'xor' 'xor_ln67_226' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2560 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_227 = xor i32 %xor_ln67_226, i32 %and_ln67_113" [sha256.cpp:67]   --->   Operation 2560 'xor' 'xor_ln67_227' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2561 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_112 = add i32 %xor_ln67_227, i32 %t1_56" [sha256.cpp:75]   --->   Operation 2561 'add' 'add_ln75_112' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_51 : Operation 2562 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_89 = add i32 %add_ln75_112, i32 %xor_ln67_225" [sha256.cpp:75]   --->   Operation 2562 'add' 'a_89' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_51 : Operation 2563 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_229)   --->   "%lshr_ln67_170 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_89, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 2563 'partselect' 'lshr_ln67_170' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2564 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_229)   --->   "%trunc_ln67_171 = trunc i32 %a_89" [sha256.cpp:67]   --->   Operation 2564 'trunc' 'trunc_ln67_171' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2565 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_229)   --->   "%or_ln67_170 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_171, i30 %lshr_ln67_170" [sha256.cpp:67]   --->   Operation 2565 'bitconcatenate' 'or_ln67_170' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2566 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_229)   --->   "%lshr_ln67_171 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_89, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2566 'partselect' 'lshr_ln67_171' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2567 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_229)   --->   "%trunc_ln67_172 = trunc i32 %a_89" [sha256.cpp:67]   --->   Operation 2567 'trunc' 'trunc_ln67_172' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2568 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_229)   --->   "%or_ln67_171 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_172, i19 %lshr_ln67_171" [sha256.cpp:67]   --->   Operation 2568 'bitconcatenate' 'or_ln67_171' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2569 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_229)   --->   "%lshr_ln67_172 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_89, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2569 'partselect' 'lshr_ln67_172' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2570 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_229)   --->   "%trunc_ln67_173 = trunc i32 %a_89" [sha256.cpp:67]   --->   Operation 2570 'trunc' 'trunc_ln67_173' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2571 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_229)   --->   "%or_ln67_172 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_173, i10 %lshr_ln67_172" [sha256.cpp:67]   --->   Operation 2571 'bitconcatenate' 'or_ln67_172' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2572 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_229)   --->   "%xor_ln67_228 = xor i32 %or_ln67_170, i32 %or_ln67_171" [sha256.cpp:67]   --->   Operation 2572 'xor' 'xor_ln67_228' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2573 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_229 = xor i32 %xor_ln67_228, i32 %or_ln67_172" [sha256.cpp:67]   --->   Operation 2573 'xor' 'xor_ln67_229' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2574 [1/1] (0.28ns)   --->   "%and_ln67_115 = and i32 %a_89, i32 %a_88" [sha256.cpp:67]   --->   Operation 2574 'and' 'and_ln67_115' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2575 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_231)   --->   "%and_ln67_116 = and i32 %a_89, i32 %a_87" [sha256.cpp:67]   --->   Operation 2575 'and' 'and_ln67_116' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2576 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_231)   --->   "%xor_ln67_230 = xor i32 %and_ln67_113, i32 %and_ln67_116" [sha256.cpp:67]   --->   Operation 2576 'xor' 'xor_ln67_230' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2577 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_231 = xor i32 %xor_ln67_230, i32 %and_ln67_115" [sha256.cpp:67]   --->   Operation 2577 'xor' 'xor_ln67_231' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2578 [1/1] (1.14ns)   --->   "%e_90 = add i32 %t1_57, i32 %a_86" [sha256.cpp:71]   --->   Operation 2578 'add' 'e_90' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2579 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_114 = add i32 %xor_ln67_231, i32 %t1_57" [sha256.cpp:75]   --->   Operation 2579 'add' 'add_ln75_114' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_51 : Operation 2580 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_90 = add i32 %add_ln75_114, i32 %xor_ln67_229" [sha256.cpp:75]   --->   Operation 2580 'add' 'a_90' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_51 : Operation 2581 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_233)   --->   "%lshr_ln66_173 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_90, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 2581 'partselect' 'lshr_ln66_173' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2582 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_233)   --->   "%trunc_ln66_174 = trunc i32 %e_90" [sha256.cpp:66]   --->   Operation 2582 'trunc' 'trunc_ln66_174' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2583 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_233)   --->   "%or_ln66_173 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_174, i26 %lshr_ln66_173" [sha256.cpp:66]   --->   Operation 2583 'bitconcatenate' 'or_ln66_173' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2584 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_233)   --->   "%lshr_ln66_174 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_90, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 2584 'partselect' 'lshr_ln66_174' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2585 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_233)   --->   "%trunc_ln66_175 = trunc i32 %e_90" [sha256.cpp:66]   --->   Operation 2585 'trunc' 'trunc_ln66_175' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2586 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_233)   --->   "%or_ln66_174 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_175, i21 %lshr_ln66_174" [sha256.cpp:66]   --->   Operation 2586 'bitconcatenate' 'or_ln66_174' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2587 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_233)   --->   "%lshr_ln66_175 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_90, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 2587 'partselect' 'lshr_ln66_175' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2588 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_233)   --->   "%trunc_ln66_176 = trunc i32 %e_90" [sha256.cpp:66]   --->   Operation 2588 'trunc' 'trunc_ln66_176' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2589 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_233)   --->   "%or_ln66_175 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_176, i7 %lshr_ln66_175" [sha256.cpp:66]   --->   Operation 2589 'bitconcatenate' 'or_ln66_175' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2590 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_233)   --->   "%xor_ln66_232 = xor i32 %or_ln66_173, i32 %or_ln66_174" [sha256.cpp:66]   --->   Operation 2590 'xor' 'xor_ln66_232' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2591 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_233 = xor i32 %xor_ln66_232, i32 %or_ln66_175" [sha256.cpp:66]   --->   Operation 2591 'xor' 'xor_ln66_233' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2592 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_235)   --->   "%and_ln66_116 = and i32 %e_90, i32 %e_89" [sha256.cpp:66]   --->   Operation 2592 'and' 'and_ln66_116' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2593 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_235)   --->   "%xor_ln66_234 = xor i32 %e_90, i32 4294967295" [sha256.cpp:66]   --->   Operation 2593 'xor' 'xor_ln66_234' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2594 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_235)   --->   "%and_ln66_117 = and i32 %e_88, i32 %xor_ln66_234" [sha256.cpp:66]   --->   Operation 2594 'and' 'and_ln66_117' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2595 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_235 = xor i32 %and_ln66_116, i32 %and_ln66_117" [sha256.cpp:66]   --->   Operation 2595 'xor' 'xor_ln66_235' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2596 [1/2] (1.29ns)   --->   "%m_load_58 = load i6 %m_addr_58" [sha256.cpp:66]   --->   Operation 2596 'load' 'm_load_58' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_51 : Operation 2597 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_232 = add i32 %m_load_58, i32 %e_87" [sha256.cpp:66]   --->   Operation 2597 'add' 'add_ln66_232' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_51 : Operation 2598 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_233 = add i32 %xor_ln66_233, i32 2227730452" [sha256.cpp:66]   --->   Operation 2598 'add' 'add_ln66_233' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_51 : Operation 2599 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_234 = add i32 %add_ln66_233, i32 %xor_ln66_235" [sha256.cpp:66]   --->   Operation 2599 'add' 'add_ln66_234' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_51 : Operation 2600 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_58 = add i32 %add_ln66_234, i32 %add_ln66_232" [sha256.cpp:66]   --->   Operation 2600 'add' 't1_58' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_51 : Operation 2601 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_233)   --->   "%lshr_ln67_173 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_90, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 2601 'partselect' 'lshr_ln67_173' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2602 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_233)   --->   "%trunc_ln67_174 = trunc i32 %a_90" [sha256.cpp:67]   --->   Operation 2602 'trunc' 'trunc_ln67_174' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2603 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_233)   --->   "%or_ln67_173 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_174, i30 %lshr_ln67_173" [sha256.cpp:67]   --->   Operation 2603 'bitconcatenate' 'or_ln67_173' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2604 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_233)   --->   "%lshr_ln67_174 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_90, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2604 'partselect' 'lshr_ln67_174' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2605 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_233)   --->   "%trunc_ln67_175 = trunc i32 %a_90" [sha256.cpp:67]   --->   Operation 2605 'trunc' 'trunc_ln67_175' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2606 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_233)   --->   "%or_ln67_174 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_175, i19 %lshr_ln67_174" [sha256.cpp:67]   --->   Operation 2606 'bitconcatenate' 'or_ln67_174' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2607 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_233)   --->   "%lshr_ln67_175 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_90, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2607 'partselect' 'lshr_ln67_175' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2608 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_233)   --->   "%trunc_ln67_176 = trunc i32 %a_90" [sha256.cpp:67]   --->   Operation 2608 'trunc' 'trunc_ln67_176' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2609 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_233)   --->   "%or_ln67_175 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_176, i10 %lshr_ln67_175" [sha256.cpp:67]   --->   Operation 2609 'bitconcatenate' 'or_ln67_175' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2610 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_233)   --->   "%xor_ln67_232 = xor i32 %or_ln67_173, i32 %or_ln67_174" [sha256.cpp:67]   --->   Operation 2610 'xor' 'xor_ln67_232' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2611 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_233 = xor i32 %xor_ln67_232, i32 %or_ln67_175" [sha256.cpp:67]   --->   Operation 2611 'xor' 'xor_ln67_233' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2612 [1/1] (1.14ns)   --->   "%e_91 = add i32 %t1_58, i32 %a_87" [sha256.cpp:71]   --->   Operation 2612 'add' 'e_91' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2613 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_237)   --->   "%lshr_ln66_176 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_91, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 2613 'partselect' 'lshr_ln66_176' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2614 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_237)   --->   "%trunc_ln66_177 = trunc i32 %e_91" [sha256.cpp:66]   --->   Operation 2614 'trunc' 'trunc_ln66_177' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2615 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_237)   --->   "%or_ln66_176 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_177, i26 %lshr_ln66_176" [sha256.cpp:66]   --->   Operation 2615 'bitconcatenate' 'or_ln66_176' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2616 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_237)   --->   "%lshr_ln66_177 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_91, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 2616 'partselect' 'lshr_ln66_177' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2617 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_237)   --->   "%trunc_ln66_178 = trunc i32 %e_91" [sha256.cpp:66]   --->   Operation 2617 'trunc' 'trunc_ln66_178' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2618 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_237)   --->   "%or_ln66_177 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_178, i21 %lshr_ln66_177" [sha256.cpp:66]   --->   Operation 2618 'bitconcatenate' 'or_ln66_177' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2619 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_237)   --->   "%lshr_ln66_178 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_91, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 2619 'partselect' 'lshr_ln66_178' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2620 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_237)   --->   "%trunc_ln66_179 = trunc i32 %e_91" [sha256.cpp:66]   --->   Operation 2620 'trunc' 'trunc_ln66_179' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2621 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_237)   --->   "%or_ln66_178 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_179, i7 %lshr_ln66_178" [sha256.cpp:66]   --->   Operation 2621 'bitconcatenate' 'or_ln66_178' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2622 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_237)   --->   "%xor_ln66_236 = xor i32 %or_ln66_176, i32 %or_ln66_177" [sha256.cpp:66]   --->   Operation 2622 'xor' 'xor_ln66_236' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2623 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_237 = xor i32 %xor_ln66_236, i32 %or_ln66_178" [sha256.cpp:66]   --->   Operation 2623 'xor' 'xor_ln66_237' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2624 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_239)   --->   "%and_ln66_118 = and i32 %e_91, i32 %e_90" [sha256.cpp:66]   --->   Operation 2624 'and' 'and_ln66_118' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2625 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_239)   --->   "%xor_ln66_238 = xor i32 %e_91, i32 4294967295" [sha256.cpp:66]   --->   Operation 2625 'xor' 'xor_ln66_238' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2626 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_239)   --->   "%and_ln66_119 = and i32 %e_89, i32 %xor_ln66_238" [sha256.cpp:66]   --->   Operation 2626 'and' 'and_ln66_119' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2627 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_239 = xor i32 %and_ln66_118, i32 %and_ln66_119" [sha256.cpp:66]   --->   Operation 2627 'xor' 'xor_ln66_239' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 2628 [1/2] (1.29ns)   --->   "%m_load_59 = load i6 %m_addr_59" [sha256.cpp:66]   --->   Operation 2628 'load' 'm_load_59' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_51 : Operation 2629 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_236 = add i32 %m_load_59, i32 %e_88" [sha256.cpp:66]   --->   Operation 2629 'add' 'add_ln66_236' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_51 : Operation 2630 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_237 = add i32 %xor_ln66_237, i32 2361852424" [sha256.cpp:66]   --->   Operation 2630 'add' 'add_ln66_237' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_51 : Operation 2631 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_238 = add i32 %add_ln66_237, i32 %xor_ln66_239" [sha256.cpp:66]   --->   Operation 2631 'add' 'add_ln66_238' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_51 : Operation 2632 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_59 = add i32 %add_ln66_238, i32 %add_ln66_236" [sha256.cpp:66]   --->   Operation 2632 'add' 't1_59' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_51 : Operation 2633 [1/1] (0.00ns)   --->   "%m_addr_60 = getelementptr i32 %m, i64 0, i64 60" [sha256.cpp:66]   --->   Operation 2633 'getelementptr' 'm_addr_60' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2634 [2/2] (1.29ns)   --->   "%m_load_60 = load i6 %m_addr_60" [sha256.cpp:66]   --->   Operation 2634 'load' 'm_load_60' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_51 : Operation 2635 [1/1] (0.00ns)   --->   "%m_addr_61 = getelementptr i32 %m, i64 0, i64 61" [sha256.cpp:66]   --->   Operation 2635 'getelementptr' 'm_addr_61' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 2636 [2/2] (1.29ns)   --->   "%m_load_61 = load i6 %m_addr_61" [sha256.cpp:66]   --->   Operation 2636 'load' 'm_load_61' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_51 : Operation 2637 [2/2] (0.73ns)   --->   "%ctx_load_32 = load i4 %ctx_addr_38" [sha256.cpp:82]   --->   Operation 2637 'load' 'ctx_load_32' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>

State 52 <SV = 50> <Delay = 6.49>
ST_52 : Operation 2638 [1/1] (0.28ns)   --->   "%and_ln67_117 = and i32 %a_90, i32 %a_89" [sha256.cpp:67]   --->   Operation 2638 'and' 'and_ln67_117' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2639 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_235)   --->   "%and_ln67_118 = and i32 %a_90, i32 %a_88" [sha256.cpp:67]   --->   Operation 2639 'and' 'and_ln67_118' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2640 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_235)   --->   "%xor_ln67_234 = xor i32 %and_ln67_115, i32 %and_ln67_118" [sha256.cpp:67]   --->   Operation 2640 'xor' 'xor_ln67_234' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2641 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_235 = xor i32 %xor_ln67_234, i32 %and_ln67_117" [sha256.cpp:67]   --->   Operation 2641 'xor' 'xor_ln67_235' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2642 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_116 = add i32 %xor_ln67_235, i32 %t1_58" [sha256.cpp:75]   --->   Operation 2642 'add' 'add_ln75_116' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_52 : Operation 2643 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_91 = add i32 %add_ln75_116, i32 %xor_ln67_233" [sha256.cpp:75]   --->   Operation 2643 'add' 'a_91' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_52 : Operation 2644 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_237)   --->   "%lshr_ln67_176 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_91, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 2644 'partselect' 'lshr_ln67_176' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2645 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_237)   --->   "%trunc_ln67_177 = trunc i32 %a_91" [sha256.cpp:67]   --->   Operation 2645 'trunc' 'trunc_ln67_177' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2646 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_237)   --->   "%or_ln67_176 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_177, i30 %lshr_ln67_176" [sha256.cpp:67]   --->   Operation 2646 'bitconcatenate' 'or_ln67_176' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2647 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_237)   --->   "%lshr_ln67_177 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_91, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2647 'partselect' 'lshr_ln67_177' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2648 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_237)   --->   "%trunc_ln67_178 = trunc i32 %a_91" [sha256.cpp:67]   --->   Operation 2648 'trunc' 'trunc_ln67_178' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2649 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_237)   --->   "%or_ln67_177 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_178, i19 %lshr_ln67_177" [sha256.cpp:67]   --->   Operation 2649 'bitconcatenate' 'or_ln67_177' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2650 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_237)   --->   "%lshr_ln67_178 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_91, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2650 'partselect' 'lshr_ln67_178' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2651 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_237)   --->   "%trunc_ln67_179 = trunc i32 %a_91" [sha256.cpp:67]   --->   Operation 2651 'trunc' 'trunc_ln67_179' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2652 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_237)   --->   "%or_ln67_178 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_179, i10 %lshr_ln67_178" [sha256.cpp:67]   --->   Operation 2652 'bitconcatenate' 'or_ln67_178' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2653 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_237)   --->   "%xor_ln67_236 = xor i32 %or_ln67_176, i32 %or_ln67_177" [sha256.cpp:67]   --->   Operation 2653 'xor' 'xor_ln67_236' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2654 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_237 = xor i32 %xor_ln67_236, i32 %or_ln67_178" [sha256.cpp:67]   --->   Operation 2654 'xor' 'xor_ln67_237' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2655 [1/1] (0.28ns)   --->   "%and_ln67_119 = and i32 %a_91, i32 %a_90" [sha256.cpp:67]   --->   Operation 2655 'and' 'and_ln67_119' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2656 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_239)   --->   "%and_ln67_120 = and i32 %a_91, i32 %a_89" [sha256.cpp:67]   --->   Operation 2656 'and' 'and_ln67_120' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2657 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_239)   --->   "%xor_ln67_238 = xor i32 %and_ln67_117, i32 %and_ln67_120" [sha256.cpp:67]   --->   Operation 2657 'xor' 'xor_ln67_238' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2658 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_239 = xor i32 %xor_ln67_238, i32 %and_ln67_119" [sha256.cpp:67]   --->   Operation 2658 'xor' 'xor_ln67_239' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2659 [1/1] (1.14ns)   --->   "%e_92 = add i32 %t1_59, i32 %a_88" [sha256.cpp:71]   --->   Operation 2659 'add' 'e_92' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2660 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_118 = add i32 %xor_ln67_239, i32 %t1_59" [sha256.cpp:75]   --->   Operation 2660 'add' 'add_ln75_118' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_52 : Operation 2661 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_92 = add i32 %add_ln75_118, i32 %xor_ln67_237" [sha256.cpp:75]   --->   Operation 2661 'add' 'a_92' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_52 : Operation 2662 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_241)   --->   "%lshr_ln66_179 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_92, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 2662 'partselect' 'lshr_ln66_179' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2663 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_241)   --->   "%trunc_ln66_180 = trunc i32 %e_92" [sha256.cpp:66]   --->   Operation 2663 'trunc' 'trunc_ln66_180' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2664 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_241)   --->   "%or_ln66_179 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_180, i26 %lshr_ln66_179" [sha256.cpp:66]   --->   Operation 2664 'bitconcatenate' 'or_ln66_179' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2665 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_241)   --->   "%lshr_ln66_180 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_92, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 2665 'partselect' 'lshr_ln66_180' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2666 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_241)   --->   "%trunc_ln66_181 = trunc i32 %e_92" [sha256.cpp:66]   --->   Operation 2666 'trunc' 'trunc_ln66_181' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2667 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_241)   --->   "%or_ln66_180 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_181, i21 %lshr_ln66_180" [sha256.cpp:66]   --->   Operation 2667 'bitconcatenate' 'or_ln66_180' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2668 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_241)   --->   "%lshr_ln66_181 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_92, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 2668 'partselect' 'lshr_ln66_181' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2669 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_241)   --->   "%trunc_ln66_182 = trunc i32 %e_92" [sha256.cpp:66]   --->   Operation 2669 'trunc' 'trunc_ln66_182' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2670 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_241)   --->   "%or_ln66_181 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_182, i7 %lshr_ln66_181" [sha256.cpp:66]   --->   Operation 2670 'bitconcatenate' 'or_ln66_181' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2671 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_241)   --->   "%xor_ln66_240 = xor i32 %or_ln66_179, i32 %or_ln66_180" [sha256.cpp:66]   --->   Operation 2671 'xor' 'xor_ln66_240' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2672 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_241 = xor i32 %xor_ln66_240, i32 %or_ln66_181" [sha256.cpp:66]   --->   Operation 2672 'xor' 'xor_ln66_241' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2673 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_243)   --->   "%and_ln66_120 = and i32 %e_92, i32 %e_91" [sha256.cpp:66]   --->   Operation 2673 'and' 'and_ln66_120' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2674 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_243)   --->   "%xor_ln66_242 = xor i32 %e_92, i32 4294967295" [sha256.cpp:66]   --->   Operation 2674 'xor' 'xor_ln66_242' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2675 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_243)   --->   "%and_ln66_121 = and i32 %e_90, i32 %xor_ln66_242" [sha256.cpp:66]   --->   Operation 2675 'and' 'and_ln66_121' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2676 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_243 = xor i32 %and_ln66_120, i32 %and_ln66_121" [sha256.cpp:66]   --->   Operation 2676 'xor' 'xor_ln66_243' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2677 [1/2] (1.29ns)   --->   "%m_load_60 = load i6 %m_addr_60" [sha256.cpp:66]   --->   Operation 2677 'load' 'm_load_60' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_52 : Operation 2678 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_240 = add i32 %m_load_60, i32 %e_89" [sha256.cpp:66]   --->   Operation 2678 'add' 'add_ln66_240' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_52 : Operation 2679 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_241 = add i32 %xor_ln66_241, i32 2428436474" [sha256.cpp:66]   --->   Operation 2679 'add' 'add_ln66_241' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_52 : Operation 2680 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_242 = add i32 %add_ln66_241, i32 %xor_ln66_243" [sha256.cpp:66]   --->   Operation 2680 'add' 'add_ln66_242' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_52 : Operation 2681 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_60 = add i32 %add_ln66_242, i32 %add_ln66_240" [sha256.cpp:66]   --->   Operation 2681 'add' 't1_60' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_52 : Operation 2682 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_241)   --->   "%lshr_ln67_179 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_92, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 2682 'partselect' 'lshr_ln67_179' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2683 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_241)   --->   "%trunc_ln67_180 = trunc i32 %a_92" [sha256.cpp:67]   --->   Operation 2683 'trunc' 'trunc_ln67_180' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2684 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_241)   --->   "%or_ln67_179 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_180, i30 %lshr_ln67_179" [sha256.cpp:67]   --->   Operation 2684 'bitconcatenate' 'or_ln67_179' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2685 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_241)   --->   "%lshr_ln67_180 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_92, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2685 'partselect' 'lshr_ln67_180' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2686 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_241)   --->   "%trunc_ln67_181 = trunc i32 %a_92" [sha256.cpp:67]   --->   Operation 2686 'trunc' 'trunc_ln67_181' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2687 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_241)   --->   "%or_ln67_180 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_181, i19 %lshr_ln67_180" [sha256.cpp:67]   --->   Operation 2687 'bitconcatenate' 'or_ln67_180' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2688 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_241)   --->   "%lshr_ln67_181 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_92, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2688 'partselect' 'lshr_ln67_181' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2689 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_241)   --->   "%trunc_ln67_182 = trunc i32 %a_92" [sha256.cpp:67]   --->   Operation 2689 'trunc' 'trunc_ln67_182' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2690 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_241)   --->   "%or_ln67_181 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_182, i10 %lshr_ln67_181" [sha256.cpp:67]   --->   Operation 2690 'bitconcatenate' 'or_ln67_181' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2691 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_241)   --->   "%xor_ln67_240 = xor i32 %or_ln67_179, i32 %or_ln67_180" [sha256.cpp:67]   --->   Operation 2691 'xor' 'xor_ln67_240' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2692 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_241 = xor i32 %xor_ln67_240, i32 %or_ln67_181" [sha256.cpp:67]   --->   Operation 2692 'xor' 'xor_ln67_241' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2693 [1/1] (0.28ns)   --->   "%and_ln67_121 = and i32 %a_92, i32 %a_91" [sha256.cpp:67]   --->   Operation 2693 'and' 'and_ln67_121' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2694 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_243)   --->   "%and_ln67_122 = and i32 %a_92, i32 %a_90" [sha256.cpp:67]   --->   Operation 2694 'and' 'and_ln67_122' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2695 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_243)   --->   "%xor_ln67_242 = xor i32 %and_ln67_119, i32 %and_ln67_122" [sha256.cpp:67]   --->   Operation 2695 'xor' 'xor_ln67_242' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2696 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_243 = xor i32 %xor_ln67_242, i32 %and_ln67_121" [sha256.cpp:67]   --->   Operation 2696 'xor' 'xor_ln67_243' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2697 [1/1] (1.14ns)   --->   "%e_93 = add i32 %t1_60, i32 %a_89" [sha256.cpp:71]   --->   Operation 2697 'add' 'e_93' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2698 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_120 = add i32 %xor_ln67_243, i32 %t1_60" [sha256.cpp:75]   --->   Operation 2698 'add' 'add_ln75_120' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_52 : Operation 2699 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_93 = add i32 %add_ln75_120, i32 %xor_ln67_241" [sha256.cpp:75]   --->   Operation 2699 'add' 'a_93' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_52 : Operation 2700 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_245)   --->   "%lshr_ln66_182 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_93, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 2700 'partselect' 'lshr_ln66_182' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2701 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_245)   --->   "%trunc_ln66_183 = trunc i32 %e_93" [sha256.cpp:66]   --->   Operation 2701 'trunc' 'trunc_ln66_183' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2702 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_245)   --->   "%or_ln66_182 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_183, i26 %lshr_ln66_182" [sha256.cpp:66]   --->   Operation 2702 'bitconcatenate' 'or_ln66_182' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2703 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_245)   --->   "%lshr_ln66_183 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_93, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 2703 'partselect' 'lshr_ln66_183' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2704 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_245)   --->   "%trunc_ln66_184 = trunc i32 %e_93" [sha256.cpp:66]   --->   Operation 2704 'trunc' 'trunc_ln66_184' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2705 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_245)   --->   "%or_ln66_183 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_184, i21 %lshr_ln66_183" [sha256.cpp:66]   --->   Operation 2705 'bitconcatenate' 'or_ln66_183' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2706 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_245)   --->   "%lshr_ln66_184 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_93, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 2706 'partselect' 'lshr_ln66_184' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2707 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_245)   --->   "%trunc_ln66_185 = trunc i32 %e_93" [sha256.cpp:66]   --->   Operation 2707 'trunc' 'trunc_ln66_185' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2708 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_245)   --->   "%or_ln66_184 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_185, i7 %lshr_ln66_184" [sha256.cpp:66]   --->   Operation 2708 'bitconcatenate' 'or_ln66_184' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2709 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_245)   --->   "%xor_ln66_244 = xor i32 %or_ln66_182, i32 %or_ln66_183" [sha256.cpp:66]   --->   Operation 2709 'xor' 'xor_ln66_244' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2710 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_245 = xor i32 %xor_ln66_244, i32 %or_ln66_184" [sha256.cpp:66]   --->   Operation 2710 'xor' 'xor_ln66_245' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2711 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_247)   --->   "%and_ln66_122 = and i32 %e_93, i32 %e_92" [sha256.cpp:66]   --->   Operation 2711 'and' 'and_ln66_122' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2712 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_247)   --->   "%xor_ln66_246 = xor i32 %e_93, i32 4294967295" [sha256.cpp:66]   --->   Operation 2712 'xor' 'xor_ln66_246' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2713 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_247)   --->   "%and_ln66_123 = and i32 %e_91, i32 %xor_ln66_246" [sha256.cpp:66]   --->   Operation 2713 'and' 'and_ln66_123' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2714 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_247 = xor i32 %and_ln66_122, i32 %and_ln66_123" [sha256.cpp:66]   --->   Operation 2714 'xor' 'xor_ln66_247' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2715 [1/2] (1.29ns)   --->   "%m_load_61 = load i6 %m_addr_61" [sha256.cpp:66]   --->   Operation 2715 'load' 'm_load_61' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_52 : Operation 2716 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_244 = add i32 %m_load_61, i32 %e_90" [sha256.cpp:66]   --->   Operation 2716 'add' 'add_ln66_244' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_52 : Operation 2717 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_245 = add i32 %xor_ln66_245, i32 2756734187" [sha256.cpp:66]   --->   Operation 2717 'add' 'add_ln66_245' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_52 : Operation 2718 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_246 = add i32 %add_ln66_245, i32 %xor_ln66_247" [sha256.cpp:66]   --->   Operation 2718 'add' 'add_ln66_246' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_52 : Operation 2719 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_61 = add i32 %add_ln66_246, i32 %add_ln66_244" [sha256.cpp:66]   --->   Operation 2719 'add' 't1_61' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_52 : Operation 2720 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_245)   --->   "%lshr_ln67_182 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_93, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 2720 'partselect' 'lshr_ln67_182' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2721 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_245)   --->   "%trunc_ln67_183 = trunc i32 %a_93" [sha256.cpp:67]   --->   Operation 2721 'trunc' 'trunc_ln67_183' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2722 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_245)   --->   "%or_ln67_182 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_183, i30 %lshr_ln67_182" [sha256.cpp:67]   --->   Operation 2722 'bitconcatenate' 'or_ln67_182' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2723 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_245)   --->   "%lshr_ln67_183 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_93, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2723 'partselect' 'lshr_ln67_183' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2724 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_245)   --->   "%trunc_ln67_184 = trunc i32 %a_93" [sha256.cpp:67]   --->   Operation 2724 'trunc' 'trunc_ln67_184' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2725 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_245)   --->   "%or_ln67_183 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_184, i19 %lshr_ln67_183" [sha256.cpp:67]   --->   Operation 2725 'bitconcatenate' 'or_ln67_183' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2726 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_245)   --->   "%lshr_ln67_184 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_93, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2726 'partselect' 'lshr_ln67_184' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2727 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_245)   --->   "%trunc_ln67_185 = trunc i32 %a_93" [sha256.cpp:67]   --->   Operation 2727 'trunc' 'trunc_ln67_185' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2728 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_245)   --->   "%or_ln67_184 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_185, i10 %lshr_ln67_184" [sha256.cpp:67]   --->   Operation 2728 'bitconcatenate' 'or_ln67_184' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2729 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_245)   --->   "%xor_ln67_244 = xor i32 %or_ln67_182, i32 %or_ln67_183" [sha256.cpp:67]   --->   Operation 2729 'xor' 'xor_ln67_244' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2730 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_245 = xor i32 %xor_ln67_244, i32 %or_ln67_184" [sha256.cpp:67]   --->   Operation 2730 'xor' 'xor_ln67_245' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 2731 [1/1] (0.00ns)   --->   "%m_addr_62 = getelementptr i32 %m, i64 0, i64 62" [sha256.cpp:66]   --->   Operation 2731 'getelementptr' 'm_addr_62' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2732 [2/2] (1.29ns)   --->   "%m_load_62 = load i6 %m_addr_62" [sha256.cpp:66]   --->   Operation 2732 'load' 'm_load_62' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_52 : Operation 2733 [1/1] (0.00ns)   --->   "%m_addr_63 = getelementptr i32 %m, i64 0, i64 63" [sha256.cpp:66]   --->   Operation 2733 'getelementptr' 'm_addr_63' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2734 [2/2] (1.29ns)   --->   "%m_load_63 = load i6 %m_addr_63" [sha256.cpp:66]   --->   Operation 2734 'load' 'm_load_63' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_52 : Operation 2735 [2/2] (0.73ns)   --->   "%ctx_load_31 = load i4 %ctx_addr_37" [sha256.cpp:80]   --->   Operation 2735 'load' 'ctx_load_31' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_52 : Operation 2736 [1/2] (0.73ns)   --->   "%ctx_load_32 = load i4 %ctx_addr_38" [sha256.cpp:82]   --->   Operation 2736 'load' 'ctx_load_32' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_52 : Operation 2737 [1/1] (0.00ns)   --->   "%trunc_ln82 = trunc i64 %ctx_load_32" [sha256.cpp:82]   --->   Operation 2737 'trunc' 'trunc_ln82' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2738 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ctx_load_32, i32 32, i32 63" [sha256.cpp:83]   --->   Operation 2738 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 2739 [2/2] (0.73ns)   --->   "%ctx_load_34 = load i4 %ctx_addr_40" [sha256.cpp:86]   --->   Operation 2739 'load' 'ctx_load_34' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>

State 53 <SV = 51> <Delay = 6.49>
ST_53 : Operation 2740 [1/1] (0.28ns)   --->   "%and_ln67_123 = and i32 %a_93, i32 %a_92" [sha256.cpp:67]   --->   Operation 2740 'and' 'and_ln67_123' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2741 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_247)   --->   "%and_ln67_124 = and i32 %a_93, i32 %a_91" [sha256.cpp:67]   --->   Operation 2741 'and' 'and_ln67_124' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2742 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_247)   --->   "%xor_ln67_246 = xor i32 %and_ln67_121, i32 %and_ln67_124" [sha256.cpp:67]   --->   Operation 2742 'xor' 'xor_ln67_246' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2743 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_247 = xor i32 %xor_ln67_246, i32 %and_ln67_123" [sha256.cpp:67]   --->   Operation 2743 'xor' 'xor_ln67_247' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2744 [1/1] (1.14ns)   --->   "%e_94 = add i32 %t1_61, i32 %a_90" [sha256.cpp:71]   --->   Operation 2744 'add' 'e_94' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2745 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_122 = add i32 %xor_ln67_247, i32 %t1_61" [sha256.cpp:75]   --->   Operation 2745 'add' 'add_ln75_122' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_53 : Operation 2746 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_94 = add i32 %add_ln75_122, i32 %xor_ln67_245" [sha256.cpp:75]   --->   Operation 2746 'add' 'a_94' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_53 : Operation 2747 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_249)   --->   "%lshr_ln66_185 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_94, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 2747 'partselect' 'lshr_ln66_185' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2748 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_249)   --->   "%trunc_ln66_186 = trunc i32 %e_94" [sha256.cpp:66]   --->   Operation 2748 'trunc' 'trunc_ln66_186' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2749 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_249)   --->   "%or_ln66_185 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_186, i26 %lshr_ln66_185" [sha256.cpp:66]   --->   Operation 2749 'bitconcatenate' 'or_ln66_185' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2750 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_249)   --->   "%lshr_ln66_186 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_94, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 2750 'partselect' 'lshr_ln66_186' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2751 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_249)   --->   "%trunc_ln66_187 = trunc i32 %e_94" [sha256.cpp:66]   --->   Operation 2751 'trunc' 'trunc_ln66_187' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2752 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_249)   --->   "%or_ln66_186 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_187, i21 %lshr_ln66_186" [sha256.cpp:66]   --->   Operation 2752 'bitconcatenate' 'or_ln66_186' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2753 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_249)   --->   "%lshr_ln66_187 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_94, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 2753 'partselect' 'lshr_ln66_187' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2754 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_249)   --->   "%trunc_ln66_188 = trunc i32 %e_94" [sha256.cpp:66]   --->   Operation 2754 'trunc' 'trunc_ln66_188' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2755 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_249)   --->   "%or_ln66_187 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_188, i7 %lshr_ln66_187" [sha256.cpp:66]   --->   Operation 2755 'bitconcatenate' 'or_ln66_187' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2756 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_249)   --->   "%xor_ln66_248 = xor i32 %or_ln66_185, i32 %or_ln66_186" [sha256.cpp:66]   --->   Operation 2756 'xor' 'xor_ln66_248' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2757 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_249 = xor i32 %xor_ln66_248, i32 %or_ln66_187" [sha256.cpp:66]   --->   Operation 2757 'xor' 'xor_ln66_249' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2758 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_251)   --->   "%and_ln66_124 = and i32 %e_94, i32 %e_93" [sha256.cpp:66]   --->   Operation 2758 'and' 'and_ln66_124' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2759 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_251)   --->   "%xor_ln66_250 = xor i32 %e_94, i32 4294967295" [sha256.cpp:66]   --->   Operation 2759 'xor' 'xor_ln66_250' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2760 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_251)   --->   "%and_ln66_125 = and i32 %e_92, i32 %xor_ln66_250" [sha256.cpp:66]   --->   Operation 2760 'and' 'and_ln66_125' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2761 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_251 = xor i32 %and_ln66_124, i32 %and_ln66_125" [sha256.cpp:66]   --->   Operation 2761 'xor' 'xor_ln66_251' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2762 [1/2] (1.29ns)   --->   "%m_load_62 = load i6 %m_addr_62" [sha256.cpp:66]   --->   Operation 2762 'load' 'm_load_62' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_53 : Operation 2763 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_248 = add i32 %m_load_62, i32 %e_91" [sha256.cpp:66]   --->   Operation 2763 'add' 'add_ln66_248' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_53 : Operation 2764 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_249 = add i32 %xor_ln66_249, i32 3204031479" [sha256.cpp:66]   --->   Operation 2764 'add' 'add_ln66_249' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_53 : Operation 2765 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_250 = add i32 %add_ln66_249, i32 %xor_ln66_251" [sha256.cpp:66]   --->   Operation 2765 'add' 'add_ln66_250' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_53 : Operation 2766 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_62 = add i32 %add_ln66_250, i32 %add_ln66_248" [sha256.cpp:66]   --->   Operation 2766 'add' 't1_62' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_53 : Operation 2767 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_249)   --->   "%lshr_ln67_185 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_94, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 2767 'partselect' 'lshr_ln67_185' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2768 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_249)   --->   "%trunc_ln67_186 = trunc i32 %a_94" [sha256.cpp:67]   --->   Operation 2768 'trunc' 'trunc_ln67_186' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2769 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_249)   --->   "%or_ln67_185 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_186, i30 %lshr_ln67_185" [sha256.cpp:67]   --->   Operation 2769 'bitconcatenate' 'or_ln67_185' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2770 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_249)   --->   "%lshr_ln67_186 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_94, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2770 'partselect' 'lshr_ln67_186' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2771 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_249)   --->   "%trunc_ln67_187 = trunc i32 %a_94" [sha256.cpp:67]   --->   Operation 2771 'trunc' 'trunc_ln67_187' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2772 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_249)   --->   "%or_ln67_186 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_187, i19 %lshr_ln67_186" [sha256.cpp:67]   --->   Operation 2772 'bitconcatenate' 'or_ln67_186' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2773 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_249)   --->   "%lshr_ln67_187 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_94, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2773 'partselect' 'lshr_ln67_187' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2774 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_249)   --->   "%trunc_ln67_188 = trunc i32 %a_94" [sha256.cpp:67]   --->   Operation 2774 'trunc' 'trunc_ln67_188' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2775 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_249)   --->   "%or_ln67_187 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_188, i10 %lshr_ln67_187" [sha256.cpp:67]   --->   Operation 2775 'bitconcatenate' 'or_ln67_187' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2776 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_249)   --->   "%xor_ln67_248 = xor i32 %or_ln67_185, i32 %or_ln67_186" [sha256.cpp:67]   --->   Operation 2776 'xor' 'xor_ln67_248' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2777 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_249 = xor i32 %xor_ln67_248, i32 %or_ln67_187" [sha256.cpp:67]   --->   Operation 2777 'xor' 'xor_ln67_249' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2778 [1/1] (1.14ns)   --->   "%e_95 = add i32 %t1_62, i32 %a_91" [sha256.cpp:71]   --->   Operation 2778 'add' 'e_95' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2779 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_253)   --->   "%lshr_ln66_188 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_95, i32 6, i32 31" [sha256.cpp:66]   --->   Operation 2779 'partselect' 'lshr_ln66_188' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2780 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_253)   --->   "%trunc_ln66_189 = trunc i32 %e_95" [sha256.cpp:66]   --->   Operation 2780 'trunc' 'trunc_ln66_189' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2781 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_253)   --->   "%or_ln66_188 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln66_189, i26 %lshr_ln66_188" [sha256.cpp:66]   --->   Operation 2781 'bitconcatenate' 'or_ln66_188' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2782 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_253)   --->   "%lshr_ln66_189 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_95, i32 11, i32 31" [sha256.cpp:66]   --->   Operation 2782 'partselect' 'lshr_ln66_189' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2783 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_253)   --->   "%trunc_ln66_190 = trunc i32 %e_95" [sha256.cpp:66]   --->   Operation 2783 'trunc' 'trunc_ln66_190' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2784 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_253)   --->   "%or_ln66_189 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln66_190, i21 %lshr_ln66_189" [sha256.cpp:66]   --->   Operation 2784 'bitconcatenate' 'or_ln66_189' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2785 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_253)   --->   "%lshr_ln66_190 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_95, i32 25, i32 31" [sha256.cpp:66]   --->   Operation 2785 'partselect' 'lshr_ln66_190' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2786 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_253)   --->   "%trunc_ln66_191 = trunc i32 %e_95" [sha256.cpp:66]   --->   Operation 2786 'trunc' 'trunc_ln66_191' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2787 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_253)   --->   "%or_ln66_190 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln66_191, i7 %lshr_ln66_190" [sha256.cpp:66]   --->   Operation 2787 'bitconcatenate' 'or_ln66_190' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2788 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_253)   --->   "%xor_ln66_252 = xor i32 %or_ln66_188, i32 %or_ln66_189" [sha256.cpp:66]   --->   Operation 2788 'xor' 'xor_ln66_252' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2789 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_253 = xor i32 %xor_ln66_252, i32 %or_ln66_190" [sha256.cpp:66]   --->   Operation 2789 'xor' 'xor_ln66_253' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2790 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_255)   --->   "%and_ln66_126 = and i32 %e_95, i32 %e_94" [sha256.cpp:66]   --->   Operation 2790 'and' 'and_ln66_126' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2791 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_255)   --->   "%xor_ln66_254 = xor i32 %e_95, i32 4294967295" [sha256.cpp:66]   --->   Operation 2791 'xor' 'xor_ln66_254' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2792 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_255)   --->   "%and_ln66_127 = and i32 %e_93, i32 %xor_ln66_254" [sha256.cpp:66]   --->   Operation 2792 'and' 'and_ln66_127' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2793 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_255 = xor i32 %and_ln66_126, i32 %and_ln66_127" [sha256.cpp:66]   --->   Operation 2793 'xor' 'xor_ln66_255' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2794 [1/2] (1.29ns)   --->   "%m_load_63 = load i6 %m_addr_63" [sha256.cpp:66]   --->   Operation 2794 'load' 'm_load_63' <Predicate = true> <Delay = 1.29> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 64> <RAM>
ST_53 : Operation 2795 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_252 = add i32 %m_load_63, i32 %xor_ln66_255" [sha256.cpp:66]   --->   Operation 2795 'add' 'add_ln66_252' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_53 : Operation 2796 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln66_253 = add i32 %xor_ln66_253, i32 3329325298" [sha256.cpp:66]   --->   Operation 2796 'add' 'add_ln66_253' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_53 : Operation 2797 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln66_254 = add i32 %add_ln66_253, i32 %e_92" [sha256.cpp:66]   --->   Operation 2797 'add' 'add_ln66_254' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_53 : Operation 2798 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_63 = add i32 %add_ln66_254, i32 %add_ln66_252" [sha256.cpp:66]   --->   Operation 2798 'add' 't1_63' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_53 : Operation 2799 [1/2] (0.73ns)   --->   "%ctx_load_31 = load i4 %ctx_addr_37" [sha256.cpp:80]   --->   Operation 2799 'load' 'ctx_load_31' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_53 : Operation 2800 [1/1] (0.00ns)   --->   "%trunc_ln80 = trunc i64 %ctx_load_31" [sha256.cpp:80]   --->   Operation 2800 'trunc' 'trunc_ln80' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2801 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ctx_load_31, i32 32, i32 63" [sha256.cpp:81]   --->   Operation 2801 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2802 [1/1] (1.14ns)   --->   "%add_ln82 = add i32 %a_94, i32 %trunc_ln82" [sha256.cpp:82]   --->   Operation 2802 'add' 'add_ln82' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2803 [1/1] (1.14ns)   --->   "%add_ln83 = add i32 %a_93, i32 %trunc_ln1" [sha256.cpp:83]   --->   Operation 2803 'add' 'add_ln83' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2804 [1/1] (0.00ns)   --->   "%or_ln83_3 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %add_ln83, i32 %add_ln82" [sha256.cpp:83]   --->   Operation 2804 'bitconcatenate' 'or_ln83_3' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2805 [1/1] (0.73ns)   --->   "%store_ln83 = store void @_ssdm_op_Write.bram.i64, i4 %ctx_addr_38, i64 %or_ln83_3, i8 255" [sha256.cpp:83]   --->   Operation 2805 'store' 'store_ln83' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_53 : Operation 2806 [2/2] (0.73ns)   --->   "%ctx_load_33 = load i4 %ctx_addr_39" [sha256.cpp:84]   --->   Operation 2806 'load' 'ctx_load_33' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_53 : Operation 2807 [1/2] (0.73ns)   --->   "%ctx_load_34 = load i4 %ctx_addr_40" [sha256.cpp:86]   --->   Operation 2807 'load' 'ctx_load_34' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_53 : Operation 2808 [1/1] (0.00ns)   --->   "%trunc_ln86 = trunc i64 %ctx_load_34" [sha256.cpp:86]   --->   Operation 2808 'trunc' 'trunc_ln86' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2809 [1/1] (1.14ns)   --->   "%add_ln86 = add i32 %e_94, i32 %trunc_ln86" [sha256.cpp:86]   --->   Operation 2809 'add' 'add_ln86' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 2810 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ctx_load_34, i32 32, i32 63" [sha256.cpp:87]   --->   Operation 2810 'partselect' 'trunc_ln3' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 2811 [1/1] (1.14ns)   --->   "%add_ln87 = add i32 %e_93, i32 %trunc_ln3" [sha256.cpp:87]   --->   Operation 2811 'add' 'add_ln87' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 54 <SV = 52> <Delay = 4.26>
ST_54 : Operation 2812 [1/1] (0.28ns)   --->   "%and_ln67_125 = and i32 %a_94, i32 %a_93" [sha256.cpp:67]   --->   Operation 2812 'and' 'and_ln67_125' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 2813 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_251)   --->   "%and_ln67_126 = and i32 %a_94, i32 %a_92" [sha256.cpp:67]   --->   Operation 2813 'and' 'and_ln67_126' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 2814 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_251)   --->   "%xor_ln67_250 = xor i32 %and_ln67_123, i32 %and_ln67_126" [sha256.cpp:67]   --->   Operation 2814 'xor' 'xor_ln67_250' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 2815 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_251 = xor i32 %xor_ln67_250, i32 %and_ln67_125" [sha256.cpp:67]   --->   Operation 2815 'xor' 'xor_ln67_251' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 2816 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln75_124 = add i32 %xor_ln67_251, i32 %t1_62" [sha256.cpp:75]   --->   Operation 2816 'add' 'add_ln75_124' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_54 : Operation 2817 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_95 = add i32 %add_ln75_124, i32 %xor_ln67_249" [sha256.cpp:75]   --->   Operation 2817 'add' 'a_95' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_54 : Operation 2818 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_2)   --->   "%lshr_ln67_188 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_95, i32 2, i32 31" [sha256.cpp:67]   --->   Operation 2818 'partselect' 'lshr_ln67_188' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 2819 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_2)   --->   "%trunc_ln67_189 = trunc i32 %a_95" [sha256.cpp:67]   --->   Operation 2819 'trunc' 'trunc_ln67_189' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 2820 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_2)   --->   "%or_ln67_188 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln67_189, i30 %lshr_ln67_188" [sha256.cpp:67]   --->   Operation 2820 'bitconcatenate' 'or_ln67_188' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 2821 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_2)   --->   "%lshr_ln67_189 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_95, i32 13, i32 31" [sha256.cpp:67]   --->   Operation 2821 'partselect' 'lshr_ln67_189' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 2822 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_2)   --->   "%trunc_ln67_190 = trunc i32 %a_95" [sha256.cpp:67]   --->   Operation 2822 'trunc' 'trunc_ln67_190' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 2823 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_2)   --->   "%or_ln67_189 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln67_190, i19 %lshr_ln67_189" [sha256.cpp:67]   --->   Operation 2823 'bitconcatenate' 'or_ln67_189' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 2824 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_2)   --->   "%lshr_ln67_190 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_95, i32 22, i32 31" [sha256.cpp:67]   --->   Operation 2824 'partselect' 'lshr_ln67_190' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 2825 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_2)   --->   "%trunc_ln67_191 = trunc i32 %a_95" [sha256.cpp:67]   --->   Operation 2825 'trunc' 'trunc_ln67_191' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 2826 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_2)   --->   "%or_ln67_190 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln67_191, i10 %lshr_ln67_190" [sha256.cpp:67]   --->   Operation 2826 'bitconcatenate' 'or_ln67_190' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 2827 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_2)   --->   "%xor_ln67_252 = xor i32 %or_ln67_188, i32 %or_ln67_189" [sha256.cpp:67]   --->   Operation 2827 'xor' 'xor_ln67_252' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 2828 [1/1] (0.00ns) (grouped into LUT with out node add_ln80_2)   --->   "%xor_ln67_253 = xor i32 %xor_ln67_252, i32 %or_ln67_190" [sha256.cpp:67]   --->   Operation 2828 'xor' 'xor_ln67_253' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 2829 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_255)   --->   "%xor_ln67_254 = xor i32 %a_94, i32 %a_93" [sha256.cpp:67]   --->   Operation 2829 'xor' 'xor_ln67_254' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 2830 [1/1] (0.00ns) (grouped into LUT with out node xor_ln67_255)   --->   "%and_ln67_127 = and i32 %a_95, i32 %xor_ln67_254" [sha256.cpp:67]   --->   Operation 2830 'and' 'and_ln67_127' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 2831 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln67_255 = xor i32 %and_ln67_127, i32 %and_ln67_125" [sha256.cpp:67]   --->   Operation 2831 'xor' 'xor_ln67_255' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 2832 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln80_1 = add i32 %xor_ln67_255, i32 %trunc_ln80" [sha256.cpp:80]   --->   Operation 2832 'add' 'add_ln80_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_54 : Operation 2833 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln80_2 = add i32 %xor_ln67_253, i32 %t1_63" [sha256.cpp:80]   --->   Operation 2833 'add' 'add_ln80_2' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 2834 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln80 = add i32 %add_ln80_2, i32 %add_ln80_1" [sha256.cpp:80]   --->   Operation 2834 'add' 'add_ln80' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_54 : Operation 2835 [1/1] (1.14ns)   --->   "%add_ln81 = add i32 %a_95, i32 %trunc_ln" [sha256.cpp:81]   --->   Operation 2835 'add' 'add_ln81' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 2836 [1/1] (0.00ns)   --->   "%or_ln81_3 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %add_ln81, i32 %add_ln80" [sha256.cpp:81]   --->   Operation 2836 'bitconcatenate' 'or_ln81_3' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 2837 [1/1] (0.73ns)   --->   "%store_ln81 = store void @_ssdm_op_Write.bram.i64, i4 %ctx_addr_37, i64 %or_ln81_3, i8 255" [sha256.cpp:81]   --->   Operation 2837 'store' 'store_ln81' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_54 : Operation 2838 [1/2] (0.73ns)   --->   "%ctx_load_33 = load i4 %ctx_addr_39" [sha256.cpp:84]   --->   Operation 2838 'load' 'ctx_load_33' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_54 : Operation 2839 [1/1] (0.00ns)   --->   "%trunc_ln84 = trunc i64 %ctx_load_33" [sha256.cpp:84]   --->   Operation 2839 'trunc' 'trunc_ln84' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 2840 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln84_1 = add i32 %trunc_ln84, i32 %t1_63" [sha256.cpp:84]   --->   Operation 2840 'add' 'add_ln84_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_54 : Operation 2841 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln84 = add i32 %add_ln84_1, i32 %a_92" [sha256.cpp:84]   --->   Operation 2841 'add' 'add_ln84' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_54 : Operation 2842 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ctx_load_33, i32 32, i32 63" [sha256.cpp:85]   --->   Operation 2842 'partselect' 'trunc_ln2' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 2843 [1/1] (1.14ns)   --->   "%add_ln85 = add i32 %e_95, i32 %trunc_ln2" [sha256.cpp:85]   --->   Operation 2843 'add' 'add_ln85' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 2844 [1/1] (0.00ns)   --->   "%or_ln87_3 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %add_ln87, i32 %add_ln86" [sha256.cpp:87]   --->   Operation 2844 'bitconcatenate' 'or_ln87_3' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 2845 [1/1] (0.73ns)   --->   "%store_ln87 = store void @_ssdm_op_Write.bram.i64, i4 %ctx_addr_40, i64 %or_ln87_3, i8 255" [sha256.cpp:87]   --->   Operation 2845 'store' 'store_ln87' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>

State 55 <SV = 53> <Delay = 0.73>
ST_55 : Operation 2846 [1/1] (0.00ns)   --->   "%or_ln85_3 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %add_ln85, i32 %add_ln84" [sha256.cpp:85]   --->   Operation 2846 'bitconcatenate' 'or_ln85_3' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 2847 [1/1] (0.73ns)   --->   "%store_ln85 = store void @_ssdm_op_Write.bram.i64, i4 %ctx_addr_39, i64 %or_ln85_3, i8 255" [sha256.cpp:85]   --->   Operation 2847 'store' 'store_ln85' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_55 : Operation 2848 [1/1] (0.00ns)   --->   "%ret_ln88 = ret" [sha256.cpp:88]   --->   Operation 2848 'ret' 'ret_ln88' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.73ns
The critical path consists of the following:
	'getelementptr' operation ('ctx_addr', sha256.cpp:50) [6]  (0 ns)
	'load' operation ('ctx_load', sha256.cpp:50) on array 'ctx' [7]  (0.73 ns)

 <State 2>: 2.03ns
The critical path consists of the following:
	'load' operation ('ctx_load', sha256.cpp:50) on array 'ctx' [7]  (0.73 ns)
	'store' operation ('store_ln50', sha256.cpp:50) of variable 'or_ln50_1', sha256.cpp:50 on array 'm', sha256.cpp:46 [14]  (1.3 ns)

 <State 3>: 1.3ns
The critical path consists of the following:
	'store' operation ('store_ln50', sha256.cpp:50) of variable 'or_ln50_4', sha256.cpp:50 on array 'm', sha256.cpp:46 [21]  (1.3 ns)

 <State 4>: 2.03ns
The critical path consists of the following:
	'load' operation ('ctx_load_20', sha256.cpp:50) on array 'ctx' [23]  (0.73 ns)
	'store' operation ('store_ln50', sha256.cpp:50) of variable 'or_ln50_7', sha256.cpp:50 on array 'm', sha256.cpp:46 [30]  (1.3 ns)

 <State 5>: 1.3ns
The critical path consists of the following:
	'store' operation ('store_ln50', sha256.cpp:50) of variable 'or_ln50_s', sha256.cpp:50 on array 'm', sha256.cpp:46 [37]  (1.3 ns)

 <State 6>: 2.03ns
The critical path consists of the following:
	'load' operation ('ctx_load_21', sha256.cpp:50) on array 'ctx' [39]  (0.73 ns)
	'store' operation ('store_ln50', sha256.cpp:50) of variable 'or_ln50_8', sha256.cpp:50 on array 'm', sha256.cpp:46 [46]  (1.3 ns)

 <State 7>: 1.3ns
The critical path consists of the following:
	'store' operation ('store_ln50', sha256.cpp:50) of variable 'or_ln50_2', sha256.cpp:50 on array 'm', sha256.cpp:46 [53]  (1.3 ns)

 <State 8>: 2.03ns
The critical path consists of the following:
	'load' operation ('ctx_load_22', sha256.cpp:50) on array 'ctx' [55]  (0.73 ns)
	'store' operation ('store_ln50', sha256.cpp:50) of variable 'or_ln50_3', sha256.cpp:50 on array 'm', sha256.cpp:46 [62]  (1.3 ns)

 <State 9>: 1.3ns
The critical path consists of the following:
	'store' operation ('store_ln50', sha256.cpp:50) of variable 'or_ln50_5', sha256.cpp:50 on array 'm', sha256.cpp:46 [69]  (1.3 ns)

 <State 10>: 2.03ns
The critical path consists of the following:
	'load' operation ('ctx_load_23', sha256.cpp:50) on array 'ctx' [71]  (0.73 ns)
	'store' operation ('store_ln50', sha256.cpp:50) of variable 'or_ln50_6', sha256.cpp:50 on array 'm', sha256.cpp:46 [78]  (1.3 ns)

 <State 11>: 1.3ns
The critical path consists of the following:
	'store' operation ('store_ln50', sha256.cpp:50) of variable 'or_ln50_9', sha256.cpp:50 on array 'm', sha256.cpp:46 [85]  (1.3 ns)

 <State 12>: 2.03ns
The critical path consists of the following:
	'load' operation ('ctx_load_24', sha256.cpp:50) on array 'ctx' [87]  (0.73 ns)
	'store' operation ('store_ln50', sha256.cpp:50) of variable 'or_ln50_10', sha256.cpp:50 on array 'm', sha256.cpp:46 [94]  (1.3 ns)

 <State 13>: 1.3ns
The critical path consists of the following:
	'store' operation ('store_ln50', sha256.cpp:50) of variable 'or_ln50_11', sha256.cpp:50 on array 'm', sha256.cpp:46 [101]  (1.3 ns)

 <State 14>: 2.03ns
The critical path consists of the following:
	'load' operation ('ctx_load_25', sha256.cpp:50) on array 'ctx' [103]  (0.73 ns)
	'store' operation ('store_ln50', sha256.cpp:50) of variable 'or_ln50_12', sha256.cpp:50 on array 'm', sha256.cpp:46 [110]  (1.3 ns)

 <State 15>: 1.3ns
The critical path consists of the following:
	'store' operation ('store_ln50', sha256.cpp:50) of variable 'or_ln50_13', sha256.cpp:50 on array 'm', sha256.cpp:46 [117]  (1.3 ns)

 <State 16>: 2.03ns
The critical path consists of the following:
	'load' operation ('ctx_load_26', sha256.cpp:50) on array 'ctx' [119]  (0.73 ns)
	'store' operation ('store_ln50', sha256.cpp:50) of variable 'or_ln50_14', sha256.cpp:50 on array 'm', sha256.cpp:46 [126]  (1.3 ns)

 <State 17>: 1.3ns
The critical path consists of the following:
	'store' operation ('store_ln50', sha256.cpp:50) of variable 'or_ln50_15', sha256.cpp:50 on array 'm', sha256.cpp:46 [133]  (1.3 ns)

 <State 18>: 2.14ns
The critical path consists of the following:
	'phi' operation ('i', sha256.cpp:51) with incoming values : ('add_ln51', sha256.cpp:51) [136]  (0 ns)
	'add' operation ('add_ln52', sha256.cpp:52) [146]  (0.84 ns)
	'getelementptr' operation ('m_addr_64', sha256.cpp:52) [148]  (0 ns)
	'load' operation ('m_load_64', sha256.cpp:52) on array 'm', sha256.cpp:46 [149]  (1.3 ns)

 <State 19>: 4.64ns
The critical path consists of the following:
	'load' operation ('m_load_64', sha256.cpp:52) on array 'm', sha256.cpp:46 [149]  (1.3 ns)
	'xor' operation ('xor_ln52', sha256.cpp:52) [158]  (0 ns)
	'xor' operation ('xor_ln52_1', sha256.cpp:52) [159]  (0 ns)
	'add' operation ('add_ln52_5', sha256.cpp:52) [183]  (1.14 ns)
	'add' operation ('add_ln52_6', sha256.cpp:52) [184]  (0.907 ns)
	'store' operation ('store_ln52', sha256.cpp:52) of variable 'add_ln52_6', sha256.cpp:52 on array 'm', sha256.cpp:46 [186]  (1.3 ns)

 <State 20>: 0.73ns
The critical path consists of the following:
	'getelementptr' operation ('ctx_addr_37', sha256.cpp:55) [189]  (0 ns)
	'load' operation ('ctx_load_27', sha256.cpp:55) on array 'ctx' [190]  (0.73 ns)

 <State 21>: 1.3ns
The critical path consists of the following:
	'load' operation ('m_load', sha256.cpp:66) on array 'm', sha256.cpp:46 [220]  (1.3 ns)

 <State 22>: 6.08ns
The critical path consists of the following:
	'load' operation ('ctx_load_29', sha256.cpp:59) on array 'ctx' [198]  (0.73 ns)
	'xor' operation ('xor_ln66', sha256.cpp:66) [214]  (0 ns)
	'xor' operation ('xor_ln66_1', sha256.cpp:66) [215]  (0.289 ns)
	'add' operation ('add_ln66_1', sha256.cpp:66) [222]  (0 ns)
	'add' operation ('add_ln66_2', sha256.cpp:66) [223]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [224]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [241]  (1.14 ns)
	'xor' operation ('xor_ln66_5', sha256.cpp:66) [254]  (0.289 ns)
	'add' operation ('add_ln66_5', sha256.cpp:66) [261]  (0 ns)
	'add' operation ('add_ln66_6', sha256.cpp:66) [262]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [263]  (0.907 ns)

 <State 23>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [279]  (1.14 ns)
	'xor' operation ('xor_ln66_8', sha256.cpp:66) [291]  (0 ns)
	'xor' operation ('xor_ln66_9', sha256.cpp:66) [292]  (0.289 ns)
	'add' operation ('add_ln66_9', sha256.cpp:66) [299]  (0 ns)
	'add' operation ('add_ln66_10', sha256.cpp:66) [300]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [301]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [317]  (1.14 ns)
	'xor' operation ('xor_ln66_12', sha256.cpp:66) [329]  (0 ns)
	'xor' operation ('xor_ln66_13', sha256.cpp:66) [330]  (0.289 ns)
	'add' operation ('add_ln66_13', sha256.cpp:66) [337]  (0 ns)
	'add' operation ('add_ln66_14', sha256.cpp:66) [338]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [339]  (0.907 ns)

 <State 24>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [355]  (1.14 ns)
	'xor' operation ('xor_ln66_16', sha256.cpp:66) [367]  (0 ns)
	'xor' operation ('xor_ln66_17', sha256.cpp:66) [368]  (0.289 ns)
	'add' operation ('add_ln66_17', sha256.cpp:66) [375]  (0 ns)
	'add' operation ('add_ln66_18', sha256.cpp:66) [376]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [377]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [393]  (1.14 ns)
	'xor' operation ('xor_ln66_21', sha256.cpp:66) [406]  (0.289 ns)
	'add' operation ('add_ln66_21', sha256.cpp:66) [413]  (0 ns)
	'add' operation ('add_ln66_22', sha256.cpp:66) [414]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [415]  (0.907 ns)

 <State 25>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [431]  (1.14 ns)
	'and' operation ('and_ln66_12', sha256.cpp:66) [445]  (0 ns)
	'xor' operation ('xor_ln66_27', sha256.cpp:66) [448]  (0.289 ns)
	'add' operation ('add_ln66_26', sha256.cpp:66) [452]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [453]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [469]  (1.14 ns)
	'xor' operation ('xor_ln66_30', sha256.cpp:66) [484]  (0 ns)
	'and' operation ('and_ln66_15', sha256.cpp:66) [485]  (0 ns)
	'xor' operation ('xor_ln66_31', sha256.cpp:66) [486]  (0.289 ns)
	'add' operation ('add_ln66_30', sha256.cpp:66) [490]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [491]  (0.907 ns)

 <State 26>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [507]  (1.14 ns)
	'xor' operation ('xor_ln66_33', sha256.cpp:66) [520]  (0.289 ns)
	'add' operation ('add_ln66_33', sha256.cpp:66) [527]  (0 ns)
	'add' operation ('add_ln66_34', sha256.cpp:66) [528]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [529]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [545]  (1.14 ns)
	'xor' operation ('xor_ln66_37', sha256.cpp:66) [558]  (0.289 ns)
	'add' operation ('add_ln66_37', sha256.cpp:66) [565]  (0 ns)
	'add' operation ('add_ln66_38', sha256.cpp:66) [566]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [567]  (0.907 ns)

 <State 27>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [583]  (1.14 ns)
	'xor' operation ('xor_ln66_41', sha256.cpp:66) [596]  (0.289 ns)
	'add' operation ('add_ln66_41', sha256.cpp:66) [603]  (0 ns)
	'add' operation ('add_ln66_42', sha256.cpp:66) [604]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [605]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [621]  (1.14 ns)
	'xor' operation ('xor_ln66_44', sha256.cpp:66) [633]  (0 ns)
	'xor' operation ('xor_ln66_45', sha256.cpp:66) [634]  (0.289 ns)
	'add' operation ('add_ln66_45', sha256.cpp:66) [641]  (0 ns)
	'add' operation ('add_ln66_46', sha256.cpp:66) [642]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [643]  (0.907 ns)

 <State 28>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [659]  (1.14 ns)
	'xor' operation ('xor_ln66_49', sha256.cpp:66) [672]  (0.289 ns)
	'add' operation ('add_ln66_49', sha256.cpp:66) [679]  (0 ns)
	'add' operation ('add_ln66_50', sha256.cpp:66) [680]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [681]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [697]  (1.14 ns)
	'xor' operation ('xor_ln66_53', sha256.cpp:66) [710]  (0.289 ns)
	'add' operation ('add_ln66_53', sha256.cpp:66) [717]  (0 ns)
	'add' operation ('add_ln66_54', sha256.cpp:66) [718]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [719]  (0.907 ns)

 <State 29>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [735]  (1.14 ns)
	'and' operation ('and_ln66_28', sha256.cpp:66) [749]  (0 ns)
	'xor' operation ('xor_ln66_59', sha256.cpp:66) [752]  (0.289 ns)
	'add' operation ('add_ln66_58', sha256.cpp:66) [756]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [757]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [773]  (1.14 ns)
	'xor' operation ('xor_ln66_60', sha256.cpp:66) [785]  (0 ns)
	'xor' operation ('xor_ln66_61', sha256.cpp:66) [786]  (0.289 ns)
	'add' operation ('add_ln66_61', sha256.cpp:66) [793]  (0 ns)
	'add' operation ('add_ln66_62', sha256.cpp:66) [794]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [795]  (0.907 ns)

 <State 30>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [811]  (1.14 ns)
	'xor' operation ('xor_ln66_65', sha256.cpp:66) [824]  (0.289 ns)
	'add' operation ('add_ln66_65', sha256.cpp:66) [832]  (0 ns)
	'add' operation ('add_ln66_66', sha256.cpp:66) [833]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [834]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [850]  (1.14 ns)
	'xor' operation ('xor_ln66_69', sha256.cpp:66) [863]  (0.289 ns)
	'add' operation ('add_ln66_69', sha256.cpp:66) [871]  (0 ns)
	'add' operation ('add_ln66_70', sha256.cpp:66) [872]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [873]  (0.907 ns)

 <State 31>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [889]  (1.14 ns)
	'xor' operation ('xor_ln66_73', sha256.cpp:66) [902]  (0.289 ns)
	'add' operation ('add_ln66_73', sha256.cpp:66) [910]  (0 ns)
	'add' operation ('add_ln66_74', sha256.cpp:66) [911]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [912]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [928]  (1.14 ns)
	'xor' operation ('xor_ln66_77', sha256.cpp:66) [941]  (0.289 ns)
	'add' operation ('add_ln66_77', sha256.cpp:66) [949]  (0 ns)
	'add' operation ('add_ln66_78', sha256.cpp:66) [950]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [951]  (0.907 ns)

 <State 32>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [967]  (1.14 ns)
	'xor' operation ('xor_ln66_80', sha256.cpp:66) [979]  (0 ns)
	'xor' operation ('xor_ln66_81', sha256.cpp:66) [980]  (0.289 ns)
	'add' operation ('add_ln66_81', sha256.cpp:66) [988]  (0 ns)
	'add' operation ('add_ln66_82', sha256.cpp:66) [989]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [990]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [1006]  (1.14 ns)
	'xor' operation ('xor_ln66_84', sha256.cpp:66) [1018]  (0 ns)
	'xor' operation ('xor_ln66_85', sha256.cpp:66) [1019]  (0.289 ns)
	'add' operation ('add_ln66_85', sha256.cpp:66) [1027]  (0 ns)
	'add' operation ('add_ln66_86', sha256.cpp:66) [1028]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1029]  (0.907 ns)

 <State 33>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [1045]  (1.14 ns)
	'xor' operation ('xor_ln66_88', sha256.cpp:66) [1057]  (0 ns)
	'xor' operation ('xor_ln66_89', sha256.cpp:66) [1058]  (0.289 ns)
	'add' operation ('add_ln66_89', sha256.cpp:66) [1066]  (0 ns)
	'add' operation ('add_ln66_90', sha256.cpp:66) [1067]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1068]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [1084]  (1.14 ns)
	'xor' operation ('xor_ln66_92', sha256.cpp:66) [1096]  (0 ns)
	'xor' operation ('xor_ln66_93', sha256.cpp:66) [1097]  (0.289 ns)
	'add' operation ('add_ln66_93', sha256.cpp:66) [1105]  (0 ns)
	'add' operation ('add_ln66_94', sha256.cpp:66) [1106]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1107]  (0.907 ns)

 <State 34>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [1123]  (1.14 ns)
	'and' operation ('and_ln66_48', sha256.cpp:66) [1137]  (0 ns)
	'xor' operation ('xor_ln66_99', sha256.cpp:66) [1140]  (0.289 ns)
	'add' operation ('add_ln66_98', sha256.cpp:66) [1145]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1146]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [1162]  (1.14 ns)
	'xor' operation ('xor_ln66_101', sha256.cpp:66) [1175]  (0.289 ns)
	'add' operation ('add_ln66_101', sha256.cpp:66) [1183]  (0 ns)
	'add' operation ('add_ln66_102', sha256.cpp:66) [1184]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1185]  (0.907 ns)

 <State 35>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [1201]  (1.14 ns)
	'and' operation ('and_ln66_52', sha256.cpp:66) [1215]  (0 ns)
	'xor' operation ('xor_ln66_107', sha256.cpp:66) [1218]  (0.289 ns)
	'add' operation ('add_ln66_106', sha256.cpp:66) [1223]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1224]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [1240]  (1.14 ns)
	'and' operation ('and_ln66_54', sha256.cpp:66) [1254]  (0 ns)
	'xor' operation ('xor_ln66_111', sha256.cpp:66) [1257]  (0.289 ns)
	'add' operation ('add_ln66_110', sha256.cpp:66) [1262]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1263]  (0.907 ns)

 <State 36>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [1279]  (1.14 ns)
	'xor' operation ('xor_ln66_113', sha256.cpp:66) [1292]  (0.289 ns)
	'add' operation ('add_ln66_113', sha256.cpp:66) [1300]  (0 ns)
	'add' operation ('add_ln66_114', sha256.cpp:66) [1301]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1302]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [1318]  (1.14 ns)
	'xor' operation ('xor_ln66_117', sha256.cpp:66) [1331]  (0.289 ns)
	'add' operation ('add_ln66_117', sha256.cpp:66) [1339]  (0 ns)
	'add' operation ('add_ln66_118', sha256.cpp:66) [1340]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1341]  (0.907 ns)

 <State 37>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [1357]  (1.14 ns)
	'xor' operation ('xor_ln66_121', sha256.cpp:66) [1370]  (0.289 ns)
	'add' operation ('add_ln66_121', sha256.cpp:66) [1378]  (0 ns)
	'add' operation ('add_ln66_122', sha256.cpp:66) [1379]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1380]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [1396]  (1.14 ns)
	'xor' operation ('xor_ln66_124', sha256.cpp:66) [1408]  (0 ns)
	'xor' operation ('xor_ln66_125', sha256.cpp:66) [1409]  (0.289 ns)
	'add' operation ('add_ln66_125', sha256.cpp:66) [1417]  (0 ns)
	'add' operation ('add_ln66_126', sha256.cpp:66) [1418]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1419]  (0.907 ns)

 <State 38>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [1435]  (1.14 ns)
	'xor' operation ('xor_ln66_128', sha256.cpp:66) [1447]  (0 ns)
	'xor' operation ('xor_ln66_129', sha256.cpp:66) [1448]  (0.289 ns)
	'add' operation ('add_ln66_129', sha256.cpp:66) [1456]  (0 ns)
	'add' operation ('add_ln66_130', sha256.cpp:66) [1457]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1458]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [1474]  (1.14 ns)
	'xor' operation ('xor_ln66_132', sha256.cpp:66) [1486]  (0 ns)
	'xor' operation ('xor_ln66_133', sha256.cpp:66) [1487]  (0.289 ns)
	'add' operation ('add_ln66_133', sha256.cpp:66) [1495]  (0 ns)
	'add' operation ('add_ln66_134', sha256.cpp:66) [1496]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1497]  (0.907 ns)

 <State 39>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [1513]  (1.14 ns)
	'xor' operation ('xor_ln66_136', sha256.cpp:66) [1525]  (0 ns)
	'xor' operation ('xor_ln66_137', sha256.cpp:66) [1526]  (0.289 ns)
	'add' operation ('add_ln66_137', sha256.cpp:66) [1534]  (0 ns)
	'add' operation ('add_ln66_138', sha256.cpp:66) [1535]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1536]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [1552]  (1.14 ns)
	'xor' operation ('xor_ln66_141', sha256.cpp:66) [1565]  (0.289 ns)
	'add' operation ('add_ln66_141', sha256.cpp:66) [1573]  (0 ns)
	'add' operation ('add_ln66_142', sha256.cpp:66) [1574]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1575]  (0.907 ns)

 <State 40>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [1591]  (1.14 ns)
	'xor' operation ('xor_ln66_144', sha256.cpp:66) [1603]  (0 ns)
	'xor' operation ('xor_ln66_145', sha256.cpp:66) [1604]  (0.289 ns)
	'add' operation ('add_ln66_145', sha256.cpp:66) [1612]  (0 ns)
	'add' operation ('add_ln66_146', sha256.cpp:66) [1613]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1614]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [1630]  (1.14 ns)
	'xor' operation ('xor_ln66_148', sha256.cpp:66) [1642]  (0 ns)
	'xor' operation ('xor_ln66_149', sha256.cpp:66) [1643]  (0.289 ns)
	'add' operation ('add_ln66_149', sha256.cpp:66) [1651]  (0 ns)
	'add' operation ('add_ln66_150', sha256.cpp:66) [1652]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1653]  (0.907 ns)

 <State 41>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [1669]  (1.14 ns)
	'and' operation ('and_ln66_76', sha256.cpp:66) [1683]  (0 ns)
	'xor' operation ('xor_ln66_155', sha256.cpp:66) [1686]  (0.289 ns)
	'add' operation ('add_ln66_154', sha256.cpp:66) [1691]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1692]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [1708]  (1.14 ns)
	'xor' operation ('xor_ln66_156', sha256.cpp:66) [1720]  (0 ns)
	'xor' operation ('xor_ln66_157', sha256.cpp:66) [1721]  (0.289 ns)
	'add' operation ('add_ln66_157', sha256.cpp:66) [1729]  (0 ns)
	'add' operation ('add_ln66_158', sha256.cpp:66) [1730]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1731]  (0.907 ns)

 <State 42>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [1747]  (1.14 ns)
	'xor' operation ('xor_ln66_162', sha256.cpp:66) [1762]  (0 ns)
	'and' operation ('and_ln66_81', sha256.cpp:66) [1763]  (0 ns)
	'xor' operation ('xor_ln66_163', sha256.cpp:66) [1764]  (0.289 ns)
	'add' operation ('add_ln66_162', sha256.cpp:66) [1769]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1770]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [1786]  (1.14 ns)
	'xor' operation ('xor_ln66_164', sha256.cpp:66) [1798]  (0 ns)
	'xor' operation ('xor_ln66_165', sha256.cpp:66) [1799]  (0.289 ns)
	'add' operation ('add_ln66_165', sha256.cpp:66) [1807]  (0 ns)
	'add' operation ('add_ln66_166', sha256.cpp:66) [1808]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1809]  (0.907 ns)

 <State 43>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [1825]  (1.14 ns)
	'xor' operation ('xor_ln66_169', sha256.cpp:66) [1838]  (0.289 ns)
	'add' operation ('add_ln66_169', sha256.cpp:66) [1846]  (0 ns)
	'add' operation ('add_ln66_170', sha256.cpp:66) [1847]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1848]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [1864]  (1.14 ns)
	'xor' operation ('xor_ln66_173', sha256.cpp:66) [1877]  (0.289 ns)
	'add' operation ('add_ln66_173', sha256.cpp:66) [1885]  (0 ns)
	'add' operation ('add_ln66_174', sha256.cpp:66) [1886]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1887]  (0.907 ns)

 <State 44>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [1903]  (1.14 ns)
	'xor' operation ('xor_ln66_176', sha256.cpp:66) [1915]  (0 ns)
	'xor' operation ('xor_ln66_177', sha256.cpp:66) [1916]  (0.289 ns)
	'add' operation ('add_ln66_177', sha256.cpp:66) [1924]  (0 ns)
	'add' operation ('add_ln66_178', sha256.cpp:66) [1925]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1926]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [1942]  (1.14 ns)
	'xor' operation ('xor_ln66_180', sha256.cpp:66) [1954]  (0 ns)
	'xor' operation ('xor_ln66_181', sha256.cpp:66) [1955]  (0.289 ns)
	'add' operation ('add_ln66_181', sha256.cpp:66) [1963]  (0 ns)
	'add' operation ('add_ln66_182', sha256.cpp:66) [1964]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [1965]  (0.907 ns)

 <State 45>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [1981]  (1.14 ns)
	'xor' operation ('xor_ln66_185', sha256.cpp:66) [1994]  (0.289 ns)
	'add' operation ('add_ln66_185', sha256.cpp:66) [2002]  (0 ns)
	'add' operation ('add_ln66_186', sha256.cpp:66) [2003]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [2004]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [2020]  (1.14 ns)
	'xor' operation ('xor_ln66_189', sha256.cpp:66) [2033]  (0.289 ns)
	'add' operation ('add_ln66_189', sha256.cpp:66) [2041]  (0 ns)
	'add' operation ('add_ln66_190', sha256.cpp:66) [2042]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [2043]  (0.907 ns)

 <State 46>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [2059]  (1.14 ns)
	'xor' operation ('xor_ln66_192', sha256.cpp:66) [2071]  (0 ns)
	'xor' operation ('xor_ln66_193', sha256.cpp:66) [2072]  (0.289 ns)
	'add' operation ('add_ln66_193', sha256.cpp:66) [2080]  (0 ns)
	'add' operation ('add_ln66_194', sha256.cpp:66) [2081]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [2082]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [2098]  (1.14 ns)
	'xor' operation ('xor_ln66_197', sha256.cpp:66) [2111]  (0.289 ns)
	'add' operation ('add_ln66_197', sha256.cpp:66) [2119]  (0 ns)
	'add' operation ('add_ln66_198', sha256.cpp:66) [2120]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [2121]  (0.907 ns)

 <State 47>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [2137]  (1.14 ns)
	'xor' operation ('xor_ln66_200', sha256.cpp:66) [2149]  (0 ns)
	'xor' operation ('xor_ln66_201', sha256.cpp:66) [2150]  (0.289 ns)
	'add' operation ('add_ln66_201', sha256.cpp:66) [2158]  (0 ns)
	'add' operation ('add_ln66_202', sha256.cpp:66) [2159]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [2160]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [2176]  (1.14 ns)
	'xor' operation ('xor_ln66_204', sha256.cpp:66) [2188]  (0 ns)
	'xor' operation ('xor_ln66_205', sha256.cpp:66) [2189]  (0.289 ns)
	'add' operation ('add_ln66_205', sha256.cpp:66) [2197]  (0 ns)
	'add' operation ('add_ln66_206', sha256.cpp:66) [2198]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [2199]  (0.907 ns)

 <State 48>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [2215]  (1.14 ns)
	'xor' operation ('xor_ln66_208', sha256.cpp:66) [2227]  (0 ns)
	'xor' operation ('xor_ln66_209', sha256.cpp:66) [2228]  (0.289 ns)
	'add' operation ('add_ln66_209', sha256.cpp:66) [2236]  (0 ns)
	'add' operation ('add_ln66_210', sha256.cpp:66) [2237]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [2238]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [2254]  (1.14 ns)
	'xor' operation ('xor_ln66_213', sha256.cpp:66) [2267]  (0.289 ns)
	'add' operation ('add_ln66_213', sha256.cpp:66) [2275]  (0 ns)
	'add' operation ('add_ln66_214', sha256.cpp:66) [2276]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [2277]  (0.907 ns)

 <State 49>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [2293]  (1.14 ns)
	'xor' operation ('xor_ln66_216', sha256.cpp:66) [2305]  (0 ns)
	'xor' operation ('xor_ln66_217', sha256.cpp:66) [2306]  (0.289 ns)
	'add' operation ('add_ln66_217', sha256.cpp:66) [2314]  (0 ns)
	'add' operation ('add_ln66_218', sha256.cpp:66) [2315]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [2316]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [2332]  (1.14 ns)
	'xor' operation ('xor_ln66_221', sha256.cpp:66) [2345]  (0.289 ns)
	'add' operation ('add_ln66_221', sha256.cpp:66) [2353]  (0 ns)
	'add' operation ('add_ln66_222', sha256.cpp:66) [2354]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [2355]  (0.907 ns)

 <State 50>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [2371]  (1.14 ns)
	'xor' operation ('xor_ln66_224', sha256.cpp:66) [2383]  (0 ns)
	'xor' operation ('xor_ln66_225', sha256.cpp:66) [2384]  (0.289 ns)
	'add' operation ('add_ln66_225', sha256.cpp:66) [2392]  (0 ns)
	'add' operation ('add_ln66_226', sha256.cpp:66) [2393]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [2394]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [2410]  (1.14 ns)
	'xor' operation ('xor_ln66_228', sha256.cpp:66) [2422]  (0 ns)
	'xor' operation ('xor_ln66_229', sha256.cpp:66) [2423]  (0.289 ns)
	'add' operation ('add_ln66_229', sha256.cpp:66) [2431]  (0 ns)
	'add' operation ('add_ln66_230', sha256.cpp:66) [2432]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [2433]  (0.907 ns)

 <State 51>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [2449]  (1.14 ns)
	'xor' operation ('xor_ln66_233', sha256.cpp:66) [2462]  (0.289 ns)
	'add' operation ('add_ln66_233', sha256.cpp:66) [2470]  (0 ns)
	'add' operation ('add_ln66_234', sha256.cpp:66) [2471]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [2472]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [2488]  (1.14 ns)
	'xor' operation ('xor_ln66_238', sha256.cpp:66) [2503]  (0 ns)
	'and' operation ('and_ln66_119', sha256.cpp:66) [2504]  (0 ns)
	'xor' operation ('xor_ln66_239', sha256.cpp:66) [2505]  (0.289 ns)
	'add' operation ('add_ln66_238', sha256.cpp:66) [2510]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [2511]  (0.907 ns)

 <State 52>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [2527]  (1.14 ns)
	'xor' operation ('xor_ln66_241', sha256.cpp:66) [2540]  (0.289 ns)
	'add' operation ('add_ln66_241', sha256.cpp:66) [2548]  (0 ns)
	'add' operation ('add_ln66_242', sha256.cpp:66) [2549]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [2550]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [2566]  (1.14 ns)
	'and' operation ('and_ln66_122', sha256.cpp:66) [2580]  (0 ns)
	'xor' operation ('xor_ln66_247', sha256.cpp:66) [2583]  (0.289 ns)
	'add' operation ('add_ln66_246', sha256.cpp:66) [2588]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [2589]  (0.907 ns)

 <State 53>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:71) [2605]  (1.14 ns)
	'and' operation ('and_ln66_124', sha256.cpp:66) [2619]  (0 ns)
	'xor' operation ('xor_ln66_251', sha256.cpp:66) [2622]  (0.289 ns)
	'add' operation ('add_ln66_250', sha256.cpp:66) [2627]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [2628]  (0.907 ns)
	'add' operation ('e', sha256.cpp:71) [2644]  (1.14 ns)
	'xor' operation ('xor_ln66_252', sha256.cpp:66) [2656]  (0 ns)
	'xor' operation ('xor_ln66_253', sha256.cpp:66) [2657]  (0.289 ns)
	'add' operation ('add_ln66_253', sha256.cpp:66) [2665]  (0 ns)
	'add' operation ('add_ln66_254', sha256.cpp:66) [2666]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:66) [2667]  (0.907 ns)

 <State 54>: 4.26ns
The critical path consists of the following:
	'and' operation ('and_ln67_125', sha256.cpp:67) [2640]  (0.289 ns)
	'xor' operation ('xor_ln67_251', sha256.cpp:67) [2643]  (0.289 ns)
	'add' operation ('add_ln75_124', sha256.cpp:75) [2645]  (0 ns)
	'add' operation ('a', sha256.cpp:75) [2646]  (0.907 ns)
	'xor' operation ('xor_ln67_252', sha256.cpp:67) [2677]  (0 ns)
	'xor' operation ('xor_ln67_253', sha256.cpp:67) [2678]  (0 ns)
	'add' operation ('add_ln80_2', sha256.cpp:80) [2685]  (1.14 ns)
	'add' operation ('add_ln80', sha256.cpp:80) [2686]  (0.907 ns)
	'store' operation ('store_ln81', sha256.cpp:81) of constant <constant:_ssdm_op_Write.bram.i64> on array 'ctx' [2690]  (0.73 ns)

 <State 55>: 0.73ns
The critical path consists of the following:
	'store' operation ('store_ln85', sha256.cpp:85) of constant <constant:_ssdm_op_Write.bram.i64> on array 'ctx' [2705]  (0.73 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
