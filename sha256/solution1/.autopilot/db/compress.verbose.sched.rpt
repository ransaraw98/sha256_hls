

================================================================
== Vitis HLS Report for 'compress'
================================================================
* Date:           Mon May 24 20:11:20 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        sha256
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.289 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       42|       42|  0.420 us|  0.420 us|   42|   42|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 43
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.73>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%ctx_addr_30 = getelementptr i64 %ctx, i64 0, i64 1" [sha256.cpp:49]   --->   Operation 44 'getelementptr' 'ctx_addr_30' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [2/2] (0.73ns)   --->   "%ctx_load_20 = load i4 %ctx_addr_30" [sha256.cpp:49]   --->   Operation 45 'load' 'ctx_load_20' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>

State 2 <SV = 1> <Delay = 0.73>
ST_2 : Operation 46 [1/2] (0.73ns)   --->   "%ctx_load_20 = load i4 %ctx_addr_30" [sha256.cpp:49]   --->   Operation 46 'load' 'ctx_load_20' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%trunc_ln49_8 = trunc i64 %ctx_load_20" [sha256.cpp:49]   --->   Operation 47 'trunc' 'trunc_ln49_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%trunc_ln49_1 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_20, i32 16, i32 23" [sha256.cpp:49]   --->   Operation 48 'partselect' 'trunc_ln49_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%trunc_ln49_2 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_20, i32 24, i32 31" [sha256.cpp:49]   --->   Operation 49 'partselect' 'trunc_ln49_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_6 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_20, i32 8, i32 15" [sha256.cpp:49]   --->   Operation 50 'partselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_10 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_20, i32 32, i32 39" [sha256.cpp:49]   --->   Operation 51 'partselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_11 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_20, i32 40, i32 47" [sha256.cpp:49]   --->   Operation 52 'partselect' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%trunc_ln49_4 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_20, i32 48, i32 55" [sha256.cpp:49]   --->   Operation 53 'partselect' 'trunc_ln49_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%trunc_ln49_5 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_20, i32 56, i32 63" [sha256.cpp:49]   --->   Operation 54 'partselect' 'trunc_ln49_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%ctx_addr_32 = getelementptr i64 %ctx, i64 0, i64 3" [sha256.cpp:49]   --->   Operation 55 'getelementptr' 'ctx_addr_32' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [2/2] (0.73ns)   --->   "%ctx_load_22 = load i4 %ctx_addr_32" [sha256.cpp:49]   --->   Operation 56 'load' 'ctx_load_22' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>

State 3 <SV = 2> <Delay = 0.73>
ST_3 : Operation 57 [1/2] (0.73ns)   --->   "%ctx_load_22 = load i4 %ctx_addr_32" [sha256.cpp:49]   --->   Operation 57 'load' 'ctx_load_22' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%trunc_ln49_14 = trunc i64 %ctx_load_22" [sha256.cpp:49]   --->   Operation 58 'trunc' 'trunc_ln49_14' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%trunc_ln49_15 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_22, i32 16, i32 23" [sha256.cpp:49]   --->   Operation 59 'partselect' 'trunc_ln49_15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%trunc_ln49_16 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_22, i32 24, i32 31" [sha256.cpp:49]   --->   Operation 60 'partselect' 'trunc_ln49_16' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_s = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_22, i32 8, i32 15" [sha256.cpp:49]   --->   Operation 61 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_14 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_22, i32 32, i32 39" [sha256.cpp:49]   --->   Operation 62 'partselect' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_15 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_22, i32 40, i32 47" [sha256.cpp:49]   --->   Operation 63 'partselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%trunc_ln49_17 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_22, i32 48, i32 55" [sha256.cpp:49]   --->   Operation 64 'partselect' 'trunc_ln49_17' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%trunc_ln49_18 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_22, i32 56, i32 63" [sha256.cpp:49]   --->   Operation 65 'partselect' 'trunc_ln49_18' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%ctx_addr_34 = getelementptr i64 %ctx, i64 0, i64 5" [sha256.cpp:49]   --->   Operation 66 'getelementptr' 'ctx_addr_34' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 67 [2/2] (0.73ns)   --->   "%ctx_load_24 = load i4 %ctx_addr_34" [sha256.cpp:49]   --->   Operation 67 'load' 'ctx_load_24' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>

State 4 <SV = 3> <Delay = 0.73>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%ctx_addr = getelementptr i64 %ctx, i64 0, i64 0" [sha256.cpp:49]   --->   Operation 68 'getelementptr' 'ctx_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 69 [2/2] (0.73ns)   --->   "%ctx_load = load i4 %ctx_addr" [sha256.cpp:49]   --->   Operation 69 'load' 'ctx_load' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_4 : Operation 70 [1/2] (0.73ns)   --->   "%ctx_load_24 = load i4 %ctx_addr_34" [sha256.cpp:49]   --->   Operation 70 'load' 'ctx_load_24' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%trunc_ln49_24 = trunc i64 %ctx_load_24" [sha256.cpp:49]   --->   Operation 71 'trunc' 'trunc_ln49_24' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "%trunc_ln49_25 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_24, i32 16, i32 23" [sha256.cpp:49]   --->   Operation 72 'partselect' 'trunc_ln49_25' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "%trunc_ln49_26 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_24, i32 24, i32 31" [sha256.cpp:49]   --->   Operation 73 'partselect' 'trunc_ln49_26' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_24, i32 8, i32 15" [sha256.cpp:49]   --->   Operation 74 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%tmp_18 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_24, i32 32, i32 39" [sha256.cpp:49]   --->   Operation 75 'partselect' 'tmp_18' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_19 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_24, i32 40, i32 47" [sha256.cpp:49]   --->   Operation 76 'partselect' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%trunc_ln49_27 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_24, i32 48, i32 55" [sha256.cpp:49]   --->   Operation 77 'partselect' 'trunc_ln49_27' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%trunc_ln49_28 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_24, i32 56, i32 63" [sha256.cpp:49]   --->   Operation 78 'partselect' 'trunc_ln49_28' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%ctx_addr_36 = getelementptr i64 %ctx, i64 0, i64 7" [sha256.cpp:49]   --->   Operation 79 'getelementptr' 'ctx_addr_36' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 80 [2/2] (0.73ns)   --->   "%ctx_load_26 = load i4 %ctx_addr_36" [sha256.cpp:49]   --->   Operation 80 'load' 'ctx_load_26' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>

State 5 <SV = 4> <Delay = 1.87>
ST_5 : Operation 81 [1/2] (0.73ns)   --->   "%ctx_load = load i4 %ctx_addr" [sha256.cpp:49]   --->   Operation 81 'load' 'ctx_load' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_5 : Operation 82 [1/1] (0.00ns)   --->   "%trunc_ln49 = trunc i64 %ctx_load" [sha256.cpp:49]   --->   Operation 82 'trunc' 'trunc_ln49' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 83 [1/1] (0.00ns)   --->   "%trunc_ln49_s = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load, i32 8, i32 15" [sha256.cpp:49]   --->   Operation 83 'partselect' 'trunc_ln49_s' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 84 [1/1] (0.00ns)   --->   "%tmp = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load, i32 16, i32 23" [sha256.cpp:49]   --->   Operation 84 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 85 [1/1] (0.00ns)   --->   "%trunc_ln49_3 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load, i32 24, i32 31" [sha256.cpp:49]   --->   Operation 85 'partselect' 'trunc_ln49_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_7 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load, i32 32, i32 39" [sha256.cpp:49]   --->   Operation 86 'partselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 87 [1/1] (0.00ns)   --->   "%tmp_8 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load, i32 40, i32 47" [sha256.cpp:49]   --->   Operation 87 'partselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 88 [1/1] (0.00ns)   --->   "%trunc_ln49_6 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load, i32 48, i32 55" [sha256.cpp:49]   --->   Operation 88 'partselect' 'trunc_ln49_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 89 [1/1] (0.00ns)   --->   "%trunc_ln49_7 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load, i32 56, i32 63" [sha256.cpp:49]   --->   Operation 89 'partselect' 'trunc_ln49_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 90 [1/1] (0.00ns)   --->   "%ctx_addr_31 = getelementptr i64 %ctx, i64 0, i64 2" [sha256.cpp:49]   --->   Operation 90 'getelementptr' 'ctx_addr_31' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 91 [2/2] (0.73ns)   --->   "%ctx_load_21 = load i4 %ctx_addr_31" [sha256.cpp:49]   --->   Operation 91 'load' 'ctx_load_21' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_5 : Operation 92 [1/2] (0.73ns)   --->   "%ctx_load_26 = load i4 %ctx_addr_36" [sha256.cpp:49]   --->   Operation 92 'load' 'ctx_load_26' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_5 : Operation 93 [1/1] (0.00ns)   --->   "%trunc_ln49_34 = trunc i64 %ctx_load_26" [sha256.cpp:49]   --->   Operation 93 'trunc' 'trunc_ln49_34' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_22 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_26, i32 16, i32 23" [sha256.cpp:49]   --->   Operation 94 'partselect' 'tmp_22' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 95 [1/1] (0.00ns)   --->   "%tmp_4 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_26, i32 8, i32 15" [sha256.cpp:49]   --->   Operation 95 'partselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 96 [1/1] (0.00ns)   --->   "%trunc_ln49_35 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_26, i32 24, i32 31" [sha256.cpp:49]   --->   Operation 96 'partselect' 'trunc_ln49_35' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 97 [1/1] (0.00ns)   --->   "%tmp_23 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_26, i32 32, i32 39" [sha256.cpp:49]   --->   Operation 97 'partselect' 'tmp_23' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 98 [1/1] (0.00ns)   --->   "%tmp_24 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_26, i32 40, i32 47" [sha256.cpp:49]   --->   Operation 98 'partselect' 'tmp_24' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_25 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_26, i32 48, i32 55" [sha256.cpp:49]   --->   Operation 99 'partselect' 'tmp_25' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 100 [1/1] (0.00ns)   --->   "%trunc_ln49_36 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_26, i32 56, i32 63" [sha256.cpp:49]   --->   Operation 100 'partselect' 'trunc_ln49_36' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%tmp_26 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %ctx_load_26, i32 9, i32 15" [sha256.cpp:51]   --->   Operation 101 'partselect' 'tmp_26' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%tmp_5 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ctx_load_26, i32 8" [sha256.cpp:51]   --->   Operation 102 'bitselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%or_ln = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i1.i8.i8.i8.i7, i1 %tmp_5, i8 %tmp_22, i8 %trunc_ln49_35, i8 %trunc_ln49_34, i7 %tmp_26" [sha256.cpp:51]   --->   Operation 103 'bitconcatenate' 'or_ln' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%tmp_27 = partselect i5 @_ssdm_op_PartSelect.i5.i64.i32.i32, i64 %ctx_load_26, i32 11, i32 15" [sha256.cpp:51]   --->   Operation 104 'partselect' 'tmp_27' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%tmp_28 = partselect i3 @_ssdm_op_PartSelect.i3.i64.i32.i32, i64 %ctx_load_26, i32 8, i32 10" [sha256.cpp:51]   --->   Operation 105 'partselect' 'tmp_28' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%or_ln51_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i3.i8.i8.i8.i5, i3 %tmp_28, i8 %tmp_22, i8 %trunc_ln49_35, i8 %trunc_ln49_34, i5 %tmp_27" [sha256.cpp:51]   --->   Operation 106 'bitconcatenate' 'or_ln51_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%tmp_29 = partselect i6 @_ssdm_op_PartSelect.i6.i64.i32.i32, i64 %ctx_load_26, i32 18, i32 23" [sha256.cpp:51]   --->   Operation 107 'partselect' 'tmp_29' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%lshr_ln51_2 = bitconcatenate i22 @_ssdm_op_BitConcatenate.i22.i8.i8.i6, i8 %trunc_ln49_34, i8 %tmp_4, i6 %tmp_29" [sha256.cpp:51]   --->   Operation 108 'bitconcatenate' 'lshr_ln51_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%zext_ln51 = zext i22 %lshr_ln51_2" [sha256.cpp:51]   --->   Operation 109 'zext' 'zext_ln51' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%xor_ln51 = xor i32 %zext_ln51, i32 %or_ln51_1" [sha256.cpp:51]   --->   Operation 110 'xor' 'xor_ln51' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%xor_ln51_1 = xor i32 %xor_ln51, i32 %or_ln" [sha256.cpp:51]   --->   Operation 111 'xor' 'xor_ln51_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%tmp_30 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ctx_load, i32 63" [sha256.cpp:51]   --->   Operation 112 'bitselect' 'tmp_30' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%tmp_31 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %ctx_load, i32 56, i32 62" [sha256.cpp:51]   --->   Operation 113 'partselect' 'tmp_31' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 114 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%or_ln51_2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i8.i8.i8.i1, i7 %tmp_31, i8 %tmp_7, i8 %tmp_8, i8 %trunc_ln49_6, i1 %tmp_30" [sha256.cpp:51]   --->   Operation 114 'bitconcatenate' 'or_ln51_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%tmp_32 = partselect i6 @_ssdm_op_PartSelect.i6.i64.i32.i32, i64 %ctx_load, i32 42, i32 47" [sha256.cpp:51]   --->   Operation 115 'partselect' 'tmp_32' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%tmp_33 = partselect i2 @_ssdm_op_PartSelect.i2.i64.i32.i32, i64 %ctx_load, i32 40, i32 41" [sha256.cpp:51]   --->   Operation 116 'partselect' 'tmp_33' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%or_ln51_3 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i8.i8.i8.i6, i2 %tmp_33, i8 %trunc_ln49_6, i8 %trunc_ln49_7, i8 %tmp_7, i6 %tmp_32" [sha256.cpp:51]   --->   Operation 117 'bitconcatenate' 'or_ln51_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%tmp_34 = partselect i5 @_ssdm_op_PartSelect.i5.i64.i32.i32, i64 %ctx_load, i32 59, i32 63" [sha256.cpp:51]   --->   Operation 118 'partselect' 'tmp_34' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%lshr_ln51_5 = bitconcatenate i29 @_ssdm_op_BitConcatenate.i29.i8.i8.i8.i5, i8 %tmp_7, i8 %tmp_8, i8 %trunc_ln49_6, i5 %tmp_34" [sha256.cpp:51]   --->   Operation 119 'bitconcatenate' 'lshr_ln51_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%zext_ln51_1 = zext i29 %lshr_ln51_5" [sha256.cpp:51]   --->   Operation 120 'zext' 'zext_ln51_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%xor_ln51_2 = xor i32 %zext_ln51_1, i32 %or_ln51_3" [sha256.cpp:51]   --->   Operation 121 'xor' 'xor_ln51_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_1)   --->   "%xor_ln51_3 = xor i32 %xor_ln51_2, i32 %or_ln51_2" [sha256.cpp:51]   --->   Operation 122 'xor' 'xor_ln51_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 123 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_1 = add i32 %xor_ln51_3, i32 %xor_ln51_1" [sha256.cpp:51]   --->   Operation 123 'add' 'add_ln51_1' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%tmp_35 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %ctx_load_26, i32 41, i32 47" [sha256.cpp:51]   --->   Operation 124 'partselect' 'tmp_35' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%tmp_36 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ctx_load_26, i32 40" [sha256.cpp:51]   --->   Operation 125 'bitselect' 'tmp_36' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%or_ln51_4 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i1.i8.i8.i8.i7, i1 %tmp_36, i8 %tmp_25, i8 %trunc_ln49_36, i8 %tmp_23, i7 %tmp_35" [sha256.cpp:51]   --->   Operation 126 'bitconcatenate' 'or_ln51_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%tmp_37 = partselect i5 @_ssdm_op_PartSelect.i5.i64.i32.i32, i64 %ctx_load_26, i32 43, i32 47" [sha256.cpp:51]   --->   Operation 127 'partselect' 'tmp_37' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%tmp_38 = partselect i3 @_ssdm_op_PartSelect.i3.i64.i32.i32, i64 %ctx_load_26, i32 40, i32 42" [sha256.cpp:51]   --->   Operation 128 'partselect' 'tmp_38' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%or_ln51_5 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i3.i8.i8.i8.i5, i3 %tmp_38, i8 %tmp_25, i8 %trunc_ln49_36, i8 %tmp_23, i5 %tmp_37" [sha256.cpp:51]   --->   Operation 129 'bitconcatenate' 'or_ln51_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%tmp_39 = partselect i6 @_ssdm_op_PartSelect.i6.i64.i32.i32, i64 %ctx_load_26, i32 50, i32 55" [sha256.cpp:51]   --->   Operation 130 'partselect' 'tmp_39' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%lshr_ln51_8 = bitconcatenate i22 @_ssdm_op_BitConcatenate.i22.i8.i8.i6, i8 %tmp_23, i8 %tmp_24, i6 %tmp_39" [sha256.cpp:51]   --->   Operation 131 'bitconcatenate' 'lshr_ln51_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%zext_ln51_2 = zext i22 %lshr_ln51_8" [sha256.cpp:51]   --->   Operation 132 'zext' 'zext_ln51_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%xor_ln51_4 = xor i32 %zext_ln51_2, i32 %or_ln51_5" [sha256.cpp:51]   --->   Operation 133 'xor' 'xor_ln51_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%xor_ln51_5 = xor i32 %xor_ln51_4, i32 %or_ln51_4" [sha256.cpp:51]   --->   Operation 134 'xor' 'xor_ln51_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%tmp_40 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ctx_load_20, i32 31" [sha256.cpp:51]   --->   Operation 135 'bitselect' 'tmp_40' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%tmp_41 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %ctx_load_20, i32 24, i32 30" [sha256.cpp:51]   --->   Operation 136 'partselect' 'tmp_41' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%or_ln51_6 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i8.i8.i8.i1, i7 %tmp_41, i8 %trunc_ln49_8, i8 %tmp_6, i8 %trunc_ln49_1, i1 %tmp_40" [sha256.cpp:51]   --->   Operation 137 'bitconcatenate' 'or_ln51_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%tmp_42 = partselect i6 @_ssdm_op_PartSelect.i6.i64.i32.i32, i64 %ctx_load_20, i32 10, i32 15" [sha256.cpp:51]   --->   Operation 138 'partselect' 'tmp_42' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%tmp_43 = partselect i2 @_ssdm_op_PartSelect.i2.i64.i32.i32, i64 %ctx_load_20, i32 8, i32 9" [sha256.cpp:51]   --->   Operation 139 'partselect' 'tmp_43' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%or_ln51_7 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i8.i8.i8.i6, i2 %tmp_43, i8 %trunc_ln49_1, i8 %trunc_ln49_2, i8 %trunc_ln49_8, i6 %tmp_42" [sha256.cpp:51]   --->   Operation 140 'bitconcatenate' 'or_ln51_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%tmp_44 = partselect i5 @_ssdm_op_PartSelect.i5.i64.i32.i32, i64 %ctx_load_20, i32 27, i32 31" [sha256.cpp:51]   --->   Operation 141 'partselect' 'tmp_44' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%lshr_ln51_s = bitconcatenate i29 @_ssdm_op_BitConcatenate.i29.i8.i8.i8.i5, i8 %trunc_ln49_8, i8 %tmp_6, i8 %trunc_ln49_1, i5 %tmp_44" [sha256.cpp:51]   --->   Operation 142 'bitconcatenate' 'lshr_ln51_s' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%zext_ln51_3 = zext i29 %lshr_ln51_s" [sha256.cpp:51]   --->   Operation 143 'zext' 'zext_ln51_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%xor_ln51_6 = xor i32 %zext_ln51_3, i32 %or_ln51_7" [sha256.cpp:51]   --->   Operation 144 'xor' 'xor_ln51_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_4)   --->   "%xor_ln51_7 = xor i32 %xor_ln51_6, i32 %or_ln51_6" [sha256.cpp:51]   --->   Operation 145 'xor' 'xor_ln51_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 146 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_4 = add i32 %xor_ln51_7, i32 %xor_ln51_5" [sha256.cpp:51]   --->   Operation 146 'add' 'add_ln51_4' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 2.04>
ST_6 : Operation 147 [1/1] (0.00ns)   --->   "%m_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %tmp_7, i8 %tmp_8, i8 %trunc_ln49_6, i8 %trunc_ln49_7" [sha256.cpp:49]   --->   Operation 147 'bitconcatenate' 'm_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 148 [1/2] (0.73ns)   --->   "%ctx_load_21 = load i4 %ctx_addr_31" [sha256.cpp:49]   --->   Operation 148 'load' 'ctx_load_21' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_6 : Operation 149 [1/1] (0.00ns)   --->   "%trunc_ln49_9 = trunc i64 %ctx_load_21" [sha256.cpp:49]   --->   Operation 149 'trunc' 'trunc_ln49_9' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 150 [1/1] (0.00ns)   --->   "%trunc_ln49_10 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_21, i32 16, i32 23" [sha256.cpp:49]   --->   Operation 150 'partselect' 'trunc_ln49_10' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 151 [1/1] (0.00ns)   --->   "%trunc_ln49_11 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_21, i32 24, i32 31" [sha256.cpp:49]   --->   Operation 151 'partselect' 'trunc_ln49_11' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 152 [1/1] (0.00ns)   --->   "%tmp_9 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_21, i32 8, i32 15" [sha256.cpp:49]   --->   Operation 152 'partselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 153 [1/1] (0.00ns)   --->   "%tmp_12 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_21, i32 32, i32 39" [sha256.cpp:49]   --->   Operation 153 'partselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 154 [1/1] (0.00ns)   --->   "%tmp_13 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_21, i32 40, i32 47" [sha256.cpp:49]   --->   Operation 154 'partselect' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 155 [1/1] (0.00ns)   --->   "%trunc_ln49_12 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_21, i32 48, i32 55" [sha256.cpp:49]   --->   Operation 155 'partselect' 'trunc_ln49_12' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 156 [1/1] (0.00ns)   --->   "%trunc_ln49_13 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_21, i32 56, i32 63" [sha256.cpp:49]   --->   Operation 156 'partselect' 'trunc_ln49_13' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 157 [1/1] (0.00ns)   --->   "%ctx_addr_33 = getelementptr i64 %ctx, i64 0, i64 4" [sha256.cpp:49]   --->   Operation 157 'getelementptr' 'ctx_addr_33' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 158 [2/2] (0.73ns)   --->   "%ctx_load_23 = load i4 %ctx_addr_33" [sha256.cpp:49]   --->   Operation 158 'load' 'ctx_load_23' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_6 : Operation 159 [1/1] (0.00ns)   --->   "%m_10 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln49_24, i8 %tmp_2, i8 %trunc_ln49_25, i8 %trunc_ln49_26" [sha256.cpp:49]   --->   Operation 159 'bitconcatenate' 'm_10' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 160 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_3 = add i32 %m_1, i32 %m_10" [sha256.cpp:51]   --->   Operation 160 'add' 'add_ln51_3' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 161 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_17 = add i32 %add_ln51_4, i32 %add_ln51_3" [sha256.cpp:51]   --->   Operation 161 'add' 'm_17' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_6 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%lshr_ln51_7 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_17, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 162 'partselect' 'lshr_ln51_7' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 163 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%trunc_ln51_2 = trunc i32 %m_17" [sha256.cpp:51]   --->   Operation 163 'trunc' 'trunc_ln51_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 164 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%or_ln51_11 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_2, i15 %lshr_ln51_7" [sha256.cpp:51]   --->   Operation 164 'bitconcatenate' 'or_ln51_11' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%lshr_ln51_9 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_17, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 165 'partselect' 'lshr_ln51_9' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%trunc_ln51_3 = trunc i32 %m_17" [sha256.cpp:51]   --->   Operation 166 'trunc' 'trunc_ln51_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%or_ln51_12 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_3, i13 %lshr_ln51_9" [sha256.cpp:51]   --->   Operation 167 'bitconcatenate' 'or_ln51_12' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%lshr_ln51_10 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_17, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 168 'partselect' 'lshr_ln51_10' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%zext_ln51_6 = zext i22 %lshr_ln51_10" [sha256.cpp:51]   --->   Operation 169 'zext' 'zext_ln51_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%xor_ln51_12 = xor i32 %zext_ln51_6, i32 %or_ln51_12" [sha256.cpp:51]   --->   Operation 170 'xor' 'xor_ln51_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%xor_ln51_13 = xor i32 %xor_ln51_12, i32 %or_ln51_11" [sha256.cpp:51]   --->   Operation 171 'xor' 'xor_ln51_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%tmp_50 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ctx_load_21, i32 31" [sha256.cpp:51]   --->   Operation 172 'bitselect' 'tmp_50' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 173 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%tmp_51 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %ctx_load_21, i32 24, i32 30" [sha256.cpp:51]   --->   Operation 173 'partselect' 'tmp_51' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 174 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%or_ln51_13 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i8.i8.i8.i1, i7 %tmp_51, i8 %trunc_ln49_9, i8 %tmp_9, i8 %trunc_ln49_10, i1 %tmp_50" [sha256.cpp:51]   --->   Operation 174 'bitconcatenate' 'or_ln51_13' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 175 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%tmp_52 = partselect i6 @_ssdm_op_PartSelect.i6.i64.i32.i32, i64 %ctx_load_21, i32 10, i32 15" [sha256.cpp:51]   --->   Operation 175 'partselect' 'tmp_52' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 176 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%tmp_53 = partselect i2 @_ssdm_op_PartSelect.i2.i64.i32.i32, i64 %ctx_load_21, i32 8, i32 9" [sha256.cpp:51]   --->   Operation 176 'partselect' 'tmp_53' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 177 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%or_ln51_14 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i8.i8.i8.i6, i2 %tmp_53, i8 %trunc_ln49_10, i8 %trunc_ln49_11, i8 %trunc_ln49_9, i6 %tmp_52" [sha256.cpp:51]   --->   Operation 177 'bitconcatenate' 'or_ln51_14' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 178 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%tmp_54 = partselect i5 @_ssdm_op_PartSelect.i5.i64.i32.i32, i64 %ctx_load_21, i32 27, i32 31" [sha256.cpp:51]   --->   Operation 178 'partselect' 'tmp_54' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 179 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%lshr_ln51_11 = bitconcatenate i29 @_ssdm_op_BitConcatenate.i29.i8.i8.i8.i5, i8 %trunc_ln49_9, i8 %tmp_9, i8 %trunc_ln49_10, i5 %tmp_54" [sha256.cpp:51]   --->   Operation 179 'bitconcatenate' 'lshr_ln51_11' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 180 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%zext_ln51_7 = zext i29 %lshr_ln51_11" [sha256.cpp:51]   --->   Operation 180 'zext' 'zext_ln51_7' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 181 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%xor_ln51_14 = xor i32 %zext_ln51_7, i32 %or_ln51_14" [sha256.cpp:51]   --->   Operation 181 'xor' 'xor_ln51_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 182 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_10)   --->   "%xor_ln51_15 = xor i32 %xor_ln51_14, i32 %or_ln51_13" [sha256.cpp:51]   --->   Operation 182 'xor' 'xor_ln51_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 183 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_10 = add i32 %xor_ln51_15, i32 %xor_ln51_13" [sha256.cpp:51]   --->   Operation 183 'add' 'add_ln51_10' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 4.82>
ST_7 : Operation 184 [1/1] (0.00ns)   --->   "%m = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln49, i8 %trunc_ln49_s, i8 %tmp, i8 %trunc_ln49_3" [sha256.cpp:49]   --->   Operation 184 'bitconcatenate' 'm' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 185 [1/1] (0.00ns)   --->   "%m_2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln49_8, i8 %tmp_6, i8 %trunc_ln49_1, i8 %trunc_ln49_2" [sha256.cpp:49]   --->   Operation 185 'bitconcatenate' 'm_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 186 [1/2] (0.73ns)   --->   "%ctx_load_23 = load i4 %ctx_addr_33" [sha256.cpp:49]   --->   Operation 186 'load' 'ctx_load_23' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_7 : Operation 187 [1/1] (0.00ns)   --->   "%trunc_ln49_19 = trunc i64 %ctx_load_23" [sha256.cpp:49]   --->   Operation 187 'trunc' 'trunc_ln49_19' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 188 [1/1] (0.00ns)   --->   "%trunc_ln49_20 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_23, i32 16, i32 23" [sha256.cpp:49]   --->   Operation 188 'partselect' 'trunc_ln49_20' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 189 [1/1] (0.00ns)   --->   "%trunc_ln49_21 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_23, i32 24, i32 31" [sha256.cpp:49]   --->   Operation 189 'partselect' 'trunc_ln49_21' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 190 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_23, i32 8, i32 15" [sha256.cpp:49]   --->   Operation 190 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 191 [1/1] (0.00ns)   --->   "%tmp_16 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_23, i32 32, i32 39" [sha256.cpp:49]   --->   Operation 191 'partselect' 'tmp_16' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 192 [1/1] (0.00ns)   --->   "%tmp_17 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_23, i32 40, i32 47" [sha256.cpp:49]   --->   Operation 192 'partselect' 'tmp_17' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 193 [1/1] (0.00ns)   --->   "%trunc_ln49_22 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_23, i32 48, i32 55" [sha256.cpp:49]   --->   Operation 193 'partselect' 'trunc_ln49_22' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 194 [1/1] (0.00ns)   --->   "%trunc_ln49_23 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_23, i32 56, i32 63" [sha256.cpp:49]   --->   Operation 194 'partselect' 'trunc_ln49_23' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 195 [1/1] (0.00ns)   --->   "%m_9 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %tmp_16, i8 %tmp_17, i8 %trunc_ln49_22, i8 %trunc_ln49_23" [sha256.cpp:49]   --->   Operation 195 'bitconcatenate' 'm_9' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 196 [1/1] (0.00ns)   --->   "%m_11 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %tmp_18, i8 %tmp_19, i8 %trunc_ln49_27, i8 %trunc_ln49_28" [sha256.cpp:49]   --->   Operation 196 'bitconcatenate' 'm_11' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 197 [1/1] (0.00ns)   --->   "%ctx_addr_35 = getelementptr i64 %ctx, i64 0, i64 6" [sha256.cpp:49]   --->   Operation 197 'getelementptr' 'ctx_addr_35' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 198 [2/2] (0.73ns)   --->   "%ctx_load_25 = load i4 %ctx_addr_35" [sha256.cpp:49]   --->   Operation 198 'load' 'ctx_load_25' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_7 : Operation 199 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51 = add i32 %m, i32 %m_9" [sha256.cpp:51]   --->   Operation 199 'add' 'add_ln51' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_7 : Operation 200 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_16 = add i32 %add_ln51_1, i32 %add_ln51" [sha256.cpp:51]   --->   Operation 200 'add' 'm_16' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_7 : Operation 201 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%lshr_ln51_1 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_16, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 201 'partselect' 'lshr_ln51_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%trunc_ln51 = trunc i32 %m_16" [sha256.cpp:51]   --->   Operation 202 'trunc' 'trunc_ln51' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 203 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%or_ln51_8 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51, i15 %lshr_ln51_1" [sha256.cpp:51]   --->   Operation 203 'bitconcatenate' 'or_ln51_8' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%lshr_ln51_3 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_16, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 204 'partselect' 'lshr_ln51_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 205 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%trunc_ln51_1 = trunc i32 %m_16" [sha256.cpp:51]   --->   Operation 205 'trunc' 'trunc_ln51_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 206 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%or_ln51_9 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_1, i13 %lshr_ln51_3" [sha256.cpp:51]   --->   Operation 206 'bitconcatenate' 'or_ln51_9' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 207 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%lshr_ln51_4 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_16, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 207 'partselect' 'lshr_ln51_4' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 208 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%zext_ln51_4 = zext i22 %lshr_ln51_4" [sha256.cpp:51]   --->   Operation 208 'zext' 'zext_ln51_4' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 209 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%xor_ln51_8 = xor i32 %zext_ln51_4, i32 %or_ln51_9" [sha256.cpp:51]   --->   Operation 209 'xor' 'xor_ln51_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 210 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%xor_ln51_9 = xor i32 %xor_ln51_8, i32 %or_ln51_8" [sha256.cpp:51]   --->   Operation 210 'xor' 'xor_ln51_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 211 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%tmp_45 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ctx_load_20, i32 63" [sha256.cpp:51]   --->   Operation 211 'bitselect' 'tmp_45' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 212 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%tmp_46 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %ctx_load_20, i32 56, i32 62" [sha256.cpp:51]   --->   Operation 212 'partselect' 'tmp_46' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 213 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%or_ln51_s = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i8.i8.i8.i1, i7 %tmp_46, i8 %tmp_10, i8 %tmp_11, i8 %trunc_ln49_4, i1 %tmp_45" [sha256.cpp:51]   --->   Operation 213 'bitconcatenate' 'or_ln51_s' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 214 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%tmp_47 = partselect i6 @_ssdm_op_PartSelect.i6.i64.i32.i32, i64 %ctx_load_20, i32 42, i32 47" [sha256.cpp:51]   --->   Operation 214 'partselect' 'tmp_47' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 215 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%tmp_48 = partselect i2 @_ssdm_op_PartSelect.i2.i64.i32.i32, i64 %ctx_load_20, i32 40, i32 41" [sha256.cpp:51]   --->   Operation 215 'partselect' 'tmp_48' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 216 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%or_ln51_10 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i8.i8.i8.i6, i2 %tmp_48, i8 %trunc_ln49_4, i8 %trunc_ln49_5, i8 %tmp_10, i6 %tmp_47" [sha256.cpp:51]   --->   Operation 216 'bitconcatenate' 'or_ln51_10' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 217 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%tmp_49 = partselect i5 @_ssdm_op_PartSelect.i5.i64.i32.i32, i64 %ctx_load_20, i32 59, i32 63" [sha256.cpp:51]   --->   Operation 217 'partselect' 'tmp_49' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 218 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%lshr_ln51_6 = bitconcatenate i29 @_ssdm_op_BitConcatenate.i29.i8.i8.i8.i5, i8 %tmp_10, i8 %tmp_11, i8 %trunc_ln49_4, i5 %tmp_49" [sha256.cpp:51]   --->   Operation 218 'bitconcatenate' 'lshr_ln51_6' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 219 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%zext_ln51_5 = zext i29 %lshr_ln51_6" [sha256.cpp:51]   --->   Operation 219 'zext' 'zext_ln51_5' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 220 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%xor_ln51_10 = xor i32 %zext_ln51_5, i32 %or_ln51_10" [sha256.cpp:51]   --->   Operation 220 'xor' 'xor_ln51_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 221 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_7)   --->   "%xor_ln51_11 = xor i32 %xor_ln51_10, i32 %or_ln51_s" [sha256.cpp:51]   --->   Operation 221 'xor' 'xor_ln51_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 222 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_6 = add i32 %m_2, i32 %m_11" [sha256.cpp:51]   --->   Operation 222 'add' 'add_ln51_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_7 : Operation 223 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_7 = add i32 %xor_ln51_11, i32 %xor_ln51_9" [sha256.cpp:51]   --->   Operation 223 'add' 'add_ln51_7' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 224 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_18 = add i32 %add_ln51_7, i32 %add_ln51_6" [sha256.cpp:51]   --->   Operation 224 'add' 'm_18' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_7 : Operation 225 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%lshr_ln51_12 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_18, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 225 'partselect' 'lshr_ln51_12' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 226 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%trunc_ln51_4 = trunc i32 %m_18" [sha256.cpp:51]   --->   Operation 226 'trunc' 'trunc_ln51_4' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 227 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%or_ln51_15 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_4, i15 %lshr_ln51_12" [sha256.cpp:51]   --->   Operation 227 'bitconcatenate' 'or_ln51_15' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 228 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%lshr_ln51_13 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_18, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 228 'partselect' 'lshr_ln51_13' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 229 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%trunc_ln51_5 = trunc i32 %m_18" [sha256.cpp:51]   --->   Operation 229 'trunc' 'trunc_ln51_5' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 230 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%or_ln51_16 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_5, i13 %lshr_ln51_13" [sha256.cpp:51]   --->   Operation 230 'bitconcatenate' 'or_ln51_16' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 231 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%lshr_ln51_14 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_18, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 231 'partselect' 'lshr_ln51_14' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 232 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%zext_ln51_8 = zext i22 %lshr_ln51_14" [sha256.cpp:51]   --->   Operation 232 'zext' 'zext_ln51_8' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 233 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%xor_ln51_16 = xor i32 %zext_ln51_8, i32 %or_ln51_16" [sha256.cpp:51]   --->   Operation 233 'xor' 'xor_ln51_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 234 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%xor_ln51_17 = xor i32 %xor_ln51_16, i32 %or_ln51_15" [sha256.cpp:51]   --->   Operation 234 'xor' 'xor_ln51_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 235 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%tmp_55 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ctx_load_21, i32 63" [sha256.cpp:51]   --->   Operation 235 'bitselect' 'tmp_55' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 236 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%tmp_56 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %ctx_load_21, i32 56, i32 62" [sha256.cpp:51]   --->   Operation 236 'partselect' 'tmp_56' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 237 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%or_ln51_17 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i8.i8.i8.i1, i7 %tmp_56, i8 %tmp_12, i8 %tmp_13, i8 %trunc_ln49_12, i1 %tmp_55" [sha256.cpp:51]   --->   Operation 237 'bitconcatenate' 'or_ln51_17' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 238 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%tmp_57 = partselect i6 @_ssdm_op_PartSelect.i6.i64.i32.i32, i64 %ctx_load_21, i32 42, i32 47" [sha256.cpp:51]   --->   Operation 238 'partselect' 'tmp_57' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 239 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%tmp_58 = partselect i2 @_ssdm_op_PartSelect.i2.i64.i32.i32, i64 %ctx_load_21, i32 40, i32 41" [sha256.cpp:51]   --->   Operation 239 'partselect' 'tmp_58' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 240 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%or_ln51_18 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i8.i8.i8.i6, i2 %tmp_58, i8 %trunc_ln49_12, i8 %trunc_ln49_13, i8 %tmp_12, i6 %tmp_57" [sha256.cpp:51]   --->   Operation 240 'bitconcatenate' 'or_ln51_18' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 241 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%tmp_59 = partselect i5 @_ssdm_op_PartSelect.i5.i64.i32.i32, i64 %ctx_load_21, i32 59, i32 63" [sha256.cpp:51]   --->   Operation 241 'partselect' 'tmp_59' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 242 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%lshr_ln51_15 = bitconcatenate i29 @_ssdm_op_BitConcatenate.i29.i8.i8.i8.i5, i8 %tmp_12, i8 %tmp_13, i8 %trunc_ln49_12, i5 %tmp_59" [sha256.cpp:51]   --->   Operation 242 'bitconcatenate' 'lshr_ln51_15' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 243 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%zext_ln51_9 = zext i29 %lshr_ln51_15" [sha256.cpp:51]   --->   Operation 243 'zext' 'zext_ln51_9' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 244 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%xor_ln51_18 = xor i32 %zext_ln51_9, i32 %or_ln51_18" [sha256.cpp:51]   --->   Operation 244 'xor' 'xor_ln51_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 245 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_13)   --->   "%xor_ln51_19 = xor i32 %xor_ln51_18, i32 %or_ln51_17" [sha256.cpp:51]   --->   Operation 245 'xor' 'xor_ln51_19' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 246 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_13 = add i32 %xor_ln51_19, i32 %xor_ln51_17" [sha256.cpp:51]   --->   Operation 246 'add' 'add_ln51_13' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 6.87>
ST_8 : Operation 247 [1/1] (0.00ns)   --->   "%m_3 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %tmp_10, i8 %tmp_11, i8 %trunc_ln49_4, i8 %trunc_ln49_5" [sha256.cpp:49]   --->   Operation 247 'bitconcatenate' 'm_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 248 [1/1] (0.00ns)   --->   "%m_4 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln49_9, i8 %tmp_9, i8 %trunc_ln49_10, i8 %trunc_ln49_11" [sha256.cpp:49]   --->   Operation 248 'bitconcatenate' 'm_4' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 249 [1/1] (0.00ns)   --->   "%m_5 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %tmp_12, i8 %tmp_13, i8 %trunc_ln49_12, i8 %trunc_ln49_13" [sha256.cpp:49]   --->   Operation 249 'bitconcatenate' 'm_5' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 250 [1/1] (0.00ns)   --->   "%m_6 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln49_14, i8 %tmp_s, i8 %trunc_ln49_15, i8 %trunc_ln49_16" [sha256.cpp:49]   --->   Operation 250 'bitconcatenate' 'm_6' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 251 [1/1] (0.00ns)   --->   "%m_7 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %tmp_14, i8 %tmp_15, i8 %trunc_ln49_17, i8 %trunc_ln49_18" [sha256.cpp:49]   --->   Operation 251 'bitconcatenate' 'm_7' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 252 [1/1] (0.00ns)   --->   "%m_8 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln49_19, i8 %tmp_1, i8 %trunc_ln49_20, i8 %trunc_ln49_21" [sha256.cpp:49]   --->   Operation 252 'bitconcatenate' 'm_8' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 253 [1/2] (0.73ns)   --->   "%ctx_load_25 = load i4 %ctx_addr_35" [sha256.cpp:49]   --->   Operation 253 'load' 'ctx_load_25' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_8 : Operation 254 [1/1] (0.00ns)   --->   "%trunc_ln49_29 = trunc i64 %ctx_load_25" [sha256.cpp:49]   --->   Operation 254 'trunc' 'trunc_ln49_29' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 255 [1/1] (0.00ns)   --->   "%trunc_ln49_30 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_25, i32 16, i32 23" [sha256.cpp:49]   --->   Operation 255 'partselect' 'trunc_ln49_30' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 256 [1/1] (0.00ns)   --->   "%trunc_ln49_31 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_25, i32 24, i32 31" [sha256.cpp:49]   --->   Operation 256 'partselect' 'trunc_ln49_31' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 257 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_25, i32 8, i32 15" [sha256.cpp:49]   --->   Operation 257 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 258 [1/1] (0.00ns)   --->   "%m_12 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln49_29, i8 %tmp_3, i8 %trunc_ln49_30, i8 %trunc_ln49_31" [sha256.cpp:49]   --->   Operation 258 'bitconcatenate' 'm_12' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 259 [1/1] (0.00ns)   --->   "%tmp_20 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_25, i32 32, i32 39" [sha256.cpp:49]   --->   Operation 259 'partselect' 'tmp_20' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 260 [1/1] (0.00ns)   --->   "%tmp_21 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_25, i32 40, i32 47" [sha256.cpp:49]   --->   Operation 260 'partselect' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 261 [1/1] (0.00ns)   --->   "%trunc_ln49_32 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_25, i32 48, i32 55" [sha256.cpp:49]   --->   Operation 261 'partselect' 'trunc_ln49_32' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 262 [1/1] (0.00ns)   --->   "%trunc_ln49_33 = partselect i8 @_ssdm_op_PartSelect.i8.i64.i32.i32, i64 %ctx_load_25, i32 56, i32 63" [sha256.cpp:49]   --->   Operation 262 'partselect' 'trunc_ln49_33' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 263 [1/1] (0.00ns)   --->   "%m_13 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %tmp_20, i8 %tmp_21, i8 %trunc_ln49_32, i8 %trunc_ln49_33" [sha256.cpp:49]   --->   Operation 263 'bitconcatenate' 'm_13' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 264 [1/1] (0.00ns)   --->   "%m_14 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %trunc_ln49_34, i8 %tmp_4, i8 %tmp_22, i8 %trunc_ln49_35" [sha256.cpp:49]   --->   Operation 264 'bitconcatenate' 'm_14' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 265 [1/1] (0.00ns)   --->   "%m_15 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %tmp_23, i8 %tmp_24, i8 %tmp_25, i8 %trunc_ln49_36" [sha256.cpp:49]   --->   Operation 265 'bitconcatenate' 'm_15' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 266 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_9 = add i32 %m_3, i32 %m_12" [sha256.cpp:51]   --->   Operation 266 'add' 'add_ln51_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_8 : Operation 267 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_19 = add i32 %add_ln51_10, i32 %add_ln51_9" [sha256.cpp:51]   --->   Operation 267 'add' 'm_19' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_8 : Operation 268 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_12 = add i32 %m_4, i32 %m_13" [sha256.cpp:51]   --->   Operation 268 'add' 'add_ln51_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_8 : Operation 269 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_20 = add i32 %add_ln51_13, i32 %add_ln51_12" [sha256.cpp:51]   --->   Operation 269 'add' 'm_20' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_8 : Operation 270 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%lshr_ln51_16 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_19, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 270 'partselect' 'lshr_ln51_16' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 271 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%trunc_ln51_6 = trunc i32 %m_19" [sha256.cpp:51]   --->   Operation 271 'trunc' 'trunc_ln51_6' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 272 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%or_ln51_19 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_6, i15 %lshr_ln51_16" [sha256.cpp:51]   --->   Operation 272 'bitconcatenate' 'or_ln51_19' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 273 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%lshr_ln51_17 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_19, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 273 'partselect' 'lshr_ln51_17' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 274 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%trunc_ln51_7 = trunc i32 %m_19" [sha256.cpp:51]   --->   Operation 274 'trunc' 'trunc_ln51_7' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 275 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%or_ln51_20 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_7, i13 %lshr_ln51_17" [sha256.cpp:51]   --->   Operation 275 'bitconcatenate' 'or_ln51_20' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 276 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%lshr_ln51_18 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_19, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 276 'partselect' 'lshr_ln51_18' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 277 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%zext_ln51_10 = zext i22 %lshr_ln51_18" [sha256.cpp:51]   --->   Operation 277 'zext' 'zext_ln51_10' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 278 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%xor_ln51_20 = xor i32 %zext_ln51_10, i32 %or_ln51_20" [sha256.cpp:51]   --->   Operation 278 'xor' 'xor_ln51_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 279 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%xor_ln51_21 = xor i32 %xor_ln51_20, i32 %or_ln51_19" [sha256.cpp:51]   --->   Operation 279 'xor' 'xor_ln51_21' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 280 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%tmp_60 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ctx_load_22, i32 31" [sha256.cpp:51]   --->   Operation 280 'bitselect' 'tmp_60' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 281 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%tmp_61 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %ctx_load_22, i32 24, i32 30" [sha256.cpp:51]   --->   Operation 281 'partselect' 'tmp_61' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 282 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%or_ln51_21 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i8.i8.i8.i1, i7 %tmp_61, i8 %trunc_ln49_14, i8 %tmp_s, i8 %trunc_ln49_15, i1 %tmp_60" [sha256.cpp:51]   --->   Operation 282 'bitconcatenate' 'or_ln51_21' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 283 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%tmp_62 = partselect i6 @_ssdm_op_PartSelect.i6.i64.i32.i32, i64 %ctx_load_22, i32 10, i32 15" [sha256.cpp:51]   --->   Operation 283 'partselect' 'tmp_62' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 284 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%tmp_63 = partselect i2 @_ssdm_op_PartSelect.i2.i64.i32.i32, i64 %ctx_load_22, i32 8, i32 9" [sha256.cpp:51]   --->   Operation 284 'partselect' 'tmp_63' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 285 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%or_ln51_22 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i8.i8.i8.i6, i2 %tmp_63, i8 %trunc_ln49_15, i8 %trunc_ln49_16, i8 %trunc_ln49_14, i6 %tmp_62" [sha256.cpp:51]   --->   Operation 285 'bitconcatenate' 'or_ln51_22' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 286 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%tmp_64 = partselect i5 @_ssdm_op_PartSelect.i5.i64.i32.i32, i64 %ctx_load_22, i32 27, i32 31" [sha256.cpp:51]   --->   Operation 286 'partselect' 'tmp_64' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 287 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%lshr_ln51_19 = bitconcatenate i29 @_ssdm_op_BitConcatenate.i29.i8.i8.i8.i5, i8 %trunc_ln49_14, i8 %tmp_s, i8 %trunc_ln49_15, i5 %tmp_64" [sha256.cpp:51]   --->   Operation 287 'bitconcatenate' 'lshr_ln51_19' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 288 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%zext_ln51_11 = zext i29 %lshr_ln51_19" [sha256.cpp:51]   --->   Operation 288 'zext' 'zext_ln51_11' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 289 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%xor_ln51_22 = xor i32 %zext_ln51_11, i32 %or_ln51_22" [sha256.cpp:51]   --->   Operation 289 'xor' 'xor_ln51_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 290 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_16)   --->   "%xor_ln51_23 = xor i32 %xor_ln51_22, i32 %or_ln51_21" [sha256.cpp:51]   --->   Operation 290 'xor' 'xor_ln51_23' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 291 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_15 = add i32 %m_5, i32 %m_14" [sha256.cpp:51]   --->   Operation 291 'add' 'add_ln51_15' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_8 : Operation 292 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_16 = add i32 %xor_ln51_23, i32 %xor_ln51_21" [sha256.cpp:51]   --->   Operation 292 'add' 'add_ln51_16' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 293 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_21 = add i32 %add_ln51_16, i32 %add_ln51_15" [sha256.cpp:51]   --->   Operation 293 'add' 'm_21' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_8 : Operation 294 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%lshr_ln51_20 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_20, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 294 'partselect' 'lshr_ln51_20' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 295 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%trunc_ln51_8 = trunc i32 %m_20" [sha256.cpp:51]   --->   Operation 295 'trunc' 'trunc_ln51_8' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 296 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%or_ln51_23 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_8, i15 %lshr_ln51_20" [sha256.cpp:51]   --->   Operation 296 'bitconcatenate' 'or_ln51_23' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 297 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%lshr_ln51_21 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_20, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 297 'partselect' 'lshr_ln51_21' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 298 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%trunc_ln51_9 = trunc i32 %m_20" [sha256.cpp:51]   --->   Operation 298 'trunc' 'trunc_ln51_9' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 299 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%or_ln51_24 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_9, i13 %lshr_ln51_21" [sha256.cpp:51]   --->   Operation 299 'bitconcatenate' 'or_ln51_24' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 300 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%lshr_ln51_22 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_20, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 300 'partselect' 'lshr_ln51_22' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 301 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%zext_ln51_12 = zext i22 %lshr_ln51_22" [sha256.cpp:51]   --->   Operation 301 'zext' 'zext_ln51_12' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 302 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%xor_ln51_24 = xor i32 %zext_ln51_12, i32 %or_ln51_24" [sha256.cpp:51]   --->   Operation 302 'xor' 'xor_ln51_24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 303 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%xor_ln51_25 = xor i32 %xor_ln51_24, i32 %or_ln51_23" [sha256.cpp:51]   --->   Operation 303 'xor' 'xor_ln51_25' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 304 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%tmp_65 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ctx_load_22, i32 63" [sha256.cpp:51]   --->   Operation 304 'bitselect' 'tmp_65' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 305 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%tmp_66 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %ctx_load_22, i32 56, i32 62" [sha256.cpp:51]   --->   Operation 305 'partselect' 'tmp_66' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 306 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%or_ln51_25 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i8.i8.i8.i1, i7 %tmp_66, i8 %tmp_14, i8 %tmp_15, i8 %trunc_ln49_17, i1 %tmp_65" [sha256.cpp:51]   --->   Operation 306 'bitconcatenate' 'or_ln51_25' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 307 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%tmp_67 = partselect i6 @_ssdm_op_PartSelect.i6.i64.i32.i32, i64 %ctx_load_22, i32 42, i32 47" [sha256.cpp:51]   --->   Operation 307 'partselect' 'tmp_67' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 308 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%tmp_68 = partselect i2 @_ssdm_op_PartSelect.i2.i64.i32.i32, i64 %ctx_load_22, i32 40, i32 41" [sha256.cpp:51]   --->   Operation 308 'partselect' 'tmp_68' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 309 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%or_ln51_26 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i8.i8.i8.i6, i2 %tmp_68, i8 %trunc_ln49_17, i8 %trunc_ln49_18, i8 %tmp_14, i6 %tmp_67" [sha256.cpp:51]   --->   Operation 309 'bitconcatenate' 'or_ln51_26' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 310 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%tmp_69 = partselect i5 @_ssdm_op_PartSelect.i5.i64.i32.i32, i64 %ctx_load_22, i32 59, i32 63" [sha256.cpp:51]   --->   Operation 310 'partselect' 'tmp_69' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 311 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%lshr_ln51_23 = bitconcatenate i29 @_ssdm_op_BitConcatenate.i29.i8.i8.i8.i5, i8 %tmp_14, i8 %tmp_15, i8 %trunc_ln49_17, i5 %tmp_69" [sha256.cpp:51]   --->   Operation 311 'bitconcatenate' 'lshr_ln51_23' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 312 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%zext_ln51_13 = zext i29 %lshr_ln51_23" [sha256.cpp:51]   --->   Operation 312 'zext' 'zext_ln51_13' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 313 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%xor_ln51_26 = xor i32 %zext_ln51_13, i32 %or_ln51_26" [sha256.cpp:51]   --->   Operation 313 'xor' 'xor_ln51_26' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 314 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_19)   --->   "%xor_ln51_27 = xor i32 %xor_ln51_26, i32 %or_ln51_25" [sha256.cpp:51]   --->   Operation 314 'xor' 'xor_ln51_27' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 315 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_18 = add i32 %m_6, i32 %m_15" [sha256.cpp:51]   --->   Operation 315 'add' 'add_ln51_18' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_8 : Operation 316 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_19 = add i32 %xor_ln51_27, i32 %xor_ln51_25" [sha256.cpp:51]   --->   Operation 316 'add' 'add_ln51_19' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 317 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_22 = add i32 %add_ln51_19, i32 %add_ln51_18" [sha256.cpp:51]   --->   Operation 317 'add' 'm_22' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_8 : Operation 318 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%lshr_ln51_24 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_21, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 318 'partselect' 'lshr_ln51_24' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 319 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%trunc_ln51_10 = trunc i32 %m_21" [sha256.cpp:51]   --->   Operation 319 'trunc' 'trunc_ln51_10' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 320 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%or_ln51_27 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_10, i15 %lshr_ln51_24" [sha256.cpp:51]   --->   Operation 320 'bitconcatenate' 'or_ln51_27' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 321 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%lshr_ln51_25 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_21, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 321 'partselect' 'lshr_ln51_25' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 322 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%trunc_ln51_11 = trunc i32 %m_21" [sha256.cpp:51]   --->   Operation 322 'trunc' 'trunc_ln51_11' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 323 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%or_ln51_28 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_11, i13 %lshr_ln51_25" [sha256.cpp:51]   --->   Operation 323 'bitconcatenate' 'or_ln51_28' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 324 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%lshr_ln51_26 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_21, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 324 'partselect' 'lshr_ln51_26' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 325 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%zext_ln51_14 = zext i22 %lshr_ln51_26" [sha256.cpp:51]   --->   Operation 325 'zext' 'zext_ln51_14' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 326 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%xor_ln51_28 = xor i32 %zext_ln51_14, i32 %or_ln51_28" [sha256.cpp:51]   --->   Operation 326 'xor' 'xor_ln51_28' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 327 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%xor_ln51_29 = xor i32 %xor_ln51_28, i32 %or_ln51_27" [sha256.cpp:51]   --->   Operation 327 'xor' 'xor_ln51_29' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 328 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%tmp_70 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ctx_load_23, i32 31" [sha256.cpp:51]   --->   Operation 328 'bitselect' 'tmp_70' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 329 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%tmp_71 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %ctx_load_23, i32 24, i32 30" [sha256.cpp:51]   --->   Operation 329 'partselect' 'tmp_71' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 330 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%or_ln51_29 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i8.i8.i8.i1, i7 %tmp_71, i8 %trunc_ln49_19, i8 %tmp_1, i8 %trunc_ln49_20, i1 %tmp_70" [sha256.cpp:51]   --->   Operation 330 'bitconcatenate' 'or_ln51_29' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 331 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%tmp_72 = partselect i6 @_ssdm_op_PartSelect.i6.i64.i32.i32, i64 %ctx_load_23, i32 10, i32 15" [sha256.cpp:51]   --->   Operation 331 'partselect' 'tmp_72' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 332 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%tmp_73 = partselect i2 @_ssdm_op_PartSelect.i2.i64.i32.i32, i64 %ctx_load_23, i32 8, i32 9" [sha256.cpp:51]   --->   Operation 332 'partselect' 'tmp_73' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 333 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%or_ln51_30 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i8.i8.i8.i6, i2 %tmp_73, i8 %trunc_ln49_20, i8 %trunc_ln49_21, i8 %trunc_ln49_19, i6 %tmp_72" [sha256.cpp:51]   --->   Operation 333 'bitconcatenate' 'or_ln51_30' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 334 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%tmp_74 = partselect i5 @_ssdm_op_PartSelect.i5.i64.i32.i32, i64 %ctx_load_23, i32 27, i32 31" [sha256.cpp:51]   --->   Operation 334 'partselect' 'tmp_74' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 335 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%lshr_ln51_27 = bitconcatenate i29 @_ssdm_op_BitConcatenate.i29.i8.i8.i8.i5, i8 %trunc_ln49_19, i8 %tmp_1, i8 %trunc_ln49_20, i5 %tmp_74" [sha256.cpp:51]   --->   Operation 335 'bitconcatenate' 'lshr_ln51_27' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 336 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%zext_ln51_15 = zext i29 %lshr_ln51_27" [sha256.cpp:51]   --->   Operation 336 'zext' 'zext_ln51_15' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 337 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%xor_ln51_30 = xor i32 %zext_ln51_15, i32 %or_ln51_30" [sha256.cpp:51]   --->   Operation 337 'xor' 'xor_ln51_30' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 338 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_22)   --->   "%xor_ln51_31 = xor i32 %xor_ln51_30, i32 %or_ln51_29" [sha256.cpp:51]   --->   Operation 338 'xor' 'xor_ln51_31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 339 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_21 = add i32 %m_7, i32 %m_16" [sha256.cpp:51]   --->   Operation 339 'add' 'add_ln51_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_8 : Operation 340 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_22 = add i32 %xor_ln51_31, i32 %xor_ln51_29" [sha256.cpp:51]   --->   Operation 340 'add' 'add_ln51_22' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 341 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_23 = add i32 %add_ln51_22, i32 %add_ln51_21" [sha256.cpp:51]   --->   Operation 341 'add' 'm_23' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_8 : Operation 342 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%lshr_ln51_28 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_22, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 342 'partselect' 'lshr_ln51_28' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 343 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%trunc_ln51_12 = trunc i32 %m_22" [sha256.cpp:51]   --->   Operation 343 'trunc' 'trunc_ln51_12' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 344 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%or_ln51_31 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_12, i15 %lshr_ln51_28" [sha256.cpp:51]   --->   Operation 344 'bitconcatenate' 'or_ln51_31' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 345 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%lshr_ln51_29 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_22, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 345 'partselect' 'lshr_ln51_29' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 346 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%trunc_ln51_13 = trunc i32 %m_22" [sha256.cpp:51]   --->   Operation 346 'trunc' 'trunc_ln51_13' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 347 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%or_ln51_32 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_13, i13 %lshr_ln51_29" [sha256.cpp:51]   --->   Operation 347 'bitconcatenate' 'or_ln51_32' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 348 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%lshr_ln51_30 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_22, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 348 'partselect' 'lshr_ln51_30' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 349 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%zext_ln51_16 = zext i22 %lshr_ln51_30" [sha256.cpp:51]   --->   Operation 349 'zext' 'zext_ln51_16' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 350 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%xor_ln51_32 = xor i32 %zext_ln51_16, i32 %or_ln51_32" [sha256.cpp:51]   --->   Operation 350 'xor' 'xor_ln51_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 351 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%xor_ln51_33 = xor i32 %xor_ln51_32, i32 %or_ln51_31" [sha256.cpp:51]   --->   Operation 351 'xor' 'xor_ln51_33' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 352 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%tmp_75 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ctx_load_23, i32 63" [sha256.cpp:51]   --->   Operation 352 'bitselect' 'tmp_75' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 353 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%tmp_76 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %ctx_load_23, i32 56, i32 62" [sha256.cpp:51]   --->   Operation 353 'partselect' 'tmp_76' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 354 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%or_ln51_33 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i8.i8.i8.i1, i7 %tmp_76, i8 %tmp_16, i8 %tmp_17, i8 %trunc_ln49_22, i1 %tmp_75" [sha256.cpp:51]   --->   Operation 354 'bitconcatenate' 'or_ln51_33' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 355 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%tmp_77 = partselect i6 @_ssdm_op_PartSelect.i6.i64.i32.i32, i64 %ctx_load_23, i32 42, i32 47" [sha256.cpp:51]   --->   Operation 355 'partselect' 'tmp_77' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 356 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%tmp_78 = partselect i2 @_ssdm_op_PartSelect.i2.i64.i32.i32, i64 %ctx_load_23, i32 40, i32 41" [sha256.cpp:51]   --->   Operation 356 'partselect' 'tmp_78' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 357 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%or_ln51_34 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i8.i8.i8.i6, i2 %tmp_78, i8 %trunc_ln49_22, i8 %trunc_ln49_23, i8 %tmp_16, i6 %tmp_77" [sha256.cpp:51]   --->   Operation 357 'bitconcatenate' 'or_ln51_34' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 358 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%tmp_79 = partselect i5 @_ssdm_op_PartSelect.i5.i64.i32.i32, i64 %ctx_load_23, i32 59, i32 63" [sha256.cpp:51]   --->   Operation 358 'partselect' 'tmp_79' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 359 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%lshr_ln51_31 = bitconcatenate i29 @_ssdm_op_BitConcatenate.i29.i8.i8.i8.i5, i8 %tmp_16, i8 %tmp_17, i8 %trunc_ln49_22, i5 %tmp_79" [sha256.cpp:51]   --->   Operation 359 'bitconcatenate' 'lshr_ln51_31' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 360 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%zext_ln51_17 = zext i29 %lshr_ln51_31" [sha256.cpp:51]   --->   Operation 360 'zext' 'zext_ln51_17' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 361 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%xor_ln51_34 = xor i32 %zext_ln51_17, i32 %or_ln51_34" [sha256.cpp:51]   --->   Operation 361 'xor' 'xor_ln51_34' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 362 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_25)   --->   "%xor_ln51_35 = xor i32 %xor_ln51_34, i32 %or_ln51_33" [sha256.cpp:51]   --->   Operation 362 'xor' 'xor_ln51_35' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 363 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_24 = add i32 %m_8, i32 %m_17" [sha256.cpp:51]   --->   Operation 363 'add' 'add_ln51_24' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_8 : Operation 364 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_25 = add i32 %xor_ln51_35, i32 %xor_ln51_33" [sha256.cpp:51]   --->   Operation 364 'add' 'add_ln51_25' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 365 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_24 = add i32 %add_ln51_25, i32 %add_ln51_24" [sha256.cpp:51]   --->   Operation 365 'add' 'm_24' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_8 : Operation 366 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%lshr_ln51_32 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_23, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 366 'partselect' 'lshr_ln51_32' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 367 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%trunc_ln51_14 = trunc i32 %m_23" [sha256.cpp:51]   --->   Operation 367 'trunc' 'trunc_ln51_14' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 368 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%or_ln51_35 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_14, i15 %lshr_ln51_32" [sha256.cpp:51]   --->   Operation 368 'bitconcatenate' 'or_ln51_35' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 369 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%lshr_ln51_33 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_23, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 369 'partselect' 'lshr_ln51_33' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 370 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%trunc_ln51_15 = trunc i32 %m_23" [sha256.cpp:51]   --->   Operation 370 'trunc' 'trunc_ln51_15' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 371 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%or_ln51_36 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_15, i13 %lshr_ln51_33" [sha256.cpp:51]   --->   Operation 371 'bitconcatenate' 'or_ln51_36' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 372 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%lshr_ln51_34 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_23, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 372 'partselect' 'lshr_ln51_34' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 373 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%zext_ln51_18 = zext i22 %lshr_ln51_34" [sha256.cpp:51]   --->   Operation 373 'zext' 'zext_ln51_18' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 374 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%xor_ln51_36 = xor i32 %zext_ln51_18, i32 %or_ln51_36" [sha256.cpp:51]   --->   Operation 374 'xor' 'xor_ln51_36' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 375 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%xor_ln51_37 = xor i32 %xor_ln51_36, i32 %or_ln51_35" [sha256.cpp:51]   --->   Operation 375 'xor' 'xor_ln51_37' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 376 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%tmp_80 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ctx_load_24, i32 31" [sha256.cpp:51]   --->   Operation 376 'bitselect' 'tmp_80' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 377 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%tmp_81 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %ctx_load_24, i32 24, i32 30" [sha256.cpp:51]   --->   Operation 377 'partselect' 'tmp_81' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 378 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%or_ln51_37 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i8.i8.i8.i1, i7 %tmp_81, i8 %trunc_ln49_24, i8 %tmp_2, i8 %trunc_ln49_25, i1 %tmp_80" [sha256.cpp:51]   --->   Operation 378 'bitconcatenate' 'or_ln51_37' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 379 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%tmp_82 = partselect i6 @_ssdm_op_PartSelect.i6.i64.i32.i32, i64 %ctx_load_24, i32 10, i32 15" [sha256.cpp:51]   --->   Operation 379 'partselect' 'tmp_82' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 380 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%tmp_83 = partselect i2 @_ssdm_op_PartSelect.i2.i64.i32.i32, i64 %ctx_load_24, i32 8, i32 9" [sha256.cpp:51]   --->   Operation 380 'partselect' 'tmp_83' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 381 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%or_ln51_38 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i8.i8.i8.i6, i2 %tmp_83, i8 %trunc_ln49_25, i8 %trunc_ln49_26, i8 %trunc_ln49_24, i6 %tmp_82" [sha256.cpp:51]   --->   Operation 381 'bitconcatenate' 'or_ln51_38' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 382 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%tmp_84 = partselect i5 @_ssdm_op_PartSelect.i5.i64.i32.i32, i64 %ctx_load_24, i32 27, i32 31" [sha256.cpp:51]   --->   Operation 382 'partselect' 'tmp_84' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 383 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%lshr_ln51_35 = bitconcatenate i29 @_ssdm_op_BitConcatenate.i29.i8.i8.i8.i5, i8 %trunc_ln49_24, i8 %tmp_2, i8 %trunc_ln49_25, i5 %tmp_84" [sha256.cpp:51]   --->   Operation 383 'bitconcatenate' 'lshr_ln51_35' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 384 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%zext_ln51_19 = zext i29 %lshr_ln51_35" [sha256.cpp:51]   --->   Operation 384 'zext' 'zext_ln51_19' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 385 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%xor_ln51_38 = xor i32 %zext_ln51_19, i32 %or_ln51_38" [sha256.cpp:51]   --->   Operation 385 'xor' 'xor_ln51_38' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 386 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_28)   --->   "%xor_ln51_39 = xor i32 %xor_ln51_38, i32 %or_ln51_37" [sha256.cpp:51]   --->   Operation 386 'xor' 'xor_ln51_39' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 387 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_28 = add i32 %xor_ln51_39, i32 %xor_ln51_37" [sha256.cpp:51]   --->   Operation 387 'add' 'add_ln51_28' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 388 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%lshr_ln51_36 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_24, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 388 'partselect' 'lshr_ln51_36' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 389 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%trunc_ln51_16 = trunc i32 %m_24" [sha256.cpp:51]   --->   Operation 389 'trunc' 'trunc_ln51_16' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 390 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%or_ln51_39 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_16, i15 %lshr_ln51_36" [sha256.cpp:51]   --->   Operation 390 'bitconcatenate' 'or_ln51_39' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 391 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%lshr_ln51_37 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_24, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 391 'partselect' 'lshr_ln51_37' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 392 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%trunc_ln51_17 = trunc i32 %m_24" [sha256.cpp:51]   --->   Operation 392 'trunc' 'trunc_ln51_17' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 393 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%or_ln51_40 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_17, i13 %lshr_ln51_37" [sha256.cpp:51]   --->   Operation 393 'bitconcatenate' 'or_ln51_40' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 394 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%lshr_ln51_38 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_24, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 394 'partselect' 'lshr_ln51_38' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 395 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%zext_ln51_20 = zext i22 %lshr_ln51_38" [sha256.cpp:51]   --->   Operation 395 'zext' 'zext_ln51_20' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 396 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%xor_ln51_40 = xor i32 %zext_ln51_20, i32 %or_ln51_40" [sha256.cpp:51]   --->   Operation 396 'xor' 'xor_ln51_40' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 397 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%xor_ln51_41 = xor i32 %xor_ln51_40, i32 %or_ln51_39" [sha256.cpp:51]   --->   Operation 397 'xor' 'xor_ln51_41' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 398 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%tmp_85 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ctx_load_24, i32 63" [sha256.cpp:51]   --->   Operation 398 'bitselect' 'tmp_85' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 399 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%tmp_86 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %ctx_load_24, i32 56, i32 62" [sha256.cpp:51]   --->   Operation 399 'partselect' 'tmp_86' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 400 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%or_ln51_41 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i8.i8.i8.i1, i7 %tmp_86, i8 %tmp_18, i8 %tmp_19, i8 %trunc_ln49_27, i1 %tmp_85" [sha256.cpp:51]   --->   Operation 400 'bitconcatenate' 'or_ln51_41' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 401 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%tmp_87 = partselect i6 @_ssdm_op_PartSelect.i6.i64.i32.i32, i64 %ctx_load_24, i32 42, i32 47" [sha256.cpp:51]   --->   Operation 401 'partselect' 'tmp_87' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 402 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%tmp_88 = partselect i2 @_ssdm_op_PartSelect.i2.i64.i32.i32, i64 %ctx_load_24, i32 40, i32 41" [sha256.cpp:51]   --->   Operation 402 'partselect' 'tmp_88' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 403 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%or_ln51_42 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i8.i8.i8.i6, i2 %tmp_88, i8 %trunc_ln49_27, i8 %trunc_ln49_28, i8 %tmp_18, i6 %tmp_87" [sha256.cpp:51]   --->   Operation 403 'bitconcatenate' 'or_ln51_42' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 404 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%tmp_89 = partselect i5 @_ssdm_op_PartSelect.i5.i64.i32.i32, i64 %ctx_load_24, i32 59, i32 63" [sha256.cpp:51]   --->   Operation 404 'partselect' 'tmp_89' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 405 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%lshr_ln51_39 = bitconcatenate i29 @_ssdm_op_BitConcatenate.i29.i8.i8.i8.i5, i8 %tmp_18, i8 %tmp_19, i8 %trunc_ln49_27, i5 %tmp_89" [sha256.cpp:51]   --->   Operation 405 'bitconcatenate' 'lshr_ln51_39' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 406 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%zext_ln51_21 = zext i29 %lshr_ln51_39" [sha256.cpp:51]   --->   Operation 406 'zext' 'zext_ln51_21' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 407 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%xor_ln51_42 = xor i32 %zext_ln51_21, i32 %or_ln51_42" [sha256.cpp:51]   --->   Operation 407 'xor' 'xor_ln51_42' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 408 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_31)   --->   "%xor_ln51_43 = xor i32 %xor_ln51_42, i32 %or_ln51_41" [sha256.cpp:51]   --->   Operation 408 'xor' 'xor_ln51_43' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 409 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_31 = add i32 %xor_ln51_43, i32 %xor_ln51_41" [sha256.cpp:51]   --->   Operation 409 'add' 'add_ln51_31' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 410 [1/1] (0.00ns)   --->   "%ctx_addr_37 = getelementptr i64 %ctx, i64 0, i64 10" [sha256.cpp:54]   --->   Operation 410 'getelementptr' 'ctx_addr_37' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 411 [2/2] (0.73ns)   --->   "%ctx_load_27 = load i4 %ctx_addr_37" [sha256.cpp:54]   --->   Operation 411 'load' 'ctx_load_27' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_8 : Operation 412 [1/1] (0.00ns)   --->   "%ctx_addr_38 = getelementptr i64 %ctx, i64 0, i64 11" [sha256.cpp:56]   --->   Operation 412 'getelementptr' 'ctx_addr_38' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 413 [2/2] (0.73ns)   --->   "%ctx_load_28 = load i4 %ctx_addr_38" [sha256.cpp:56]   --->   Operation 413 'load' 'ctx_load_28' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>

State 9 <SV = 8> <Delay = 4.09>
ST_9 : Operation 414 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_27 = add i32 %m_9, i32 %m_18" [sha256.cpp:51]   --->   Operation 414 'add' 'add_ln51_27' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_9 : Operation 415 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_25 = add i32 %add_ln51_28, i32 %add_ln51_27" [sha256.cpp:51]   --->   Operation 415 'add' 'm_25' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_9 : Operation 416 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_30 = add i32 %m_10, i32 %m_19" [sha256.cpp:51]   --->   Operation 416 'add' 'add_ln51_30' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_9 : Operation 417 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_26 = add i32 %add_ln51_31, i32 %add_ln51_30" [sha256.cpp:51]   --->   Operation 417 'add' 'm_26' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_9 : Operation 418 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%lshr_ln51_40 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_25, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 418 'partselect' 'lshr_ln51_40' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 419 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%trunc_ln51_18 = trunc i32 %m_25" [sha256.cpp:51]   --->   Operation 419 'trunc' 'trunc_ln51_18' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 420 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%or_ln51_43 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_18, i15 %lshr_ln51_40" [sha256.cpp:51]   --->   Operation 420 'bitconcatenate' 'or_ln51_43' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 421 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%lshr_ln51_41 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_25, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 421 'partselect' 'lshr_ln51_41' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 422 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%trunc_ln51_19 = trunc i32 %m_25" [sha256.cpp:51]   --->   Operation 422 'trunc' 'trunc_ln51_19' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 423 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%or_ln51_44 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_19, i13 %lshr_ln51_41" [sha256.cpp:51]   --->   Operation 423 'bitconcatenate' 'or_ln51_44' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 424 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%lshr_ln51_42 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_25, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 424 'partselect' 'lshr_ln51_42' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 425 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%zext_ln51_22 = zext i22 %lshr_ln51_42" [sha256.cpp:51]   --->   Operation 425 'zext' 'zext_ln51_22' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 426 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%xor_ln51_44 = xor i32 %zext_ln51_22, i32 %or_ln51_44" [sha256.cpp:51]   --->   Operation 426 'xor' 'xor_ln51_44' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 427 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%xor_ln51_45 = xor i32 %xor_ln51_44, i32 %or_ln51_43" [sha256.cpp:51]   --->   Operation 427 'xor' 'xor_ln51_45' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 428 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%tmp_90 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ctx_load_25, i32 31" [sha256.cpp:51]   --->   Operation 428 'bitselect' 'tmp_90' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 429 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%tmp_91 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %ctx_load_25, i32 24, i32 30" [sha256.cpp:51]   --->   Operation 429 'partselect' 'tmp_91' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 430 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%or_ln51_45 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i8.i8.i8.i1, i7 %tmp_91, i8 %trunc_ln49_29, i8 %tmp_3, i8 %trunc_ln49_30, i1 %tmp_90" [sha256.cpp:51]   --->   Operation 430 'bitconcatenate' 'or_ln51_45' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 431 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%tmp_92 = partselect i6 @_ssdm_op_PartSelect.i6.i64.i32.i32, i64 %ctx_load_25, i32 10, i32 15" [sha256.cpp:51]   --->   Operation 431 'partselect' 'tmp_92' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 432 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%tmp_93 = partselect i2 @_ssdm_op_PartSelect.i2.i64.i32.i32, i64 %ctx_load_25, i32 8, i32 9" [sha256.cpp:51]   --->   Operation 432 'partselect' 'tmp_93' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 433 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%or_ln51_46 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i8.i8.i8.i6, i2 %tmp_93, i8 %trunc_ln49_30, i8 %trunc_ln49_31, i8 %trunc_ln49_29, i6 %tmp_92" [sha256.cpp:51]   --->   Operation 433 'bitconcatenate' 'or_ln51_46' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 434 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%tmp_94 = partselect i5 @_ssdm_op_PartSelect.i5.i64.i32.i32, i64 %ctx_load_25, i32 27, i32 31" [sha256.cpp:51]   --->   Operation 434 'partselect' 'tmp_94' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 435 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%lshr_ln51_43 = bitconcatenate i29 @_ssdm_op_BitConcatenate.i29.i8.i8.i8.i5, i8 %trunc_ln49_29, i8 %tmp_3, i8 %trunc_ln49_30, i5 %tmp_94" [sha256.cpp:51]   --->   Operation 435 'bitconcatenate' 'lshr_ln51_43' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 436 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%zext_ln51_23 = zext i29 %lshr_ln51_43" [sha256.cpp:51]   --->   Operation 436 'zext' 'zext_ln51_23' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 437 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%xor_ln51_46 = xor i32 %zext_ln51_23, i32 %or_ln51_46" [sha256.cpp:51]   --->   Operation 437 'xor' 'xor_ln51_46' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 438 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_34)   --->   "%xor_ln51_47 = xor i32 %xor_ln51_46, i32 %or_ln51_45" [sha256.cpp:51]   --->   Operation 438 'xor' 'xor_ln51_47' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 439 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_33 = add i32 %m_11, i32 %m_20" [sha256.cpp:51]   --->   Operation 439 'add' 'add_ln51_33' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_9 : Operation 440 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_34 = add i32 %xor_ln51_47, i32 %xor_ln51_45" [sha256.cpp:51]   --->   Operation 440 'add' 'add_ln51_34' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 441 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_27 = add i32 %add_ln51_34, i32 %add_ln51_33" [sha256.cpp:51]   --->   Operation 441 'add' 'm_27' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_9 : Operation 442 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%lshr_ln51_44 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_26, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 442 'partselect' 'lshr_ln51_44' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 443 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%trunc_ln51_20 = trunc i32 %m_26" [sha256.cpp:51]   --->   Operation 443 'trunc' 'trunc_ln51_20' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 444 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%or_ln51_47 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_20, i15 %lshr_ln51_44" [sha256.cpp:51]   --->   Operation 444 'bitconcatenate' 'or_ln51_47' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 445 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%lshr_ln51_45 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_26, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 445 'partselect' 'lshr_ln51_45' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 446 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%trunc_ln51_21 = trunc i32 %m_26" [sha256.cpp:51]   --->   Operation 446 'trunc' 'trunc_ln51_21' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 447 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%or_ln51_48 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_21, i13 %lshr_ln51_45" [sha256.cpp:51]   --->   Operation 447 'bitconcatenate' 'or_ln51_48' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 448 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%lshr_ln51_46 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_26, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 448 'partselect' 'lshr_ln51_46' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 449 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%zext_ln51_24 = zext i22 %lshr_ln51_46" [sha256.cpp:51]   --->   Operation 449 'zext' 'zext_ln51_24' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 450 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%xor_ln51_48 = xor i32 %zext_ln51_24, i32 %or_ln51_48" [sha256.cpp:51]   --->   Operation 450 'xor' 'xor_ln51_48' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 451 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%xor_ln51_49 = xor i32 %xor_ln51_48, i32 %or_ln51_47" [sha256.cpp:51]   --->   Operation 451 'xor' 'xor_ln51_49' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 452 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%tmp_95 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ctx_load_25, i32 63" [sha256.cpp:51]   --->   Operation 452 'bitselect' 'tmp_95' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 453 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%tmp_96 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %ctx_load_25, i32 56, i32 62" [sha256.cpp:51]   --->   Operation 453 'partselect' 'tmp_96' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 454 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%or_ln51_49 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i8.i8.i8.i1, i7 %tmp_96, i8 %tmp_20, i8 %tmp_21, i8 %trunc_ln49_32, i1 %tmp_95" [sha256.cpp:51]   --->   Operation 454 'bitconcatenate' 'or_ln51_49' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 455 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%tmp_97 = partselect i6 @_ssdm_op_PartSelect.i6.i64.i32.i32, i64 %ctx_load_25, i32 42, i32 47" [sha256.cpp:51]   --->   Operation 455 'partselect' 'tmp_97' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 456 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%tmp_98 = partselect i2 @_ssdm_op_PartSelect.i2.i64.i32.i32, i64 %ctx_load_25, i32 40, i32 41" [sha256.cpp:51]   --->   Operation 456 'partselect' 'tmp_98' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 457 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%or_ln51_50 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i8.i8.i8.i6, i2 %tmp_98, i8 %trunc_ln49_32, i8 %trunc_ln49_33, i8 %tmp_20, i6 %tmp_97" [sha256.cpp:51]   --->   Operation 457 'bitconcatenate' 'or_ln51_50' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 458 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%tmp_99 = partselect i5 @_ssdm_op_PartSelect.i5.i64.i32.i32, i64 %ctx_load_25, i32 59, i32 63" [sha256.cpp:51]   --->   Operation 458 'partselect' 'tmp_99' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 459 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%lshr_ln51_47 = bitconcatenate i29 @_ssdm_op_BitConcatenate.i29.i8.i8.i8.i5, i8 %tmp_20, i8 %tmp_21, i8 %trunc_ln49_32, i5 %tmp_99" [sha256.cpp:51]   --->   Operation 459 'bitconcatenate' 'lshr_ln51_47' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 460 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%zext_ln51_25 = zext i29 %lshr_ln51_47" [sha256.cpp:51]   --->   Operation 460 'zext' 'zext_ln51_25' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 461 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%xor_ln51_50 = xor i32 %zext_ln51_25, i32 %or_ln51_50" [sha256.cpp:51]   --->   Operation 461 'xor' 'xor_ln51_50' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 462 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_37)   --->   "%xor_ln51_51 = xor i32 %xor_ln51_50, i32 %or_ln51_49" [sha256.cpp:51]   --->   Operation 462 'xor' 'xor_ln51_51' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 463 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_36 = add i32 %m_12, i32 %m_21" [sha256.cpp:51]   --->   Operation 463 'add' 'add_ln51_36' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_9 : Operation 464 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_37 = add i32 %xor_ln51_51, i32 %xor_ln51_49" [sha256.cpp:51]   --->   Operation 464 'add' 'add_ln51_37' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 465 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_28 = add i32 %add_ln51_37, i32 %add_ln51_36" [sha256.cpp:51]   --->   Operation 465 'add' 'm_28' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_9 : Operation 466 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%lshr_ln51_48 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_27, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 466 'partselect' 'lshr_ln51_48' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 467 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%trunc_ln51_22 = trunc i32 %m_27" [sha256.cpp:51]   --->   Operation 467 'trunc' 'trunc_ln51_22' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 468 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%or_ln51_51 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_22, i15 %lshr_ln51_48" [sha256.cpp:51]   --->   Operation 468 'bitconcatenate' 'or_ln51_51' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 469 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%lshr_ln51_49 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_27, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 469 'partselect' 'lshr_ln51_49' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 470 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%trunc_ln51_23 = trunc i32 %m_27" [sha256.cpp:51]   --->   Operation 470 'trunc' 'trunc_ln51_23' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 471 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%or_ln51_52 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_23, i13 %lshr_ln51_49" [sha256.cpp:51]   --->   Operation 471 'bitconcatenate' 'or_ln51_52' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 472 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%lshr_ln51_50 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_27, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 472 'partselect' 'lshr_ln51_50' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 473 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%zext_ln51_26 = zext i22 %lshr_ln51_50" [sha256.cpp:51]   --->   Operation 473 'zext' 'zext_ln51_26' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 474 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%xor_ln51_52 = xor i32 %zext_ln51_26, i32 %or_ln51_52" [sha256.cpp:51]   --->   Operation 474 'xor' 'xor_ln51_52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 475 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%xor_ln51_53 = xor i32 %xor_ln51_52, i32 %or_ln51_51" [sha256.cpp:51]   --->   Operation 475 'xor' 'xor_ln51_53' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 476 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%tmp_100 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ctx_load_26, i32 31" [sha256.cpp:51]   --->   Operation 476 'bitselect' 'tmp_100' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 477 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%tmp_101 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %ctx_load_26, i32 24, i32 30" [sha256.cpp:51]   --->   Operation 477 'partselect' 'tmp_101' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 478 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%or_ln51_53 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i8.i8.i8.i1, i7 %tmp_101, i8 %trunc_ln49_34, i8 %tmp_4, i8 %tmp_22, i1 %tmp_100" [sha256.cpp:51]   --->   Operation 478 'bitconcatenate' 'or_ln51_53' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 479 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%tmp_102 = partselect i6 @_ssdm_op_PartSelect.i6.i64.i32.i32, i64 %ctx_load_26, i32 10, i32 15" [sha256.cpp:51]   --->   Operation 479 'partselect' 'tmp_102' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 480 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%tmp_103 = partselect i2 @_ssdm_op_PartSelect.i2.i64.i32.i32, i64 %ctx_load_26, i32 8, i32 9" [sha256.cpp:51]   --->   Operation 480 'partselect' 'tmp_103' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 481 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%or_ln51_54 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i8.i8.i8.i6, i2 %tmp_103, i8 %tmp_22, i8 %trunc_ln49_35, i8 %trunc_ln49_34, i6 %tmp_102" [sha256.cpp:51]   --->   Operation 481 'bitconcatenate' 'or_ln51_54' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 482 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%tmp_104 = partselect i5 @_ssdm_op_PartSelect.i5.i64.i32.i32, i64 %ctx_load_26, i32 27, i32 31" [sha256.cpp:51]   --->   Operation 482 'partselect' 'tmp_104' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 483 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%lshr_ln51_51 = bitconcatenate i29 @_ssdm_op_BitConcatenate.i29.i8.i8.i8.i5, i8 %trunc_ln49_34, i8 %tmp_4, i8 %tmp_22, i5 %tmp_104" [sha256.cpp:51]   --->   Operation 483 'bitconcatenate' 'lshr_ln51_51' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 484 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%zext_ln51_27 = zext i29 %lshr_ln51_51" [sha256.cpp:51]   --->   Operation 484 'zext' 'zext_ln51_27' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 485 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%xor_ln51_54 = xor i32 %zext_ln51_27, i32 %or_ln51_54" [sha256.cpp:51]   --->   Operation 485 'xor' 'xor_ln51_54' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 486 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_40)   --->   "%xor_ln51_55 = xor i32 %xor_ln51_54, i32 %or_ln51_53" [sha256.cpp:51]   --->   Operation 486 'xor' 'xor_ln51_55' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 487 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_40 = add i32 %xor_ln51_55, i32 %xor_ln51_53" [sha256.cpp:51]   --->   Operation 487 'add' 'add_ln51_40' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 488 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%lshr_ln51_52 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_28, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 488 'partselect' 'lshr_ln51_52' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 489 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%trunc_ln51_24 = trunc i32 %m_28" [sha256.cpp:51]   --->   Operation 489 'trunc' 'trunc_ln51_24' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 490 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%or_ln51_55 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_24, i15 %lshr_ln51_52" [sha256.cpp:51]   --->   Operation 490 'bitconcatenate' 'or_ln51_55' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 491 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%lshr_ln51_53 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_28, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 491 'partselect' 'lshr_ln51_53' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 492 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%trunc_ln51_25 = trunc i32 %m_28" [sha256.cpp:51]   --->   Operation 492 'trunc' 'trunc_ln51_25' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 493 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%or_ln51_56 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_25, i13 %lshr_ln51_53" [sha256.cpp:51]   --->   Operation 493 'bitconcatenate' 'or_ln51_56' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 494 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%lshr_ln51_54 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_28, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 494 'partselect' 'lshr_ln51_54' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 495 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%zext_ln51_28 = zext i22 %lshr_ln51_54" [sha256.cpp:51]   --->   Operation 495 'zext' 'zext_ln51_28' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 496 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%xor_ln51_56 = xor i32 %zext_ln51_28, i32 %or_ln51_56" [sha256.cpp:51]   --->   Operation 496 'xor' 'xor_ln51_56' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 497 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%xor_ln51_57 = xor i32 %xor_ln51_56, i32 %or_ln51_55" [sha256.cpp:51]   --->   Operation 497 'xor' 'xor_ln51_57' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 498 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%tmp_105 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %ctx_load_26, i32 63" [sha256.cpp:51]   --->   Operation 498 'bitselect' 'tmp_105' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 499 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%tmp_106 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %ctx_load_26, i32 56, i32 62" [sha256.cpp:51]   --->   Operation 499 'partselect' 'tmp_106' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 500 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%or_ln51_57 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i8.i8.i8.i1, i7 %tmp_106, i8 %tmp_23, i8 %tmp_24, i8 %tmp_25, i1 %tmp_105" [sha256.cpp:51]   --->   Operation 500 'bitconcatenate' 'or_ln51_57' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 501 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%tmp_107 = partselect i6 @_ssdm_op_PartSelect.i6.i64.i32.i32, i64 %ctx_load_26, i32 42, i32 47" [sha256.cpp:51]   --->   Operation 501 'partselect' 'tmp_107' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 502 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%tmp_108 = partselect i2 @_ssdm_op_PartSelect.i2.i64.i32.i32, i64 %ctx_load_26, i32 40, i32 41" [sha256.cpp:51]   --->   Operation 502 'partselect' 'tmp_108' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 503 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%or_ln51_58 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i8.i8.i8.i6, i2 %tmp_108, i8 %tmp_25, i8 %trunc_ln49_36, i8 %tmp_23, i6 %tmp_107" [sha256.cpp:51]   --->   Operation 503 'bitconcatenate' 'or_ln51_58' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 504 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%tmp_109 = partselect i5 @_ssdm_op_PartSelect.i5.i64.i32.i32, i64 %ctx_load_26, i32 59, i32 63" [sha256.cpp:51]   --->   Operation 504 'partselect' 'tmp_109' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 505 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%lshr_ln51_55 = bitconcatenate i29 @_ssdm_op_BitConcatenate.i29.i8.i8.i8.i5, i8 %tmp_23, i8 %tmp_24, i8 %tmp_25, i5 %tmp_109" [sha256.cpp:51]   --->   Operation 505 'bitconcatenate' 'lshr_ln51_55' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 506 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%zext_ln51_29 = zext i29 %lshr_ln51_55" [sha256.cpp:51]   --->   Operation 506 'zext' 'zext_ln51_29' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 507 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%xor_ln51_58 = xor i32 %zext_ln51_29, i32 %or_ln51_58" [sha256.cpp:51]   --->   Operation 507 'xor' 'xor_ln51_58' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 508 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_43)   --->   "%xor_ln51_59 = xor i32 %xor_ln51_58, i32 %or_ln51_57" [sha256.cpp:51]   --->   Operation 508 'xor' 'xor_ln51_59' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 509 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_43 = add i32 %xor_ln51_59, i32 %xor_ln51_57" [sha256.cpp:51]   --->   Operation 509 'add' 'add_ln51_43' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 510 [1/2] (0.73ns)   --->   "%ctx_load_27 = load i4 %ctx_addr_37" [sha256.cpp:54]   --->   Operation 510 'load' 'ctx_load_27' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_9 : Operation 511 [1/1] (0.00ns)   --->   "%a = trunc i64 %ctx_load_27" [sha256.cpp:54]   --->   Operation 511 'trunc' 'a' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 512 [1/1] (0.00ns)   --->   "%b_33 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ctx_load_27, i32 32, i32 63" [sha256.cpp:55]   --->   Operation 512 'partselect' 'b_33' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 513 [1/2] (0.73ns)   --->   "%ctx_load_28 = load i4 %ctx_addr_38" [sha256.cpp:56]   --->   Operation 513 'load' 'ctx_load_28' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_9 : Operation 514 [1/1] (0.00ns)   --->   "%c_33 = trunc i64 %ctx_load_28" [sha256.cpp:56]   --->   Operation 514 'trunc' 'c_33' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 515 [1/1] (0.00ns)   --->   "%d = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ctx_load_28, i32 32, i32 63" [sha256.cpp:57]   --->   Operation 515 'partselect' 'd' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 516 [1/1] (0.00ns)   --->   "%ctx_addr_39 = getelementptr i64 %ctx, i64 0, i64 12" [sha256.cpp:58]   --->   Operation 516 'getelementptr' 'ctx_addr_39' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 517 [2/2] (0.73ns)   --->   "%ctx_load_29 = load i4 %ctx_addr_39" [sha256.cpp:58]   --->   Operation 517 'load' 'ctx_load_29' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_9 : Operation 518 [1/1] (0.00ns)   --->   "%ctx_addr_40 = getelementptr i64 %ctx, i64 0, i64 13" [sha256.cpp:60]   --->   Operation 518 'getelementptr' 'ctx_addr_40' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 519 [2/2] (0.73ns)   --->   "%ctx_load_30 = load i4 %ctx_addr_40" [sha256.cpp:60]   --->   Operation 519 'load' 'ctx_load_30' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_9 : Operation 520 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_1)   --->   "%lshr_ln2 = partselect i30 @_ssdm_op_PartSelect.i30.i64.i32.i32, i64 %ctx_load_27, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 520 'partselect' 'lshr_ln2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 521 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_1)   --->   "%trunc_ln66 = trunc i64 %ctx_load_27" [sha256.cpp:66]   --->   Operation 521 'trunc' 'trunc_ln66' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 522 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_1)   --->   "%or_ln3 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66, i30 %lshr_ln2" [sha256.cpp:66]   --->   Operation 522 'bitconcatenate' 'or_ln3' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 523 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_1)   --->   "%lshr_ln66_1 = partselect i19 @_ssdm_op_PartSelect.i19.i64.i32.i32, i64 %ctx_load_27, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 523 'partselect' 'lshr_ln66_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 524 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_1)   --->   "%trunc_ln66_1 = trunc i64 %ctx_load_27" [sha256.cpp:66]   --->   Operation 524 'trunc' 'trunc_ln66_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 525 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_1)   --->   "%or_ln66_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_1, i19 %lshr_ln66_1" [sha256.cpp:66]   --->   Operation 525 'bitconcatenate' 'or_ln66_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 526 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_1)   --->   "%lshr_ln66_2 = partselect i10 @_ssdm_op_PartSelect.i10.i64.i32.i32, i64 %ctx_load_27, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 526 'partselect' 'lshr_ln66_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 527 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_1)   --->   "%trunc_ln66_2 = trunc i64 %ctx_load_27" [sha256.cpp:66]   --->   Operation 527 'trunc' 'trunc_ln66_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 528 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_1)   --->   "%or_ln66_2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_2, i10 %lshr_ln66_2" [sha256.cpp:66]   --->   Operation 528 'bitconcatenate' 'or_ln66_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 529 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_1)   --->   "%xor_ln66 = xor i32 %or_ln3, i32 %or_ln66_1" [sha256.cpp:66]   --->   Operation 529 'xor' 'xor_ln66' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 530 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_1 = xor i32 %xor_ln66, i32 %or_ln66_2" [sha256.cpp:66]   --->   Operation 530 'xor' 'xor_ln66_1' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 6.07>
ST_10 : Operation 531 [1/2] (0.73ns)   --->   "%ctx_load_29 = load i4 %ctx_addr_39" [sha256.cpp:58]   --->   Operation 531 'load' 'ctx_load_29' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_10 : Operation 532 [1/1] (0.00ns)   --->   "%e = trunc i64 %ctx_load_29" [sha256.cpp:58]   --->   Operation 532 'trunc' 'e' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 533 [1/1] (0.00ns)   --->   "%f_33 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ctx_load_29, i32 32, i32 63" [sha256.cpp:59]   --->   Operation 533 'partselect' 'f_33' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 534 [1/2] (0.73ns)   --->   "%ctx_load_30 = load i4 %ctx_addr_40" [sha256.cpp:60]   --->   Operation 534 'load' 'ctx_load_30' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_10 : Operation 535 [1/1] (0.00ns)   --->   "%g_33 = trunc i64 %ctx_load_30" [sha256.cpp:60]   --->   Operation 535 'trunc' 'g_33' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 536 [1/1] (0.00ns)   --->   "%h = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ctx_load_30, i32 32, i32 63" [sha256.cpp:61]   --->   Operation 536 'partselect' 'h' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 537 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_1)   --->   "%lshr_ln = partselect i26 @_ssdm_op_PartSelect.i26.i64.i32.i32, i64 %ctx_load_29, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 537 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 538 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_1)   --->   "%trunc_ln65 = trunc i64 %ctx_load_29" [sha256.cpp:65]   --->   Operation 538 'trunc' 'trunc_ln65' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 539 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_1)   --->   "%or_ln2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65, i26 %lshr_ln" [sha256.cpp:65]   --->   Operation 539 'bitconcatenate' 'or_ln2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 540 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_1)   --->   "%lshr_ln65_1 = partselect i21 @_ssdm_op_PartSelect.i21.i64.i32.i32, i64 %ctx_load_29, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 540 'partselect' 'lshr_ln65_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 541 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_1)   --->   "%trunc_ln65_1 = trunc i64 %ctx_load_29" [sha256.cpp:65]   --->   Operation 541 'trunc' 'trunc_ln65_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 542 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_1)   --->   "%or_ln65_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_1, i21 %lshr_ln65_1" [sha256.cpp:65]   --->   Operation 542 'bitconcatenate' 'or_ln65_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 543 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_1)   --->   "%lshr_ln65_2 = partselect i7 @_ssdm_op_PartSelect.i7.i64.i32.i32, i64 %ctx_load_29, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 543 'partselect' 'lshr_ln65_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 544 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_1)   --->   "%trunc_ln65_2 = trunc i64 %ctx_load_29" [sha256.cpp:65]   --->   Operation 544 'trunc' 'trunc_ln65_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 545 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_1)   --->   "%or_ln65_2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_2, i7 %lshr_ln65_2" [sha256.cpp:65]   --->   Operation 545 'bitconcatenate' 'or_ln65_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 546 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_1)   --->   "%xor_ln65 = xor i32 %or_ln2, i32 %or_ln65_1" [sha256.cpp:65]   --->   Operation 546 'xor' 'xor_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 547 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_1 = xor i32 %xor_ln65, i32 %or_ln65_2" [sha256.cpp:65]   --->   Operation 547 'xor' 'xor_ln65_1' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 548 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_3)   --->   "%and_ln65 = and i32 %f_33, i32 %e" [sha256.cpp:65]   --->   Operation 548 'and' 'and_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 549 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_3)   --->   "%xor_ln65_2 = xor i32 %e, i32 4294967295" [sha256.cpp:65]   --->   Operation 549 'xor' 'xor_ln65_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 550 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_3)   --->   "%and_ln65_1 = and i32 %g_33, i32 %xor_ln65_2" [sha256.cpp:65]   --->   Operation 550 'and' 'and_ln65_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 551 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_3 = xor i32 %and_ln65_1, i32 %and_ln65" [sha256.cpp:65]   --->   Operation 551 'xor' 'xor_ln65_3' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 552 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65 = add i32 %xor_ln65_3, i32 %h" [sha256.cpp:65]   --->   Operation 552 'add' 'add_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_10 : Operation 553 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_1 = add i32 %xor_ln65_1, i32 1116352408" [sha256.cpp:65]   --->   Operation 553 'add' 'add_ln65_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_10 : Operation 554 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_2 = add i32 %add_ln65_1, i32 %m" [sha256.cpp:65]   --->   Operation 554 'add' 'add_ln65_2' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_10 : Operation 555 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1 = add i32 %add_ln65_2, i32 %add_ln65" [sha256.cpp:65]   --->   Operation 555 'add' 't1' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_10 : Operation 556 [1/1] (1.14ns)   --->   "%e_33 = add i32 %t1, i32 %d" [sha256.cpp:70]   --->   Operation 556 'add' 'e_33' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 557 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_5)   --->   "%lshr_ln65_3 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_33, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 557 'partselect' 'lshr_ln65_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 558 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_5)   --->   "%trunc_ln65_3 = trunc i32 %e_33" [sha256.cpp:65]   --->   Operation 558 'trunc' 'trunc_ln65_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 559 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_5)   --->   "%or_ln65_3 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_3, i26 %lshr_ln65_3" [sha256.cpp:65]   --->   Operation 559 'bitconcatenate' 'or_ln65_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 560 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_5)   --->   "%lshr_ln65_4 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_33, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 560 'partselect' 'lshr_ln65_4' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 561 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_5)   --->   "%trunc_ln65_4 = trunc i32 %e_33" [sha256.cpp:65]   --->   Operation 561 'trunc' 'trunc_ln65_4' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 562 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_5)   --->   "%or_ln65_4 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_4, i21 %lshr_ln65_4" [sha256.cpp:65]   --->   Operation 562 'bitconcatenate' 'or_ln65_4' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 563 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_5)   --->   "%lshr_ln65_5 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_33, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 563 'partselect' 'lshr_ln65_5' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 564 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_5)   --->   "%trunc_ln65_5 = trunc i32 %e_33" [sha256.cpp:65]   --->   Operation 564 'trunc' 'trunc_ln65_5' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 565 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_5)   --->   "%or_ln65_5 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_5, i7 %lshr_ln65_5" [sha256.cpp:65]   --->   Operation 565 'bitconcatenate' 'or_ln65_5' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 566 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_5)   --->   "%xor_ln65_4 = xor i32 %or_ln65_3, i32 %or_ln65_4" [sha256.cpp:65]   --->   Operation 566 'xor' 'xor_ln65_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 567 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_5 = xor i32 %xor_ln65_4, i32 %or_ln65_5" [sha256.cpp:65]   --->   Operation 567 'xor' 'xor_ln65_5' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 568 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_7)   --->   "%and_ln65_2 = and i32 %e_33, i32 %e" [sha256.cpp:65]   --->   Operation 568 'and' 'and_ln65_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 569 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_7)   --->   "%xor_ln65_6 = xor i32 %e_33, i32 4294967295" [sha256.cpp:65]   --->   Operation 569 'xor' 'xor_ln65_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 570 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_7)   --->   "%and_ln65_3 = and i32 %f_33, i32 %xor_ln65_6" [sha256.cpp:65]   --->   Operation 570 'and' 'and_ln65_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 571 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_7 = xor i32 %and_ln65_2, i32 %and_ln65_3" [sha256.cpp:65]   --->   Operation 571 'xor' 'xor_ln65_7' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 572 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_4 = add i32 %xor_ln65_7, i32 %g_33" [sha256.cpp:65]   --->   Operation 572 'add' 'add_ln65_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_10 : Operation 573 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_5 = add i32 %xor_ln65_5, i32 1899447441" [sha256.cpp:65]   --->   Operation 573 'add' 'add_ln65_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_10 : Operation 574 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_6 = add i32 %add_ln65_5, i32 %m_1" [sha256.cpp:65]   --->   Operation 574 'add' 'add_ln65_6' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_10 : Operation 575 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_1 = add i32 %add_ln65_6, i32 %add_ln65_4" [sha256.cpp:65]   --->   Operation 575 'add' 't1_1' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 11 <SV = 10> <Delay = 6.49>
ST_11 : Operation 576 [1/1] (0.28ns)   --->   "%and_ln66 = and i32 %b_33, i32 %a" [sha256.cpp:66]   --->   Operation 576 'and' 'and_ln66' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 577 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_3)   --->   "%and_ln66_1 = and i32 %c_33, i32 %a" [sha256.cpp:66]   --->   Operation 577 'and' 'and_ln66_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 578 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_3)   --->   "%and_ln66_2 = and i32 %c_33, i32 %b_33" [sha256.cpp:66]   --->   Operation 578 'and' 'and_ln66_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 579 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_3)   --->   "%xor_ln66_2 = xor i32 %and_ln66, i32 %and_ln66_2" [sha256.cpp:66]   --->   Operation 579 'xor' 'xor_ln66_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 580 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_3 = xor i32 %xor_ln66_2, i32 %and_ln66_1" [sha256.cpp:66]   --->   Operation 580 'xor' 'xor_ln66_3' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 581 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74 = add i32 %xor_ln66_1, i32 %t1" [sha256.cpp:74]   --->   Operation 581 'add' 'add_ln74' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_11 : Operation 582 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_33 = add i32 %add_ln74, i32 %xor_ln66_3" [sha256.cpp:74]   --->   Operation 582 'add' 'a_33' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_11 : Operation 583 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_5)   --->   "%lshr_ln66_3 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_33, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 583 'partselect' 'lshr_ln66_3' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 584 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_5)   --->   "%trunc_ln66_3 = trunc i32 %a_33" [sha256.cpp:66]   --->   Operation 584 'trunc' 'trunc_ln66_3' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 585 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_5)   --->   "%or_ln66_3 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_3, i30 %lshr_ln66_3" [sha256.cpp:66]   --->   Operation 585 'bitconcatenate' 'or_ln66_3' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 586 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_5)   --->   "%lshr_ln66_4 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_33, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 586 'partselect' 'lshr_ln66_4' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 587 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_5)   --->   "%trunc_ln66_4 = trunc i32 %a_33" [sha256.cpp:66]   --->   Operation 587 'trunc' 'trunc_ln66_4' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 588 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_5)   --->   "%or_ln66_4 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_4, i19 %lshr_ln66_4" [sha256.cpp:66]   --->   Operation 588 'bitconcatenate' 'or_ln66_4' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 589 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_5)   --->   "%lshr_ln66_5 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_33, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 589 'partselect' 'lshr_ln66_5' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 590 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_5)   --->   "%trunc_ln66_5 = trunc i32 %a_33" [sha256.cpp:66]   --->   Operation 590 'trunc' 'trunc_ln66_5' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 591 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_5)   --->   "%or_ln66_5 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_5, i10 %lshr_ln66_5" [sha256.cpp:66]   --->   Operation 591 'bitconcatenate' 'or_ln66_5' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 592 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_5)   --->   "%xor_ln66_4 = xor i32 %or_ln66_3, i32 %or_ln66_4" [sha256.cpp:66]   --->   Operation 592 'xor' 'xor_ln66_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 593 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_5 = xor i32 %xor_ln66_4, i32 %or_ln66_5" [sha256.cpp:66]   --->   Operation 593 'xor' 'xor_ln66_5' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 594 [1/1] (0.28ns)   --->   "%and_ln66_3 = and i32 %a_33, i32 %a" [sha256.cpp:66]   --->   Operation 594 'and' 'and_ln66_3' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 595 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_7)   --->   "%and_ln66_4 = and i32 %a_33, i32 %b_33" [sha256.cpp:66]   --->   Operation 595 'and' 'and_ln66_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 596 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_7)   --->   "%xor_ln66_6 = xor i32 %and_ln66, i32 %and_ln66_4" [sha256.cpp:66]   --->   Operation 596 'xor' 'xor_ln66_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 597 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_7 = xor i32 %xor_ln66_6, i32 %and_ln66_3" [sha256.cpp:66]   --->   Operation 597 'xor' 'xor_ln66_7' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 598 [1/1] (1.14ns)   --->   "%e_34 = add i32 %t1_1, i32 %c_33" [sha256.cpp:70]   --->   Operation 598 'add' 'e_34' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 599 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_2 = add i32 %xor_ln66_7, i32 %t1_1" [sha256.cpp:74]   --->   Operation 599 'add' 'add_ln74_2' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_11 : Operation 600 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_34 = add i32 %add_ln74_2, i32 %xor_ln66_5" [sha256.cpp:74]   --->   Operation 600 'add' 'a_34' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_11 : Operation 601 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_9)   --->   "%lshr_ln65_6 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_34, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 601 'partselect' 'lshr_ln65_6' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 602 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_9)   --->   "%trunc_ln65_6 = trunc i32 %e_34" [sha256.cpp:65]   --->   Operation 602 'trunc' 'trunc_ln65_6' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 603 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_9)   --->   "%or_ln65_6 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_6, i26 %lshr_ln65_6" [sha256.cpp:65]   --->   Operation 603 'bitconcatenate' 'or_ln65_6' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 604 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_9)   --->   "%lshr_ln65_7 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_34, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 604 'partselect' 'lshr_ln65_7' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 605 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_9)   --->   "%trunc_ln65_7 = trunc i32 %e_34" [sha256.cpp:65]   --->   Operation 605 'trunc' 'trunc_ln65_7' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 606 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_9)   --->   "%or_ln65_7 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_7, i21 %lshr_ln65_7" [sha256.cpp:65]   --->   Operation 606 'bitconcatenate' 'or_ln65_7' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 607 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_9)   --->   "%lshr_ln65_8 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_34, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 607 'partselect' 'lshr_ln65_8' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 608 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_9)   --->   "%trunc_ln65_8 = trunc i32 %e_34" [sha256.cpp:65]   --->   Operation 608 'trunc' 'trunc_ln65_8' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 609 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_9)   --->   "%or_ln65_8 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_8, i7 %lshr_ln65_8" [sha256.cpp:65]   --->   Operation 609 'bitconcatenate' 'or_ln65_8' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 610 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_9)   --->   "%xor_ln65_8 = xor i32 %or_ln65_6, i32 %or_ln65_7" [sha256.cpp:65]   --->   Operation 610 'xor' 'xor_ln65_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 611 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_9 = xor i32 %xor_ln65_8, i32 %or_ln65_8" [sha256.cpp:65]   --->   Operation 611 'xor' 'xor_ln65_9' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 612 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_11)   --->   "%and_ln65_4 = and i32 %e_34, i32 %e_33" [sha256.cpp:65]   --->   Operation 612 'and' 'and_ln65_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 613 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_11)   --->   "%xor_ln65_10 = xor i32 %e_34, i32 4294967295" [sha256.cpp:65]   --->   Operation 613 'xor' 'xor_ln65_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 614 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_11)   --->   "%and_ln65_5 = and i32 %e, i32 %xor_ln65_10" [sha256.cpp:65]   --->   Operation 614 'and' 'and_ln65_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 615 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_11 = xor i32 %and_ln65_4, i32 %and_ln65_5" [sha256.cpp:65]   --->   Operation 615 'xor' 'xor_ln65_11' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 616 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_8 = add i32 %f_33, i32 %xor_ln65_11" [sha256.cpp:65]   --->   Operation 616 'add' 'add_ln65_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_11 : Operation 617 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_9 = add i32 %m_2, i32 %xor_ln65_9" [sha256.cpp:65]   --->   Operation 617 'add' 'add_ln65_9' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_11 : Operation 618 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_10 = add i32 %add_ln65_9, i32 3049323471" [sha256.cpp:65]   --->   Operation 618 'add' 'add_ln65_10' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_11 : Operation 619 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_2 = add i32 %add_ln65_10, i32 %add_ln65_8" [sha256.cpp:65]   --->   Operation 619 'add' 't1_2' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_11 : Operation 620 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_9)   --->   "%lshr_ln66_6 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_34, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 620 'partselect' 'lshr_ln66_6' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 621 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_9)   --->   "%trunc_ln66_6 = trunc i32 %a_34" [sha256.cpp:66]   --->   Operation 621 'trunc' 'trunc_ln66_6' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 622 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_9)   --->   "%or_ln66_6 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_6, i30 %lshr_ln66_6" [sha256.cpp:66]   --->   Operation 622 'bitconcatenate' 'or_ln66_6' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 623 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_9)   --->   "%lshr_ln66_7 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_34, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 623 'partselect' 'lshr_ln66_7' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 624 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_9)   --->   "%trunc_ln66_7 = trunc i32 %a_34" [sha256.cpp:66]   --->   Operation 624 'trunc' 'trunc_ln66_7' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 625 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_9)   --->   "%or_ln66_7 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_7, i19 %lshr_ln66_7" [sha256.cpp:66]   --->   Operation 625 'bitconcatenate' 'or_ln66_7' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 626 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_9)   --->   "%lshr_ln66_8 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_34, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 626 'partselect' 'lshr_ln66_8' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 627 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_9)   --->   "%trunc_ln66_8 = trunc i32 %a_34" [sha256.cpp:66]   --->   Operation 627 'trunc' 'trunc_ln66_8' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 628 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_9)   --->   "%or_ln66_8 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_8, i10 %lshr_ln66_8" [sha256.cpp:66]   --->   Operation 628 'bitconcatenate' 'or_ln66_8' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 629 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_9)   --->   "%xor_ln66_8 = xor i32 %or_ln66_6, i32 %or_ln66_7" [sha256.cpp:66]   --->   Operation 629 'xor' 'xor_ln66_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 630 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_9 = xor i32 %xor_ln66_8, i32 %or_ln66_8" [sha256.cpp:66]   --->   Operation 630 'xor' 'xor_ln66_9' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 631 [1/1] (1.14ns)   --->   "%e_35 = add i32 %t1_2, i32 %b_33" [sha256.cpp:70]   --->   Operation 631 'add' 'e_35' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 632 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_13)   --->   "%lshr_ln65_9 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_35, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 632 'partselect' 'lshr_ln65_9' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 633 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_13)   --->   "%trunc_ln65_9 = trunc i32 %e_35" [sha256.cpp:65]   --->   Operation 633 'trunc' 'trunc_ln65_9' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 634 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_13)   --->   "%or_ln65_9 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_9, i26 %lshr_ln65_9" [sha256.cpp:65]   --->   Operation 634 'bitconcatenate' 'or_ln65_9' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 635 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_13)   --->   "%lshr_ln65_s = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_35, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 635 'partselect' 'lshr_ln65_s' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 636 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_13)   --->   "%trunc_ln65_10 = trunc i32 %e_35" [sha256.cpp:65]   --->   Operation 636 'trunc' 'trunc_ln65_10' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 637 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_13)   --->   "%or_ln65_s = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_10, i21 %lshr_ln65_s" [sha256.cpp:65]   --->   Operation 637 'bitconcatenate' 'or_ln65_s' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 638 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_13)   --->   "%lshr_ln65_10 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_35, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 638 'partselect' 'lshr_ln65_10' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 639 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_13)   --->   "%trunc_ln65_11 = trunc i32 %e_35" [sha256.cpp:65]   --->   Operation 639 'trunc' 'trunc_ln65_11' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 640 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_13)   --->   "%or_ln65_10 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_11, i7 %lshr_ln65_10" [sha256.cpp:65]   --->   Operation 640 'bitconcatenate' 'or_ln65_10' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 641 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_13)   --->   "%xor_ln65_12 = xor i32 %or_ln65_9, i32 %or_ln65_s" [sha256.cpp:65]   --->   Operation 641 'xor' 'xor_ln65_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 642 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_13 = xor i32 %xor_ln65_12, i32 %or_ln65_10" [sha256.cpp:65]   --->   Operation 642 'xor' 'xor_ln65_13' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 643 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_15)   --->   "%and_ln65_6 = and i32 %e_35, i32 %e_34" [sha256.cpp:65]   --->   Operation 643 'and' 'and_ln65_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 644 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_15)   --->   "%xor_ln65_14 = xor i32 %e_35, i32 4294967295" [sha256.cpp:65]   --->   Operation 644 'xor' 'xor_ln65_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 645 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_15)   --->   "%and_ln65_7 = and i32 %e_33, i32 %xor_ln65_14" [sha256.cpp:65]   --->   Operation 645 'and' 'and_ln65_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 646 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_15 = xor i32 %and_ln65_6, i32 %and_ln65_7" [sha256.cpp:65]   --->   Operation 646 'xor' 'xor_ln65_15' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 647 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_12 = add i32 %xor_ln65_15, i32 %e" [sha256.cpp:65]   --->   Operation 647 'add' 'add_ln65_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_11 : Operation 648 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_13 = add i32 %xor_ln65_13, i32 3921009573" [sha256.cpp:65]   --->   Operation 648 'add' 'add_ln65_13' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_11 : Operation 649 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_14 = add i32 %add_ln65_13, i32 %m_3" [sha256.cpp:65]   --->   Operation 649 'add' 'add_ln65_14' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_11 : Operation 650 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_3 = add i32 %add_ln65_14, i32 %add_ln65_12" [sha256.cpp:65]   --->   Operation 650 'add' 't1_3' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 12 <SV = 11> <Delay = 6.49>
ST_12 : Operation 651 [1/1] (0.28ns)   --->   "%and_ln66_5 = and i32 %a_34, i32 %a_33" [sha256.cpp:66]   --->   Operation 651 'and' 'and_ln66_5' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 652 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_11)   --->   "%and_ln66_6 = and i32 %a_34, i32 %a" [sha256.cpp:66]   --->   Operation 652 'and' 'and_ln66_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 653 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_11)   --->   "%xor_ln66_10 = xor i32 %and_ln66_3, i32 %and_ln66_6" [sha256.cpp:66]   --->   Operation 653 'xor' 'xor_ln66_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 654 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_11 = xor i32 %xor_ln66_10, i32 %and_ln66_5" [sha256.cpp:66]   --->   Operation 654 'xor' 'xor_ln66_11' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 655 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_4 = add i32 %xor_ln66_11, i32 %t1_2" [sha256.cpp:74]   --->   Operation 655 'add' 'add_ln74_4' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_12 : Operation 656 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_35 = add i32 %add_ln74_4, i32 %xor_ln66_9" [sha256.cpp:74]   --->   Operation 656 'add' 'a_35' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_12 : Operation 657 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_13)   --->   "%lshr_ln66_9 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_35, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 657 'partselect' 'lshr_ln66_9' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 658 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_13)   --->   "%trunc_ln66_9 = trunc i32 %a_35" [sha256.cpp:66]   --->   Operation 658 'trunc' 'trunc_ln66_9' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 659 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_13)   --->   "%or_ln66_9 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_9, i30 %lshr_ln66_9" [sha256.cpp:66]   --->   Operation 659 'bitconcatenate' 'or_ln66_9' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 660 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_13)   --->   "%lshr_ln66_s = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_35, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 660 'partselect' 'lshr_ln66_s' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 661 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_13)   --->   "%trunc_ln66_10 = trunc i32 %a_35" [sha256.cpp:66]   --->   Operation 661 'trunc' 'trunc_ln66_10' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 662 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_13)   --->   "%or_ln66_s = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_10, i19 %lshr_ln66_s" [sha256.cpp:66]   --->   Operation 662 'bitconcatenate' 'or_ln66_s' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 663 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_13)   --->   "%lshr_ln66_10 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_35, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 663 'partselect' 'lshr_ln66_10' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 664 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_13)   --->   "%trunc_ln66_11 = trunc i32 %a_35" [sha256.cpp:66]   --->   Operation 664 'trunc' 'trunc_ln66_11' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 665 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_13)   --->   "%or_ln66_10 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_11, i10 %lshr_ln66_10" [sha256.cpp:66]   --->   Operation 665 'bitconcatenate' 'or_ln66_10' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 666 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_13)   --->   "%xor_ln66_12 = xor i32 %or_ln66_9, i32 %or_ln66_s" [sha256.cpp:66]   --->   Operation 666 'xor' 'xor_ln66_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 667 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_13 = xor i32 %xor_ln66_12, i32 %or_ln66_10" [sha256.cpp:66]   --->   Operation 667 'xor' 'xor_ln66_13' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 668 [1/1] (0.28ns)   --->   "%and_ln66_7 = and i32 %a_35, i32 %a_34" [sha256.cpp:66]   --->   Operation 668 'and' 'and_ln66_7' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 669 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_15)   --->   "%and_ln66_8 = and i32 %a_35, i32 %a_33" [sha256.cpp:66]   --->   Operation 669 'and' 'and_ln66_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 670 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_15)   --->   "%xor_ln66_14 = xor i32 %and_ln66_5, i32 %and_ln66_8" [sha256.cpp:66]   --->   Operation 670 'xor' 'xor_ln66_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 671 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_15 = xor i32 %xor_ln66_14, i32 %and_ln66_7" [sha256.cpp:66]   --->   Operation 671 'xor' 'xor_ln66_15' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 672 [1/1] (1.14ns)   --->   "%e_36 = add i32 %t1_3, i32 %a" [sha256.cpp:70]   --->   Operation 672 'add' 'e_36' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 673 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_6 = add i32 %xor_ln66_15, i32 %t1_3" [sha256.cpp:74]   --->   Operation 673 'add' 'add_ln74_6' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_12 : Operation 674 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_36 = add i32 %add_ln74_6, i32 %xor_ln66_13" [sha256.cpp:74]   --->   Operation 674 'add' 'a_36' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_12 : Operation 675 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_17)   --->   "%lshr_ln65_11 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_36, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 675 'partselect' 'lshr_ln65_11' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 676 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_17)   --->   "%trunc_ln65_12 = trunc i32 %e_36" [sha256.cpp:65]   --->   Operation 676 'trunc' 'trunc_ln65_12' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 677 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_17)   --->   "%or_ln65_11 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_12, i26 %lshr_ln65_11" [sha256.cpp:65]   --->   Operation 677 'bitconcatenate' 'or_ln65_11' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 678 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_17)   --->   "%lshr_ln65_12 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_36, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 678 'partselect' 'lshr_ln65_12' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 679 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_17)   --->   "%trunc_ln65_13 = trunc i32 %e_36" [sha256.cpp:65]   --->   Operation 679 'trunc' 'trunc_ln65_13' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 680 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_17)   --->   "%or_ln65_12 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_13, i21 %lshr_ln65_12" [sha256.cpp:65]   --->   Operation 680 'bitconcatenate' 'or_ln65_12' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 681 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_17)   --->   "%lshr_ln65_13 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_36, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 681 'partselect' 'lshr_ln65_13' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 682 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_17)   --->   "%trunc_ln65_14 = trunc i32 %e_36" [sha256.cpp:65]   --->   Operation 682 'trunc' 'trunc_ln65_14' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 683 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_17)   --->   "%or_ln65_13 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_14, i7 %lshr_ln65_13" [sha256.cpp:65]   --->   Operation 683 'bitconcatenate' 'or_ln65_13' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 684 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_17)   --->   "%xor_ln65_16 = xor i32 %or_ln65_11, i32 %or_ln65_12" [sha256.cpp:65]   --->   Operation 684 'xor' 'xor_ln65_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 685 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_17 = xor i32 %xor_ln65_16, i32 %or_ln65_13" [sha256.cpp:65]   --->   Operation 685 'xor' 'xor_ln65_17' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 686 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_19)   --->   "%and_ln65_8 = and i32 %e_36, i32 %e_35" [sha256.cpp:65]   --->   Operation 686 'and' 'and_ln65_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 687 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_19)   --->   "%xor_ln65_18 = xor i32 %e_36, i32 4294967295" [sha256.cpp:65]   --->   Operation 687 'xor' 'xor_ln65_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 688 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_19)   --->   "%and_ln65_9 = and i32 %e_34, i32 %xor_ln65_18" [sha256.cpp:65]   --->   Operation 688 'and' 'and_ln65_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 689 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_19 = xor i32 %and_ln65_8, i32 %and_ln65_9" [sha256.cpp:65]   --->   Operation 689 'xor' 'xor_ln65_19' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 690 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_16 = add i32 %xor_ln65_19, i32 %e_33" [sha256.cpp:65]   --->   Operation 690 'add' 'add_ln65_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_12 : Operation 691 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_17 = add i32 %xor_ln65_17, i32 961987163" [sha256.cpp:65]   --->   Operation 691 'add' 'add_ln65_17' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_12 : Operation 692 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_18 = add i32 %add_ln65_17, i32 %m_4" [sha256.cpp:65]   --->   Operation 692 'add' 'add_ln65_18' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_12 : Operation 693 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_4 = add i32 %add_ln65_18, i32 %add_ln65_16" [sha256.cpp:65]   --->   Operation 693 'add' 't1_4' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_12 : Operation 694 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_17)   --->   "%lshr_ln66_11 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_36, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 694 'partselect' 'lshr_ln66_11' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 695 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_17)   --->   "%trunc_ln66_12 = trunc i32 %a_36" [sha256.cpp:66]   --->   Operation 695 'trunc' 'trunc_ln66_12' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 696 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_17)   --->   "%or_ln66_11 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_12, i30 %lshr_ln66_11" [sha256.cpp:66]   --->   Operation 696 'bitconcatenate' 'or_ln66_11' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 697 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_17)   --->   "%lshr_ln66_12 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_36, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 697 'partselect' 'lshr_ln66_12' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 698 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_17)   --->   "%trunc_ln66_13 = trunc i32 %a_36" [sha256.cpp:66]   --->   Operation 698 'trunc' 'trunc_ln66_13' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 699 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_17)   --->   "%or_ln66_12 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_13, i19 %lshr_ln66_12" [sha256.cpp:66]   --->   Operation 699 'bitconcatenate' 'or_ln66_12' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 700 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_17)   --->   "%lshr_ln66_13 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_36, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 700 'partselect' 'lshr_ln66_13' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 701 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_17)   --->   "%trunc_ln66_14 = trunc i32 %a_36" [sha256.cpp:66]   --->   Operation 701 'trunc' 'trunc_ln66_14' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 702 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_17)   --->   "%or_ln66_13 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_14, i10 %lshr_ln66_13" [sha256.cpp:66]   --->   Operation 702 'bitconcatenate' 'or_ln66_13' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 703 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_17)   --->   "%xor_ln66_16 = xor i32 %or_ln66_11, i32 %or_ln66_12" [sha256.cpp:66]   --->   Operation 703 'xor' 'xor_ln66_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 704 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_17 = xor i32 %xor_ln66_16, i32 %or_ln66_13" [sha256.cpp:66]   --->   Operation 704 'xor' 'xor_ln66_17' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 705 [1/1] (1.14ns)   --->   "%e_37 = add i32 %t1_4, i32 %a_33" [sha256.cpp:70]   --->   Operation 705 'add' 'e_37' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 706 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_21)   --->   "%lshr_ln65_14 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_37, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 706 'partselect' 'lshr_ln65_14' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 707 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_21)   --->   "%trunc_ln65_15 = trunc i32 %e_37" [sha256.cpp:65]   --->   Operation 707 'trunc' 'trunc_ln65_15' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 708 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_21)   --->   "%or_ln65_14 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_15, i26 %lshr_ln65_14" [sha256.cpp:65]   --->   Operation 708 'bitconcatenate' 'or_ln65_14' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 709 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_21)   --->   "%lshr_ln65_15 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_37, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 709 'partselect' 'lshr_ln65_15' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 710 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_21)   --->   "%trunc_ln65_16 = trunc i32 %e_37" [sha256.cpp:65]   --->   Operation 710 'trunc' 'trunc_ln65_16' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 711 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_21)   --->   "%or_ln65_15 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_16, i21 %lshr_ln65_15" [sha256.cpp:65]   --->   Operation 711 'bitconcatenate' 'or_ln65_15' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 712 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_21)   --->   "%lshr_ln65_16 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_37, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 712 'partselect' 'lshr_ln65_16' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 713 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_21)   --->   "%trunc_ln65_17 = trunc i32 %e_37" [sha256.cpp:65]   --->   Operation 713 'trunc' 'trunc_ln65_17' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 714 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_21)   --->   "%or_ln65_16 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_17, i7 %lshr_ln65_16" [sha256.cpp:65]   --->   Operation 714 'bitconcatenate' 'or_ln65_16' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 715 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_21)   --->   "%xor_ln65_20 = xor i32 %or_ln65_14, i32 %or_ln65_15" [sha256.cpp:65]   --->   Operation 715 'xor' 'xor_ln65_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 716 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_21 = xor i32 %xor_ln65_20, i32 %or_ln65_16" [sha256.cpp:65]   --->   Operation 716 'xor' 'xor_ln65_21' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 717 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_23)   --->   "%and_ln65_10 = and i32 %e_37, i32 %e_36" [sha256.cpp:65]   --->   Operation 717 'and' 'and_ln65_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 718 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_23)   --->   "%xor_ln65_22 = xor i32 %e_37, i32 4294967295" [sha256.cpp:65]   --->   Operation 718 'xor' 'xor_ln65_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 719 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_23)   --->   "%and_ln65_11 = and i32 %e_35, i32 %xor_ln65_22" [sha256.cpp:65]   --->   Operation 719 'and' 'and_ln65_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 720 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_23 = xor i32 %and_ln65_10, i32 %and_ln65_11" [sha256.cpp:65]   --->   Operation 720 'xor' 'xor_ln65_23' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 721 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_20 = add i32 %xor_ln65_23, i32 %e_34" [sha256.cpp:65]   --->   Operation 721 'add' 'add_ln65_20' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_12 : Operation 722 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_21 = add i32 %xor_ln65_21, i32 1508970993" [sha256.cpp:65]   --->   Operation 722 'add' 'add_ln65_21' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_12 : Operation 723 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_22 = add i32 %add_ln65_21, i32 %m_5" [sha256.cpp:65]   --->   Operation 723 'add' 'add_ln65_22' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_12 : Operation 724 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_5 = add i32 %add_ln65_22, i32 %add_ln65_20" [sha256.cpp:65]   --->   Operation 724 'add' 't1_5' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 13 <SV = 12> <Delay = 6.49>
ST_13 : Operation 725 [1/1] (0.28ns)   --->   "%and_ln66_9 = and i32 %a_36, i32 %a_35" [sha256.cpp:66]   --->   Operation 725 'and' 'and_ln66_9' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 726 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_19)   --->   "%and_ln66_10 = and i32 %a_36, i32 %a_34" [sha256.cpp:66]   --->   Operation 726 'and' 'and_ln66_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 727 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_19)   --->   "%xor_ln66_18 = xor i32 %and_ln66_7, i32 %and_ln66_10" [sha256.cpp:66]   --->   Operation 727 'xor' 'xor_ln66_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 728 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_19 = xor i32 %xor_ln66_18, i32 %and_ln66_9" [sha256.cpp:66]   --->   Operation 728 'xor' 'xor_ln66_19' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 729 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_8 = add i32 %xor_ln66_19, i32 %t1_4" [sha256.cpp:74]   --->   Operation 729 'add' 'add_ln74_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_13 : Operation 730 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_37 = add i32 %add_ln74_8, i32 %xor_ln66_17" [sha256.cpp:74]   --->   Operation 730 'add' 'a_37' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_13 : Operation 731 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_21)   --->   "%lshr_ln66_14 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_37, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 731 'partselect' 'lshr_ln66_14' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 732 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_21)   --->   "%trunc_ln66_15 = trunc i32 %a_37" [sha256.cpp:66]   --->   Operation 732 'trunc' 'trunc_ln66_15' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 733 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_21)   --->   "%or_ln66_14 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_15, i30 %lshr_ln66_14" [sha256.cpp:66]   --->   Operation 733 'bitconcatenate' 'or_ln66_14' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 734 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_21)   --->   "%lshr_ln66_15 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_37, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 734 'partselect' 'lshr_ln66_15' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 735 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_21)   --->   "%trunc_ln66_16 = trunc i32 %a_37" [sha256.cpp:66]   --->   Operation 735 'trunc' 'trunc_ln66_16' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 736 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_21)   --->   "%or_ln66_15 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_16, i19 %lshr_ln66_15" [sha256.cpp:66]   --->   Operation 736 'bitconcatenate' 'or_ln66_15' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 737 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_21)   --->   "%lshr_ln66_16 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_37, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 737 'partselect' 'lshr_ln66_16' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 738 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_21)   --->   "%trunc_ln66_17 = trunc i32 %a_37" [sha256.cpp:66]   --->   Operation 738 'trunc' 'trunc_ln66_17' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 739 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_21)   --->   "%or_ln66_16 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_17, i10 %lshr_ln66_16" [sha256.cpp:66]   --->   Operation 739 'bitconcatenate' 'or_ln66_16' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 740 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_21)   --->   "%xor_ln66_20 = xor i32 %or_ln66_14, i32 %or_ln66_15" [sha256.cpp:66]   --->   Operation 740 'xor' 'xor_ln66_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 741 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_21 = xor i32 %xor_ln66_20, i32 %or_ln66_16" [sha256.cpp:66]   --->   Operation 741 'xor' 'xor_ln66_21' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 742 [1/1] (0.28ns)   --->   "%and_ln66_11 = and i32 %a_37, i32 %a_36" [sha256.cpp:66]   --->   Operation 742 'and' 'and_ln66_11' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 743 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_23)   --->   "%and_ln66_12 = and i32 %a_37, i32 %a_35" [sha256.cpp:66]   --->   Operation 743 'and' 'and_ln66_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 744 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_23)   --->   "%xor_ln66_22 = xor i32 %and_ln66_9, i32 %and_ln66_12" [sha256.cpp:66]   --->   Operation 744 'xor' 'xor_ln66_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 745 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_23 = xor i32 %xor_ln66_22, i32 %and_ln66_11" [sha256.cpp:66]   --->   Operation 745 'xor' 'xor_ln66_23' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 746 [1/1] (1.14ns)   --->   "%e_38 = add i32 %t1_5, i32 %a_34" [sha256.cpp:70]   --->   Operation 746 'add' 'e_38' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 747 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_10 = add i32 %xor_ln66_23, i32 %t1_5" [sha256.cpp:74]   --->   Operation 747 'add' 'add_ln74_10' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_13 : Operation 748 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_38 = add i32 %add_ln74_10, i32 %xor_ln66_21" [sha256.cpp:74]   --->   Operation 748 'add' 'a_38' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_13 : Operation 749 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_25)   --->   "%lshr_ln65_17 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_38, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 749 'partselect' 'lshr_ln65_17' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 750 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_25)   --->   "%trunc_ln65_18 = trunc i32 %e_38" [sha256.cpp:65]   --->   Operation 750 'trunc' 'trunc_ln65_18' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 751 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_25)   --->   "%or_ln65_17 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_18, i26 %lshr_ln65_17" [sha256.cpp:65]   --->   Operation 751 'bitconcatenate' 'or_ln65_17' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 752 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_25)   --->   "%lshr_ln65_18 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_38, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 752 'partselect' 'lshr_ln65_18' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 753 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_25)   --->   "%trunc_ln65_19 = trunc i32 %e_38" [sha256.cpp:65]   --->   Operation 753 'trunc' 'trunc_ln65_19' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 754 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_25)   --->   "%or_ln65_18 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_19, i21 %lshr_ln65_18" [sha256.cpp:65]   --->   Operation 754 'bitconcatenate' 'or_ln65_18' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 755 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_25)   --->   "%lshr_ln65_19 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_38, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 755 'partselect' 'lshr_ln65_19' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 756 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_25)   --->   "%trunc_ln65_20 = trunc i32 %e_38" [sha256.cpp:65]   --->   Operation 756 'trunc' 'trunc_ln65_20' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 757 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_25)   --->   "%or_ln65_19 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_20, i7 %lshr_ln65_19" [sha256.cpp:65]   --->   Operation 757 'bitconcatenate' 'or_ln65_19' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 758 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_25)   --->   "%xor_ln65_24 = xor i32 %or_ln65_17, i32 %or_ln65_18" [sha256.cpp:65]   --->   Operation 758 'xor' 'xor_ln65_24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 759 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_25 = xor i32 %xor_ln65_24, i32 %or_ln65_19" [sha256.cpp:65]   --->   Operation 759 'xor' 'xor_ln65_25' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 760 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_27)   --->   "%and_ln65_12 = and i32 %e_38, i32 %e_37" [sha256.cpp:65]   --->   Operation 760 'and' 'and_ln65_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 761 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_27)   --->   "%xor_ln65_26 = xor i32 %e_38, i32 4294967295" [sha256.cpp:65]   --->   Operation 761 'xor' 'xor_ln65_26' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 762 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_27)   --->   "%and_ln65_13 = and i32 %e_36, i32 %xor_ln65_26" [sha256.cpp:65]   --->   Operation 762 'and' 'and_ln65_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 763 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_27 = xor i32 %and_ln65_12, i32 %and_ln65_13" [sha256.cpp:65]   --->   Operation 763 'xor' 'xor_ln65_27' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 764 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_24 = add i32 %e_35, i32 %xor_ln65_27" [sha256.cpp:65]   --->   Operation 764 'add' 'add_ln65_24' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_13 : Operation 765 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_25 = add i32 %m_6, i32 %xor_ln65_25" [sha256.cpp:65]   --->   Operation 765 'add' 'add_ln65_25' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_13 : Operation 766 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_26 = add i32 %add_ln65_25, i32 2453635748" [sha256.cpp:65]   --->   Operation 766 'add' 'add_ln65_26' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_13 : Operation 767 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_6 = add i32 %add_ln65_26, i32 %add_ln65_24" [sha256.cpp:65]   --->   Operation 767 'add' 't1_6' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_13 : Operation 768 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_25)   --->   "%lshr_ln66_17 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_38, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 768 'partselect' 'lshr_ln66_17' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 769 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_25)   --->   "%trunc_ln66_18 = trunc i32 %a_38" [sha256.cpp:66]   --->   Operation 769 'trunc' 'trunc_ln66_18' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 770 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_25)   --->   "%or_ln66_17 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_18, i30 %lshr_ln66_17" [sha256.cpp:66]   --->   Operation 770 'bitconcatenate' 'or_ln66_17' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 771 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_25)   --->   "%lshr_ln66_18 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_38, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 771 'partselect' 'lshr_ln66_18' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 772 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_25)   --->   "%trunc_ln66_19 = trunc i32 %a_38" [sha256.cpp:66]   --->   Operation 772 'trunc' 'trunc_ln66_19' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 773 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_25)   --->   "%or_ln66_18 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_19, i19 %lshr_ln66_18" [sha256.cpp:66]   --->   Operation 773 'bitconcatenate' 'or_ln66_18' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 774 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_25)   --->   "%lshr_ln66_19 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_38, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 774 'partselect' 'lshr_ln66_19' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 775 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_25)   --->   "%trunc_ln66_20 = trunc i32 %a_38" [sha256.cpp:66]   --->   Operation 775 'trunc' 'trunc_ln66_20' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 776 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_25)   --->   "%or_ln66_19 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_20, i10 %lshr_ln66_19" [sha256.cpp:66]   --->   Operation 776 'bitconcatenate' 'or_ln66_19' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 777 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_25)   --->   "%xor_ln66_24 = xor i32 %or_ln66_17, i32 %or_ln66_18" [sha256.cpp:66]   --->   Operation 777 'xor' 'xor_ln66_24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 778 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_25 = xor i32 %xor_ln66_24, i32 %or_ln66_19" [sha256.cpp:66]   --->   Operation 778 'xor' 'xor_ln66_25' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 779 [1/1] (1.14ns)   --->   "%e_39 = add i32 %t1_6, i32 %a_35" [sha256.cpp:70]   --->   Operation 779 'add' 'e_39' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 780 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_29)   --->   "%lshr_ln65_20 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_39, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 780 'partselect' 'lshr_ln65_20' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 781 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_29)   --->   "%trunc_ln65_21 = trunc i32 %e_39" [sha256.cpp:65]   --->   Operation 781 'trunc' 'trunc_ln65_21' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 782 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_29)   --->   "%or_ln65_20 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_21, i26 %lshr_ln65_20" [sha256.cpp:65]   --->   Operation 782 'bitconcatenate' 'or_ln65_20' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 783 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_29)   --->   "%lshr_ln65_21 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_39, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 783 'partselect' 'lshr_ln65_21' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 784 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_29)   --->   "%trunc_ln65_22 = trunc i32 %e_39" [sha256.cpp:65]   --->   Operation 784 'trunc' 'trunc_ln65_22' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 785 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_29)   --->   "%or_ln65_21 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_22, i21 %lshr_ln65_21" [sha256.cpp:65]   --->   Operation 785 'bitconcatenate' 'or_ln65_21' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 786 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_29)   --->   "%lshr_ln65_22 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_39, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 786 'partselect' 'lshr_ln65_22' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 787 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_29)   --->   "%trunc_ln65_23 = trunc i32 %e_39" [sha256.cpp:65]   --->   Operation 787 'trunc' 'trunc_ln65_23' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 788 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_29)   --->   "%or_ln65_22 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_23, i7 %lshr_ln65_22" [sha256.cpp:65]   --->   Operation 788 'bitconcatenate' 'or_ln65_22' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 789 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_29)   --->   "%xor_ln65_28 = xor i32 %or_ln65_20, i32 %or_ln65_21" [sha256.cpp:65]   --->   Operation 789 'xor' 'xor_ln65_28' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 790 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_29 = xor i32 %xor_ln65_28, i32 %or_ln65_22" [sha256.cpp:65]   --->   Operation 790 'xor' 'xor_ln65_29' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 791 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_31)   --->   "%and_ln65_14 = and i32 %e_39, i32 %e_38" [sha256.cpp:65]   --->   Operation 791 'and' 'and_ln65_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 792 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_31)   --->   "%xor_ln65_30 = xor i32 %e_39, i32 4294967295" [sha256.cpp:65]   --->   Operation 792 'xor' 'xor_ln65_30' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 793 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_31)   --->   "%and_ln65_15 = and i32 %e_37, i32 %xor_ln65_30" [sha256.cpp:65]   --->   Operation 793 'and' 'and_ln65_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 794 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_31 = xor i32 %and_ln65_14, i32 %and_ln65_15" [sha256.cpp:65]   --->   Operation 794 'xor' 'xor_ln65_31' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 795 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_28 = add i32 %e_36, i32 %xor_ln65_31" [sha256.cpp:65]   --->   Operation 795 'add' 'add_ln65_28' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_13 : Operation 796 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_29 = add i32 %m_7, i32 %xor_ln65_29" [sha256.cpp:65]   --->   Operation 796 'add' 'add_ln65_29' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_13 : Operation 797 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_30 = add i32 %add_ln65_29, i32 2870763221" [sha256.cpp:65]   --->   Operation 797 'add' 'add_ln65_30' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_13 : Operation 798 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_7 = add i32 %add_ln65_30, i32 %add_ln65_28" [sha256.cpp:65]   --->   Operation 798 'add' 't1_7' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 14 <SV = 13> <Delay = 6.49>
ST_14 : Operation 799 [1/1] (0.28ns)   --->   "%and_ln66_13 = and i32 %a_38, i32 %a_37" [sha256.cpp:66]   --->   Operation 799 'and' 'and_ln66_13' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 800 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_27)   --->   "%and_ln66_14 = and i32 %a_38, i32 %a_36" [sha256.cpp:66]   --->   Operation 800 'and' 'and_ln66_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 801 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_27)   --->   "%xor_ln66_26 = xor i32 %and_ln66_11, i32 %and_ln66_14" [sha256.cpp:66]   --->   Operation 801 'xor' 'xor_ln66_26' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 802 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_27 = xor i32 %xor_ln66_26, i32 %and_ln66_13" [sha256.cpp:66]   --->   Operation 802 'xor' 'xor_ln66_27' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 803 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_12 = add i32 %xor_ln66_27, i32 %t1_6" [sha256.cpp:74]   --->   Operation 803 'add' 'add_ln74_12' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_14 : Operation 804 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_39 = add i32 %add_ln74_12, i32 %xor_ln66_25" [sha256.cpp:74]   --->   Operation 804 'add' 'a_39' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_14 : Operation 805 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_29)   --->   "%lshr_ln66_20 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_39, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 805 'partselect' 'lshr_ln66_20' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 806 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_29)   --->   "%trunc_ln66_21 = trunc i32 %a_39" [sha256.cpp:66]   --->   Operation 806 'trunc' 'trunc_ln66_21' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 807 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_29)   --->   "%or_ln66_20 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_21, i30 %lshr_ln66_20" [sha256.cpp:66]   --->   Operation 807 'bitconcatenate' 'or_ln66_20' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 808 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_29)   --->   "%lshr_ln66_21 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_39, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 808 'partselect' 'lshr_ln66_21' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 809 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_29)   --->   "%trunc_ln66_22 = trunc i32 %a_39" [sha256.cpp:66]   --->   Operation 809 'trunc' 'trunc_ln66_22' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 810 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_29)   --->   "%or_ln66_21 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_22, i19 %lshr_ln66_21" [sha256.cpp:66]   --->   Operation 810 'bitconcatenate' 'or_ln66_21' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 811 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_29)   --->   "%lshr_ln66_22 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_39, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 811 'partselect' 'lshr_ln66_22' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 812 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_29)   --->   "%trunc_ln66_23 = trunc i32 %a_39" [sha256.cpp:66]   --->   Operation 812 'trunc' 'trunc_ln66_23' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 813 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_29)   --->   "%or_ln66_22 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_23, i10 %lshr_ln66_22" [sha256.cpp:66]   --->   Operation 813 'bitconcatenate' 'or_ln66_22' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 814 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_29)   --->   "%xor_ln66_28 = xor i32 %or_ln66_20, i32 %or_ln66_21" [sha256.cpp:66]   --->   Operation 814 'xor' 'xor_ln66_28' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 815 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_29 = xor i32 %xor_ln66_28, i32 %or_ln66_22" [sha256.cpp:66]   --->   Operation 815 'xor' 'xor_ln66_29' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 816 [1/1] (0.28ns)   --->   "%and_ln66_15 = and i32 %a_39, i32 %a_38" [sha256.cpp:66]   --->   Operation 816 'and' 'and_ln66_15' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 817 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_31)   --->   "%and_ln66_16 = and i32 %a_39, i32 %a_37" [sha256.cpp:66]   --->   Operation 817 'and' 'and_ln66_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 818 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_31)   --->   "%xor_ln66_30 = xor i32 %and_ln66_13, i32 %and_ln66_16" [sha256.cpp:66]   --->   Operation 818 'xor' 'xor_ln66_30' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 819 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_31 = xor i32 %xor_ln66_30, i32 %and_ln66_15" [sha256.cpp:66]   --->   Operation 819 'xor' 'xor_ln66_31' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 820 [1/1] (1.14ns)   --->   "%e_40 = add i32 %t1_7, i32 %a_36" [sha256.cpp:70]   --->   Operation 820 'add' 'e_40' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 821 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_14 = add i32 %xor_ln66_31, i32 %t1_7" [sha256.cpp:74]   --->   Operation 821 'add' 'add_ln74_14' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_14 : Operation 822 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_40 = add i32 %add_ln74_14, i32 %xor_ln66_29" [sha256.cpp:74]   --->   Operation 822 'add' 'a_40' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_14 : Operation 823 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_33)   --->   "%lshr_ln65_23 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_40, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 823 'partselect' 'lshr_ln65_23' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 824 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_33)   --->   "%trunc_ln65_24 = trunc i32 %e_40" [sha256.cpp:65]   --->   Operation 824 'trunc' 'trunc_ln65_24' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 825 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_33)   --->   "%or_ln65_23 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_24, i26 %lshr_ln65_23" [sha256.cpp:65]   --->   Operation 825 'bitconcatenate' 'or_ln65_23' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 826 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_33)   --->   "%lshr_ln65_24 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_40, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 826 'partselect' 'lshr_ln65_24' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 827 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_33)   --->   "%trunc_ln65_25 = trunc i32 %e_40" [sha256.cpp:65]   --->   Operation 827 'trunc' 'trunc_ln65_25' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 828 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_33)   --->   "%or_ln65_24 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_25, i21 %lshr_ln65_24" [sha256.cpp:65]   --->   Operation 828 'bitconcatenate' 'or_ln65_24' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 829 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_33)   --->   "%lshr_ln65_25 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_40, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 829 'partselect' 'lshr_ln65_25' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 830 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_33)   --->   "%trunc_ln65_26 = trunc i32 %e_40" [sha256.cpp:65]   --->   Operation 830 'trunc' 'trunc_ln65_26' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 831 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_33)   --->   "%or_ln65_25 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_26, i7 %lshr_ln65_25" [sha256.cpp:65]   --->   Operation 831 'bitconcatenate' 'or_ln65_25' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 832 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_33)   --->   "%xor_ln65_32 = xor i32 %or_ln65_23, i32 %or_ln65_24" [sha256.cpp:65]   --->   Operation 832 'xor' 'xor_ln65_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 833 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_33 = xor i32 %xor_ln65_32, i32 %or_ln65_25" [sha256.cpp:65]   --->   Operation 833 'xor' 'xor_ln65_33' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 834 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_35)   --->   "%and_ln65_16 = and i32 %e_40, i32 %e_39" [sha256.cpp:65]   --->   Operation 834 'and' 'and_ln65_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 835 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_35)   --->   "%xor_ln65_34 = xor i32 %e_40, i32 4294967295" [sha256.cpp:65]   --->   Operation 835 'xor' 'xor_ln65_34' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 836 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_35)   --->   "%and_ln65_17 = and i32 %e_38, i32 %xor_ln65_34" [sha256.cpp:65]   --->   Operation 836 'and' 'and_ln65_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 837 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_35 = xor i32 %and_ln65_16, i32 %and_ln65_17" [sha256.cpp:65]   --->   Operation 837 'xor' 'xor_ln65_35' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 838 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_32 = add i32 %xor_ln65_35, i32 %e_37" [sha256.cpp:65]   --->   Operation 838 'add' 'add_ln65_32' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_14 : Operation 839 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_33 = add i32 %xor_ln65_33, i32 3624381080" [sha256.cpp:65]   --->   Operation 839 'add' 'add_ln65_33' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_14 : Operation 840 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_34 = add i32 %add_ln65_33, i32 %m_8" [sha256.cpp:65]   --->   Operation 840 'add' 'add_ln65_34' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_14 : Operation 841 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_8 = add i32 %add_ln65_34, i32 %add_ln65_32" [sha256.cpp:65]   --->   Operation 841 'add' 't1_8' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_14 : Operation 842 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_33)   --->   "%lshr_ln66_23 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_40, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 842 'partselect' 'lshr_ln66_23' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 843 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_33)   --->   "%trunc_ln66_24 = trunc i32 %a_40" [sha256.cpp:66]   --->   Operation 843 'trunc' 'trunc_ln66_24' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 844 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_33)   --->   "%or_ln66_23 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_24, i30 %lshr_ln66_23" [sha256.cpp:66]   --->   Operation 844 'bitconcatenate' 'or_ln66_23' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 845 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_33)   --->   "%lshr_ln66_24 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_40, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 845 'partselect' 'lshr_ln66_24' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 846 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_33)   --->   "%trunc_ln66_25 = trunc i32 %a_40" [sha256.cpp:66]   --->   Operation 846 'trunc' 'trunc_ln66_25' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 847 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_33)   --->   "%or_ln66_24 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_25, i19 %lshr_ln66_24" [sha256.cpp:66]   --->   Operation 847 'bitconcatenate' 'or_ln66_24' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 848 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_33)   --->   "%lshr_ln66_25 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_40, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 848 'partselect' 'lshr_ln66_25' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 849 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_33)   --->   "%trunc_ln66_26 = trunc i32 %a_40" [sha256.cpp:66]   --->   Operation 849 'trunc' 'trunc_ln66_26' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 850 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_33)   --->   "%or_ln66_25 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_26, i10 %lshr_ln66_25" [sha256.cpp:66]   --->   Operation 850 'bitconcatenate' 'or_ln66_25' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 851 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_33)   --->   "%xor_ln66_32 = xor i32 %or_ln66_23, i32 %or_ln66_24" [sha256.cpp:66]   --->   Operation 851 'xor' 'xor_ln66_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 852 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_33 = xor i32 %xor_ln66_32, i32 %or_ln66_25" [sha256.cpp:66]   --->   Operation 852 'xor' 'xor_ln66_33' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 853 [1/1] (1.14ns)   --->   "%e_41 = add i32 %t1_8, i32 %a_37" [sha256.cpp:70]   --->   Operation 853 'add' 'e_41' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 854 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_37)   --->   "%lshr_ln65_26 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_41, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 854 'partselect' 'lshr_ln65_26' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 855 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_37)   --->   "%trunc_ln65_27 = trunc i32 %e_41" [sha256.cpp:65]   --->   Operation 855 'trunc' 'trunc_ln65_27' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 856 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_37)   --->   "%or_ln65_26 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_27, i26 %lshr_ln65_26" [sha256.cpp:65]   --->   Operation 856 'bitconcatenate' 'or_ln65_26' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 857 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_37)   --->   "%lshr_ln65_27 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_41, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 857 'partselect' 'lshr_ln65_27' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 858 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_37)   --->   "%trunc_ln65_28 = trunc i32 %e_41" [sha256.cpp:65]   --->   Operation 858 'trunc' 'trunc_ln65_28' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 859 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_37)   --->   "%or_ln65_27 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_28, i21 %lshr_ln65_27" [sha256.cpp:65]   --->   Operation 859 'bitconcatenate' 'or_ln65_27' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 860 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_37)   --->   "%lshr_ln65_28 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_41, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 860 'partselect' 'lshr_ln65_28' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 861 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_37)   --->   "%trunc_ln65_29 = trunc i32 %e_41" [sha256.cpp:65]   --->   Operation 861 'trunc' 'trunc_ln65_29' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 862 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_37)   --->   "%or_ln65_28 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_29, i7 %lshr_ln65_28" [sha256.cpp:65]   --->   Operation 862 'bitconcatenate' 'or_ln65_28' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 863 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_37)   --->   "%xor_ln65_36 = xor i32 %or_ln65_26, i32 %or_ln65_27" [sha256.cpp:65]   --->   Operation 863 'xor' 'xor_ln65_36' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 864 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_37 = xor i32 %xor_ln65_36, i32 %or_ln65_28" [sha256.cpp:65]   --->   Operation 864 'xor' 'xor_ln65_37' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 865 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_39)   --->   "%and_ln65_18 = and i32 %e_41, i32 %e_40" [sha256.cpp:65]   --->   Operation 865 'and' 'and_ln65_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 866 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_39)   --->   "%xor_ln65_38 = xor i32 %e_41, i32 4294967295" [sha256.cpp:65]   --->   Operation 866 'xor' 'xor_ln65_38' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 867 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_39)   --->   "%and_ln65_19 = and i32 %e_39, i32 %xor_ln65_38" [sha256.cpp:65]   --->   Operation 867 'and' 'and_ln65_19' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 868 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_39 = xor i32 %and_ln65_18, i32 %and_ln65_19" [sha256.cpp:65]   --->   Operation 868 'xor' 'xor_ln65_39' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 869 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_36 = add i32 %xor_ln65_39, i32 %e_38" [sha256.cpp:65]   --->   Operation 869 'add' 'add_ln65_36' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_14 : Operation 870 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_37 = add i32 %xor_ln65_37, i32 310598401" [sha256.cpp:65]   --->   Operation 870 'add' 'add_ln65_37' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_14 : Operation 871 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_38 = add i32 %add_ln65_37, i32 %m_9" [sha256.cpp:65]   --->   Operation 871 'add' 'add_ln65_38' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_14 : Operation 872 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_9 = add i32 %add_ln65_38, i32 %add_ln65_36" [sha256.cpp:65]   --->   Operation 872 'add' 't1_9' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 15 <SV = 14> <Delay = 6.49>
ST_15 : Operation 873 [1/1] (0.28ns)   --->   "%and_ln66_17 = and i32 %a_40, i32 %a_39" [sha256.cpp:66]   --->   Operation 873 'and' 'and_ln66_17' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 874 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_35)   --->   "%and_ln66_18 = and i32 %a_40, i32 %a_38" [sha256.cpp:66]   --->   Operation 874 'and' 'and_ln66_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 875 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_35)   --->   "%xor_ln66_34 = xor i32 %and_ln66_15, i32 %and_ln66_18" [sha256.cpp:66]   --->   Operation 875 'xor' 'xor_ln66_34' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 876 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_35 = xor i32 %xor_ln66_34, i32 %and_ln66_17" [sha256.cpp:66]   --->   Operation 876 'xor' 'xor_ln66_35' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 877 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_16 = add i32 %xor_ln66_35, i32 %t1_8" [sha256.cpp:74]   --->   Operation 877 'add' 'add_ln74_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_15 : Operation 878 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_41 = add i32 %add_ln74_16, i32 %xor_ln66_33" [sha256.cpp:74]   --->   Operation 878 'add' 'a_41' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_15 : Operation 879 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_37)   --->   "%lshr_ln66_26 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_41, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 879 'partselect' 'lshr_ln66_26' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 880 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_37)   --->   "%trunc_ln66_27 = trunc i32 %a_41" [sha256.cpp:66]   --->   Operation 880 'trunc' 'trunc_ln66_27' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 881 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_37)   --->   "%or_ln66_26 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_27, i30 %lshr_ln66_26" [sha256.cpp:66]   --->   Operation 881 'bitconcatenate' 'or_ln66_26' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 882 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_37)   --->   "%lshr_ln66_27 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_41, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 882 'partselect' 'lshr_ln66_27' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 883 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_37)   --->   "%trunc_ln66_28 = trunc i32 %a_41" [sha256.cpp:66]   --->   Operation 883 'trunc' 'trunc_ln66_28' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 884 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_37)   --->   "%or_ln66_27 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_28, i19 %lshr_ln66_27" [sha256.cpp:66]   --->   Operation 884 'bitconcatenate' 'or_ln66_27' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 885 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_37)   --->   "%lshr_ln66_28 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_41, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 885 'partselect' 'lshr_ln66_28' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 886 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_37)   --->   "%trunc_ln66_29 = trunc i32 %a_41" [sha256.cpp:66]   --->   Operation 886 'trunc' 'trunc_ln66_29' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 887 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_37)   --->   "%or_ln66_28 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_29, i10 %lshr_ln66_28" [sha256.cpp:66]   --->   Operation 887 'bitconcatenate' 'or_ln66_28' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 888 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_37)   --->   "%xor_ln66_36 = xor i32 %or_ln66_26, i32 %or_ln66_27" [sha256.cpp:66]   --->   Operation 888 'xor' 'xor_ln66_36' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 889 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_37 = xor i32 %xor_ln66_36, i32 %or_ln66_28" [sha256.cpp:66]   --->   Operation 889 'xor' 'xor_ln66_37' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 890 [1/1] (0.28ns)   --->   "%and_ln66_19 = and i32 %a_41, i32 %a_40" [sha256.cpp:66]   --->   Operation 890 'and' 'and_ln66_19' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 891 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_39)   --->   "%and_ln66_20 = and i32 %a_41, i32 %a_39" [sha256.cpp:66]   --->   Operation 891 'and' 'and_ln66_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 892 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_39)   --->   "%xor_ln66_38 = xor i32 %and_ln66_17, i32 %and_ln66_20" [sha256.cpp:66]   --->   Operation 892 'xor' 'xor_ln66_38' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 893 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_39 = xor i32 %xor_ln66_38, i32 %and_ln66_19" [sha256.cpp:66]   --->   Operation 893 'xor' 'xor_ln66_39' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 894 [1/1] (1.14ns)   --->   "%e_42 = add i32 %t1_9, i32 %a_38" [sha256.cpp:70]   --->   Operation 894 'add' 'e_42' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 895 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_18 = add i32 %xor_ln66_39, i32 %t1_9" [sha256.cpp:74]   --->   Operation 895 'add' 'add_ln74_18' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_15 : Operation 896 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_42 = add i32 %add_ln74_18, i32 %xor_ln66_37" [sha256.cpp:74]   --->   Operation 896 'add' 'a_42' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_15 : Operation 897 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_41)   --->   "%lshr_ln65_29 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_42, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 897 'partselect' 'lshr_ln65_29' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 898 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_41)   --->   "%trunc_ln65_30 = trunc i32 %e_42" [sha256.cpp:65]   --->   Operation 898 'trunc' 'trunc_ln65_30' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 899 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_41)   --->   "%or_ln65_29 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_30, i26 %lshr_ln65_29" [sha256.cpp:65]   --->   Operation 899 'bitconcatenate' 'or_ln65_29' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 900 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_41)   --->   "%lshr_ln65_30 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_42, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 900 'partselect' 'lshr_ln65_30' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 901 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_41)   --->   "%trunc_ln65_31 = trunc i32 %e_42" [sha256.cpp:65]   --->   Operation 901 'trunc' 'trunc_ln65_31' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 902 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_41)   --->   "%or_ln65_30 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_31, i21 %lshr_ln65_30" [sha256.cpp:65]   --->   Operation 902 'bitconcatenate' 'or_ln65_30' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 903 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_41)   --->   "%lshr_ln65_31 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_42, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 903 'partselect' 'lshr_ln65_31' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 904 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_41)   --->   "%trunc_ln65_32 = trunc i32 %e_42" [sha256.cpp:65]   --->   Operation 904 'trunc' 'trunc_ln65_32' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 905 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_41)   --->   "%or_ln65_31 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_32, i7 %lshr_ln65_31" [sha256.cpp:65]   --->   Operation 905 'bitconcatenate' 'or_ln65_31' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 906 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_41)   --->   "%xor_ln65_40 = xor i32 %or_ln65_29, i32 %or_ln65_30" [sha256.cpp:65]   --->   Operation 906 'xor' 'xor_ln65_40' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 907 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_41 = xor i32 %xor_ln65_40, i32 %or_ln65_31" [sha256.cpp:65]   --->   Operation 907 'xor' 'xor_ln65_41' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 908 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_43)   --->   "%and_ln65_20 = and i32 %e_42, i32 %e_41" [sha256.cpp:65]   --->   Operation 908 'and' 'and_ln65_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 909 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_43)   --->   "%xor_ln65_42 = xor i32 %e_42, i32 4294967295" [sha256.cpp:65]   --->   Operation 909 'xor' 'xor_ln65_42' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 910 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_43)   --->   "%and_ln65_21 = and i32 %e_40, i32 %xor_ln65_42" [sha256.cpp:65]   --->   Operation 910 'and' 'and_ln65_21' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 911 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_43 = xor i32 %and_ln65_20, i32 %and_ln65_21" [sha256.cpp:65]   --->   Operation 911 'xor' 'xor_ln65_43' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 912 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_40 = add i32 %xor_ln65_43, i32 %e_39" [sha256.cpp:65]   --->   Operation 912 'add' 'add_ln65_40' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_15 : Operation 913 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_41 = add i32 %xor_ln65_41, i32 607225278" [sha256.cpp:65]   --->   Operation 913 'add' 'add_ln65_41' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_15 : Operation 914 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_42 = add i32 %add_ln65_41, i32 %m_10" [sha256.cpp:65]   --->   Operation 914 'add' 'add_ln65_42' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_15 : Operation 915 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_10 = add i32 %add_ln65_42, i32 %add_ln65_40" [sha256.cpp:65]   --->   Operation 915 'add' 't1_10' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_15 : Operation 916 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_41)   --->   "%lshr_ln66_29 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_42, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 916 'partselect' 'lshr_ln66_29' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 917 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_41)   --->   "%trunc_ln66_30 = trunc i32 %a_42" [sha256.cpp:66]   --->   Operation 917 'trunc' 'trunc_ln66_30' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 918 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_41)   --->   "%or_ln66_29 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_30, i30 %lshr_ln66_29" [sha256.cpp:66]   --->   Operation 918 'bitconcatenate' 'or_ln66_29' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 919 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_41)   --->   "%lshr_ln66_30 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_42, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 919 'partselect' 'lshr_ln66_30' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 920 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_41)   --->   "%trunc_ln66_31 = trunc i32 %a_42" [sha256.cpp:66]   --->   Operation 920 'trunc' 'trunc_ln66_31' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 921 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_41)   --->   "%or_ln66_30 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_31, i19 %lshr_ln66_30" [sha256.cpp:66]   --->   Operation 921 'bitconcatenate' 'or_ln66_30' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 922 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_41)   --->   "%lshr_ln66_31 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_42, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 922 'partselect' 'lshr_ln66_31' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 923 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_41)   --->   "%trunc_ln66_32 = trunc i32 %a_42" [sha256.cpp:66]   --->   Operation 923 'trunc' 'trunc_ln66_32' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 924 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_41)   --->   "%or_ln66_31 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_32, i10 %lshr_ln66_31" [sha256.cpp:66]   --->   Operation 924 'bitconcatenate' 'or_ln66_31' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 925 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_41)   --->   "%xor_ln66_40 = xor i32 %or_ln66_29, i32 %or_ln66_30" [sha256.cpp:66]   --->   Operation 925 'xor' 'xor_ln66_40' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 926 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_41 = xor i32 %xor_ln66_40, i32 %or_ln66_31" [sha256.cpp:66]   --->   Operation 926 'xor' 'xor_ln66_41' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 927 [1/1] (1.14ns)   --->   "%e_43 = add i32 %t1_10, i32 %a_39" [sha256.cpp:70]   --->   Operation 927 'add' 'e_43' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 928 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_45)   --->   "%lshr_ln65_32 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_43, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 928 'partselect' 'lshr_ln65_32' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 929 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_45)   --->   "%trunc_ln65_33 = trunc i32 %e_43" [sha256.cpp:65]   --->   Operation 929 'trunc' 'trunc_ln65_33' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 930 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_45)   --->   "%or_ln65_32 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_33, i26 %lshr_ln65_32" [sha256.cpp:65]   --->   Operation 930 'bitconcatenate' 'or_ln65_32' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 931 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_45)   --->   "%lshr_ln65_33 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_43, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 931 'partselect' 'lshr_ln65_33' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 932 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_45)   --->   "%trunc_ln65_34 = trunc i32 %e_43" [sha256.cpp:65]   --->   Operation 932 'trunc' 'trunc_ln65_34' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 933 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_45)   --->   "%or_ln65_33 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_34, i21 %lshr_ln65_33" [sha256.cpp:65]   --->   Operation 933 'bitconcatenate' 'or_ln65_33' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 934 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_45)   --->   "%lshr_ln65_34 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_43, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 934 'partselect' 'lshr_ln65_34' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 935 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_45)   --->   "%trunc_ln65_35 = trunc i32 %e_43" [sha256.cpp:65]   --->   Operation 935 'trunc' 'trunc_ln65_35' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 936 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_45)   --->   "%or_ln65_34 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_35, i7 %lshr_ln65_34" [sha256.cpp:65]   --->   Operation 936 'bitconcatenate' 'or_ln65_34' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 937 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_45)   --->   "%xor_ln65_44 = xor i32 %or_ln65_32, i32 %or_ln65_33" [sha256.cpp:65]   --->   Operation 937 'xor' 'xor_ln65_44' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 938 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_45 = xor i32 %xor_ln65_44, i32 %or_ln65_34" [sha256.cpp:65]   --->   Operation 938 'xor' 'xor_ln65_45' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 939 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_47)   --->   "%and_ln65_22 = and i32 %e_43, i32 %e_42" [sha256.cpp:65]   --->   Operation 939 'and' 'and_ln65_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 940 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_47)   --->   "%xor_ln65_46 = xor i32 %e_43, i32 4294967295" [sha256.cpp:65]   --->   Operation 940 'xor' 'xor_ln65_46' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 941 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_47)   --->   "%and_ln65_23 = and i32 %e_41, i32 %xor_ln65_46" [sha256.cpp:65]   --->   Operation 941 'and' 'and_ln65_23' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 942 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_47 = xor i32 %and_ln65_22, i32 %and_ln65_23" [sha256.cpp:65]   --->   Operation 942 'xor' 'xor_ln65_47' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 943 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_44 = add i32 %xor_ln65_47, i32 %e_40" [sha256.cpp:65]   --->   Operation 943 'add' 'add_ln65_44' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_15 : Operation 944 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_45 = add i32 %xor_ln65_45, i32 1426881987" [sha256.cpp:65]   --->   Operation 944 'add' 'add_ln65_45' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_15 : Operation 945 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_46 = add i32 %add_ln65_45, i32 %m_11" [sha256.cpp:65]   --->   Operation 945 'add' 'add_ln65_46' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_15 : Operation 946 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_11 = add i32 %add_ln65_46, i32 %add_ln65_44" [sha256.cpp:65]   --->   Operation 946 'add' 't1_11' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 16 <SV = 15> <Delay = 6.49>
ST_16 : Operation 947 [1/1] (0.28ns)   --->   "%and_ln66_21 = and i32 %a_42, i32 %a_41" [sha256.cpp:66]   --->   Operation 947 'and' 'and_ln66_21' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 948 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_43)   --->   "%and_ln66_22 = and i32 %a_42, i32 %a_40" [sha256.cpp:66]   --->   Operation 948 'and' 'and_ln66_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 949 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_43)   --->   "%xor_ln66_42 = xor i32 %and_ln66_19, i32 %and_ln66_22" [sha256.cpp:66]   --->   Operation 949 'xor' 'xor_ln66_42' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 950 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_43 = xor i32 %xor_ln66_42, i32 %and_ln66_21" [sha256.cpp:66]   --->   Operation 950 'xor' 'xor_ln66_43' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 951 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_20 = add i32 %xor_ln66_43, i32 %t1_10" [sha256.cpp:74]   --->   Operation 951 'add' 'add_ln74_20' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_16 : Operation 952 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_43 = add i32 %add_ln74_20, i32 %xor_ln66_41" [sha256.cpp:74]   --->   Operation 952 'add' 'a_43' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_16 : Operation 953 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_45)   --->   "%lshr_ln66_32 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_43, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 953 'partselect' 'lshr_ln66_32' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 954 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_45)   --->   "%trunc_ln66_33 = trunc i32 %a_43" [sha256.cpp:66]   --->   Operation 954 'trunc' 'trunc_ln66_33' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 955 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_45)   --->   "%or_ln66_32 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_33, i30 %lshr_ln66_32" [sha256.cpp:66]   --->   Operation 955 'bitconcatenate' 'or_ln66_32' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 956 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_45)   --->   "%lshr_ln66_33 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_43, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 956 'partselect' 'lshr_ln66_33' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 957 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_45)   --->   "%trunc_ln66_34 = trunc i32 %a_43" [sha256.cpp:66]   --->   Operation 957 'trunc' 'trunc_ln66_34' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 958 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_45)   --->   "%or_ln66_33 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_34, i19 %lshr_ln66_33" [sha256.cpp:66]   --->   Operation 958 'bitconcatenate' 'or_ln66_33' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 959 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_45)   --->   "%lshr_ln66_34 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_43, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 959 'partselect' 'lshr_ln66_34' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 960 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_45)   --->   "%trunc_ln66_35 = trunc i32 %a_43" [sha256.cpp:66]   --->   Operation 960 'trunc' 'trunc_ln66_35' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 961 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_45)   --->   "%or_ln66_34 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_35, i10 %lshr_ln66_34" [sha256.cpp:66]   --->   Operation 961 'bitconcatenate' 'or_ln66_34' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 962 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_45)   --->   "%xor_ln66_44 = xor i32 %or_ln66_32, i32 %or_ln66_33" [sha256.cpp:66]   --->   Operation 962 'xor' 'xor_ln66_44' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 963 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_45 = xor i32 %xor_ln66_44, i32 %or_ln66_34" [sha256.cpp:66]   --->   Operation 963 'xor' 'xor_ln66_45' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 964 [1/1] (0.28ns)   --->   "%and_ln66_23 = and i32 %a_43, i32 %a_42" [sha256.cpp:66]   --->   Operation 964 'and' 'and_ln66_23' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 965 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_47)   --->   "%and_ln66_24 = and i32 %a_43, i32 %a_41" [sha256.cpp:66]   --->   Operation 965 'and' 'and_ln66_24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 966 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_47)   --->   "%xor_ln66_46 = xor i32 %and_ln66_21, i32 %and_ln66_24" [sha256.cpp:66]   --->   Operation 966 'xor' 'xor_ln66_46' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 967 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_47 = xor i32 %xor_ln66_46, i32 %and_ln66_23" [sha256.cpp:66]   --->   Operation 967 'xor' 'xor_ln66_47' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 968 [1/1] (1.14ns)   --->   "%e_44 = add i32 %t1_11, i32 %a_40" [sha256.cpp:70]   --->   Operation 968 'add' 'e_44' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 969 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_22 = add i32 %xor_ln66_47, i32 %t1_11" [sha256.cpp:74]   --->   Operation 969 'add' 'add_ln74_22' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_16 : Operation 970 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_44 = add i32 %add_ln74_22, i32 %xor_ln66_45" [sha256.cpp:74]   --->   Operation 970 'add' 'a_44' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_16 : Operation 971 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_49)   --->   "%lshr_ln65_35 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_44, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 971 'partselect' 'lshr_ln65_35' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 972 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_49)   --->   "%trunc_ln65_36 = trunc i32 %e_44" [sha256.cpp:65]   --->   Operation 972 'trunc' 'trunc_ln65_36' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 973 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_49)   --->   "%or_ln65_35 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_36, i26 %lshr_ln65_35" [sha256.cpp:65]   --->   Operation 973 'bitconcatenate' 'or_ln65_35' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 974 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_49)   --->   "%lshr_ln65_36 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_44, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 974 'partselect' 'lshr_ln65_36' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 975 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_49)   --->   "%trunc_ln65_37 = trunc i32 %e_44" [sha256.cpp:65]   --->   Operation 975 'trunc' 'trunc_ln65_37' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 976 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_49)   --->   "%or_ln65_36 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_37, i21 %lshr_ln65_36" [sha256.cpp:65]   --->   Operation 976 'bitconcatenate' 'or_ln65_36' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 977 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_49)   --->   "%lshr_ln65_37 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_44, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 977 'partselect' 'lshr_ln65_37' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 978 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_49)   --->   "%trunc_ln65_38 = trunc i32 %e_44" [sha256.cpp:65]   --->   Operation 978 'trunc' 'trunc_ln65_38' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 979 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_49)   --->   "%or_ln65_37 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_38, i7 %lshr_ln65_37" [sha256.cpp:65]   --->   Operation 979 'bitconcatenate' 'or_ln65_37' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 980 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_49)   --->   "%xor_ln65_48 = xor i32 %or_ln65_35, i32 %or_ln65_36" [sha256.cpp:65]   --->   Operation 980 'xor' 'xor_ln65_48' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 981 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_49 = xor i32 %xor_ln65_48, i32 %or_ln65_37" [sha256.cpp:65]   --->   Operation 981 'xor' 'xor_ln65_49' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 982 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_51)   --->   "%and_ln65_24 = and i32 %e_44, i32 %e_43" [sha256.cpp:65]   --->   Operation 982 'and' 'and_ln65_24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 983 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_51)   --->   "%xor_ln65_50 = xor i32 %e_44, i32 4294967295" [sha256.cpp:65]   --->   Operation 983 'xor' 'xor_ln65_50' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 984 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_51)   --->   "%and_ln65_25 = and i32 %e_42, i32 %xor_ln65_50" [sha256.cpp:65]   --->   Operation 984 'and' 'and_ln65_25' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 985 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_51 = xor i32 %and_ln65_24, i32 %and_ln65_25" [sha256.cpp:65]   --->   Operation 985 'xor' 'xor_ln65_51' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 986 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_48 = add i32 %xor_ln65_51, i32 %e_41" [sha256.cpp:65]   --->   Operation 986 'add' 'add_ln65_48' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_16 : Operation 987 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_49 = add i32 %xor_ln65_49, i32 1925078388" [sha256.cpp:65]   --->   Operation 987 'add' 'add_ln65_49' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_16 : Operation 988 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_50 = add i32 %add_ln65_49, i32 %m_12" [sha256.cpp:65]   --->   Operation 988 'add' 'add_ln65_50' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_16 : Operation 989 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_12 = add i32 %add_ln65_50, i32 %add_ln65_48" [sha256.cpp:65]   --->   Operation 989 'add' 't1_12' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_16 : Operation 990 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_49)   --->   "%lshr_ln66_35 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_44, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 990 'partselect' 'lshr_ln66_35' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 991 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_49)   --->   "%trunc_ln66_36 = trunc i32 %a_44" [sha256.cpp:66]   --->   Operation 991 'trunc' 'trunc_ln66_36' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 992 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_49)   --->   "%or_ln66_35 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_36, i30 %lshr_ln66_35" [sha256.cpp:66]   --->   Operation 992 'bitconcatenate' 'or_ln66_35' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 993 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_49)   --->   "%lshr_ln66_36 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_44, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 993 'partselect' 'lshr_ln66_36' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 994 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_49)   --->   "%trunc_ln66_37 = trunc i32 %a_44" [sha256.cpp:66]   --->   Operation 994 'trunc' 'trunc_ln66_37' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 995 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_49)   --->   "%or_ln66_36 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_37, i19 %lshr_ln66_36" [sha256.cpp:66]   --->   Operation 995 'bitconcatenate' 'or_ln66_36' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 996 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_49)   --->   "%lshr_ln66_37 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_44, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 996 'partselect' 'lshr_ln66_37' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 997 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_49)   --->   "%trunc_ln66_38 = trunc i32 %a_44" [sha256.cpp:66]   --->   Operation 997 'trunc' 'trunc_ln66_38' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 998 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_49)   --->   "%or_ln66_37 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_38, i10 %lshr_ln66_37" [sha256.cpp:66]   --->   Operation 998 'bitconcatenate' 'or_ln66_37' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 999 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_49)   --->   "%xor_ln66_48 = xor i32 %or_ln66_35, i32 %or_ln66_36" [sha256.cpp:66]   --->   Operation 999 'xor' 'xor_ln66_48' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 1000 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_49 = xor i32 %xor_ln66_48, i32 %or_ln66_37" [sha256.cpp:66]   --->   Operation 1000 'xor' 'xor_ln66_49' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 1001 [1/1] (1.14ns)   --->   "%e_45 = add i32 %t1_12, i32 %a_41" [sha256.cpp:70]   --->   Operation 1001 'add' 'e_45' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 1002 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_53)   --->   "%lshr_ln65_38 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_45, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1002 'partselect' 'lshr_ln65_38' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 1003 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_53)   --->   "%trunc_ln65_39 = trunc i32 %e_45" [sha256.cpp:65]   --->   Operation 1003 'trunc' 'trunc_ln65_39' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 1004 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_53)   --->   "%or_ln65_38 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_39, i26 %lshr_ln65_38" [sha256.cpp:65]   --->   Operation 1004 'bitconcatenate' 'or_ln65_38' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 1005 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_53)   --->   "%lshr_ln65_39 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_45, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1005 'partselect' 'lshr_ln65_39' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 1006 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_53)   --->   "%trunc_ln65_40 = trunc i32 %e_45" [sha256.cpp:65]   --->   Operation 1006 'trunc' 'trunc_ln65_40' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 1007 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_53)   --->   "%or_ln65_39 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_40, i21 %lshr_ln65_39" [sha256.cpp:65]   --->   Operation 1007 'bitconcatenate' 'or_ln65_39' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 1008 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_53)   --->   "%lshr_ln65_40 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_45, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1008 'partselect' 'lshr_ln65_40' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 1009 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_53)   --->   "%trunc_ln65_41 = trunc i32 %e_45" [sha256.cpp:65]   --->   Operation 1009 'trunc' 'trunc_ln65_41' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 1010 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_53)   --->   "%or_ln65_40 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_41, i7 %lshr_ln65_40" [sha256.cpp:65]   --->   Operation 1010 'bitconcatenate' 'or_ln65_40' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 1011 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_53)   --->   "%xor_ln65_52 = xor i32 %or_ln65_38, i32 %or_ln65_39" [sha256.cpp:65]   --->   Operation 1011 'xor' 'xor_ln65_52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 1012 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_53 = xor i32 %xor_ln65_52, i32 %or_ln65_40" [sha256.cpp:65]   --->   Operation 1012 'xor' 'xor_ln65_53' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 1013 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_55)   --->   "%and_ln65_26 = and i32 %e_45, i32 %e_44" [sha256.cpp:65]   --->   Operation 1013 'and' 'and_ln65_26' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 1014 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_55)   --->   "%xor_ln65_54 = xor i32 %e_45, i32 4294967295" [sha256.cpp:65]   --->   Operation 1014 'xor' 'xor_ln65_54' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 1015 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_55)   --->   "%and_ln65_27 = and i32 %e_43, i32 %xor_ln65_54" [sha256.cpp:65]   --->   Operation 1015 'and' 'and_ln65_27' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 1016 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_55 = xor i32 %and_ln65_26, i32 %and_ln65_27" [sha256.cpp:65]   --->   Operation 1016 'xor' 'xor_ln65_55' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 1017 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_52 = add i32 %e_42, i32 %xor_ln65_55" [sha256.cpp:65]   --->   Operation 1017 'add' 'add_ln65_52' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_16 : Operation 1018 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_53 = add i32 %m_13, i32 %xor_ln65_53" [sha256.cpp:65]   --->   Operation 1018 'add' 'add_ln65_53' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_16 : Operation 1019 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_54 = add i32 %add_ln65_53, i32 2162078206" [sha256.cpp:65]   --->   Operation 1019 'add' 'add_ln65_54' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_16 : Operation 1020 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_13 = add i32 %add_ln65_54, i32 %add_ln65_52" [sha256.cpp:65]   --->   Operation 1020 'add' 't1_13' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 17 <SV = 16> <Delay = 6.49>
ST_17 : Operation 1021 [1/1] (0.28ns)   --->   "%and_ln66_25 = and i32 %a_44, i32 %a_43" [sha256.cpp:66]   --->   Operation 1021 'and' 'and_ln66_25' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1022 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_51)   --->   "%and_ln66_26 = and i32 %a_44, i32 %a_42" [sha256.cpp:66]   --->   Operation 1022 'and' 'and_ln66_26' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1023 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_51)   --->   "%xor_ln66_50 = xor i32 %and_ln66_23, i32 %and_ln66_26" [sha256.cpp:66]   --->   Operation 1023 'xor' 'xor_ln66_50' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1024 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_51 = xor i32 %xor_ln66_50, i32 %and_ln66_25" [sha256.cpp:66]   --->   Operation 1024 'xor' 'xor_ln66_51' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1025 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_24 = add i32 %xor_ln66_51, i32 %t1_12" [sha256.cpp:74]   --->   Operation 1025 'add' 'add_ln74_24' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_17 : Operation 1026 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_45 = add i32 %add_ln74_24, i32 %xor_ln66_49" [sha256.cpp:74]   --->   Operation 1026 'add' 'a_45' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_17 : Operation 1027 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_53)   --->   "%lshr_ln66_38 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_45, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1027 'partselect' 'lshr_ln66_38' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1028 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_53)   --->   "%trunc_ln66_39 = trunc i32 %a_45" [sha256.cpp:66]   --->   Operation 1028 'trunc' 'trunc_ln66_39' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1029 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_53)   --->   "%or_ln66_38 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_39, i30 %lshr_ln66_38" [sha256.cpp:66]   --->   Operation 1029 'bitconcatenate' 'or_ln66_38' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1030 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_53)   --->   "%lshr_ln66_39 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_45, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1030 'partselect' 'lshr_ln66_39' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1031 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_53)   --->   "%trunc_ln66_40 = trunc i32 %a_45" [sha256.cpp:66]   --->   Operation 1031 'trunc' 'trunc_ln66_40' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1032 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_53)   --->   "%or_ln66_39 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_40, i19 %lshr_ln66_39" [sha256.cpp:66]   --->   Operation 1032 'bitconcatenate' 'or_ln66_39' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1033 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_53)   --->   "%lshr_ln66_40 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_45, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1033 'partselect' 'lshr_ln66_40' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1034 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_53)   --->   "%trunc_ln66_41 = trunc i32 %a_45" [sha256.cpp:66]   --->   Operation 1034 'trunc' 'trunc_ln66_41' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1035 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_53)   --->   "%or_ln66_40 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_41, i10 %lshr_ln66_40" [sha256.cpp:66]   --->   Operation 1035 'bitconcatenate' 'or_ln66_40' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1036 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_53)   --->   "%xor_ln66_52 = xor i32 %or_ln66_38, i32 %or_ln66_39" [sha256.cpp:66]   --->   Operation 1036 'xor' 'xor_ln66_52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1037 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_53 = xor i32 %xor_ln66_52, i32 %or_ln66_40" [sha256.cpp:66]   --->   Operation 1037 'xor' 'xor_ln66_53' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1038 [1/1] (0.28ns)   --->   "%and_ln66_27 = and i32 %a_45, i32 %a_44" [sha256.cpp:66]   --->   Operation 1038 'and' 'and_ln66_27' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1039 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_55)   --->   "%and_ln66_28 = and i32 %a_45, i32 %a_43" [sha256.cpp:66]   --->   Operation 1039 'and' 'and_ln66_28' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1040 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_55)   --->   "%xor_ln66_54 = xor i32 %and_ln66_25, i32 %and_ln66_28" [sha256.cpp:66]   --->   Operation 1040 'xor' 'xor_ln66_54' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1041 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_55 = xor i32 %xor_ln66_54, i32 %and_ln66_27" [sha256.cpp:66]   --->   Operation 1041 'xor' 'xor_ln66_55' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1042 [1/1] (1.14ns)   --->   "%e_46 = add i32 %t1_13, i32 %a_42" [sha256.cpp:70]   --->   Operation 1042 'add' 'e_46' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1043 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_26 = add i32 %xor_ln66_55, i32 %t1_13" [sha256.cpp:74]   --->   Operation 1043 'add' 'add_ln74_26' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_17 : Operation 1044 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_46 = add i32 %add_ln74_26, i32 %xor_ln66_53" [sha256.cpp:74]   --->   Operation 1044 'add' 'a_46' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_17 : Operation 1045 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_57)   --->   "%lshr_ln65_41 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_46, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1045 'partselect' 'lshr_ln65_41' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1046 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_57)   --->   "%trunc_ln65_42 = trunc i32 %e_46" [sha256.cpp:65]   --->   Operation 1046 'trunc' 'trunc_ln65_42' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1047 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_57)   --->   "%or_ln65_41 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_42, i26 %lshr_ln65_41" [sha256.cpp:65]   --->   Operation 1047 'bitconcatenate' 'or_ln65_41' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1048 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_57)   --->   "%lshr_ln65_42 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_46, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1048 'partselect' 'lshr_ln65_42' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1049 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_57)   --->   "%trunc_ln65_43 = trunc i32 %e_46" [sha256.cpp:65]   --->   Operation 1049 'trunc' 'trunc_ln65_43' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1050 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_57)   --->   "%or_ln65_42 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_43, i21 %lshr_ln65_42" [sha256.cpp:65]   --->   Operation 1050 'bitconcatenate' 'or_ln65_42' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1051 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_57)   --->   "%lshr_ln65_43 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_46, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1051 'partselect' 'lshr_ln65_43' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1052 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_57)   --->   "%trunc_ln65_44 = trunc i32 %e_46" [sha256.cpp:65]   --->   Operation 1052 'trunc' 'trunc_ln65_44' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1053 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_57)   --->   "%or_ln65_43 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_44, i7 %lshr_ln65_43" [sha256.cpp:65]   --->   Operation 1053 'bitconcatenate' 'or_ln65_43' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1054 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_57)   --->   "%xor_ln65_56 = xor i32 %or_ln65_41, i32 %or_ln65_42" [sha256.cpp:65]   --->   Operation 1054 'xor' 'xor_ln65_56' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1055 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_57 = xor i32 %xor_ln65_56, i32 %or_ln65_43" [sha256.cpp:65]   --->   Operation 1055 'xor' 'xor_ln65_57' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1056 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_59)   --->   "%and_ln65_28 = and i32 %e_46, i32 %e_45" [sha256.cpp:65]   --->   Operation 1056 'and' 'and_ln65_28' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1057 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_59)   --->   "%xor_ln65_58 = xor i32 %e_46, i32 4294967295" [sha256.cpp:65]   --->   Operation 1057 'xor' 'xor_ln65_58' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1058 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_59)   --->   "%and_ln65_29 = and i32 %e_44, i32 %xor_ln65_58" [sha256.cpp:65]   --->   Operation 1058 'and' 'and_ln65_29' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1059 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_59 = xor i32 %and_ln65_28, i32 %and_ln65_29" [sha256.cpp:65]   --->   Operation 1059 'xor' 'xor_ln65_59' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1060 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_56 = add i32 %e_43, i32 %xor_ln65_59" [sha256.cpp:65]   --->   Operation 1060 'add' 'add_ln65_56' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_17 : Operation 1061 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_57 = add i32 %m_14, i32 %xor_ln65_57" [sha256.cpp:65]   --->   Operation 1061 'add' 'add_ln65_57' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_17 : Operation 1062 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_58 = add i32 %add_ln65_57, i32 2614888103" [sha256.cpp:65]   --->   Operation 1062 'add' 'add_ln65_58' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_17 : Operation 1063 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_14 = add i32 %add_ln65_58, i32 %add_ln65_56" [sha256.cpp:65]   --->   Operation 1063 'add' 't1_14' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_17 : Operation 1064 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_57)   --->   "%lshr_ln66_41 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_46, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1064 'partselect' 'lshr_ln66_41' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1065 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_57)   --->   "%trunc_ln66_42 = trunc i32 %a_46" [sha256.cpp:66]   --->   Operation 1065 'trunc' 'trunc_ln66_42' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1066 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_57)   --->   "%or_ln66_41 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_42, i30 %lshr_ln66_41" [sha256.cpp:66]   --->   Operation 1066 'bitconcatenate' 'or_ln66_41' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1067 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_57)   --->   "%lshr_ln66_42 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_46, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1067 'partselect' 'lshr_ln66_42' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1068 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_57)   --->   "%trunc_ln66_43 = trunc i32 %a_46" [sha256.cpp:66]   --->   Operation 1068 'trunc' 'trunc_ln66_43' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1069 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_57)   --->   "%or_ln66_42 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_43, i19 %lshr_ln66_42" [sha256.cpp:66]   --->   Operation 1069 'bitconcatenate' 'or_ln66_42' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1070 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_57)   --->   "%lshr_ln66_43 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_46, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1070 'partselect' 'lshr_ln66_43' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1071 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_57)   --->   "%trunc_ln66_44 = trunc i32 %a_46" [sha256.cpp:66]   --->   Operation 1071 'trunc' 'trunc_ln66_44' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1072 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_57)   --->   "%or_ln66_43 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_44, i10 %lshr_ln66_43" [sha256.cpp:66]   --->   Operation 1072 'bitconcatenate' 'or_ln66_43' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1073 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_57)   --->   "%xor_ln66_56 = xor i32 %or_ln66_41, i32 %or_ln66_42" [sha256.cpp:66]   --->   Operation 1073 'xor' 'xor_ln66_56' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1074 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_57 = xor i32 %xor_ln66_56, i32 %or_ln66_43" [sha256.cpp:66]   --->   Operation 1074 'xor' 'xor_ln66_57' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1075 [1/1] (1.14ns)   --->   "%e_47 = add i32 %t1_14, i32 %a_43" [sha256.cpp:70]   --->   Operation 1075 'add' 'e_47' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1076 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_61)   --->   "%lshr_ln65_44 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_47, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1076 'partselect' 'lshr_ln65_44' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1077 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_61)   --->   "%trunc_ln65_45 = trunc i32 %e_47" [sha256.cpp:65]   --->   Operation 1077 'trunc' 'trunc_ln65_45' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1078 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_61)   --->   "%or_ln65_44 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_45, i26 %lshr_ln65_44" [sha256.cpp:65]   --->   Operation 1078 'bitconcatenate' 'or_ln65_44' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1079 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_61)   --->   "%lshr_ln65_45 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_47, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1079 'partselect' 'lshr_ln65_45' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1080 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_61)   --->   "%trunc_ln65_46 = trunc i32 %e_47" [sha256.cpp:65]   --->   Operation 1080 'trunc' 'trunc_ln65_46' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1081 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_61)   --->   "%or_ln65_45 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_46, i21 %lshr_ln65_45" [sha256.cpp:65]   --->   Operation 1081 'bitconcatenate' 'or_ln65_45' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1082 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_61)   --->   "%lshr_ln65_46 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_47, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1082 'partselect' 'lshr_ln65_46' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1083 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_61)   --->   "%trunc_ln65_47 = trunc i32 %e_47" [sha256.cpp:65]   --->   Operation 1083 'trunc' 'trunc_ln65_47' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1084 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_61)   --->   "%or_ln65_46 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_47, i7 %lshr_ln65_46" [sha256.cpp:65]   --->   Operation 1084 'bitconcatenate' 'or_ln65_46' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 1085 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_61)   --->   "%xor_ln65_60 = xor i32 %or_ln65_44, i32 %or_ln65_45" [sha256.cpp:65]   --->   Operation 1085 'xor' 'xor_ln65_60' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1086 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_61 = xor i32 %xor_ln65_60, i32 %or_ln65_46" [sha256.cpp:65]   --->   Operation 1086 'xor' 'xor_ln65_61' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1087 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_63)   --->   "%and_ln65_30 = and i32 %e_47, i32 %e_46" [sha256.cpp:65]   --->   Operation 1087 'and' 'and_ln65_30' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1088 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_63)   --->   "%xor_ln65_62 = xor i32 %e_47, i32 4294967295" [sha256.cpp:65]   --->   Operation 1088 'xor' 'xor_ln65_62' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1089 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_63)   --->   "%and_ln65_31 = and i32 %e_45, i32 %xor_ln65_62" [sha256.cpp:65]   --->   Operation 1089 'and' 'and_ln65_31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1090 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_63 = xor i32 %and_ln65_30, i32 %and_ln65_31" [sha256.cpp:65]   --->   Operation 1090 'xor' 'xor_ln65_63' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 1091 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_60 = add i32 %xor_ln65_63, i32 %e_44" [sha256.cpp:65]   --->   Operation 1091 'add' 'add_ln65_60' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_17 : Operation 1092 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_61 = add i32 %xor_ln65_61, i32 3248222580" [sha256.cpp:65]   --->   Operation 1092 'add' 'add_ln65_61' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_17 : Operation 1093 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_62 = add i32 %add_ln65_61, i32 %m_15" [sha256.cpp:65]   --->   Operation 1093 'add' 'add_ln65_62' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_17 : Operation 1094 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_15 = add i32 %add_ln65_62, i32 %add_ln65_60" [sha256.cpp:65]   --->   Operation 1094 'add' 't1_15' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 18 <SV = 17> <Delay = 6.49>
ST_18 : Operation 1095 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_39 = add i32 %m_13, i32 %m_22" [sha256.cpp:51]   --->   Operation 1095 'add' 'add_ln51_39' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1096 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_29 = add i32 %add_ln51_40, i32 %add_ln51_39" [sha256.cpp:51]   --->   Operation 1096 'add' 'm_29' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1097 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_42 = add i32 %m_14, i32 %m_23" [sha256.cpp:51]   --->   Operation 1097 'add' 'add_ln51_42' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1098 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_30 = add i32 %add_ln51_43, i32 %add_ln51_42" [sha256.cpp:51]   --->   Operation 1098 'add' 'm_30' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1099 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_46)   --->   "%lshr_ln51_56 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_29, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 1099 'partselect' 'lshr_ln51_56' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1100 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_46)   --->   "%trunc_ln51_26 = trunc i32 %m_29" [sha256.cpp:51]   --->   Operation 1100 'trunc' 'trunc_ln51_26' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1101 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_46)   --->   "%or_ln51_59 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_26, i15 %lshr_ln51_56" [sha256.cpp:51]   --->   Operation 1101 'bitconcatenate' 'or_ln51_59' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1102 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_46)   --->   "%lshr_ln51_57 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_29, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 1102 'partselect' 'lshr_ln51_57' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1103 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_46)   --->   "%trunc_ln51_27 = trunc i32 %m_29" [sha256.cpp:51]   --->   Operation 1103 'trunc' 'trunc_ln51_27' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1104 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_46)   --->   "%or_ln51_60 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_27, i13 %lshr_ln51_57" [sha256.cpp:51]   --->   Operation 1104 'bitconcatenate' 'or_ln51_60' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1105 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_46)   --->   "%lshr_ln51_58 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_29, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 1105 'partselect' 'lshr_ln51_58' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1106 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_46)   --->   "%zext_ln51_30 = zext i22 %lshr_ln51_58" [sha256.cpp:51]   --->   Operation 1106 'zext' 'zext_ln51_30' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1107 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_46)   --->   "%xor_ln51_60 = xor i32 %zext_ln51_30, i32 %or_ln51_60" [sha256.cpp:51]   --->   Operation 1107 'xor' 'xor_ln51_60' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1108 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_46)   --->   "%xor_ln51_61 = xor i32 %xor_ln51_60, i32 %or_ln51_59" [sha256.cpp:51]   --->   Operation 1108 'xor' 'xor_ln51_61' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1109 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_46)   --->   "%lshr_ln51_59 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_16, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 1109 'partselect' 'lshr_ln51_59' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1110 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_46)   --->   "%trunc_ln51_28 = trunc i32 %m_16" [sha256.cpp:51]   --->   Operation 1110 'trunc' 'trunc_ln51_28' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1111 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_46)   --->   "%or_ln51_61 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_28, i25 %lshr_ln51_59" [sha256.cpp:51]   --->   Operation 1111 'bitconcatenate' 'or_ln51_61' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1112 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_46)   --->   "%lshr_ln51_60 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_16, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 1112 'partselect' 'lshr_ln51_60' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1113 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_46)   --->   "%trunc_ln51_29 = trunc i32 %m_16" [sha256.cpp:51]   --->   Operation 1113 'trunc' 'trunc_ln51_29' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1114 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_46)   --->   "%or_ln51_62 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_29, i14 %lshr_ln51_60" [sha256.cpp:51]   --->   Operation 1114 'bitconcatenate' 'or_ln51_62' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1115 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_46)   --->   "%lshr_ln51_61 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_16, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 1115 'partselect' 'lshr_ln51_61' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1116 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_46)   --->   "%zext_ln51_31 = zext i29 %lshr_ln51_61" [sha256.cpp:51]   --->   Operation 1116 'zext' 'zext_ln51_31' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1117 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_46)   --->   "%xor_ln51_62 = xor i32 %zext_ln51_31, i32 %or_ln51_62" [sha256.cpp:51]   --->   Operation 1117 'xor' 'xor_ln51_62' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1118 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_46)   --->   "%xor_ln51_63 = xor i32 %xor_ln51_62, i32 %or_ln51_61" [sha256.cpp:51]   --->   Operation 1118 'xor' 'xor_ln51_63' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1119 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_45 = add i32 %m_15, i32 %m_24" [sha256.cpp:51]   --->   Operation 1119 'add' 'add_ln51_45' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1120 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_46 = add i32 %xor_ln51_63, i32 %xor_ln51_61" [sha256.cpp:51]   --->   Operation 1120 'add' 'add_ln51_46' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1121 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_31 = add i32 %add_ln51_46, i32 %add_ln51_45" [sha256.cpp:51]   --->   Operation 1121 'add' 'm_31' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1122 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_49)   --->   "%lshr_ln51_62 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_30, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 1122 'partselect' 'lshr_ln51_62' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1123 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_49)   --->   "%trunc_ln51_30 = trunc i32 %m_30" [sha256.cpp:51]   --->   Operation 1123 'trunc' 'trunc_ln51_30' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1124 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_49)   --->   "%or_ln51_63 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_30, i15 %lshr_ln51_62" [sha256.cpp:51]   --->   Operation 1124 'bitconcatenate' 'or_ln51_63' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1125 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_49)   --->   "%lshr_ln51_63 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_30, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 1125 'partselect' 'lshr_ln51_63' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1126 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_49)   --->   "%trunc_ln51_31 = trunc i32 %m_30" [sha256.cpp:51]   --->   Operation 1126 'trunc' 'trunc_ln51_31' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1127 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_49)   --->   "%or_ln51_64 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_31, i13 %lshr_ln51_63" [sha256.cpp:51]   --->   Operation 1127 'bitconcatenate' 'or_ln51_64' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1128 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_49)   --->   "%lshr_ln51_64 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_30, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 1128 'partselect' 'lshr_ln51_64' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1129 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_49)   --->   "%zext_ln51_32 = zext i22 %lshr_ln51_64" [sha256.cpp:51]   --->   Operation 1129 'zext' 'zext_ln51_32' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1130 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_49)   --->   "%xor_ln51_64 = xor i32 %zext_ln51_32, i32 %or_ln51_64" [sha256.cpp:51]   --->   Operation 1130 'xor' 'xor_ln51_64' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1131 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_49)   --->   "%xor_ln51_65 = xor i32 %xor_ln51_64, i32 %or_ln51_63" [sha256.cpp:51]   --->   Operation 1131 'xor' 'xor_ln51_65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1132 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_49)   --->   "%lshr_ln51_65 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_17, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 1132 'partselect' 'lshr_ln51_65' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1133 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_49)   --->   "%trunc_ln51_32 = trunc i32 %m_17" [sha256.cpp:51]   --->   Operation 1133 'trunc' 'trunc_ln51_32' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1134 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_49)   --->   "%or_ln51_65 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_32, i25 %lshr_ln51_65" [sha256.cpp:51]   --->   Operation 1134 'bitconcatenate' 'or_ln51_65' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1135 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_49)   --->   "%lshr_ln51_66 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_17, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 1135 'partselect' 'lshr_ln51_66' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1136 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_49)   --->   "%trunc_ln51_33 = trunc i32 %m_17" [sha256.cpp:51]   --->   Operation 1136 'trunc' 'trunc_ln51_33' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1137 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_49)   --->   "%or_ln51_66 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_33, i14 %lshr_ln51_66" [sha256.cpp:51]   --->   Operation 1137 'bitconcatenate' 'or_ln51_66' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1138 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_49)   --->   "%lshr_ln51_67 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_17, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 1138 'partselect' 'lshr_ln51_67' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1139 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_49)   --->   "%zext_ln51_33 = zext i29 %lshr_ln51_67" [sha256.cpp:51]   --->   Operation 1139 'zext' 'zext_ln51_33' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1140 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_49)   --->   "%xor_ln51_66 = xor i32 %zext_ln51_33, i32 %or_ln51_66" [sha256.cpp:51]   --->   Operation 1140 'xor' 'xor_ln51_66' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1141 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_49)   --->   "%xor_ln51_67 = xor i32 %xor_ln51_66, i32 %or_ln51_65" [sha256.cpp:51]   --->   Operation 1141 'xor' 'xor_ln51_67' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1142 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_49 = add i32 %xor_ln51_67, i32 %xor_ln51_65" [sha256.cpp:51]   --->   Operation 1142 'add' 'add_ln51_49' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1143 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_52)   --->   "%lshr_ln51_68 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_31, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 1143 'partselect' 'lshr_ln51_68' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1144 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_52)   --->   "%trunc_ln51_34 = trunc i32 %m_31" [sha256.cpp:51]   --->   Operation 1144 'trunc' 'trunc_ln51_34' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1145 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_52)   --->   "%or_ln51_67 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_34, i15 %lshr_ln51_68" [sha256.cpp:51]   --->   Operation 1145 'bitconcatenate' 'or_ln51_67' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1146 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_52)   --->   "%lshr_ln51_69 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_31, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 1146 'partselect' 'lshr_ln51_69' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1147 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_52)   --->   "%trunc_ln51_35 = trunc i32 %m_31" [sha256.cpp:51]   --->   Operation 1147 'trunc' 'trunc_ln51_35' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1148 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_52)   --->   "%or_ln51_68 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_35, i13 %lshr_ln51_69" [sha256.cpp:51]   --->   Operation 1148 'bitconcatenate' 'or_ln51_68' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1149 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_52)   --->   "%lshr_ln51_70 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_31, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 1149 'partselect' 'lshr_ln51_70' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1150 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_52)   --->   "%zext_ln51_34 = zext i22 %lshr_ln51_70" [sha256.cpp:51]   --->   Operation 1150 'zext' 'zext_ln51_34' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1151 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_52)   --->   "%xor_ln51_68 = xor i32 %zext_ln51_34, i32 %or_ln51_68" [sha256.cpp:51]   --->   Operation 1151 'xor' 'xor_ln51_68' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1152 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_52)   --->   "%xor_ln51_69 = xor i32 %xor_ln51_68, i32 %or_ln51_67" [sha256.cpp:51]   --->   Operation 1152 'xor' 'xor_ln51_69' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1153 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_52)   --->   "%lshr_ln51_71 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_18, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 1153 'partselect' 'lshr_ln51_71' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1154 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_52)   --->   "%trunc_ln51_36 = trunc i32 %m_18" [sha256.cpp:51]   --->   Operation 1154 'trunc' 'trunc_ln51_36' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1155 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_52)   --->   "%or_ln51_69 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_36, i25 %lshr_ln51_71" [sha256.cpp:51]   --->   Operation 1155 'bitconcatenate' 'or_ln51_69' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1156 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_52)   --->   "%lshr_ln51_72 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_18, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 1156 'partselect' 'lshr_ln51_72' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1157 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_52)   --->   "%trunc_ln51_37 = trunc i32 %m_18" [sha256.cpp:51]   --->   Operation 1157 'trunc' 'trunc_ln51_37' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1158 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_52)   --->   "%or_ln51_70 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_37, i14 %lshr_ln51_72" [sha256.cpp:51]   --->   Operation 1158 'bitconcatenate' 'or_ln51_70' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1159 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_52)   --->   "%lshr_ln51_73 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_18, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 1159 'partselect' 'lshr_ln51_73' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1160 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_52)   --->   "%zext_ln51_35 = zext i29 %lshr_ln51_73" [sha256.cpp:51]   --->   Operation 1160 'zext' 'zext_ln51_35' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1161 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_52)   --->   "%xor_ln51_70 = xor i32 %zext_ln51_35, i32 %or_ln51_70" [sha256.cpp:51]   --->   Operation 1161 'xor' 'xor_ln51_70' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1162 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_52)   --->   "%xor_ln51_71 = xor i32 %xor_ln51_70, i32 %or_ln51_69" [sha256.cpp:51]   --->   Operation 1162 'xor' 'xor_ln51_71' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1163 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_51 = add i32 %m_17, i32 %m_26" [sha256.cpp:51]   --->   Operation 1163 'add' 'add_ln51_51' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1164 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_52 = add i32 %xor_ln51_71, i32 %xor_ln51_69" [sha256.cpp:51]   --->   Operation 1164 'add' 'add_ln51_52' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1165 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_33 = add i32 %add_ln51_52, i32 %add_ln51_51" [sha256.cpp:51]   --->   Operation 1165 'add' 'm_33' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1166 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_58)   --->   "%lshr_ln51_80 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_33, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 1166 'partselect' 'lshr_ln51_80' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1167 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_58)   --->   "%trunc_ln51_42 = trunc i32 %m_33" [sha256.cpp:51]   --->   Operation 1167 'trunc' 'trunc_ln51_42' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1168 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_58)   --->   "%or_ln51_75 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_42, i15 %lshr_ln51_80" [sha256.cpp:51]   --->   Operation 1168 'bitconcatenate' 'or_ln51_75' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1169 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_58)   --->   "%lshr_ln51_81 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_33, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 1169 'partselect' 'lshr_ln51_81' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1170 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_58)   --->   "%trunc_ln51_43 = trunc i32 %m_33" [sha256.cpp:51]   --->   Operation 1170 'trunc' 'trunc_ln51_43' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1171 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_58)   --->   "%or_ln51_76 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_43, i13 %lshr_ln51_81" [sha256.cpp:51]   --->   Operation 1171 'bitconcatenate' 'or_ln51_76' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1172 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_58)   --->   "%lshr_ln51_82 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_33, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 1172 'partselect' 'lshr_ln51_82' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1173 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_58)   --->   "%zext_ln51_38 = zext i22 %lshr_ln51_82" [sha256.cpp:51]   --->   Operation 1173 'zext' 'zext_ln51_38' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1174 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_58)   --->   "%xor_ln51_76 = xor i32 %zext_ln51_38, i32 %or_ln51_76" [sha256.cpp:51]   --->   Operation 1174 'xor' 'xor_ln51_76' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1175 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_58)   --->   "%xor_ln51_77 = xor i32 %xor_ln51_76, i32 %or_ln51_75" [sha256.cpp:51]   --->   Operation 1175 'xor' 'xor_ln51_77' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1176 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_58)   --->   "%lshr_ln51_83 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_20, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 1176 'partselect' 'lshr_ln51_83' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1177 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_58)   --->   "%trunc_ln51_44 = trunc i32 %m_20" [sha256.cpp:51]   --->   Operation 1177 'trunc' 'trunc_ln51_44' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1178 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_58)   --->   "%or_ln51_77 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_44, i25 %lshr_ln51_83" [sha256.cpp:51]   --->   Operation 1178 'bitconcatenate' 'or_ln51_77' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1179 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_58)   --->   "%lshr_ln51_84 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_20, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 1179 'partselect' 'lshr_ln51_84' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1180 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_58)   --->   "%trunc_ln51_45 = trunc i32 %m_20" [sha256.cpp:51]   --->   Operation 1180 'trunc' 'trunc_ln51_45' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1181 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_58)   --->   "%or_ln51_78 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_45, i14 %lshr_ln51_84" [sha256.cpp:51]   --->   Operation 1181 'bitconcatenate' 'or_ln51_78' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1182 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_58)   --->   "%lshr_ln51_85 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_20, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 1182 'partselect' 'lshr_ln51_85' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1183 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_58)   --->   "%zext_ln51_39 = zext i29 %lshr_ln51_85" [sha256.cpp:51]   --->   Operation 1183 'zext' 'zext_ln51_39' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1184 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_58)   --->   "%xor_ln51_78 = xor i32 %zext_ln51_39, i32 %or_ln51_78" [sha256.cpp:51]   --->   Operation 1184 'xor' 'xor_ln51_78' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1185 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_58)   --->   "%xor_ln51_79 = xor i32 %xor_ln51_78, i32 %or_ln51_77" [sha256.cpp:51]   --->   Operation 1185 'xor' 'xor_ln51_79' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1186 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_58 = add i32 %xor_ln51_79, i32 %xor_ln51_77" [sha256.cpp:51]   --->   Operation 1186 'add' 'add_ln51_58' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1187 [1/1] (0.28ns)   --->   "%and_ln66_29 = and i32 %a_46, i32 %a_45" [sha256.cpp:66]   --->   Operation 1187 'and' 'and_ln66_29' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1188 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_59)   --->   "%and_ln66_30 = and i32 %a_46, i32 %a_44" [sha256.cpp:66]   --->   Operation 1188 'and' 'and_ln66_30' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1189 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_59)   --->   "%xor_ln66_58 = xor i32 %and_ln66_27, i32 %and_ln66_30" [sha256.cpp:66]   --->   Operation 1189 'xor' 'xor_ln66_58' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1190 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_59 = xor i32 %xor_ln66_58, i32 %and_ln66_29" [sha256.cpp:66]   --->   Operation 1190 'xor' 'xor_ln66_59' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1191 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_28 = add i32 %xor_ln66_59, i32 %t1_14" [sha256.cpp:74]   --->   Operation 1191 'add' 'add_ln74_28' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1192 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_47 = add i32 %add_ln74_28, i32 %xor_ln66_57" [sha256.cpp:74]   --->   Operation 1192 'add' 'a_47' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1193 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_61)   --->   "%lshr_ln66_44 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_47, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1193 'partselect' 'lshr_ln66_44' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1194 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_61)   --->   "%trunc_ln66_45 = trunc i32 %a_47" [sha256.cpp:66]   --->   Operation 1194 'trunc' 'trunc_ln66_45' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1195 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_61)   --->   "%or_ln66_44 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_45, i30 %lshr_ln66_44" [sha256.cpp:66]   --->   Operation 1195 'bitconcatenate' 'or_ln66_44' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1196 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_61)   --->   "%lshr_ln66_45 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_47, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1196 'partselect' 'lshr_ln66_45' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1197 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_61)   --->   "%trunc_ln66_46 = trunc i32 %a_47" [sha256.cpp:66]   --->   Operation 1197 'trunc' 'trunc_ln66_46' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1198 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_61)   --->   "%or_ln66_45 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_46, i19 %lshr_ln66_45" [sha256.cpp:66]   --->   Operation 1198 'bitconcatenate' 'or_ln66_45' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1199 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_61)   --->   "%lshr_ln66_46 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_47, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1199 'partselect' 'lshr_ln66_46' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1200 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_61)   --->   "%trunc_ln66_47 = trunc i32 %a_47" [sha256.cpp:66]   --->   Operation 1200 'trunc' 'trunc_ln66_47' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1201 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_61)   --->   "%or_ln66_46 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_47, i10 %lshr_ln66_46" [sha256.cpp:66]   --->   Operation 1201 'bitconcatenate' 'or_ln66_46' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1202 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_61)   --->   "%xor_ln66_60 = xor i32 %or_ln66_44, i32 %or_ln66_45" [sha256.cpp:66]   --->   Operation 1202 'xor' 'xor_ln66_60' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1203 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_61 = xor i32 %xor_ln66_60, i32 %or_ln66_46" [sha256.cpp:66]   --->   Operation 1203 'xor' 'xor_ln66_61' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1204 [1/1] (0.28ns)   --->   "%and_ln66_31 = and i32 %a_47, i32 %a_46" [sha256.cpp:66]   --->   Operation 1204 'and' 'and_ln66_31' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1205 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_63)   --->   "%and_ln66_32 = and i32 %a_47, i32 %a_45" [sha256.cpp:66]   --->   Operation 1205 'and' 'and_ln66_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1206 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_63)   --->   "%xor_ln66_62 = xor i32 %and_ln66_29, i32 %and_ln66_32" [sha256.cpp:66]   --->   Operation 1206 'xor' 'xor_ln66_62' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1207 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_63 = xor i32 %xor_ln66_62, i32 %and_ln66_31" [sha256.cpp:66]   --->   Operation 1207 'xor' 'xor_ln66_63' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1208 [1/1] (1.14ns)   --->   "%e_48 = add i32 %t1_15, i32 %a_44" [sha256.cpp:70]   --->   Operation 1208 'add' 'e_48' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1209 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_30 = add i32 %xor_ln66_63, i32 %t1_15" [sha256.cpp:74]   --->   Operation 1209 'add' 'add_ln74_30' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1210 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_48 = add i32 %add_ln74_30, i32 %xor_ln66_61" [sha256.cpp:74]   --->   Operation 1210 'add' 'a_48' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1211 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_65)   --->   "%lshr_ln65_47 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_48, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1211 'partselect' 'lshr_ln65_47' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1212 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_65)   --->   "%trunc_ln65_48 = trunc i32 %e_48" [sha256.cpp:65]   --->   Operation 1212 'trunc' 'trunc_ln65_48' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1213 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_65)   --->   "%or_ln65_47 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_48, i26 %lshr_ln65_47" [sha256.cpp:65]   --->   Operation 1213 'bitconcatenate' 'or_ln65_47' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1214 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_65)   --->   "%lshr_ln65_48 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_48, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1214 'partselect' 'lshr_ln65_48' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1215 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_65)   --->   "%trunc_ln65_49 = trunc i32 %e_48" [sha256.cpp:65]   --->   Operation 1215 'trunc' 'trunc_ln65_49' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1216 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_65)   --->   "%or_ln65_48 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_49, i21 %lshr_ln65_48" [sha256.cpp:65]   --->   Operation 1216 'bitconcatenate' 'or_ln65_48' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1217 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_65)   --->   "%lshr_ln65_49 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_48, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1217 'partselect' 'lshr_ln65_49' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1218 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_65)   --->   "%trunc_ln65_50 = trunc i32 %e_48" [sha256.cpp:65]   --->   Operation 1218 'trunc' 'trunc_ln65_50' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1219 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_65)   --->   "%or_ln65_49 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_50, i7 %lshr_ln65_49" [sha256.cpp:65]   --->   Operation 1219 'bitconcatenate' 'or_ln65_49' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1220 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_65)   --->   "%xor_ln65_64 = xor i32 %or_ln65_47, i32 %or_ln65_48" [sha256.cpp:65]   --->   Operation 1220 'xor' 'xor_ln65_64' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1221 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_65 = xor i32 %xor_ln65_64, i32 %or_ln65_49" [sha256.cpp:65]   --->   Operation 1221 'xor' 'xor_ln65_65' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1222 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_67)   --->   "%and_ln65_32 = and i32 %e_48, i32 %e_47" [sha256.cpp:65]   --->   Operation 1222 'and' 'and_ln65_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1223 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_67)   --->   "%xor_ln65_66 = xor i32 %e_48, i32 4294967295" [sha256.cpp:65]   --->   Operation 1223 'xor' 'xor_ln65_66' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1224 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_67)   --->   "%and_ln65_33 = and i32 %e_46, i32 %xor_ln65_66" [sha256.cpp:65]   --->   Operation 1224 'and' 'and_ln65_33' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1225 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_67 = xor i32 %and_ln65_32, i32 %and_ln65_33" [sha256.cpp:65]   --->   Operation 1225 'xor' 'xor_ln65_67' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1226 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_64 = add i32 %xor_ln65_67, i32 %e_45" [sha256.cpp:65]   --->   Operation 1226 'add' 'add_ln65_64' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1227 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_65 = add i32 %xor_ln65_65, i32 3835390401" [sha256.cpp:65]   --->   Operation 1227 'add' 'add_ln65_65' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1228 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_66 = add i32 %add_ln65_65, i32 %m_16" [sha256.cpp:65]   --->   Operation 1228 'add' 'add_ln65_66' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1229 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_16 = add i32 %add_ln65_66, i32 %add_ln65_64" [sha256.cpp:65]   --->   Operation 1229 'add' 't1_16' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1230 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_65)   --->   "%lshr_ln66_47 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_48, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1230 'partselect' 'lshr_ln66_47' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1231 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_65)   --->   "%trunc_ln66_48 = trunc i32 %a_48" [sha256.cpp:66]   --->   Operation 1231 'trunc' 'trunc_ln66_48' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1232 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_65)   --->   "%or_ln66_47 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_48, i30 %lshr_ln66_47" [sha256.cpp:66]   --->   Operation 1232 'bitconcatenate' 'or_ln66_47' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1233 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_65)   --->   "%lshr_ln66_48 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_48, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1233 'partselect' 'lshr_ln66_48' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1234 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_65)   --->   "%trunc_ln66_49 = trunc i32 %a_48" [sha256.cpp:66]   --->   Operation 1234 'trunc' 'trunc_ln66_49' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1235 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_65)   --->   "%or_ln66_48 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_49, i19 %lshr_ln66_48" [sha256.cpp:66]   --->   Operation 1235 'bitconcatenate' 'or_ln66_48' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1236 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_65)   --->   "%lshr_ln66_49 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_48, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1236 'partselect' 'lshr_ln66_49' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1237 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_65)   --->   "%trunc_ln66_50 = trunc i32 %a_48" [sha256.cpp:66]   --->   Operation 1237 'trunc' 'trunc_ln66_50' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1238 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_65)   --->   "%or_ln66_49 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_50, i10 %lshr_ln66_49" [sha256.cpp:66]   --->   Operation 1238 'bitconcatenate' 'or_ln66_49' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1239 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_65)   --->   "%xor_ln66_64 = xor i32 %or_ln66_47, i32 %or_ln66_48" [sha256.cpp:66]   --->   Operation 1239 'xor' 'xor_ln66_64' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1240 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_65 = xor i32 %xor_ln66_64, i32 %or_ln66_49" [sha256.cpp:66]   --->   Operation 1240 'xor' 'xor_ln66_65' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1241 [1/1] (0.28ns)   --->   "%and_ln66_33 = and i32 %a_48, i32 %a_47" [sha256.cpp:66]   --->   Operation 1241 'and' 'and_ln66_33' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1242 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_67)   --->   "%and_ln66_34 = and i32 %a_48, i32 %a_46" [sha256.cpp:66]   --->   Operation 1242 'and' 'and_ln66_34' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1243 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_67)   --->   "%xor_ln66_66 = xor i32 %and_ln66_31, i32 %and_ln66_34" [sha256.cpp:66]   --->   Operation 1243 'xor' 'xor_ln66_66' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1244 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_67 = xor i32 %xor_ln66_66, i32 %and_ln66_33" [sha256.cpp:66]   --->   Operation 1244 'xor' 'xor_ln66_67' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1245 [1/1] (1.14ns)   --->   "%e_49 = add i32 %t1_16, i32 %a_45" [sha256.cpp:70]   --->   Operation 1245 'add' 'e_49' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1246 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_32 = add i32 %xor_ln66_67, i32 %t1_16" [sha256.cpp:74]   --->   Operation 1246 'add' 'add_ln74_32' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1247 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_49 = add i32 %add_ln74_32, i32 %xor_ln66_65" [sha256.cpp:74]   --->   Operation 1247 'add' 'a_49' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1248 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_69)   --->   "%lshr_ln65_50 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_49, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1248 'partselect' 'lshr_ln65_50' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1249 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_69)   --->   "%trunc_ln65_51 = trunc i32 %e_49" [sha256.cpp:65]   --->   Operation 1249 'trunc' 'trunc_ln65_51' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1250 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_69)   --->   "%or_ln65_50 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_51, i26 %lshr_ln65_50" [sha256.cpp:65]   --->   Operation 1250 'bitconcatenate' 'or_ln65_50' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1251 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_69)   --->   "%lshr_ln65_51 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_49, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1251 'partselect' 'lshr_ln65_51' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1252 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_69)   --->   "%trunc_ln65_52 = trunc i32 %e_49" [sha256.cpp:65]   --->   Operation 1252 'trunc' 'trunc_ln65_52' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1253 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_69)   --->   "%or_ln65_51 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_52, i21 %lshr_ln65_51" [sha256.cpp:65]   --->   Operation 1253 'bitconcatenate' 'or_ln65_51' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1254 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_69)   --->   "%lshr_ln65_52 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_49, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1254 'partselect' 'lshr_ln65_52' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1255 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_69)   --->   "%trunc_ln65_53 = trunc i32 %e_49" [sha256.cpp:65]   --->   Operation 1255 'trunc' 'trunc_ln65_53' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1256 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_69)   --->   "%or_ln65_52 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_53, i7 %lshr_ln65_52" [sha256.cpp:65]   --->   Operation 1256 'bitconcatenate' 'or_ln65_52' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1257 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_69)   --->   "%xor_ln65_68 = xor i32 %or_ln65_50, i32 %or_ln65_51" [sha256.cpp:65]   --->   Operation 1257 'xor' 'xor_ln65_68' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1258 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_69 = xor i32 %xor_ln65_68, i32 %or_ln65_52" [sha256.cpp:65]   --->   Operation 1258 'xor' 'xor_ln65_69' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1259 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_71)   --->   "%and_ln65_34 = and i32 %e_49, i32 %e_48" [sha256.cpp:65]   --->   Operation 1259 'and' 'and_ln65_34' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1260 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_71)   --->   "%xor_ln65_70 = xor i32 %e_49, i32 4294967295" [sha256.cpp:65]   --->   Operation 1260 'xor' 'xor_ln65_70' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1261 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_71)   --->   "%and_ln65_35 = and i32 %e_47, i32 %xor_ln65_70" [sha256.cpp:65]   --->   Operation 1261 'and' 'and_ln65_35' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1262 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_71 = xor i32 %and_ln65_34, i32 %and_ln65_35" [sha256.cpp:65]   --->   Operation 1262 'xor' 'xor_ln65_71' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1263 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_68 = add i32 %xor_ln65_71, i32 %e_46" [sha256.cpp:65]   --->   Operation 1263 'add' 'add_ln65_68' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1264 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_69 = add i32 %xor_ln65_69, i32 4022224774" [sha256.cpp:65]   --->   Operation 1264 'add' 'add_ln65_69' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1265 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_70 = add i32 %add_ln65_69, i32 %m_17" [sha256.cpp:65]   --->   Operation 1265 'add' 'add_ln65_70' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1266 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_17 = add i32 %add_ln65_70, i32 %add_ln65_68" [sha256.cpp:65]   --->   Operation 1266 'add' 't1_17' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_18 : Operation 1267 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_69)   --->   "%lshr_ln66_50 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_49, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1267 'partselect' 'lshr_ln66_50' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1268 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_69)   --->   "%trunc_ln66_51 = trunc i32 %a_49" [sha256.cpp:66]   --->   Operation 1268 'trunc' 'trunc_ln66_51' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1269 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_69)   --->   "%or_ln66_50 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_51, i30 %lshr_ln66_50" [sha256.cpp:66]   --->   Operation 1269 'bitconcatenate' 'or_ln66_50' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1270 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_69)   --->   "%lshr_ln66_51 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_49, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1270 'partselect' 'lshr_ln66_51' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1271 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_69)   --->   "%trunc_ln66_52 = trunc i32 %a_49" [sha256.cpp:66]   --->   Operation 1271 'trunc' 'trunc_ln66_52' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1272 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_69)   --->   "%or_ln66_51 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_52, i19 %lshr_ln66_51" [sha256.cpp:66]   --->   Operation 1272 'bitconcatenate' 'or_ln66_51' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1273 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_69)   --->   "%lshr_ln66_52 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_49, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1273 'partselect' 'lshr_ln66_52' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1274 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_69)   --->   "%trunc_ln66_53 = trunc i32 %a_49" [sha256.cpp:66]   --->   Operation 1274 'trunc' 'trunc_ln66_53' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1275 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_69)   --->   "%or_ln66_52 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_53, i10 %lshr_ln66_52" [sha256.cpp:66]   --->   Operation 1275 'bitconcatenate' 'or_ln66_52' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 1276 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_69)   --->   "%xor_ln66_68 = xor i32 %or_ln66_50, i32 %or_ln66_51" [sha256.cpp:66]   --->   Operation 1276 'xor' 'xor_ln66_68' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 1277 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_69 = xor i32 %xor_ln66_68, i32 %or_ln66_52" [sha256.cpp:66]   --->   Operation 1277 'xor' 'xor_ln66_69' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 6.49>
ST_19 : Operation 1278 [1/1] (0.28ns)   --->   "%and_ln66_35 = and i32 %a_49, i32 %a_48" [sha256.cpp:66]   --->   Operation 1278 'and' 'and_ln66_35' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1279 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_71)   --->   "%and_ln66_36 = and i32 %a_49, i32 %a_47" [sha256.cpp:66]   --->   Operation 1279 'and' 'and_ln66_36' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1280 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_71)   --->   "%xor_ln66_70 = xor i32 %and_ln66_33, i32 %and_ln66_36" [sha256.cpp:66]   --->   Operation 1280 'xor' 'xor_ln66_70' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1281 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_71 = xor i32 %xor_ln66_70, i32 %and_ln66_35" [sha256.cpp:66]   --->   Operation 1281 'xor' 'xor_ln66_71' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1282 [1/1] (1.14ns)   --->   "%e_50 = add i32 %t1_17, i32 %a_46" [sha256.cpp:70]   --->   Operation 1282 'add' 'e_50' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1283 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_34 = add i32 %xor_ln66_71, i32 %t1_17" [sha256.cpp:74]   --->   Operation 1283 'add' 'add_ln74_34' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 1284 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_50 = add i32 %add_ln74_34, i32 %xor_ln66_69" [sha256.cpp:74]   --->   Operation 1284 'add' 'a_50' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 1285 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_73)   --->   "%lshr_ln65_53 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_50, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1285 'partselect' 'lshr_ln65_53' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1286 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_73)   --->   "%trunc_ln65_54 = trunc i32 %e_50" [sha256.cpp:65]   --->   Operation 1286 'trunc' 'trunc_ln65_54' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1287 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_73)   --->   "%or_ln65_53 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_54, i26 %lshr_ln65_53" [sha256.cpp:65]   --->   Operation 1287 'bitconcatenate' 'or_ln65_53' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1288 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_73)   --->   "%lshr_ln65_54 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_50, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1288 'partselect' 'lshr_ln65_54' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1289 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_73)   --->   "%trunc_ln65_55 = trunc i32 %e_50" [sha256.cpp:65]   --->   Operation 1289 'trunc' 'trunc_ln65_55' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1290 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_73)   --->   "%or_ln65_54 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_55, i21 %lshr_ln65_54" [sha256.cpp:65]   --->   Operation 1290 'bitconcatenate' 'or_ln65_54' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1291 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_73)   --->   "%lshr_ln65_55 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_50, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1291 'partselect' 'lshr_ln65_55' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1292 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_73)   --->   "%trunc_ln65_56 = trunc i32 %e_50" [sha256.cpp:65]   --->   Operation 1292 'trunc' 'trunc_ln65_56' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1293 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_73)   --->   "%or_ln65_55 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_56, i7 %lshr_ln65_55" [sha256.cpp:65]   --->   Operation 1293 'bitconcatenate' 'or_ln65_55' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1294 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_73)   --->   "%xor_ln65_72 = xor i32 %or_ln65_53, i32 %or_ln65_54" [sha256.cpp:65]   --->   Operation 1294 'xor' 'xor_ln65_72' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1295 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_73 = xor i32 %xor_ln65_72, i32 %or_ln65_55" [sha256.cpp:65]   --->   Operation 1295 'xor' 'xor_ln65_73' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1296 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_75)   --->   "%and_ln65_36 = and i32 %e_50, i32 %e_49" [sha256.cpp:65]   --->   Operation 1296 'and' 'and_ln65_36' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1297 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_75)   --->   "%xor_ln65_74 = xor i32 %e_50, i32 4294967295" [sha256.cpp:65]   --->   Operation 1297 'xor' 'xor_ln65_74' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1298 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_75)   --->   "%and_ln65_37 = and i32 %e_48, i32 %xor_ln65_74" [sha256.cpp:65]   --->   Operation 1298 'and' 'and_ln65_37' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1299 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_75 = xor i32 %and_ln65_36, i32 %and_ln65_37" [sha256.cpp:65]   --->   Operation 1299 'xor' 'xor_ln65_75' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1300 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_72 = add i32 %xor_ln65_75, i32 %e_47" [sha256.cpp:65]   --->   Operation 1300 'add' 'add_ln65_72' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 1301 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_73 = add i32 %xor_ln65_73, i32 264347078" [sha256.cpp:65]   --->   Operation 1301 'add' 'add_ln65_73' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 1302 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_74 = add i32 %add_ln65_73, i32 %m_18" [sha256.cpp:65]   --->   Operation 1302 'add' 'add_ln65_74' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 1303 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_18 = add i32 %add_ln65_74, i32 %add_ln65_72" [sha256.cpp:65]   --->   Operation 1303 'add' 't1_18' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 1304 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_73)   --->   "%lshr_ln66_53 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_50, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1304 'partselect' 'lshr_ln66_53' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1305 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_73)   --->   "%trunc_ln66_54 = trunc i32 %a_50" [sha256.cpp:66]   --->   Operation 1305 'trunc' 'trunc_ln66_54' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1306 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_73)   --->   "%or_ln66_53 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_54, i30 %lshr_ln66_53" [sha256.cpp:66]   --->   Operation 1306 'bitconcatenate' 'or_ln66_53' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1307 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_73)   --->   "%lshr_ln66_54 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_50, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1307 'partselect' 'lshr_ln66_54' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1308 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_73)   --->   "%trunc_ln66_55 = trunc i32 %a_50" [sha256.cpp:66]   --->   Operation 1308 'trunc' 'trunc_ln66_55' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1309 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_73)   --->   "%or_ln66_54 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_55, i19 %lshr_ln66_54" [sha256.cpp:66]   --->   Operation 1309 'bitconcatenate' 'or_ln66_54' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1310 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_73)   --->   "%lshr_ln66_55 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_50, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1310 'partselect' 'lshr_ln66_55' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1311 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_73)   --->   "%trunc_ln66_56 = trunc i32 %a_50" [sha256.cpp:66]   --->   Operation 1311 'trunc' 'trunc_ln66_56' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1312 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_73)   --->   "%or_ln66_55 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_56, i10 %lshr_ln66_55" [sha256.cpp:66]   --->   Operation 1312 'bitconcatenate' 'or_ln66_55' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1313 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_73)   --->   "%xor_ln66_72 = xor i32 %or_ln66_53, i32 %or_ln66_54" [sha256.cpp:66]   --->   Operation 1313 'xor' 'xor_ln66_72' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1314 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_73 = xor i32 %xor_ln66_72, i32 %or_ln66_55" [sha256.cpp:66]   --->   Operation 1314 'xor' 'xor_ln66_73' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1315 [1/1] (0.28ns)   --->   "%and_ln66_37 = and i32 %a_50, i32 %a_49" [sha256.cpp:66]   --->   Operation 1315 'and' 'and_ln66_37' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1316 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_75)   --->   "%and_ln66_38 = and i32 %a_50, i32 %a_48" [sha256.cpp:66]   --->   Operation 1316 'and' 'and_ln66_38' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1317 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_75)   --->   "%xor_ln66_74 = xor i32 %and_ln66_35, i32 %and_ln66_38" [sha256.cpp:66]   --->   Operation 1317 'xor' 'xor_ln66_74' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1318 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_75 = xor i32 %xor_ln66_74, i32 %and_ln66_37" [sha256.cpp:66]   --->   Operation 1318 'xor' 'xor_ln66_75' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1319 [1/1] (1.14ns)   --->   "%e_51 = add i32 %t1_18, i32 %a_47" [sha256.cpp:70]   --->   Operation 1319 'add' 'e_51' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1320 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_36 = add i32 %xor_ln66_75, i32 %t1_18" [sha256.cpp:74]   --->   Operation 1320 'add' 'add_ln74_36' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 1321 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_51 = add i32 %add_ln74_36, i32 %xor_ln66_73" [sha256.cpp:74]   --->   Operation 1321 'add' 'a_51' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 1322 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_77)   --->   "%lshr_ln65_56 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_51, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1322 'partselect' 'lshr_ln65_56' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1323 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_77)   --->   "%trunc_ln65_57 = trunc i32 %e_51" [sha256.cpp:65]   --->   Operation 1323 'trunc' 'trunc_ln65_57' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1324 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_77)   --->   "%or_ln65_56 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_57, i26 %lshr_ln65_56" [sha256.cpp:65]   --->   Operation 1324 'bitconcatenate' 'or_ln65_56' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1325 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_77)   --->   "%lshr_ln65_57 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_51, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1325 'partselect' 'lshr_ln65_57' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1326 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_77)   --->   "%trunc_ln65_58 = trunc i32 %e_51" [sha256.cpp:65]   --->   Operation 1326 'trunc' 'trunc_ln65_58' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1327 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_77)   --->   "%or_ln65_57 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_58, i21 %lshr_ln65_57" [sha256.cpp:65]   --->   Operation 1327 'bitconcatenate' 'or_ln65_57' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1328 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_77)   --->   "%lshr_ln65_58 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_51, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1328 'partselect' 'lshr_ln65_58' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1329 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_77)   --->   "%trunc_ln65_59 = trunc i32 %e_51" [sha256.cpp:65]   --->   Operation 1329 'trunc' 'trunc_ln65_59' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1330 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_77)   --->   "%or_ln65_58 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_59, i7 %lshr_ln65_58" [sha256.cpp:65]   --->   Operation 1330 'bitconcatenate' 'or_ln65_58' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1331 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_77)   --->   "%xor_ln65_76 = xor i32 %or_ln65_56, i32 %or_ln65_57" [sha256.cpp:65]   --->   Operation 1331 'xor' 'xor_ln65_76' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1332 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_77 = xor i32 %xor_ln65_76, i32 %or_ln65_58" [sha256.cpp:65]   --->   Operation 1332 'xor' 'xor_ln65_77' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1333 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_79)   --->   "%and_ln65_38 = and i32 %e_51, i32 %e_50" [sha256.cpp:65]   --->   Operation 1333 'and' 'and_ln65_38' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1334 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_79)   --->   "%xor_ln65_78 = xor i32 %e_51, i32 4294967295" [sha256.cpp:65]   --->   Operation 1334 'xor' 'xor_ln65_78' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1335 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_79)   --->   "%and_ln65_39 = and i32 %e_49, i32 %xor_ln65_78" [sha256.cpp:65]   --->   Operation 1335 'and' 'and_ln65_39' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1336 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_79 = xor i32 %and_ln65_38, i32 %and_ln65_39" [sha256.cpp:65]   --->   Operation 1336 'xor' 'xor_ln65_79' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1337 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_76 = add i32 %xor_ln65_79, i32 %e_48" [sha256.cpp:65]   --->   Operation 1337 'add' 'add_ln65_76' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 1338 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_77 = add i32 %xor_ln65_77, i32 604807628" [sha256.cpp:65]   --->   Operation 1338 'add' 'add_ln65_77' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 1339 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_78 = add i32 %add_ln65_77, i32 %m_19" [sha256.cpp:65]   --->   Operation 1339 'add' 'add_ln65_78' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 1340 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_19 = add i32 %add_ln65_78, i32 %add_ln65_76" [sha256.cpp:65]   --->   Operation 1340 'add' 't1_19' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_19 : Operation 1341 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_77)   --->   "%lshr_ln66_56 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_51, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1341 'partselect' 'lshr_ln66_56' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1342 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_77)   --->   "%trunc_ln66_57 = trunc i32 %a_51" [sha256.cpp:66]   --->   Operation 1342 'trunc' 'trunc_ln66_57' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1343 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_77)   --->   "%or_ln66_56 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_57, i30 %lshr_ln66_56" [sha256.cpp:66]   --->   Operation 1343 'bitconcatenate' 'or_ln66_56' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1344 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_77)   --->   "%lshr_ln66_57 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_51, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1344 'partselect' 'lshr_ln66_57' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1345 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_77)   --->   "%trunc_ln66_58 = trunc i32 %a_51" [sha256.cpp:66]   --->   Operation 1345 'trunc' 'trunc_ln66_58' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1346 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_77)   --->   "%or_ln66_57 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_58, i19 %lshr_ln66_57" [sha256.cpp:66]   --->   Operation 1346 'bitconcatenate' 'or_ln66_57' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1347 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_77)   --->   "%lshr_ln66_58 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_51, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1347 'partselect' 'lshr_ln66_58' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1348 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_77)   --->   "%trunc_ln66_59 = trunc i32 %a_51" [sha256.cpp:66]   --->   Operation 1348 'trunc' 'trunc_ln66_59' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1349 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_77)   --->   "%or_ln66_58 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_59, i10 %lshr_ln66_58" [sha256.cpp:66]   --->   Operation 1349 'bitconcatenate' 'or_ln66_58' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 1350 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_77)   --->   "%xor_ln66_76 = xor i32 %or_ln66_56, i32 %or_ln66_57" [sha256.cpp:66]   --->   Operation 1350 'xor' 'xor_ln66_76' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 1351 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_77 = xor i32 %xor_ln66_76, i32 %or_ln66_58" [sha256.cpp:66]   --->   Operation 1351 'xor' 'xor_ln66_77' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 6.49>
ST_20 : Operation 1352 [1/1] (0.28ns)   --->   "%and_ln66_39 = and i32 %a_51, i32 %a_50" [sha256.cpp:66]   --->   Operation 1352 'and' 'and_ln66_39' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 1353 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_79)   --->   "%and_ln66_40 = and i32 %a_51, i32 %a_49" [sha256.cpp:66]   --->   Operation 1353 'and' 'and_ln66_40' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 1354 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_79)   --->   "%xor_ln66_78 = xor i32 %and_ln66_37, i32 %and_ln66_40" [sha256.cpp:66]   --->   Operation 1354 'xor' 'xor_ln66_78' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 1355 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_79 = xor i32 %xor_ln66_78, i32 %and_ln66_39" [sha256.cpp:66]   --->   Operation 1355 'xor' 'xor_ln66_79' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 1356 [1/1] (1.14ns)   --->   "%e_52 = add i32 %t1_19, i32 %a_48" [sha256.cpp:70]   --->   Operation 1356 'add' 'e_52' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 1357 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_38 = add i32 %xor_ln66_79, i32 %t1_19" [sha256.cpp:74]   --->   Operation 1357 'add' 'add_ln74_38' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_20 : Operation 1358 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_52 = add i32 %add_ln74_38, i32 %xor_ln66_77" [sha256.cpp:74]   --->   Operation 1358 'add' 'a_52' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_20 : Operation 1359 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_81)   --->   "%lshr_ln65_59 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_52, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1359 'partselect' 'lshr_ln65_59' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1360 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_81)   --->   "%trunc_ln65_60 = trunc i32 %e_52" [sha256.cpp:65]   --->   Operation 1360 'trunc' 'trunc_ln65_60' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1361 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_81)   --->   "%or_ln65_59 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_60, i26 %lshr_ln65_59" [sha256.cpp:65]   --->   Operation 1361 'bitconcatenate' 'or_ln65_59' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1362 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_81)   --->   "%lshr_ln65_60 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_52, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1362 'partselect' 'lshr_ln65_60' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1363 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_81)   --->   "%trunc_ln65_61 = trunc i32 %e_52" [sha256.cpp:65]   --->   Operation 1363 'trunc' 'trunc_ln65_61' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1364 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_81)   --->   "%or_ln65_60 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_61, i21 %lshr_ln65_60" [sha256.cpp:65]   --->   Operation 1364 'bitconcatenate' 'or_ln65_60' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1365 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_81)   --->   "%lshr_ln65_61 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_52, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1365 'partselect' 'lshr_ln65_61' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1366 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_81)   --->   "%trunc_ln65_62 = trunc i32 %e_52" [sha256.cpp:65]   --->   Operation 1366 'trunc' 'trunc_ln65_62' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1367 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_81)   --->   "%or_ln65_61 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_62, i7 %lshr_ln65_61" [sha256.cpp:65]   --->   Operation 1367 'bitconcatenate' 'or_ln65_61' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1368 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_81)   --->   "%xor_ln65_80 = xor i32 %or_ln65_59, i32 %or_ln65_60" [sha256.cpp:65]   --->   Operation 1368 'xor' 'xor_ln65_80' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 1369 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_81 = xor i32 %xor_ln65_80, i32 %or_ln65_61" [sha256.cpp:65]   --->   Operation 1369 'xor' 'xor_ln65_81' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 1370 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_83)   --->   "%and_ln65_40 = and i32 %e_52, i32 %e_51" [sha256.cpp:65]   --->   Operation 1370 'and' 'and_ln65_40' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 1371 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_83)   --->   "%xor_ln65_82 = xor i32 %e_52, i32 4294967295" [sha256.cpp:65]   --->   Operation 1371 'xor' 'xor_ln65_82' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 1372 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_83)   --->   "%and_ln65_41 = and i32 %e_50, i32 %xor_ln65_82" [sha256.cpp:65]   --->   Operation 1372 'and' 'and_ln65_41' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 1373 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_83 = xor i32 %and_ln65_40, i32 %and_ln65_41" [sha256.cpp:65]   --->   Operation 1373 'xor' 'xor_ln65_83' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 1374 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_80 = add i32 %xor_ln65_83, i32 %e_49" [sha256.cpp:65]   --->   Operation 1374 'add' 'add_ln65_80' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_20 : Operation 1375 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_81 = add i32 %xor_ln65_81, i32 770255983" [sha256.cpp:65]   --->   Operation 1375 'add' 'add_ln65_81' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_20 : Operation 1376 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_82 = add i32 %add_ln65_81, i32 %m_20" [sha256.cpp:65]   --->   Operation 1376 'add' 'add_ln65_82' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_20 : Operation 1377 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_20 = add i32 %add_ln65_82, i32 %add_ln65_80" [sha256.cpp:65]   --->   Operation 1377 'add' 't1_20' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_20 : Operation 1378 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_81)   --->   "%lshr_ln66_59 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_52, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1378 'partselect' 'lshr_ln66_59' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1379 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_81)   --->   "%trunc_ln66_60 = trunc i32 %a_52" [sha256.cpp:66]   --->   Operation 1379 'trunc' 'trunc_ln66_60' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1380 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_81)   --->   "%or_ln66_59 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_60, i30 %lshr_ln66_59" [sha256.cpp:66]   --->   Operation 1380 'bitconcatenate' 'or_ln66_59' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1381 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_81)   --->   "%lshr_ln66_60 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_52, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1381 'partselect' 'lshr_ln66_60' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1382 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_81)   --->   "%trunc_ln66_61 = trunc i32 %a_52" [sha256.cpp:66]   --->   Operation 1382 'trunc' 'trunc_ln66_61' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1383 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_81)   --->   "%or_ln66_60 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_61, i19 %lshr_ln66_60" [sha256.cpp:66]   --->   Operation 1383 'bitconcatenate' 'or_ln66_60' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1384 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_81)   --->   "%lshr_ln66_61 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_52, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1384 'partselect' 'lshr_ln66_61' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1385 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_81)   --->   "%trunc_ln66_62 = trunc i32 %a_52" [sha256.cpp:66]   --->   Operation 1385 'trunc' 'trunc_ln66_62' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1386 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_81)   --->   "%or_ln66_61 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_62, i10 %lshr_ln66_61" [sha256.cpp:66]   --->   Operation 1386 'bitconcatenate' 'or_ln66_61' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1387 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_81)   --->   "%xor_ln66_80 = xor i32 %or_ln66_59, i32 %or_ln66_60" [sha256.cpp:66]   --->   Operation 1387 'xor' 'xor_ln66_80' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 1388 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_81 = xor i32 %xor_ln66_80, i32 %or_ln66_61" [sha256.cpp:66]   --->   Operation 1388 'xor' 'xor_ln66_81' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 1389 [1/1] (1.14ns)   --->   "%e_53 = add i32 %t1_20, i32 %a_49" [sha256.cpp:70]   --->   Operation 1389 'add' 'e_53' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 1390 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_85)   --->   "%lshr_ln65_62 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_53, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1390 'partselect' 'lshr_ln65_62' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1391 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_85)   --->   "%trunc_ln65_63 = trunc i32 %e_53" [sha256.cpp:65]   --->   Operation 1391 'trunc' 'trunc_ln65_63' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1392 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_85)   --->   "%or_ln65_62 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_63, i26 %lshr_ln65_62" [sha256.cpp:65]   --->   Operation 1392 'bitconcatenate' 'or_ln65_62' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1393 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_85)   --->   "%lshr_ln65_63 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_53, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1393 'partselect' 'lshr_ln65_63' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1394 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_85)   --->   "%trunc_ln65_64 = trunc i32 %e_53" [sha256.cpp:65]   --->   Operation 1394 'trunc' 'trunc_ln65_64' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1395 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_85)   --->   "%or_ln65_63 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_64, i21 %lshr_ln65_63" [sha256.cpp:65]   --->   Operation 1395 'bitconcatenate' 'or_ln65_63' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1396 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_85)   --->   "%lshr_ln65_64 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_53, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1396 'partselect' 'lshr_ln65_64' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1397 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_85)   --->   "%trunc_ln65_65 = trunc i32 %e_53" [sha256.cpp:65]   --->   Operation 1397 'trunc' 'trunc_ln65_65' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1398 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_85)   --->   "%or_ln65_64 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_65, i7 %lshr_ln65_64" [sha256.cpp:65]   --->   Operation 1398 'bitconcatenate' 'or_ln65_64' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 1399 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_85)   --->   "%xor_ln65_84 = xor i32 %or_ln65_62, i32 %or_ln65_63" [sha256.cpp:65]   --->   Operation 1399 'xor' 'xor_ln65_84' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 1400 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_85 = xor i32 %xor_ln65_84, i32 %or_ln65_64" [sha256.cpp:65]   --->   Operation 1400 'xor' 'xor_ln65_85' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 1401 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_87)   --->   "%and_ln65_42 = and i32 %e_53, i32 %e_52" [sha256.cpp:65]   --->   Operation 1401 'and' 'and_ln65_42' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 1402 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_87)   --->   "%xor_ln65_86 = xor i32 %e_53, i32 4294967295" [sha256.cpp:65]   --->   Operation 1402 'xor' 'xor_ln65_86' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 1403 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_87)   --->   "%and_ln65_43 = and i32 %e_51, i32 %xor_ln65_86" [sha256.cpp:65]   --->   Operation 1403 'and' 'and_ln65_43' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 1404 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_87 = xor i32 %and_ln65_42, i32 %and_ln65_43" [sha256.cpp:65]   --->   Operation 1404 'xor' 'xor_ln65_87' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 1405 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_84 = add i32 %xor_ln65_87, i32 %e_50" [sha256.cpp:65]   --->   Operation 1405 'add' 'add_ln65_84' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_20 : Operation 1406 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_85 = add i32 %xor_ln65_85, i32 1249150122" [sha256.cpp:65]   --->   Operation 1406 'add' 'add_ln65_85' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_20 : Operation 1407 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_86 = add i32 %add_ln65_85, i32 %m_21" [sha256.cpp:65]   --->   Operation 1407 'add' 'add_ln65_86' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_20 : Operation 1408 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_21 = add i32 %add_ln65_86, i32 %add_ln65_84" [sha256.cpp:65]   --->   Operation 1408 'add' 't1_21' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 21 <SV = 20> <Delay = 6.49>
ST_21 : Operation 1409 [1/1] (0.28ns)   --->   "%and_ln66_41 = and i32 %a_52, i32 %a_51" [sha256.cpp:66]   --->   Operation 1409 'and' 'and_ln66_41' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1410 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_83)   --->   "%and_ln66_42 = and i32 %a_52, i32 %a_50" [sha256.cpp:66]   --->   Operation 1410 'and' 'and_ln66_42' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1411 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_83)   --->   "%xor_ln66_82 = xor i32 %and_ln66_39, i32 %and_ln66_42" [sha256.cpp:66]   --->   Operation 1411 'xor' 'xor_ln66_82' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1412 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_83 = xor i32 %xor_ln66_82, i32 %and_ln66_41" [sha256.cpp:66]   --->   Operation 1412 'xor' 'xor_ln66_83' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1413 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_40 = add i32 %xor_ln66_83, i32 %t1_20" [sha256.cpp:74]   --->   Operation 1413 'add' 'add_ln74_40' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 1414 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_53 = add i32 %add_ln74_40, i32 %xor_ln66_81" [sha256.cpp:74]   --->   Operation 1414 'add' 'a_53' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 1415 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_85)   --->   "%lshr_ln66_62 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_53, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1415 'partselect' 'lshr_ln66_62' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1416 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_85)   --->   "%trunc_ln66_63 = trunc i32 %a_53" [sha256.cpp:66]   --->   Operation 1416 'trunc' 'trunc_ln66_63' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1417 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_85)   --->   "%or_ln66_62 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_63, i30 %lshr_ln66_62" [sha256.cpp:66]   --->   Operation 1417 'bitconcatenate' 'or_ln66_62' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1418 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_85)   --->   "%lshr_ln66_63 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_53, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1418 'partselect' 'lshr_ln66_63' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1419 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_85)   --->   "%trunc_ln66_64 = trunc i32 %a_53" [sha256.cpp:66]   --->   Operation 1419 'trunc' 'trunc_ln66_64' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1420 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_85)   --->   "%or_ln66_63 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_64, i19 %lshr_ln66_63" [sha256.cpp:66]   --->   Operation 1420 'bitconcatenate' 'or_ln66_63' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1421 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_85)   --->   "%lshr_ln66_64 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_53, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1421 'partselect' 'lshr_ln66_64' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1422 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_85)   --->   "%trunc_ln66_65 = trunc i32 %a_53" [sha256.cpp:66]   --->   Operation 1422 'trunc' 'trunc_ln66_65' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1423 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_85)   --->   "%or_ln66_64 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_65, i10 %lshr_ln66_64" [sha256.cpp:66]   --->   Operation 1423 'bitconcatenate' 'or_ln66_64' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1424 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_85)   --->   "%xor_ln66_84 = xor i32 %or_ln66_62, i32 %or_ln66_63" [sha256.cpp:66]   --->   Operation 1424 'xor' 'xor_ln66_84' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1425 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_85 = xor i32 %xor_ln66_84, i32 %or_ln66_64" [sha256.cpp:66]   --->   Operation 1425 'xor' 'xor_ln66_85' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1426 [1/1] (0.28ns)   --->   "%and_ln66_43 = and i32 %a_53, i32 %a_52" [sha256.cpp:66]   --->   Operation 1426 'and' 'and_ln66_43' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1427 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_87)   --->   "%and_ln66_44 = and i32 %a_53, i32 %a_51" [sha256.cpp:66]   --->   Operation 1427 'and' 'and_ln66_44' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1428 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_87)   --->   "%xor_ln66_86 = xor i32 %and_ln66_41, i32 %and_ln66_44" [sha256.cpp:66]   --->   Operation 1428 'xor' 'xor_ln66_86' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1429 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_87 = xor i32 %xor_ln66_86, i32 %and_ln66_43" [sha256.cpp:66]   --->   Operation 1429 'xor' 'xor_ln66_87' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1430 [1/1] (1.14ns)   --->   "%e_54 = add i32 %t1_21, i32 %a_50" [sha256.cpp:70]   --->   Operation 1430 'add' 'e_54' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1431 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_42 = add i32 %xor_ln66_87, i32 %t1_21" [sha256.cpp:74]   --->   Operation 1431 'add' 'add_ln74_42' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 1432 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_54 = add i32 %add_ln74_42, i32 %xor_ln66_85" [sha256.cpp:74]   --->   Operation 1432 'add' 'a_54' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 1433 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_89)   --->   "%lshr_ln65_65 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_54, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1433 'partselect' 'lshr_ln65_65' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1434 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_89)   --->   "%trunc_ln65_66 = trunc i32 %e_54" [sha256.cpp:65]   --->   Operation 1434 'trunc' 'trunc_ln65_66' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1435 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_89)   --->   "%or_ln65_65 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_66, i26 %lshr_ln65_65" [sha256.cpp:65]   --->   Operation 1435 'bitconcatenate' 'or_ln65_65' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1436 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_89)   --->   "%lshr_ln65_66 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_54, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1436 'partselect' 'lshr_ln65_66' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1437 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_89)   --->   "%trunc_ln65_67 = trunc i32 %e_54" [sha256.cpp:65]   --->   Operation 1437 'trunc' 'trunc_ln65_67' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1438 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_89)   --->   "%or_ln65_66 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_67, i21 %lshr_ln65_66" [sha256.cpp:65]   --->   Operation 1438 'bitconcatenate' 'or_ln65_66' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1439 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_89)   --->   "%lshr_ln65_67 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_54, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1439 'partselect' 'lshr_ln65_67' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1440 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_89)   --->   "%trunc_ln65_68 = trunc i32 %e_54" [sha256.cpp:65]   --->   Operation 1440 'trunc' 'trunc_ln65_68' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1441 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_89)   --->   "%or_ln65_67 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_68, i7 %lshr_ln65_67" [sha256.cpp:65]   --->   Operation 1441 'bitconcatenate' 'or_ln65_67' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1442 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_89)   --->   "%xor_ln65_88 = xor i32 %or_ln65_65, i32 %or_ln65_66" [sha256.cpp:65]   --->   Operation 1442 'xor' 'xor_ln65_88' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1443 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_89 = xor i32 %xor_ln65_88, i32 %or_ln65_67" [sha256.cpp:65]   --->   Operation 1443 'xor' 'xor_ln65_89' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1444 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_91)   --->   "%and_ln65_44 = and i32 %e_54, i32 %e_53" [sha256.cpp:65]   --->   Operation 1444 'and' 'and_ln65_44' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1445 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_91)   --->   "%xor_ln65_90 = xor i32 %e_54, i32 4294967295" [sha256.cpp:65]   --->   Operation 1445 'xor' 'xor_ln65_90' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1446 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_91)   --->   "%and_ln65_45 = and i32 %e_52, i32 %xor_ln65_90" [sha256.cpp:65]   --->   Operation 1446 'and' 'and_ln65_45' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1447 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_91 = xor i32 %and_ln65_44, i32 %and_ln65_45" [sha256.cpp:65]   --->   Operation 1447 'xor' 'xor_ln65_91' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1448 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_88 = add i32 %xor_ln65_91, i32 %e_51" [sha256.cpp:65]   --->   Operation 1448 'add' 'add_ln65_88' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 1449 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_89 = add i32 %xor_ln65_89, i32 1555081692" [sha256.cpp:65]   --->   Operation 1449 'add' 'add_ln65_89' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 1450 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_90 = add i32 %add_ln65_89, i32 %m_22" [sha256.cpp:65]   --->   Operation 1450 'add' 'add_ln65_90' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 1451 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_22 = add i32 %add_ln65_90, i32 %add_ln65_88" [sha256.cpp:65]   --->   Operation 1451 'add' 't1_22' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 1452 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_89)   --->   "%lshr_ln66_65 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_54, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1452 'partselect' 'lshr_ln66_65' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1453 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_89)   --->   "%trunc_ln66_66 = trunc i32 %a_54" [sha256.cpp:66]   --->   Operation 1453 'trunc' 'trunc_ln66_66' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1454 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_89)   --->   "%or_ln66_65 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_66, i30 %lshr_ln66_65" [sha256.cpp:66]   --->   Operation 1454 'bitconcatenate' 'or_ln66_65' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1455 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_89)   --->   "%lshr_ln66_66 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_54, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1455 'partselect' 'lshr_ln66_66' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1456 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_89)   --->   "%trunc_ln66_67 = trunc i32 %a_54" [sha256.cpp:66]   --->   Operation 1456 'trunc' 'trunc_ln66_67' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1457 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_89)   --->   "%or_ln66_66 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_67, i19 %lshr_ln66_66" [sha256.cpp:66]   --->   Operation 1457 'bitconcatenate' 'or_ln66_66' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1458 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_89)   --->   "%lshr_ln66_67 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_54, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1458 'partselect' 'lshr_ln66_67' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1459 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_89)   --->   "%trunc_ln66_68 = trunc i32 %a_54" [sha256.cpp:66]   --->   Operation 1459 'trunc' 'trunc_ln66_68' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1460 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_89)   --->   "%or_ln66_67 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_68, i10 %lshr_ln66_67" [sha256.cpp:66]   --->   Operation 1460 'bitconcatenate' 'or_ln66_67' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1461 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_89)   --->   "%xor_ln66_88 = xor i32 %or_ln66_65, i32 %or_ln66_66" [sha256.cpp:66]   --->   Operation 1461 'xor' 'xor_ln66_88' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1462 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_89 = xor i32 %xor_ln66_88, i32 %or_ln66_67" [sha256.cpp:66]   --->   Operation 1462 'xor' 'xor_ln66_89' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1463 [1/1] (1.14ns)   --->   "%e_55 = add i32 %t1_22, i32 %a_51" [sha256.cpp:70]   --->   Operation 1463 'add' 'e_55' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1464 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_93)   --->   "%lshr_ln65_68 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_55, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1464 'partselect' 'lshr_ln65_68' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1465 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_93)   --->   "%trunc_ln65_69 = trunc i32 %e_55" [sha256.cpp:65]   --->   Operation 1465 'trunc' 'trunc_ln65_69' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1466 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_93)   --->   "%or_ln65_68 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_69, i26 %lshr_ln65_68" [sha256.cpp:65]   --->   Operation 1466 'bitconcatenate' 'or_ln65_68' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1467 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_93)   --->   "%lshr_ln65_69 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_55, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1467 'partselect' 'lshr_ln65_69' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1468 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_93)   --->   "%trunc_ln65_70 = trunc i32 %e_55" [sha256.cpp:65]   --->   Operation 1468 'trunc' 'trunc_ln65_70' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1469 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_93)   --->   "%or_ln65_69 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_70, i21 %lshr_ln65_69" [sha256.cpp:65]   --->   Operation 1469 'bitconcatenate' 'or_ln65_69' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1470 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_93)   --->   "%lshr_ln65_70 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_55, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1470 'partselect' 'lshr_ln65_70' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1471 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_93)   --->   "%trunc_ln65_71 = trunc i32 %e_55" [sha256.cpp:65]   --->   Operation 1471 'trunc' 'trunc_ln65_71' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1472 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_93)   --->   "%or_ln65_70 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_71, i7 %lshr_ln65_70" [sha256.cpp:65]   --->   Operation 1472 'bitconcatenate' 'or_ln65_70' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 1473 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_93)   --->   "%xor_ln65_92 = xor i32 %or_ln65_68, i32 %or_ln65_69" [sha256.cpp:65]   --->   Operation 1473 'xor' 'xor_ln65_92' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1474 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_93 = xor i32 %xor_ln65_92, i32 %or_ln65_70" [sha256.cpp:65]   --->   Operation 1474 'xor' 'xor_ln65_93' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1475 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_95)   --->   "%and_ln65_46 = and i32 %e_55, i32 %e_54" [sha256.cpp:65]   --->   Operation 1475 'and' 'and_ln65_46' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1476 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_95)   --->   "%xor_ln65_94 = xor i32 %e_55, i32 4294967295" [sha256.cpp:65]   --->   Operation 1476 'xor' 'xor_ln65_94' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1477 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_95)   --->   "%and_ln65_47 = and i32 %e_53, i32 %xor_ln65_94" [sha256.cpp:65]   --->   Operation 1477 'and' 'and_ln65_47' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1478 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_95 = xor i32 %and_ln65_46, i32 %and_ln65_47" [sha256.cpp:65]   --->   Operation 1478 'xor' 'xor_ln65_95' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 1479 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_92 = add i32 %xor_ln65_95, i32 %e_52" [sha256.cpp:65]   --->   Operation 1479 'add' 'add_ln65_92' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 1480 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_93 = add i32 %xor_ln65_93, i32 1996064986" [sha256.cpp:65]   --->   Operation 1480 'add' 'add_ln65_93' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 1481 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_94 = add i32 %add_ln65_93, i32 %m_23" [sha256.cpp:65]   --->   Operation 1481 'add' 'add_ln65_94' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_21 : Operation 1482 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_23 = add i32 %add_ln65_94, i32 %add_ln65_92" [sha256.cpp:65]   --->   Operation 1482 'add' 't1_23' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 22 <SV = 21> <Delay = 6.49>
ST_22 : Operation 1483 [1/1] (0.28ns)   --->   "%and_ln66_45 = and i32 %a_54, i32 %a_53" [sha256.cpp:66]   --->   Operation 1483 'and' 'and_ln66_45' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1484 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_91)   --->   "%and_ln66_46 = and i32 %a_54, i32 %a_52" [sha256.cpp:66]   --->   Operation 1484 'and' 'and_ln66_46' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1485 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_91)   --->   "%xor_ln66_90 = xor i32 %and_ln66_43, i32 %and_ln66_46" [sha256.cpp:66]   --->   Operation 1485 'xor' 'xor_ln66_90' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1486 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_91 = xor i32 %xor_ln66_90, i32 %and_ln66_45" [sha256.cpp:66]   --->   Operation 1486 'xor' 'xor_ln66_91' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1487 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_44 = add i32 %xor_ln66_91, i32 %t1_22" [sha256.cpp:74]   --->   Operation 1487 'add' 'add_ln74_44' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 1488 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_55 = add i32 %add_ln74_44, i32 %xor_ln66_89" [sha256.cpp:74]   --->   Operation 1488 'add' 'a_55' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 1489 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_93)   --->   "%lshr_ln66_68 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_55, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1489 'partselect' 'lshr_ln66_68' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1490 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_93)   --->   "%trunc_ln66_69 = trunc i32 %a_55" [sha256.cpp:66]   --->   Operation 1490 'trunc' 'trunc_ln66_69' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1491 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_93)   --->   "%or_ln66_68 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_69, i30 %lshr_ln66_68" [sha256.cpp:66]   --->   Operation 1491 'bitconcatenate' 'or_ln66_68' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1492 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_93)   --->   "%lshr_ln66_69 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_55, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1492 'partselect' 'lshr_ln66_69' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1493 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_93)   --->   "%trunc_ln66_70 = trunc i32 %a_55" [sha256.cpp:66]   --->   Operation 1493 'trunc' 'trunc_ln66_70' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1494 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_93)   --->   "%or_ln66_69 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_70, i19 %lshr_ln66_69" [sha256.cpp:66]   --->   Operation 1494 'bitconcatenate' 'or_ln66_69' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1495 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_93)   --->   "%lshr_ln66_70 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_55, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1495 'partselect' 'lshr_ln66_70' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1496 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_93)   --->   "%trunc_ln66_71 = trunc i32 %a_55" [sha256.cpp:66]   --->   Operation 1496 'trunc' 'trunc_ln66_71' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1497 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_93)   --->   "%or_ln66_70 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_71, i10 %lshr_ln66_70" [sha256.cpp:66]   --->   Operation 1497 'bitconcatenate' 'or_ln66_70' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1498 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_93)   --->   "%xor_ln66_92 = xor i32 %or_ln66_68, i32 %or_ln66_69" [sha256.cpp:66]   --->   Operation 1498 'xor' 'xor_ln66_92' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1499 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_93 = xor i32 %xor_ln66_92, i32 %or_ln66_70" [sha256.cpp:66]   --->   Operation 1499 'xor' 'xor_ln66_93' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1500 [1/1] (0.28ns)   --->   "%and_ln66_47 = and i32 %a_55, i32 %a_54" [sha256.cpp:66]   --->   Operation 1500 'and' 'and_ln66_47' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1501 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_95)   --->   "%and_ln66_48 = and i32 %a_55, i32 %a_53" [sha256.cpp:66]   --->   Operation 1501 'and' 'and_ln66_48' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1502 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_95)   --->   "%xor_ln66_94 = xor i32 %and_ln66_45, i32 %and_ln66_48" [sha256.cpp:66]   --->   Operation 1502 'xor' 'xor_ln66_94' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1503 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_95 = xor i32 %xor_ln66_94, i32 %and_ln66_47" [sha256.cpp:66]   --->   Operation 1503 'xor' 'xor_ln66_95' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1504 [1/1] (1.14ns)   --->   "%e_56 = add i32 %t1_23, i32 %a_52" [sha256.cpp:70]   --->   Operation 1504 'add' 'e_56' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1505 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_46 = add i32 %xor_ln66_95, i32 %t1_23" [sha256.cpp:74]   --->   Operation 1505 'add' 'add_ln74_46' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 1506 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_56 = add i32 %add_ln74_46, i32 %xor_ln66_93" [sha256.cpp:74]   --->   Operation 1506 'add' 'a_56' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 1507 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_97)   --->   "%lshr_ln65_71 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_56, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1507 'partselect' 'lshr_ln65_71' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1508 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_97)   --->   "%trunc_ln65_72 = trunc i32 %e_56" [sha256.cpp:65]   --->   Operation 1508 'trunc' 'trunc_ln65_72' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1509 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_97)   --->   "%or_ln65_71 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_72, i26 %lshr_ln65_71" [sha256.cpp:65]   --->   Operation 1509 'bitconcatenate' 'or_ln65_71' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1510 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_97)   --->   "%lshr_ln65_72 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_56, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1510 'partselect' 'lshr_ln65_72' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1511 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_97)   --->   "%trunc_ln65_73 = trunc i32 %e_56" [sha256.cpp:65]   --->   Operation 1511 'trunc' 'trunc_ln65_73' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1512 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_97)   --->   "%or_ln65_72 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_73, i21 %lshr_ln65_72" [sha256.cpp:65]   --->   Operation 1512 'bitconcatenate' 'or_ln65_72' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1513 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_97)   --->   "%lshr_ln65_73 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_56, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1513 'partselect' 'lshr_ln65_73' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1514 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_97)   --->   "%trunc_ln65_74 = trunc i32 %e_56" [sha256.cpp:65]   --->   Operation 1514 'trunc' 'trunc_ln65_74' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1515 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_97)   --->   "%or_ln65_73 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_74, i7 %lshr_ln65_73" [sha256.cpp:65]   --->   Operation 1515 'bitconcatenate' 'or_ln65_73' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1516 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_97)   --->   "%xor_ln65_96 = xor i32 %or_ln65_71, i32 %or_ln65_72" [sha256.cpp:65]   --->   Operation 1516 'xor' 'xor_ln65_96' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1517 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_97 = xor i32 %xor_ln65_96, i32 %or_ln65_73" [sha256.cpp:65]   --->   Operation 1517 'xor' 'xor_ln65_97' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1518 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_99)   --->   "%and_ln65_48 = and i32 %e_56, i32 %e_55" [sha256.cpp:65]   --->   Operation 1518 'and' 'and_ln65_48' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1519 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_99)   --->   "%xor_ln65_98 = xor i32 %e_56, i32 4294967295" [sha256.cpp:65]   --->   Operation 1519 'xor' 'xor_ln65_98' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1520 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_99)   --->   "%and_ln65_49 = and i32 %e_54, i32 %xor_ln65_98" [sha256.cpp:65]   --->   Operation 1520 'and' 'and_ln65_49' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1521 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_99 = xor i32 %and_ln65_48, i32 %and_ln65_49" [sha256.cpp:65]   --->   Operation 1521 'xor' 'xor_ln65_99' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1522 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_96 = add i32 %e_53, i32 %xor_ln65_99" [sha256.cpp:65]   --->   Operation 1522 'add' 'add_ln65_96' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 1523 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_97 = add i32 %m_24, i32 %xor_ln65_97" [sha256.cpp:65]   --->   Operation 1523 'add' 'add_ln65_97' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 1524 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_98 = add i32 %add_ln65_97, i32 2554220882" [sha256.cpp:65]   --->   Operation 1524 'add' 'add_ln65_98' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 1525 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_24 = add i32 %add_ln65_98, i32 %add_ln65_96" [sha256.cpp:65]   --->   Operation 1525 'add' 't1_24' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 1526 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_97)   --->   "%lshr_ln66_71 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_56, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1526 'partselect' 'lshr_ln66_71' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1527 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_97)   --->   "%trunc_ln66_72 = trunc i32 %a_56" [sha256.cpp:66]   --->   Operation 1527 'trunc' 'trunc_ln66_72' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1528 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_97)   --->   "%or_ln66_71 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_72, i30 %lshr_ln66_71" [sha256.cpp:66]   --->   Operation 1528 'bitconcatenate' 'or_ln66_71' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1529 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_97)   --->   "%lshr_ln66_72 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_56, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1529 'partselect' 'lshr_ln66_72' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1530 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_97)   --->   "%trunc_ln66_73 = trunc i32 %a_56" [sha256.cpp:66]   --->   Operation 1530 'trunc' 'trunc_ln66_73' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1531 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_97)   --->   "%or_ln66_72 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_73, i19 %lshr_ln66_72" [sha256.cpp:66]   --->   Operation 1531 'bitconcatenate' 'or_ln66_72' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1532 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_97)   --->   "%lshr_ln66_73 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_56, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1532 'partselect' 'lshr_ln66_73' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1533 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_97)   --->   "%trunc_ln66_74 = trunc i32 %a_56" [sha256.cpp:66]   --->   Operation 1533 'trunc' 'trunc_ln66_74' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1534 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_97)   --->   "%or_ln66_73 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_74, i10 %lshr_ln66_73" [sha256.cpp:66]   --->   Operation 1534 'bitconcatenate' 'or_ln66_73' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1535 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_97)   --->   "%xor_ln66_96 = xor i32 %or_ln66_71, i32 %or_ln66_72" [sha256.cpp:66]   --->   Operation 1535 'xor' 'xor_ln66_96' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1536 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_97 = xor i32 %xor_ln66_96, i32 %or_ln66_73" [sha256.cpp:66]   --->   Operation 1536 'xor' 'xor_ln66_97' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1537 [1/1] (1.14ns)   --->   "%e_57 = add i32 %t1_24, i32 %a_53" [sha256.cpp:70]   --->   Operation 1537 'add' 'e_57' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1538 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_101)   --->   "%lshr_ln65_74 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_57, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1538 'partselect' 'lshr_ln65_74' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1539 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_101)   --->   "%trunc_ln65_75 = trunc i32 %e_57" [sha256.cpp:65]   --->   Operation 1539 'trunc' 'trunc_ln65_75' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1540 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_101)   --->   "%or_ln65_74 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_75, i26 %lshr_ln65_74" [sha256.cpp:65]   --->   Operation 1540 'bitconcatenate' 'or_ln65_74' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1541 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_101)   --->   "%lshr_ln65_75 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_57, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1541 'partselect' 'lshr_ln65_75' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1542 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_101)   --->   "%trunc_ln65_76 = trunc i32 %e_57" [sha256.cpp:65]   --->   Operation 1542 'trunc' 'trunc_ln65_76' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1543 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_101)   --->   "%or_ln65_75 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_76, i21 %lshr_ln65_75" [sha256.cpp:65]   --->   Operation 1543 'bitconcatenate' 'or_ln65_75' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1544 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_101)   --->   "%lshr_ln65_76 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_57, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1544 'partselect' 'lshr_ln65_76' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1545 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_101)   --->   "%trunc_ln65_77 = trunc i32 %e_57" [sha256.cpp:65]   --->   Operation 1545 'trunc' 'trunc_ln65_77' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1546 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_101)   --->   "%or_ln65_76 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_77, i7 %lshr_ln65_76" [sha256.cpp:65]   --->   Operation 1546 'bitconcatenate' 'or_ln65_76' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 1547 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_101)   --->   "%xor_ln65_100 = xor i32 %or_ln65_74, i32 %or_ln65_75" [sha256.cpp:65]   --->   Operation 1547 'xor' 'xor_ln65_100' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1548 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_101 = xor i32 %xor_ln65_100, i32 %or_ln65_76" [sha256.cpp:65]   --->   Operation 1548 'xor' 'xor_ln65_101' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1549 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_103)   --->   "%and_ln65_50 = and i32 %e_57, i32 %e_56" [sha256.cpp:65]   --->   Operation 1549 'and' 'and_ln65_50' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1550 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_103)   --->   "%xor_ln65_102 = xor i32 %e_57, i32 4294967295" [sha256.cpp:65]   --->   Operation 1550 'xor' 'xor_ln65_102' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1551 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_103)   --->   "%and_ln65_51 = and i32 %e_55, i32 %xor_ln65_102" [sha256.cpp:65]   --->   Operation 1551 'and' 'and_ln65_51' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1552 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_103 = xor i32 %and_ln65_50, i32 %and_ln65_51" [sha256.cpp:65]   --->   Operation 1552 'xor' 'xor_ln65_103' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 1553 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_100 = add i32 %e_54, i32 %xor_ln65_103" [sha256.cpp:65]   --->   Operation 1553 'add' 'add_ln65_100' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 1554 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_101 = add i32 %m_25, i32 %xor_ln65_101" [sha256.cpp:65]   --->   Operation 1554 'add' 'add_ln65_101' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 1555 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_102 = add i32 %add_ln65_101, i32 2821834349" [sha256.cpp:65]   --->   Operation 1555 'add' 'add_ln65_102' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_22 : Operation 1556 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_25 = add i32 %add_ln65_102, i32 %add_ln65_100" [sha256.cpp:65]   --->   Operation 1556 'add' 't1_25' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 23 <SV = 22> <Delay = 6.49>
ST_23 : Operation 1557 [1/1] (0.28ns)   --->   "%and_ln66_49 = and i32 %a_56, i32 %a_55" [sha256.cpp:66]   --->   Operation 1557 'and' 'and_ln66_49' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1558 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_99)   --->   "%and_ln66_50 = and i32 %a_56, i32 %a_54" [sha256.cpp:66]   --->   Operation 1558 'and' 'and_ln66_50' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1559 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_99)   --->   "%xor_ln66_98 = xor i32 %and_ln66_47, i32 %and_ln66_50" [sha256.cpp:66]   --->   Operation 1559 'xor' 'xor_ln66_98' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1560 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_99 = xor i32 %xor_ln66_98, i32 %and_ln66_49" [sha256.cpp:66]   --->   Operation 1560 'xor' 'xor_ln66_99' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1561 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_48 = add i32 %xor_ln66_99, i32 %t1_24" [sha256.cpp:74]   --->   Operation 1561 'add' 'add_ln74_48' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 1562 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_57 = add i32 %add_ln74_48, i32 %xor_ln66_97" [sha256.cpp:74]   --->   Operation 1562 'add' 'a_57' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 1563 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_101)   --->   "%lshr_ln66_74 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_57, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1563 'partselect' 'lshr_ln66_74' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1564 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_101)   --->   "%trunc_ln66_75 = trunc i32 %a_57" [sha256.cpp:66]   --->   Operation 1564 'trunc' 'trunc_ln66_75' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1565 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_101)   --->   "%or_ln66_74 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_75, i30 %lshr_ln66_74" [sha256.cpp:66]   --->   Operation 1565 'bitconcatenate' 'or_ln66_74' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1566 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_101)   --->   "%lshr_ln66_75 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_57, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1566 'partselect' 'lshr_ln66_75' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1567 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_101)   --->   "%trunc_ln66_76 = trunc i32 %a_57" [sha256.cpp:66]   --->   Operation 1567 'trunc' 'trunc_ln66_76' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1568 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_101)   --->   "%or_ln66_75 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_76, i19 %lshr_ln66_75" [sha256.cpp:66]   --->   Operation 1568 'bitconcatenate' 'or_ln66_75' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1569 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_101)   --->   "%lshr_ln66_76 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_57, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1569 'partselect' 'lshr_ln66_76' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1570 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_101)   --->   "%trunc_ln66_77 = trunc i32 %a_57" [sha256.cpp:66]   --->   Operation 1570 'trunc' 'trunc_ln66_77' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1571 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_101)   --->   "%or_ln66_76 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_77, i10 %lshr_ln66_76" [sha256.cpp:66]   --->   Operation 1571 'bitconcatenate' 'or_ln66_76' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1572 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_101)   --->   "%xor_ln66_100 = xor i32 %or_ln66_74, i32 %or_ln66_75" [sha256.cpp:66]   --->   Operation 1572 'xor' 'xor_ln66_100' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1573 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_101 = xor i32 %xor_ln66_100, i32 %or_ln66_76" [sha256.cpp:66]   --->   Operation 1573 'xor' 'xor_ln66_101' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1574 [1/1] (0.28ns)   --->   "%and_ln66_51 = and i32 %a_57, i32 %a_56" [sha256.cpp:66]   --->   Operation 1574 'and' 'and_ln66_51' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1575 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_103)   --->   "%and_ln66_52 = and i32 %a_57, i32 %a_55" [sha256.cpp:66]   --->   Operation 1575 'and' 'and_ln66_52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1576 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_103)   --->   "%xor_ln66_102 = xor i32 %and_ln66_49, i32 %and_ln66_52" [sha256.cpp:66]   --->   Operation 1576 'xor' 'xor_ln66_102' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1577 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_103 = xor i32 %xor_ln66_102, i32 %and_ln66_51" [sha256.cpp:66]   --->   Operation 1577 'xor' 'xor_ln66_103' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1578 [1/1] (1.14ns)   --->   "%e_58 = add i32 %t1_25, i32 %a_54" [sha256.cpp:70]   --->   Operation 1578 'add' 'e_58' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1579 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_50 = add i32 %xor_ln66_103, i32 %t1_25" [sha256.cpp:74]   --->   Operation 1579 'add' 'add_ln74_50' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 1580 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_58 = add i32 %add_ln74_50, i32 %xor_ln66_101" [sha256.cpp:74]   --->   Operation 1580 'add' 'a_58' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 1581 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_105)   --->   "%lshr_ln65_77 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_58, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1581 'partselect' 'lshr_ln65_77' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1582 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_105)   --->   "%trunc_ln65_78 = trunc i32 %e_58" [sha256.cpp:65]   --->   Operation 1582 'trunc' 'trunc_ln65_78' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1583 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_105)   --->   "%or_ln65_77 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_78, i26 %lshr_ln65_77" [sha256.cpp:65]   --->   Operation 1583 'bitconcatenate' 'or_ln65_77' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1584 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_105)   --->   "%lshr_ln65_78 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_58, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1584 'partselect' 'lshr_ln65_78' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1585 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_105)   --->   "%trunc_ln65_79 = trunc i32 %e_58" [sha256.cpp:65]   --->   Operation 1585 'trunc' 'trunc_ln65_79' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1586 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_105)   --->   "%or_ln65_78 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_79, i21 %lshr_ln65_78" [sha256.cpp:65]   --->   Operation 1586 'bitconcatenate' 'or_ln65_78' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1587 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_105)   --->   "%lshr_ln65_79 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_58, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1587 'partselect' 'lshr_ln65_79' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1588 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_105)   --->   "%trunc_ln65_80 = trunc i32 %e_58" [sha256.cpp:65]   --->   Operation 1588 'trunc' 'trunc_ln65_80' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1589 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_105)   --->   "%or_ln65_79 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_80, i7 %lshr_ln65_79" [sha256.cpp:65]   --->   Operation 1589 'bitconcatenate' 'or_ln65_79' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1590 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_105)   --->   "%xor_ln65_104 = xor i32 %or_ln65_77, i32 %or_ln65_78" [sha256.cpp:65]   --->   Operation 1590 'xor' 'xor_ln65_104' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1591 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_105 = xor i32 %xor_ln65_104, i32 %or_ln65_79" [sha256.cpp:65]   --->   Operation 1591 'xor' 'xor_ln65_105' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1592 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_107)   --->   "%and_ln65_52 = and i32 %e_58, i32 %e_57" [sha256.cpp:65]   --->   Operation 1592 'and' 'and_ln65_52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1593 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_107)   --->   "%xor_ln65_106 = xor i32 %e_58, i32 4294967295" [sha256.cpp:65]   --->   Operation 1593 'xor' 'xor_ln65_106' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1594 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_107)   --->   "%and_ln65_53 = and i32 %e_56, i32 %xor_ln65_106" [sha256.cpp:65]   --->   Operation 1594 'and' 'and_ln65_53' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1595 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_107 = xor i32 %and_ln65_52, i32 %and_ln65_53" [sha256.cpp:65]   --->   Operation 1595 'xor' 'xor_ln65_107' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1596 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_104 = add i32 %e_55, i32 %xor_ln65_107" [sha256.cpp:65]   --->   Operation 1596 'add' 'add_ln65_104' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 1597 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_105 = add i32 %m_26, i32 %xor_ln65_105" [sha256.cpp:65]   --->   Operation 1597 'add' 'add_ln65_105' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 1598 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_106 = add i32 %add_ln65_105, i32 2952996808" [sha256.cpp:65]   --->   Operation 1598 'add' 'add_ln65_106' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 1599 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_26 = add i32 %add_ln65_106, i32 %add_ln65_104" [sha256.cpp:65]   --->   Operation 1599 'add' 't1_26' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 1600 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_105)   --->   "%lshr_ln66_77 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_58, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1600 'partselect' 'lshr_ln66_77' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1601 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_105)   --->   "%trunc_ln66_78 = trunc i32 %a_58" [sha256.cpp:66]   --->   Operation 1601 'trunc' 'trunc_ln66_78' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1602 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_105)   --->   "%or_ln66_77 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_78, i30 %lshr_ln66_77" [sha256.cpp:66]   --->   Operation 1602 'bitconcatenate' 'or_ln66_77' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1603 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_105)   --->   "%lshr_ln66_78 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_58, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1603 'partselect' 'lshr_ln66_78' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1604 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_105)   --->   "%trunc_ln66_79 = trunc i32 %a_58" [sha256.cpp:66]   --->   Operation 1604 'trunc' 'trunc_ln66_79' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1605 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_105)   --->   "%or_ln66_78 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_79, i19 %lshr_ln66_78" [sha256.cpp:66]   --->   Operation 1605 'bitconcatenate' 'or_ln66_78' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1606 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_105)   --->   "%lshr_ln66_79 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_58, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1606 'partselect' 'lshr_ln66_79' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1607 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_105)   --->   "%trunc_ln66_80 = trunc i32 %a_58" [sha256.cpp:66]   --->   Operation 1607 'trunc' 'trunc_ln66_80' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1608 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_105)   --->   "%or_ln66_79 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_80, i10 %lshr_ln66_79" [sha256.cpp:66]   --->   Operation 1608 'bitconcatenate' 'or_ln66_79' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1609 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_105)   --->   "%xor_ln66_104 = xor i32 %or_ln66_77, i32 %or_ln66_78" [sha256.cpp:66]   --->   Operation 1609 'xor' 'xor_ln66_104' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1610 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_105 = xor i32 %xor_ln66_104, i32 %or_ln66_79" [sha256.cpp:66]   --->   Operation 1610 'xor' 'xor_ln66_105' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1611 [1/1] (0.28ns)   --->   "%and_ln66_53 = and i32 %a_58, i32 %a_57" [sha256.cpp:66]   --->   Operation 1611 'and' 'and_ln66_53' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1612 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_107)   --->   "%and_ln66_54 = and i32 %a_58, i32 %a_56" [sha256.cpp:66]   --->   Operation 1612 'and' 'and_ln66_54' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1613 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_107)   --->   "%xor_ln66_106 = xor i32 %and_ln66_51, i32 %and_ln66_54" [sha256.cpp:66]   --->   Operation 1613 'xor' 'xor_ln66_106' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1614 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_107 = xor i32 %xor_ln66_106, i32 %and_ln66_53" [sha256.cpp:66]   --->   Operation 1614 'xor' 'xor_ln66_107' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1615 [1/1] (1.14ns)   --->   "%e_59 = add i32 %t1_26, i32 %a_55" [sha256.cpp:70]   --->   Operation 1615 'add' 'e_59' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1616 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_52 = add i32 %xor_ln66_107, i32 %t1_26" [sha256.cpp:74]   --->   Operation 1616 'add' 'add_ln74_52' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 1617 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_59 = add i32 %add_ln74_52, i32 %xor_ln66_105" [sha256.cpp:74]   --->   Operation 1617 'add' 'a_59' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 1618 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_109)   --->   "%lshr_ln65_80 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_59, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1618 'partselect' 'lshr_ln65_80' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1619 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_109)   --->   "%trunc_ln65_81 = trunc i32 %e_59" [sha256.cpp:65]   --->   Operation 1619 'trunc' 'trunc_ln65_81' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1620 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_109)   --->   "%or_ln65_80 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_81, i26 %lshr_ln65_80" [sha256.cpp:65]   --->   Operation 1620 'bitconcatenate' 'or_ln65_80' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1621 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_109)   --->   "%lshr_ln65_81 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_59, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1621 'partselect' 'lshr_ln65_81' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1622 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_109)   --->   "%trunc_ln65_82 = trunc i32 %e_59" [sha256.cpp:65]   --->   Operation 1622 'trunc' 'trunc_ln65_82' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1623 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_109)   --->   "%or_ln65_81 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_82, i21 %lshr_ln65_81" [sha256.cpp:65]   --->   Operation 1623 'bitconcatenate' 'or_ln65_81' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1624 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_109)   --->   "%lshr_ln65_82 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_59, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1624 'partselect' 'lshr_ln65_82' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1625 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_109)   --->   "%trunc_ln65_83 = trunc i32 %e_59" [sha256.cpp:65]   --->   Operation 1625 'trunc' 'trunc_ln65_83' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1626 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_109)   --->   "%or_ln65_82 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_83, i7 %lshr_ln65_82" [sha256.cpp:65]   --->   Operation 1626 'bitconcatenate' 'or_ln65_82' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1627 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_109)   --->   "%xor_ln65_108 = xor i32 %or_ln65_80, i32 %or_ln65_81" [sha256.cpp:65]   --->   Operation 1627 'xor' 'xor_ln65_108' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1628 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_109 = xor i32 %xor_ln65_108, i32 %or_ln65_82" [sha256.cpp:65]   --->   Operation 1628 'xor' 'xor_ln65_109' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1629 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_111)   --->   "%and_ln65_54 = and i32 %e_59, i32 %e_58" [sha256.cpp:65]   --->   Operation 1629 'and' 'and_ln65_54' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1630 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_111)   --->   "%xor_ln65_110 = xor i32 %e_59, i32 4294967295" [sha256.cpp:65]   --->   Operation 1630 'xor' 'xor_ln65_110' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1631 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_111)   --->   "%and_ln65_55 = and i32 %e_57, i32 %xor_ln65_110" [sha256.cpp:65]   --->   Operation 1631 'and' 'and_ln65_55' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1632 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_111 = xor i32 %and_ln65_54, i32 %and_ln65_55" [sha256.cpp:65]   --->   Operation 1632 'xor' 'xor_ln65_111' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1633 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_108 = add i32 %e_56, i32 %xor_ln65_111" [sha256.cpp:65]   --->   Operation 1633 'add' 'add_ln65_108' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 1634 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_109 = add i32 %m_27, i32 %xor_ln65_109" [sha256.cpp:65]   --->   Operation 1634 'add' 'add_ln65_109' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 1635 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_110 = add i32 %add_ln65_109, i32 3210313671" [sha256.cpp:65]   --->   Operation 1635 'add' 'add_ln65_110' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 1636 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_27 = add i32 %add_ln65_110, i32 %add_ln65_108" [sha256.cpp:65]   --->   Operation 1636 'add' 't1_27' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_23 : Operation 1637 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_109)   --->   "%lshr_ln66_80 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_59, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1637 'partselect' 'lshr_ln66_80' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1638 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_109)   --->   "%trunc_ln66_81 = trunc i32 %a_59" [sha256.cpp:66]   --->   Operation 1638 'trunc' 'trunc_ln66_81' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1639 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_109)   --->   "%or_ln66_80 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_81, i30 %lshr_ln66_80" [sha256.cpp:66]   --->   Operation 1639 'bitconcatenate' 'or_ln66_80' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1640 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_109)   --->   "%lshr_ln66_81 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_59, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1640 'partselect' 'lshr_ln66_81' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1641 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_109)   --->   "%trunc_ln66_82 = trunc i32 %a_59" [sha256.cpp:66]   --->   Operation 1641 'trunc' 'trunc_ln66_82' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1642 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_109)   --->   "%or_ln66_81 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_82, i19 %lshr_ln66_81" [sha256.cpp:66]   --->   Operation 1642 'bitconcatenate' 'or_ln66_81' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1643 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_109)   --->   "%lshr_ln66_82 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_59, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1643 'partselect' 'lshr_ln66_82' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1644 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_109)   --->   "%trunc_ln66_83 = trunc i32 %a_59" [sha256.cpp:66]   --->   Operation 1644 'trunc' 'trunc_ln66_83' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1645 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_109)   --->   "%or_ln66_82 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_83, i10 %lshr_ln66_82" [sha256.cpp:66]   --->   Operation 1645 'bitconcatenate' 'or_ln66_82' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 1646 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_109)   --->   "%xor_ln66_108 = xor i32 %or_ln66_80, i32 %or_ln66_81" [sha256.cpp:66]   --->   Operation 1646 'xor' 'xor_ln66_108' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 1647 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_109 = xor i32 %xor_ln66_108, i32 %or_ln66_82" [sha256.cpp:66]   --->   Operation 1647 'xor' 'xor_ln66_109' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 6.49>
ST_24 : Operation 1648 [1/1] (0.28ns)   --->   "%and_ln66_55 = and i32 %a_59, i32 %a_58" [sha256.cpp:66]   --->   Operation 1648 'and' 'and_ln66_55' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 1649 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_111)   --->   "%and_ln66_56 = and i32 %a_59, i32 %a_57" [sha256.cpp:66]   --->   Operation 1649 'and' 'and_ln66_56' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 1650 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_111)   --->   "%xor_ln66_110 = xor i32 %and_ln66_53, i32 %and_ln66_56" [sha256.cpp:66]   --->   Operation 1650 'xor' 'xor_ln66_110' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 1651 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_111 = xor i32 %xor_ln66_110, i32 %and_ln66_55" [sha256.cpp:66]   --->   Operation 1651 'xor' 'xor_ln66_111' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 1652 [1/1] (1.14ns)   --->   "%e_60 = add i32 %t1_27, i32 %a_56" [sha256.cpp:70]   --->   Operation 1652 'add' 'e_60' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 1653 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_54 = add i32 %xor_ln66_111, i32 %t1_27" [sha256.cpp:74]   --->   Operation 1653 'add' 'add_ln74_54' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 1654 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_60 = add i32 %add_ln74_54, i32 %xor_ln66_109" [sha256.cpp:74]   --->   Operation 1654 'add' 'a_60' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 1655 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_113)   --->   "%lshr_ln65_83 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_60, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1655 'partselect' 'lshr_ln65_83' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1656 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_113)   --->   "%trunc_ln65_84 = trunc i32 %e_60" [sha256.cpp:65]   --->   Operation 1656 'trunc' 'trunc_ln65_84' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1657 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_113)   --->   "%or_ln65_83 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_84, i26 %lshr_ln65_83" [sha256.cpp:65]   --->   Operation 1657 'bitconcatenate' 'or_ln65_83' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1658 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_113)   --->   "%lshr_ln65_84 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_60, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1658 'partselect' 'lshr_ln65_84' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1659 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_113)   --->   "%trunc_ln65_85 = trunc i32 %e_60" [sha256.cpp:65]   --->   Operation 1659 'trunc' 'trunc_ln65_85' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1660 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_113)   --->   "%or_ln65_84 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_85, i21 %lshr_ln65_84" [sha256.cpp:65]   --->   Operation 1660 'bitconcatenate' 'or_ln65_84' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1661 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_113)   --->   "%lshr_ln65_85 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_60, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1661 'partselect' 'lshr_ln65_85' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1662 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_113)   --->   "%trunc_ln65_86 = trunc i32 %e_60" [sha256.cpp:65]   --->   Operation 1662 'trunc' 'trunc_ln65_86' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1663 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_113)   --->   "%or_ln65_85 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_86, i7 %lshr_ln65_85" [sha256.cpp:65]   --->   Operation 1663 'bitconcatenate' 'or_ln65_85' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1664 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_113)   --->   "%xor_ln65_112 = xor i32 %or_ln65_83, i32 %or_ln65_84" [sha256.cpp:65]   --->   Operation 1664 'xor' 'xor_ln65_112' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 1665 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_113 = xor i32 %xor_ln65_112, i32 %or_ln65_85" [sha256.cpp:65]   --->   Operation 1665 'xor' 'xor_ln65_113' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 1666 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_115)   --->   "%and_ln65_56 = and i32 %e_60, i32 %e_59" [sha256.cpp:65]   --->   Operation 1666 'and' 'and_ln65_56' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 1667 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_115)   --->   "%xor_ln65_114 = xor i32 %e_60, i32 4294967295" [sha256.cpp:65]   --->   Operation 1667 'xor' 'xor_ln65_114' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 1668 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_115)   --->   "%and_ln65_57 = and i32 %e_58, i32 %xor_ln65_114" [sha256.cpp:65]   --->   Operation 1668 'and' 'and_ln65_57' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 1669 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_115 = xor i32 %and_ln65_56, i32 %and_ln65_57" [sha256.cpp:65]   --->   Operation 1669 'xor' 'xor_ln65_115' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 1670 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_112 = add i32 %xor_ln65_115, i32 %e_57" [sha256.cpp:65]   --->   Operation 1670 'add' 'add_ln65_112' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 1671 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_113 = add i32 %xor_ln65_113, i32 3336571891" [sha256.cpp:65]   --->   Operation 1671 'add' 'add_ln65_113' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 1672 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_114 = add i32 %add_ln65_113, i32 %m_28" [sha256.cpp:65]   --->   Operation 1672 'add' 'add_ln65_114' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 1673 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_28 = add i32 %add_ln65_114, i32 %add_ln65_112" [sha256.cpp:65]   --->   Operation 1673 'add' 't1_28' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 1674 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_113)   --->   "%lshr_ln66_83 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_60, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1674 'partselect' 'lshr_ln66_83' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1675 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_113)   --->   "%trunc_ln66_84 = trunc i32 %a_60" [sha256.cpp:66]   --->   Operation 1675 'trunc' 'trunc_ln66_84' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1676 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_113)   --->   "%or_ln66_83 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_84, i30 %lshr_ln66_83" [sha256.cpp:66]   --->   Operation 1676 'bitconcatenate' 'or_ln66_83' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1677 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_113)   --->   "%lshr_ln66_84 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_60, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1677 'partselect' 'lshr_ln66_84' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1678 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_113)   --->   "%trunc_ln66_85 = trunc i32 %a_60" [sha256.cpp:66]   --->   Operation 1678 'trunc' 'trunc_ln66_85' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1679 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_113)   --->   "%or_ln66_84 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_85, i19 %lshr_ln66_84" [sha256.cpp:66]   --->   Operation 1679 'bitconcatenate' 'or_ln66_84' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1680 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_113)   --->   "%lshr_ln66_85 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_60, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1680 'partselect' 'lshr_ln66_85' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1681 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_113)   --->   "%trunc_ln66_86 = trunc i32 %a_60" [sha256.cpp:66]   --->   Operation 1681 'trunc' 'trunc_ln66_86' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1682 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_113)   --->   "%or_ln66_85 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_86, i10 %lshr_ln66_85" [sha256.cpp:66]   --->   Operation 1682 'bitconcatenate' 'or_ln66_85' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1683 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_113)   --->   "%xor_ln66_112 = xor i32 %or_ln66_83, i32 %or_ln66_84" [sha256.cpp:66]   --->   Operation 1683 'xor' 'xor_ln66_112' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 1684 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_113 = xor i32 %xor_ln66_112, i32 %or_ln66_85" [sha256.cpp:66]   --->   Operation 1684 'xor' 'xor_ln66_113' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 1685 [1/1] (1.14ns)   --->   "%e_61 = add i32 %t1_28, i32 %a_57" [sha256.cpp:70]   --->   Operation 1685 'add' 'e_61' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 1686 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_117)   --->   "%lshr_ln65_86 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_61, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1686 'partselect' 'lshr_ln65_86' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1687 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_117)   --->   "%trunc_ln65_87 = trunc i32 %e_61" [sha256.cpp:65]   --->   Operation 1687 'trunc' 'trunc_ln65_87' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1688 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_117)   --->   "%or_ln65_86 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_87, i26 %lshr_ln65_86" [sha256.cpp:65]   --->   Operation 1688 'bitconcatenate' 'or_ln65_86' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1689 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_117)   --->   "%lshr_ln65_87 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_61, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1689 'partselect' 'lshr_ln65_87' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1690 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_117)   --->   "%trunc_ln65_88 = trunc i32 %e_61" [sha256.cpp:65]   --->   Operation 1690 'trunc' 'trunc_ln65_88' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1691 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_117)   --->   "%or_ln65_87 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_88, i21 %lshr_ln65_87" [sha256.cpp:65]   --->   Operation 1691 'bitconcatenate' 'or_ln65_87' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1692 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_117)   --->   "%lshr_ln65_88 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_61, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1692 'partselect' 'lshr_ln65_88' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1693 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_117)   --->   "%trunc_ln65_89 = trunc i32 %e_61" [sha256.cpp:65]   --->   Operation 1693 'trunc' 'trunc_ln65_89' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1694 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_117)   --->   "%or_ln65_88 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_89, i7 %lshr_ln65_88" [sha256.cpp:65]   --->   Operation 1694 'bitconcatenate' 'or_ln65_88' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 1695 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_117)   --->   "%xor_ln65_116 = xor i32 %or_ln65_86, i32 %or_ln65_87" [sha256.cpp:65]   --->   Operation 1695 'xor' 'xor_ln65_116' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 1696 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_117 = xor i32 %xor_ln65_116, i32 %or_ln65_88" [sha256.cpp:65]   --->   Operation 1696 'xor' 'xor_ln65_117' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 1697 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_119)   --->   "%and_ln65_58 = and i32 %e_61, i32 %e_60" [sha256.cpp:65]   --->   Operation 1697 'and' 'and_ln65_58' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 1698 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_119)   --->   "%xor_ln65_118 = xor i32 %e_61, i32 4294967295" [sha256.cpp:65]   --->   Operation 1698 'xor' 'xor_ln65_118' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 1699 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_119)   --->   "%and_ln65_59 = and i32 %e_59, i32 %xor_ln65_118" [sha256.cpp:65]   --->   Operation 1699 'and' 'and_ln65_59' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 1700 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_119 = xor i32 %and_ln65_58, i32 %and_ln65_59" [sha256.cpp:65]   --->   Operation 1700 'xor' 'xor_ln65_119' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 1701 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_116 = add i32 %xor_ln65_119, i32 %e_58" [sha256.cpp:65]   --->   Operation 1701 'add' 'add_ln65_116' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 1702 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_117 = add i32 %xor_ln65_117, i32 3584528711" [sha256.cpp:65]   --->   Operation 1702 'add' 'add_ln65_117' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 1703 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_118 = add i32 %add_ln65_117, i32 %m_29" [sha256.cpp:65]   --->   Operation 1703 'add' 'add_ln65_118' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_24 : Operation 1704 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_29 = add i32 %add_ln65_118, i32 %add_ln65_116" [sha256.cpp:65]   --->   Operation 1704 'add' 't1_29' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 25 <SV = 24> <Delay = 6.49>
ST_25 : Operation 1705 [1/1] (0.28ns)   --->   "%and_ln66_57 = and i32 %a_60, i32 %a_59" [sha256.cpp:66]   --->   Operation 1705 'and' 'and_ln66_57' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1706 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_115)   --->   "%and_ln66_58 = and i32 %a_60, i32 %a_58" [sha256.cpp:66]   --->   Operation 1706 'and' 'and_ln66_58' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1707 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_115)   --->   "%xor_ln66_114 = xor i32 %and_ln66_55, i32 %and_ln66_58" [sha256.cpp:66]   --->   Operation 1707 'xor' 'xor_ln66_114' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1708 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_115 = xor i32 %xor_ln66_114, i32 %and_ln66_57" [sha256.cpp:66]   --->   Operation 1708 'xor' 'xor_ln66_115' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1709 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_56 = add i32 %xor_ln66_115, i32 %t1_28" [sha256.cpp:74]   --->   Operation 1709 'add' 'add_ln74_56' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 1710 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_61 = add i32 %add_ln74_56, i32 %xor_ln66_113" [sha256.cpp:74]   --->   Operation 1710 'add' 'a_61' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 1711 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_117)   --->   "%lshr_ln66_86 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_61, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1711 'partselect' 'lshr_ln66_86' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1712 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_117)   --->   "%trunc_ln66_87 = trunc i32 %a_61" [sha256.cpp:66]   --->   Operation 1712 'trunc' 'trunc_ln66_87' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1713 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_117)   --->   "%or_ln66_86 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_87, i30 %lshr_ln66_86" [sha256.cpp:66]   --->   Operation 1713 'bitconcatenate' 'or_ln66_86' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1714 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_117)   --->   "%lshr_ln66_87 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_61, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1714 'partselect' 'lshr_ln66_87' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1715 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_117)   --->   "%trunc_ln66_88 = trunc i32 %a_61" [sha256.cpp:66]   --->   Operation 1715 'trunc' 'trunc_ln66_88' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1716 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_117)   --->   "%or_ln66_87 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_88, i19 %lshr_ln66_87" [sha256.cpp:66]   --->   Operation 1716 'bitconcatenate' 'or_ln66_87' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1717 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_117)   --->   "%lshr_ln66_88 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_61, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1717 'partselect' 'lshr_ln66_88' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1718 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_117)   --->   "%trunc_ln66_89 = trunc i32 %a_61" [sha256.cpp:66]   --->   Operation 1718 'trunc' 'trunc_ln66_89' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1719 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_117)   --->   "%or_ln66_88 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_89, i10 %lshr_ln66_88" [sha256.cpp:66]   --->   Operation 1719 'bitconcatenate' 'or_ln66_88' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1720 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_117)   --->   "%xor_ln66_116 = xor i32 %or_ln66_86, i32 %or_ln66_87" [sha256.cpp:66]   --->   Operation 1720 'xor' 'xor_ln66_116' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1721 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_117 = xor i32 %xor_ln66_116, i32 %or_ln66_88" [sha256.cpp:66]   --->   Operation 1721 'xor' 'xor_ln66_117' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1722 [1/1] (0.28ns)   --->   "%and_ln66_59 = and i32 %a_61, i32 %a_60" [sha256.cpp:66]   --->   Operation 1722 'and' 'and_ln66_59' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1723 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_119)   --->   "%and_ln66_60 = and i32 %a_61, i32 %a_59" [sha256.cpp:66]   --->   Operation 1723 'and' 'and_ln66_60' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1724 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_119)   --->   "%xor_ln66_118 = xor i32 %and_ln66_57, i32 %and_ln66_60" [sha256.cpp:66]   --->   Operation 1724 'xor' 'xor_ln66_118' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1725 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_119 = xor i32 %xor_ln66_118, i32 %and_ln66_59" [sha256.cpp:66]   --->   Operation 1725 'xor' 'xor_ln66_119' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1726 [1/1] (1.14ns)   --->   "%e_62 = add i32 %t1_29, i32 %a_58" [sha256.cpp:70]   --->   Operation 1726 'add' 'e_62' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1727 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_58 = add i32 %xor_ln66_119, i32 %t1_29" [sha256.cpp:74]   --->   Operation 1727 'add' 'add_ln74_58' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 1728 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_62 = add i32 %add_ln74_58, i32 %xor_ln66_117" [sha256.cpp:74]   --->   Operation 1728 'add' 'a_62' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 1729 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_121)   --->   "%lshr_ln65_89 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_62, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1729 'partselect' 'lshr_ln65_89' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1730 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_121)   --->   "%trunc_ln65_90 = trunc i32 %e_62" [sha256.cpp:65]   --->   Operation 1730 'trunc' 'trunc_ln65_90' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1731 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_121)   --->   "%or_ln65_89 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_90, i26 %lshr_ln65_89" [sha256.cpp:65]   --->   Operation 1731 'bitconcatenate' 'or_ln65_89' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1732 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_121)   --->   "%lshr_ln65_90 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_62, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1732 'partselect' 'lshr_ln65_90' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1733 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_121)   --->   "%trunc_ln65_91 = trunc i32 %e_62" [sha256.cpp:65]   --->   Operation 1733 'trunc' 'trunc_ln65_91' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1734 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_121)   --->   "%or_ln65_90 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_91, i21 %lshr_ln65_90" [sha256.cpp:65]   --->   Operation 1734 'bitconcatenate' 'or_ln65_90' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1735 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_121)   --->   "%lshr_ln65_91 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_62, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1735 'partselect' 'lshr_ln65_91' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1736 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_121)   --->   "%trunc_ln65_92 = trunc i32 %e_62" [sha256.cpp:65]   --->   Operation 1736 'trunc' 'trunc_ln65_92' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1737 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_121)   --->   "%or_ln65_91 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_92, i7 %lshr_ln65_91" [sha256.cpp:65]   --->   Operation 1737 'bitconcatenate' 'or_ln65_91' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1738 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_121)   --->   "%xor_ln65_120 = xor i32 %or_ln65_89, i32 %or_ln65_90" [sha256.cpp:65]   --->   Operation 1738 'xor' 'xor_ln65_120' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1739 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_121 = xor i32 %xor_ln65_120, i32 %or_ln65_91" [sha256.cpp:65]   --->   Operation 1739 'xor' 'xor_ln65_121' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1740 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_123)   --->   "%and_ln65_60 = and i32 %e_62, i32 %e_61" [sha256.cpp:65]   --->   Operation 1740 'and' 'and_ln65_60' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1741 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_123)   --->   "%xor_ln65_122 = xor i32 %e_62, i32 4294967295" [sha256.cpp:65]   --->   Operation 1741 'xor' 'xor_ln65_122' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1742 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_123)   --->   "%and_ln65_61 = and i32 %e_60, i32 %xor_ln65_122" [sha256.cpp:65]   --->   Operation 1742 'and' 'and_ln65_61' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1743 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_123 = xor i32 %and_ln65_60, i32 %and_ln65_61" [sha256.cpp:65]   --->   Operation 1743 'xor' 'xor_ln65_123' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1744 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_120 = add i32 %xor_ln65_123, i32 %e_59" [sha256.cpp:65]   --->   Operation 1744 'add' 'add_ln65_120' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 1745 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_121 = add i32 %xor_ln65_121, i32 113926993" [sha256.cpp:65]   --->   Operation 1745 'add' 'add_ln65_121' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 1746 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_122 = add i32 %add_ln65_121, i32 %m_30" [sha256.cpp:65]   --->   Operation 1746 'add' 'add_ln65_122' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 1747 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_30 = add i32 %add_ln65_122, i32 %add_ln65_120" [sha256.cpp:65]   --->   Operation 1747 'add' 't1_30' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 1748 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_121)   --->   "%lshr_ln66_89 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_62, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1748 'partselect' 'lshr_ln66_89' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1749 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_121)   --->   "%trunc_ln66_90 = trunc i32 %a_62" [sha256.cpp:66]   --->   Operation 1749 'trunc' 'trunc_ln66_90' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1750 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_121)   --->   "%or_ln66_89 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_90, i30 %lshr_ln66_89" [sha256.cpp:66]   --->   Operation 1750 'bitconcatenate' 'or_ln66_89' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1751 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_121)   --->   "%lshr_ln66_90 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_62, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1751 'partselect' 'lshr_ln66_90' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1752 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_121)   --->   "%trunc_ln66_91 = trunc i32 %a_62" [sha256.cpp:66]   --->   Operation 1752 'trunc' 'trunc_ln66_91' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1753 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_121)   --->   "%or_ln66_90 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_91, i19 %lshr_ln66_90" [sha256.cpp:66]   --->   Operation 1753 'bitconcatenate' 'or_ln66_90' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1754 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_121)   --->   "%lshr_ln66_91 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_62, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1754 'partselect' 'lshr_ln66_91' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1755 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_121)   --->   "%trunc_ln66_92 = trunc i32 %a_62" [sha256.cpp:66]   --->   Operation 1755 'trunc' 'trunc_ln66_92' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1756 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_121)   --->   "%or_ln66_91 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_92, i10 %lshr_ln66_91" [sha256.cpp:66]   --->   Operation 1756 'bitconcatenate' 'or_ln66_91' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1757 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_121)   --->   "%xor_ln66_120 = xor i32 %or_ln66_89, i32 %or_ln66_90" [sha256.cpp:66]   --->   Operation 1757 'xor' 'xor_ln66_120' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1758 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_121 = xor i32 %xor_ln66_120, i32 %or_ln66_91" [sha256.cpp:66]   --->   Operation 1758 'xor' 'xor_ln66_121' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1759 [1/1] (1.14ns)   --->   "%e_63 = add i32 %t1_30, i32 %a_59" [sha256.cpp:70]   --->   Operation 1759 'add' 'e_63' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1760 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_125)   --->   "%lshr_ln65_92 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_63, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1760 'partselect' 'lshr_ln65_92' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1761 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_125)   --->   "%trunc_ln65_93 = trunc i32 %e_63" [sha256.cpp:65]   --->   Operation 1761 'trunc' 'trunc_ln65_93' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1762 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_125)   --->   "%or_ln65_92 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_93, i26 %lshr_ln65_92" [sha256.cpp:65]   --->   Operation 1762 'bitconcatenate' 'or_ln65_92' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1763 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_125)   --->   "%lshr_ln65_93 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_63, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1763 'partselect' 'lshr_ln65_93' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1764 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_125)   --->   "%trunc_ln65_94 = trunc i32 %e_63" [sha256.cpp:65]   --->   Operation 1764 'trunc' 'trunc_ln65_94' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1765 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_125)   --->   "%or_ln65_93 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_94, i21 %lshr_ln65_93" [sha256.cpp:65]   --->   Operation 1765 'bitconcatenate' 'or_ln65_93' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1766 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_125)   --->   "%lshr_ln65_94 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_63, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1766 'partselect' 'lshr_ln65_94' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1767 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_125)   --->   "%trunc_ln65_95 = trunc i32 %e_63" [sha256.cpp:65]   --->   Operation 1767 'trunc' 'trunc_ln65_95' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1768 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_125)   --->   "%or_ln65_94 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_95, i7 %lshr_ln65_94" [sha256.cpp:65]   --->   Operation 1768 'bitconcatenate' 'or_ln65_94' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 1769 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_125)   --->   "%xor_ln65_124 = xor i32 %or_ln65_92, i32 %or_ln65_93" [sha256.cpp:65]   --->   Operation 1769 'xor' 'xor_ln65_124' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1770 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_125 = xor i32 %xor_ln65_124, i32 %or_ln65_94" [sha256.cpp:65]   --->   Operation 1770 'xor' 'xor_ln65_125' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1771 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_127)   --->   "%and_ln65_62 = and i32 %e_63, i32 %e_62" [sha256.cpp:65]   --->   Operation 1771 'and' 'and_ln65_62' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1772 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_127)   --->   "%xor_ln65_126 = xor i32 %e_63, i32 4294967295" [sha256.cpp:65]   --->   Operation 1772 'xor' 'xor_ln65_126' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1773 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_127)   --->   "%and_ln65_63 = and i32 %e_61, i32 %xor_ln65_126" [sha256.cpp:65]   --->   Operation 1773 'and' 'and_ln65_63' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1774 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_127 = xor i32 %and_ln65_62, i32 %and_ln65_63" [sha256.cpp:65]   --->   Operation 1774 'xor' 'xor_ln65_127' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 1775 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_124 = add i32 %xor_ln65_127, i32 %e_60" [sha256.cpp:65]   --->   Operation 1775 'add' 'add_ln65_124' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 1776 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_125 = add i32 %xor_ln65_125, i32 338241895" [sha256.cpp:65]   --->   Operation 1776 'add' 'add_ln65_125' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 1777 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_126 = add i32 %add_ln65_125, i32 %m_31" [sha256.cpp:65]   --->   Operation 1777 'add' 'add_ln65_126' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_25 : Operation 1778 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_31 = add i32 %add_ln65_126, i32 %add_ln65_124" [sha256.cpp:65]   --->   Operation 1778 'add' 't1_31' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 26 <SV = 25> <Delay = 6.49>
ST_26 : Operation 1779 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_48 = add i32 %m_16, i32 %m_25" [sha256.cpp:51]   --->   Operation 1779 'add' 'add_ln51_48' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 1780 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_32 = add i32 %add_ln51_49, i32 %add_ln51_48" [sha256.cpp:51]   --->   Operation 1780 'add' 'm_32' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 1781 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_55)   --->   "%lshr_ln51_74 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_32, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 1781 'partselect' 'lshr_ln51_74' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1782 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_55)   --->   "%trunc_ln51_38 = trunc i32 %m_32" [sha256.cpp:51]   --->   Operation 1782 'trunc' 'trunc_ln51_38' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1783 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_55)   --->   "%or_ln51_71 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_38, i15 %lshr_ln51_74" [sha256.cpp:51]   --->   Operation 1783 'bitconcatenate' 'or_ln51_71' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1784 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_55)   --->   "%lshr_ln51_75 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_32, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 1784 'partselect' 'lshr_ln51_75' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1785 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_55)   --->   "%trunc_ln51_39 = trunc i32 %m_32" [sha256.cpp:51]   --->   Operation 1785 'trunc' 'trunc_ln51_39' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1786 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_55)   --->   "%or_ln51_72 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_39, i13 %lshr_ln51_75" [sha256.cpp:51]   --->   Operation 1786 'bitconcatenate' 'or_ln51_72' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1787 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_55)   --->   "%lshr_ln51_76 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_32, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 1787 'partselect' 'lshr_ln51_76' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1788 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_55)   --->   "%zext_ln51_36 = zext i22 %lshr_ln51_76" [sha256.cpp:51]   --->   Operation 1788 'zext' 'zext_ln51_36' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1789 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_55)   --->   "%xor_ln51_72 = xor i32 %zext_ln51_36, i32 %or_ln51_72" [sha256.cpp:51]   --->   Operation 1789 'xor' 'xor_ln51_72' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1790 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_55)   --->   "%xor_ln51_73 = xor i32 %xor_ln51_72, i32 %or_ln51_71" [sha256.cpp:51]   --->   Operation 1790 'xor' 'xor_ln51_73' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1791 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_55)   --->   "%lshr_ln51_77 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_19, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 1791 'partselect' 'lshr_ln51_77' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1792 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_55)   --->   "%trunc_ln51_40 = trunc i32 %m_19" [sha256.cpp:51]   --->   Operation 1792 'trunc' 'trunc_ln51_40' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1793 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_55)   --->   "%or_ln51_73 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_40, i25 %lshr_ln51_77" [sha256.cpp:51]   --->   Operation 1793 'bitconcatenate' 'or_ln51_73' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1794 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_55)   --->   "%lshr_ln51_78 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_19, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 1794 'partselect' 'lshr_ln51_78' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1795 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_55)   --->   "%trunc_ln51_41 = trunc i32 %m_19" [sha256.cpp:51]   --->   Operation 1795 'trunc' 'trunc_ln51_41' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1796 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_55)   --->   "%or_ln51_74 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_41, i14 %lshr_ln51_78" [sha256.cpp:51]   --->   Operation 1796 'bitconcatenate' 'or_ln51_74' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1797 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_55)   --->   "%lshr_ln51_79 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_19, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 1797 'partselect' 'lshr_ln51_79' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1798 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_55)   --->   "%zext_ln51_37 = zext i29 %lshr_ln51_79" [sha256.cpp:51]   --->   Operation 1798 'zext' 'zext_ln51_37' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1799 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_55)   --->   "%xor_ln51_74 = xor i32 %zext_ln51_37, i32 %or_ln51_74" [sha256.cpp:51]   --->   Operation 1799 'xor' 'xor_ln51_74' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1800 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_55)   --->   "%xor_ln51_75 = xor i32 %xor_ln51_74, i32 %or_ln51_73" [sha256.cpp:51]   --->   Operation 1800 'xor' 'xor_ln51_75' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1801 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_55 = add i32 %xor_ln51_75, i32 %xor_ln51_73" [sha256.cpp:51]   --->   Operation 1801 'add' 'add_ln51_55' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1802 [1/1] (0.28ns)   --->   "%and_ln66_61 = and i32 %a_62, i32 %a_61" [sha256.cpp:66]   --->   Operation 1802 'and' 'and_ln66_61' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1803 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_123)   --->   "%and_ln66_62 = and i32 %a_62, i32 %a_60" [sha256.cpp:66]   --->   Operation 1803 'and' 'and_ln66_62' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1804 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_123)   --->   "%xor_ln66_122 = xor i32 %and_ln66_59, i32 %and_ln66_62" [sha256.cpp:66]   --->   Operation 1804 'xor' 'xor_ln66_122' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1805 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_123 = xor i32 %xor_ln66_122, i32 %and_ln66_61" [sha256.cpp:66]   --->   Operation 1805 'xor' 'xor_ln66_123' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1806 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_60 = add i32 %xor_ln66_123, i32 %t1_30" [sha256.cpp:74]   --->   Operation 1806 'add' 'add_ln74_60' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 1807 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_63 = add i32 %add_ln74_60, i32 %xor_ln66_121" [sha256.cpp:74]   --->   Operation 1807 'add' 'a_63' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 1808 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_125)   --->   "%lshr_ln66_92 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_63, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1808 'partselect' 'lshr_ln66_92' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1809 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_125)   --->   "%trunc_ln66_93 = trunc i32 %a_63" [sha256.cpp:66]   --->   Operation 1809 'trunc' 'trunc_ln66_93' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1810 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_125)   --->   "%or_ln66_92 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_93, i30 %lshr_ln66_92" [sha256.cpp:66]   --->   Operation 1810 'bitconcatenate' 'or_ln66_92' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1811 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_125)   --->   "%lshr_ln66_93 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_63, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1811 'partselect' 'lshr_ln66_93' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1812 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_125)   --->   "%trunc_ln66_94 = trunc i32 %a_63" [sha256.cpp:66]   --->   Operation 1812 'trunc' 'trunc_ln66_94' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1813 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_125)   --->   "%or_ln66_93 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_94, i19 %lshr_ln66_93" [sha256.cpp:66]   --->   Operation 1813 'bitconcatenate' 'or_ln66_93' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1814 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_125)   --->   "%lshr_ln66_94 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_63, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1814 'partselect' 'lshr_ln66_94' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1815 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_125)   --->   "%trunc_ln66_95 = trunc i32 %a_63" [sha256.cpp:66]   --->   Operation 1815 'trunc' 'trunc_ln66_95' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1816 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_125)   --->   "%or_ln66_94 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_95, i10 %lshr_ln66_94" [sha256.cpp:66]   --->   Operation 1816 'bitconcatenate' 'or_ln66_94' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1817 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_125)   --->   "%xor_ln66_124 = xor i32 %or_ln66_92, i32 %or_ln66_93" [sha256.cpp:66]   --->   Operation 1817 'xor' 'xor_ln66_124' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1818 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_125 = xor i32 %xor_ln66_124, i32 %or_ln66_94" [sha256.cpp:66]   --->   Operation 1818 'xor' 'xor_ln66_125' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1819 [1/1] (0.28ns)   --->   "%and_ln66_63 = and i32 %a_63, i32 %a_62" [sha256.cpp:66]   --->   Operation 1819 'and' 'and_ln66_63' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1820 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_127)   --->   "%and_ln66_64 = and i32 %a_63, i32 %a_61" [sha256.cpp:66]   --->   Operation 1820 'and' 'and_ln66_64' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1821 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_127)   --->   "%xor_ln66_126 = xor i32 %and_ln66_61, i32 %and_ln66_64" [sha256.cpp:66]   --->   Operation 1821 'xor' 'xor_ln66_126' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1822 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_127 = xor i32 %xor_ln66_126, i32 %and_ln66_63" [sha256.cpp:66]   --->   Operation 1822 'xor' 'xor_ln66_127' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1823 [1/1] (1.14ns)   --->   "%e_64 = add i32 %t1_31, i32 %a_60" [sha256.cpp:70]   --->   Operation 1823 'add' 'e_64' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1824 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_62 = add i32 %xor_ln66_127, i32 %t1_31" [sha256.cpp:74]   --->   Operation 1824 'add' 'add_ln74_62' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 1825 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_64 = add i32 %add_ln74_62, i32 %xor_ln66_125" [sha256.cpp:74]   --->   Operation 1825 'add' 'a_64' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 1826 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_129)   --->   "%lshr_ln65_95 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_64, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1826 'partselect' 'lshr_ln65_95' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1827 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_129)   --->   "%trunc_ln65_96 = trunc i32 %e_64" [sha256.cpp:65]   --->   Operation 1827 'trunc' 'trunc_ln65_96' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1828 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_129)   --->   "%or_ln65_95 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_96, i26 %lshr_ln65_95" [sha256.cpp:65]   --->   Operation 1828 'bitconcatenate' 'or_ln65_95' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1829 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_129)   --->   "%lshr_ln65_96 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_64, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1829 'partselect' 'lshr_ln65_96' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1830 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_129)   --->   "%trunc_ln65_97 = trunc i32 %e_64" [sha256.cpp:65]   --->   Operation 1830 'trunc' 'trunc_ln65_97' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1831 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_129)   --->   "%or_ln65_96 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_97, i21 %lshr_ln65_96" [sha256.cpp:65]   --->   Operation 1831 'bitconcatenate' 'or_ln65_96' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1832 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_129)   --->   "%lshr_ln65_97 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_64, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1832 'partselect' 'lshr_ln65_97' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1833 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_129)   --->   "%trunc_ln65_98 = trunc i32 %e_64" [sha256.cpp:65]   --->   Operation 1833 'trunc' 'trunc_ln65_98' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1834 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_129)   --->   "%or_ln65_97 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_98, i7 %lshr_ln65_97" [sha256.cpp:65]   --->   Operation 1834 'bitconcatenate' 'or_ln65_97' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1835 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_129)   --->   "%xor_ln65_128 = xor i32 %or_ln65_95, i32 %or_ln65_96" [sha256.cpp:65]   --->   Operation 1835 'xor' 'xor_ln65_128' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1836 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_129 = xor i32 %xor_ln65_128, i32 %or_ln65_97" [sha256.cpp:65]   --->   Operation 1836 'xor' 'xor_ln65_129' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1837 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_131)   --->   "%and_ln65_64 = and i32 %e_64, i32 %e_63" [sha256.cpp:65]   --->   Operation 1837 'and' 'and_ln65_64' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1838 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_131)   --->   "%xor_ln65_130 = xor i32 %e_64, i32 4294967295" [sha256.cpp:65]   --->   Operation 1838 'xor' 'xor_ln65_130' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1839 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_131)   --->   "%and_ln65_65 = and i32 %e_62, i32 %xor_ln65_130" [sha256.cpp:65]   --->   Operation 1839 'and' 'and_ln65_65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1840 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_131 = xor i32 %and_ln65_64, i32 %and_ln65_65" [sha256.cpp:65]   --->   Operation 1840 'xor' 'xor_ln65_131' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1841 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_128 = add i32 %xor_ln65_131, i32 %e_61" [sha256.cpp:65]   --->   Operation 1841 'add' 'add_ln65_128' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 1842 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_129 = add i32 %xor_ln65_129, i32 666307205" [sha256.cpp:65]   --->   Operation 1842 'add' 'add_ln65_129' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 1843 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_130 = add i32 %add_ln65_129, i32 %m_32" [sha256.cpp:65]   --->   Operation 1843 'add' 'add_ln65_130' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 1844 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_32 = add i32 %add_ln65_130, i32 %add_ln65_128" [sha256.cpp:65]   --->   Operation 1844 'add' 't1_32' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 1845 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_129)   --->   "%lshr_ln66_95 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_64, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1845 'partselect' 'lshr_ln66_95' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1846 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_129)   --->   "%trunc_ln66_96 = trunc i32 %a_64" [sha256.cpp:66]   --->   Operation 1846 'trunc' 'trunc_ln66_96' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1847 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_129)   --->   "%or_ln66_95 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_96, i30 %lshr_ln66_95" [sha256.cpp:66]   --->   Operation 1847 'bitconcatenate' 'or_ln66_95' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1848 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_129)   --->   "%lshr_ln66_96 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_64, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1848 'partselect' 'lshr_ln66_96' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1849 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_129)   --->   "%trunc_ln66_97 = trunc i32 %a_64" [sha256.cpp:66]   --->   Operation 1849 'trunc' 'trunc_ln66_97' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1850 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_129)   --->   "%or_ln66_96 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_97, i19 %lshr_ln66_96" [sha256.cpp:66]   --->   Operation 1850 'bitconcatenate' 'or_ln66_96' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1851 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_129)   --->   "%lshr_ln66_97 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_64, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1851 'partselect' 'lshr_ln66_97' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1852 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_129)   --->   "%trunc_ln66_98 = trunc i32 %a_64" [sha256.cpp:66]   --->   Operation 1852 'trunc' 'trunc_ln66_98' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1853 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_129)   --->   "%or_ln66_97 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_98, i10 %lshr_ln66_97" [sha256.cpp:66]   --->   Operation 1853 'bitconcatenate' 'or_ln66_97' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1854 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_129)   --->   "%xor_ln66_128 = xor i32 %or_ln66_95, i32 %or_ln66_96" [sha256.cpp:66]   --->   Operation 1854 'xor' 'xor_ln66_128' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1855 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_129 = xor i32 %xor_ln66_128, i32 %or_ln66_97" [sha256.cpp:66]   --->   Operation 1855 'xor' 'xor_ln66_129' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1856 [1/1] (0.28ns)   --->   "%and_ln66_65 = and i32 %a_64, i32 %a_63" [sha256.cpp:66]   --->   Operation 1856 'and' 'and_ln66_65' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1857 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_131)   --->   "%and_ln66_66 = and i32 %a_64, i32 %a_62" [sha256.cpp:66]   --->   Operation 1857 'and' 'and_ln66_66' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1858 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_131)   --->   "%xor_ln66_130 = xor i32 %and_ln66_63, i32 %and_ln66_66" [sha256.cpp:66]   --->   Operation 1858 'xor' 'xor_ln66_130' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1859 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_131 = xor i32 %xor_ln66_130, i32 %and_ln66_65" [sha256.cpp:66]   --->   Operation 1859 'xor' 'xor_ln66_131' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1860 [1/1] (1.14ns)   --->   "%e_65 = add i32 %t1_32, i32 %a_61" [sha256.cpp:70]   --->   Operation 1860 'add' 'e_65' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1861 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_64 = add i32 %xor_ln66_131, i32 %t1_32" [sha256.cpp:74]   --->   Operation 1861 'add' 'add_ln74_64' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 1862 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_65 = add i32 %add_ln74_64, i32 %xor_ln66_129" [sha256.cpp:74]   --->   Operation 1862 'add' 'a_65' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 1863 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_133)   --->   "%lshr_ln65_98 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_65, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1863 'partselect' 'lshr_ln65_98' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1864 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_133)   --->   "%trunc_ln65_99 = trunc i32 %e_65" [sha256.cpp:65]   --->   Operation 1864 'trunc' 'trunc_ln65_99' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1865 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_133)   --->   "%or_ln65_98 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_99, i26 %lshr_ln65_98" [sha256.cpp:65]   --->   Operation 1865 'bitconcatenate' 'or_ln65_98' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1866 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_133)   --->   "%lshr_ln65_99 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_65, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1866 'partselect' 'lshr_ln65_99' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1867 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_133)   --->   "%trunc_ln65_100 = trunc i32 %e_65" [sha256.cpp:65]   --->   Operation 1867 'trunc' 'trunc_ln65_100' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1868 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_133)   --->   "%or_ln65_99 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_100, i21 %lshr_ln65_99" [sha256.cpp:65]   --->   Operation 1868 'bitconcatenate' 'or_ln65_99' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1869 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_133)   --->   "%lshr_ln65_100 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_65, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1869 'partselect' 'lshr_ln65_100' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1870 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_133)   --->   "%trunc_ln65_101 = trunc i32 %e_65" [sha256.cpp:65]   --->   Operation 1870 'trunc' 'trunc_ln65_101' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1871 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_133)   --->   "%or_ln65_100 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_101, i7 %lshr_ln65_100" [sha256.cpp:65]   --->   Operation 1871 'bitconcatenate' 'or_ln65_100' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1872 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_133)   --->   "%xor_ln65_132 = xor i32 %or_ln65_98, i32 %or_ln65_99" [sha256.cpp:65]   --->   Operation 1872 'xor' 'xor_ln65_132' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1873 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_133 = xor i32 %xor_ln65_132, i32 %or_ln65_100" [sha256.cpp:65]   --->   Operation 1873 'xor' 'xor_ln65_133' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1874 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_135)   --->   "%and_ln65_66 = and i32 %e_65, i32 %e_64" [sha256.cpp:65]   --->   Operation 1874 'and' 'and_ln65_66' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1875 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_135)   --->   "%xor_ln65_134 = xor i32 %e_65, i32 4294967295" [sha256.cpp:65]   --->   Operation 1875 'xor' 'xor_ln65_134' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1876 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_135)   --->   "%and_ln65_67 = and i32 %e_63, i32 %xor_ln65_134" [sha256.cpp:65]   --->   Operation 1876 'and' 'and_ln65_67' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1877 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_135 = xor i32 %and_ln65_66, i32 %and_ln65_67" [sha256.cpp:65]   --->   Operation 1877 'xor' 'xor_ln65_135' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1878 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_132 = add i32 %xor_ln65_135, i32 %e_62" [sha256.cpp:65]   --->   Operation 1878 'add' 'add_ln65_132' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 1879 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_133 = add i32 %xor_ln65_133, i32 773529912" [sha256.cpp:65]   --->   Operation 1879 'add' 'add_ln65_133' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 1880 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_134 = add i32 %add_ln65_133, i32 %m_33" [sha256.cpp:65]   --->   Operation 1880 'add' 'add_ln65_134' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 1881 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_33 = add i32 %add_ln65_134, i32 %add_ln65_132" [sha256.cpp:65]   --->   Operation 1881 'add' 't1_33' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_26 : Operation 1882 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_133)   --->   "%lshr_ln66_98 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_65, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1882 'partselect' 'lshr_ln66_98' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1883 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_133)   --->   "%trunc_ln66_99 = trunc i32 %a_65" [sha256.cpp:66]   --->   Operation 1883 'trunc' 'trunc_ln66_99' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1884 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_133)   --->   "%or_ln66_98 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_99, i30 %lshr_ln66_98" [sha256.cpp:66]   --->   Operation 1884 'bitconcatenate' 'or_ln66_98' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1885 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_133)   --->   "%lshr_ln66_99 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_65, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1885 'partselect' 'lshr_ln66_99' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1886 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_133)   --->   "%trunc_ln66_100 = trunc i32 %a_65" [sha256.cpp:66]   --->   Operation 1886 'trunc' 'trunc_ln66_100' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1887 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_133)   --->   "%or_ln66_99 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_100, i19 %lshr_ln66_99" [sha256.cpp:66]   --->   Operation 1887 'bitconcatenate' 'or_ln66_99' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1888 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_133)   --->   "%lshr_ln66_100 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_65, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1888 'partselect' 'lshr_ln66_100' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1889 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_133)   --->   "%trunc_ln66_101 = trunc i32 %a_65" [sha256.cpp:66]   --->   Operation 1889 'trunc' 'trunc_ln66_101' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1890 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_133)   --->   "%or_ln66_100 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_101, i10 %lshr_ln66_100" [sha256.cpp:66]   --->   Operation 1890 'bitconcatenate' 'or_ln66_100' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 1891 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_133)   --->   "%xor_ln66_132 = xor i32 %or_ln66_98, i32 %or_ln66_99" [sha256.cpp:66]   --->   Operation 1891 'xor' 'xor_ln66_132' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 1892 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_133 = xor i32 %xor_ln66_132, i32 %or_ln66_100" [sha256.cpp:66]   --->   Operation 1892 'xor' 'xor_ln66_133' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 6.49>
ST_27 : Operation 1893 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_54 = add i32 %m_18, i32 %m_27" [sha256.cpp:51]   --->   Operation 1893 'add' 'add_ln51_54' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 1894 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_34 = add i32 %add_ln51_55, i32 %add_ln51_54" [sha256.cpp:51]   --->   Operation 1894 'add' 'm_34' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 1895 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_57 = add i32 %m_19, i32 %m_28" [sha256.cpp:51]   --->   Operation 1895 'add' 'add_ln51_57' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 1896 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_35 = add i32 %add_ln51_58, i32 %add_ln51_57" [sha256.cpp:51]   --->   Operation 1896 'add' 'm_35' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 1897 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_61)   --->   "%lshr_ln51_86 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_34, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 1897 'partselect' 'lshr_ln51_86' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1898 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_61)   --->   "%trunc_ln51_46 = trunc i32 %m_34" [sha256.cpp:51]   --->   Operation 1898 'trunc' 'trunc_ln51_46' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1899 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_61)   --->   "%or_ln51_79 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_46, i15 %lshr_ln51_86" [sha256.cpp:51]   --->   Operation 1899 'bitconcatenate' 'or_ln51_79' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1900 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_61)   --->   "%lshr_ln51_87 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_34, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 1900 'partselect' 'lshr_ln51_87' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1901 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_61)   --->   "%trunc_ln51_47 = trunc i32 %m_34" [sha256.cpp:51]   --->   Operation 1901 'trunc' 'trunc_ln51_47' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1902 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_61)   --->   "%or_ln51_80 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_47, i13 %lshr_ln51_87" [sha256.cpp:51]   --->   Operation 1902 'bitconcatenate' 'or_ln51_80' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1903 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_61)   --->   "%lshr_ln51_88 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_34, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 1903 'partselect' 'lshr_ln51_88' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1904 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_61)   --->   "%zext_ln51_40 = zext i22 %lshr_ln51_88" [sha256.cpp:51]   --->   Operation 1904 'zext' 'zext_ln51_40' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1905 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_61)   --->   "%xor_ln51_80 = xor i32 %zext_ln51_40, i32 %or_ln51_80" [sha256.cpp:51]   --->   Operation 1905 'xor' 'xor_ln51_80' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1906 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_61)   --->   "%xor_ln51_81 = xor i32 %xor_ln51_80, i32 %or_ln51_79" [sha256.cpp:51]   --->   Operation 1906 'xor' 'xor_ln51_81' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1907 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_61)   --->   "%lshr_ln51_89 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_21, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 1907 'partselect' 'lshr_ln51_89' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1908 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_61)   --->   "%trunc_ln51_48 = trunc i32 %m_21" [sha256.cpp:51]   --->   Operation 1908 'trunc' 'trunc_ln51_48' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1909 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_61)   --->   "%or_ln51_81 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_48, i25 %lshr_ln51_89" [sha256.cpp:51]   --->   Operation 1909 'bitconcatenate' 'or_ln51_81' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1910 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_61)   --->   "%lshr_ln51_90 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_21, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 1910 'partselect' 'lshr_ln51_90' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1911 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_61)   --->   "%trunc_ln51_49 = trunc i32 %m_21" [sha256.cpp:51]   --->   Operation 1911 'trunc' 'trunc_ln51_49' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1912 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_61)   --->   "%or_ln51_82 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_49, i14 %lshr_ln51_90" [sha256.cpp:51]   --->   Operation 1912 'bitconcatenate' 'or_ln51_82' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1913 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_61)   --->   "%lshr_ln51_91 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_21, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 1913 'partselect' 'lshr_ln51_91' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1914 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_61)   --->   "%zext_ln51_41 = zext i29 %lshr_ln51_91" [sha256.cpp:51]   --->   Operation 1914 'zext' 'zext_ln51_41' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1915 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_61)   --->   "%xor_ln51_82 = xor i32 %zext_ln51_41, i32 %or_ln51_82" [sha256.cpp:51]   --->   Operation 1915 'xor' 'xor_ln51_82' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1916 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_61)   --->   "%xor_ln51_83 = xor i32 %xor_ln51_82, i32 %or_ln51_81" [sha256.cpp:51]   --->   Operation 1916 'xor' 'xor_ln51_83' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1917 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_60 = add i32 %m_20, i32 %m_29" [sha256.cpp:51]   --->   Operation 1917 'add' 'add_ln51_60' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 1918 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_61 = add i32 %xor_ln51_83, i32 %xor_ln51_81" [sha256.cpp:51]   --->   Operation 1918 'add' 'add_ln51_61' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1919 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_36 = add i32 %add_ln51_61, i32 %add_ln51_60" [sha256.cpp:51]   --->   Operation 1919 'add' 'm_36' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 1920 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_64)   --->   "%lshr_ln51_92 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_35, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 1920 'partselect' 'lshr_ln51_92' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1921 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_64)   --->   "%trunc_ln51_50 = trunc i32 %m_35" [sha256.cpp:51]   --->   Operation 1921 'trunc' 'trunc_ln51_50' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1922 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_64)   --->   "%or_ln51_83 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_50, i15 %lshr_ln51_92" [sha256.cpp:51]   --->   Operation 1922 'bitconcatenate' 'or_ln51_83' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1923 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_64)   --->   "%lshr_ln51_93 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_35, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 1923 'partselect' 'lshr_ln51_93' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1924 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_64)   --->   "%trunc_ln51_51 = trunc i32 %m_35" [sha256.cpp:51]   --->   Operation 1924 'trunc' 'trunc_ln51_51' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1925 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_64)   --->   "%or_ln51_84 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_51, i13 %lshr_ln51_93" [sha256.cpp:51]   --->   Operation 1925 'bitconcatenate' 'or_ln51_84' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1926 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_64)   --->   "%lshr_ln51_94 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_35, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 1926 'partselect' 'lshr_ln51_94' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1927 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_64)   --->   "%zext_ln51_42 = zext i22 %lshr_ln51_94" [sha256.cpp:51]   --->   Operation 1927 'zext' 'zext_ln51_42' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1928 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_64)   --->   "%xor_ln51_84 = xor i32 %zext_ln51_42, i32 %or_ln51_84" [sha256.cpp:51]   --->   Operation 1928 'xor' 'xor_ln51_84' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1929 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_64)   --->   "%xor_ln51_85 = xor i32 %xor_ln51_84, i32 %or_ln51_83" [sha256.cpp:51]   --->   Operation 1929 'xor' 'xor_ln51_85' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1930 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_64)   --->   "%lshr_ln51_95 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_22, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 1930 'partselect' 'lshr_ln51_95' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1931 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_64)   --->   "%trunc_ln51_52 = trunc i32 %m_22" [sha256.cpp:51]   --->   Operation 1931 'trunc' 'trunc_ln51_52' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1932 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_64)   --->   "%or_ln51_85 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_52, i25 %lshr_ln51_95" [sha256.cpp:51]   --->   Operation 1932 'bitconcatenate' 'or_ln51_85' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1933 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_64)   --->   "%lshr_ln51_96 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_22, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 1933 'partselect' 'lshr_ln51_96' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1934 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_64)   --->   "%trunc_ln51_53 = trunc i32 %m_22" [sha256.cpp:51]   --->   Operation 1934 'trunc' 'trunc_ln51_53' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1935 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_64)   --->   "%or_ln51_86 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_53, i14 %lshr_ln51_96" [sha256.cpp:51]   --->   Operation 1935 'bitconcatenate' 'or_ln51_86' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1936 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_64)   --->   "%lshr_ln51_97 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_22, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 1936 'partselect' 'lshr_ln51_97' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1937 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_64)   --->   "%zext_ln51_43 = zext i29 %lshr_ln51_97" [sha256.cpp:51]   --->   Operation 1937 'zext' 'zext_ln51_43' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1938 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_64)   --->   "%xor_ln51_86 = xor i32 %zext_ln51_43, i32 %or_ln51_86" [sha256.cpp:51]   --->   Operation 1938 'xor' 'xor_ln51_86' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1939 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_64)   --->   "%xor_ln51_87 = xor i32 %xor_ln51_86, i32 %or_ln51_85" [sha256.cpp:51]   --->   Operation 1939 'xor' 'xor_ln51_87' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1940 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_64 = add i32 %xor_ln51_87, i32 %xor_ln51_85" [sha256.cpp:51]   --->   Operation 1940 'add' 'add_ln51_64' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1941 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_67)   --->   "%lshr_ln51_98 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_36, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 1941 'partselect' 'lshr_ln51_98' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1942 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_67)   --->   "%trunc_ln51_54 = trunc i32 %m_36" [sha256.cpp:51]   --->   Operation 1942 'trunc' 'trunc_ln51_54' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1943 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_67)   --->   "%or_ln51_87 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_54, i15 %lshr_ln51_98" [sha256.cpp:51]   --->   Operation 1943 'bitconcatenate' 'or_ln51_87' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1944 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_67)   --->   "%lshr_ln51_99 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_36, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 1944 'partselect' 'lshr_ln51_99' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1945 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_67)   --->   "%trunc_ln51_55 = trunc i32 %m_36" [sha256.cpp:51]   --->   Operation 1945 'trunc' 'trunc_ln51_55' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1946 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_67)   --->   "%or_ln51_88 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_55, i13 %lshr_ln51_99" [sha256.cpp:51]   --->   Operation 1946 'bitconcatenate' 'or_ln51_88' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1947 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_67)   --->   "%lshr_ln51_100 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_36, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 1947 'partselect' 'lshr_ln51_100' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1948 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_67)   --->   "%zext_ln51_44 = zext i22 %lshr_ln51_100" [sha256.cpp:51]   --->   Operation 1948 'zext' 'zext_ln51_44' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1949 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_67)   --->   "%xor_ln51_88 = xor i32 %zext_ln51_44, i32 %or_ln51_88" [sha256.cpp:51]   --->   Operation 1949 'xor' 'xor_ln51_88' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1950 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_67)   --->   "%xor_ln51_89 = xor i32 %xor_ln51_88, i32 %or_ln51_87" [sha256.cpp:51]   --->   Operation 1950 'xor' 'xor_ln51_89' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1951 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_67)   --->   "%lshr_ln51_101 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_23, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 1951 'partselect' 'lshr_ln51_101' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1952 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_67)   --->   "%trunc_ln51_56 = trunc i32 %m_23" [sha256.cpp:51]   --->   Operation 1952 'trunc' 'trunc_ln51_56' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1953 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_67)   --->   "%or_ln51_89 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_56, i25 %lshr_ln51_101" [sha256.cpp:51]   --->   Operation 1953 'bitconcatenate' 'or_ln51_89' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1954 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_67)   --->   "%lshr_ln51_102 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_23, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 1954 'partselect' 'lshr_ln51_102' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1955 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_67)   --->   "%trunc_ln51_57 = trunc i32 %m_23" [sha256.cpp:51]   --->   Operation 1955 'trunc' 'trunc_ln51_57' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1956 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_67)   --->   "%or_ln51_90 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_57, i14 %lshr_ln51_102" [sha256.cpp:51]   --->   Operation 1956 'bitconcatenate' 'or_ln51_90' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1957 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_67)   --->   "%lshr_ln51_103 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_23, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 1957 'partselect' 'lshr_ln51_103' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1958 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_67)   --->   "%zext_ln51_45 = zext i29 %lshr_ln51_103" [sha256.cpp:51]   --->   Operation 1958 'zext' 'zext_ln51_45' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1959 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_67)   --->   "%xor_ln51_90 = xor i32 %zext_ln51_45, i32 %or_ln51_90" [sha256.cpp:51]   --->   Operation 1959 'xor' 'xor_ln51_90' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1960 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_67)   --->   "%xor_ln51_91 = xor i32 %xor_ln51_90, i32 %or_ln51_89" [sha256.cpp:51]   --->   Operation 1960 'xor' 'xor_ln51_91' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1961 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_67 = add i32 %xor_ln51_91, i32 %xor_ln51_89" [sha256.cpp:51]   --->   Operation 1961 'add' 'add_ln51_67' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1962 [1/1] (0.28ns)   --->   "%and_ln66_67 = and i32 %a_65, i32 %a_64" [sha256.cpp:66]   --->   Operation 1962 'and' 'and_ln66_67' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1963 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_135)   --->   "%and_ln66_68 = and i32 %a_65, i32 %a_63" [sha256.cpp:66]   --->   Operation 1963 'and' 'and_ln66_68' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1964 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_135)   --->   "%xor_ln66_134 = xor i32 %and_ln66_65, i32 %and_ln66_68" [sha256.cpp:66]   --->   Operation 1964 'xor' 'xor_ln66_134' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1965 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_135 = xor i32 %xor_ln66_134, i32 %and_ln66_67" [sha256.cpp:66]   --->   Operation 1965 'xor' 'xor_ln66_135' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1966 [1/1] (1.14ns)   --->   "%e_66 = add i32 %t1_33, i32 %a_62" [sha256.cpp:70]   --->   Operation 1966 'add' 'e_66' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1967 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_66 = add i32 %xor_ln66_135, i32 %t1_33" [sha256.cpp:74]   --->   Operation 1967 'add' 'add_ln74_66' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 1968 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_66 = add i32 %add_ln74_66, i32 %xor_ln66_133" [sha256.cpp:74]   --->   Operation 1968 'add' 'a_66' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 1969 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_137)   --->   "%lshr_ln65_101 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_66, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 1969 'partselect' 'lshr_ln65_101' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1970 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_137)   --->   "%trunc_ln65_102 = trunc i32 %e_66" [sha256.cpp:65]   --->   Operation 1970 'trunc' 'trunc_ln65_102' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1971 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_137)   --->   "%or_ln65_101 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_102, i26 %lshr_ln65_101" [sha256.cpp:65]   --->   Operation 1971 'bitconcatenate' 'or_ln65_101' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1972 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_137)   --->   "%lshr_ln65_102 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_66, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 1972 'partselect' 'lshr_ln65_102' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1973 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_137)   --->   "%trunc_ln65_103 = trunc i32 %e_66" [sha256.cpp:65]   --->   Operation 1973 'trunc' 'trunc_ln65_103' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1974 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_137)   --->   "%or_ln65_102 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_103, i21 %lshr_ln65_102" [sha256.cpp:65]   --->   Operation 1974 'bitconcatenate' 'or_ln65_102' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1975 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_137)   --->   "%lshr_ln65_103 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_66, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 1975 'partselect' 'lshr_ln65_103' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1976 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_137)   --->   "%trunc_ln65_104 = trunc i32 %e_66" [sha256.cpp:65]   --->   Operation 1976 'trunc' 'trunc_ln65_104' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1977 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_137)   --->   "%or_ln65_103 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_104, i7 %lshr_ln65_103" [sha256.cpp:65]   --->   Operation 1977 'bitconcatenate' 'or_ln65_103' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1978 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_137)   --->   "%xor_ln65_136 = xor i32 %or_ln65_101, i32 %or_ln65_102" [sha256.cpp:65]   --->   Operation 1978 'xor' 'xor_ln65_136' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1979 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_137 = xor i32 %xor_ln65_136, i32 %or_ln65_103" [sha256.cpp:65]   --->   Operation 1979 'xor' 'xor_ln65_137' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1980 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_139)   --->   "%and_ln65_68 = and i32 %e_66, i32 %e_65" [sha256.cpp:65]   --->   Operation 1980 'and' 'and_ln65_68' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1981 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_139)   --->   "%xor_ln65_138 = xor i32 %e_66, i32 4294967295" [sha256.cpp:65]   --->   Operation 1981 'xor' 'xor_ln65_138' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1982 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_139)   --->   "%and_ln65_69 = and i32 %e_64, i32 %xor_ln65_138" [sha256.cpp:65]   --->   Operation 1982 'and' 'and_ln65_69' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1983 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_139 = xor i32 %and_ln65_68, i32 %and_ln65_69" [sha256.cpp:65]   --->   Operation 1983 'xor' 'xor_ln65_139' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1984 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_136 = add i32 %xor_ln65_139, i32 %e_63" [sha256.cpp:65]   --->   Operation 1984 'add' 'add_ln65_136' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 1985 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_137 = add i32 %xor_ln65_137, i32 1294757372" [sha256.cpp:65]   --->   Operation 1985 'add' 'add_ln65_137' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 1986 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_138 = add i32 %add_ln65_137, i32 %m_34" [sha256.cpp:65]   --->   Operation 1986 'add' 'add_ln65_138' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 1987 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_34 = add i32 %add_ln65_138, i32 %add_ln65_136" [sha256.cpp:65]   --->   Operation 1987 'add' 't1_34' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 1988 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_137)   --->   "%lshr_ln66_101 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_66, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 1988 'partselect' 'lshr_ln66_101' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1989 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_137)   --->   "%trunc_ln66_102 = trunc i32 %a_66" [sha256.cpp:66]   --->   Operation 1989 'trunc' 'trunc_ln66_102' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1990 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_137)   --->   "%or_ln66_101 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_102, i30 %lshr_ln66_101" [sha256.cpp:66]   --->   Operation 1990 'bitconcatenate' 'or_ln66_101' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1991 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_137)   --->   "%lshr_ln66_102 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_66, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 1991 'partselect' 'lshr_ln66_102' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1992 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_137)   --->   "%trunc_ln66_103 = trunc i32 %a_66" [sha256.cpp:66]   --->   Operation 1992 'trunc' 'trunc_ln66_103' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1993 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_137)   --->   "%or_ln66_102 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_103, i19 %lshr_ln66_102" [sha256.cpp:66]   --->   Operation 1993 'bitconcatenate' 'or_ln66_102' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1994 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_137)   --->   "%lshr_ln66_103 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_66, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 1994 'partselect' 'lshr_ln66_103' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1995 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_137)   --->   "%trunc_ln66_104 = trunc i32 %a_66" [sha256.cpp:66]   --->   Operation 1995 'trunc' 'trunc_ln66_104' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1996 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_137)   --->   "%or_ln66_103 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_104, i10 %lshr_ln66_103" [sha256.cpp:66]   --->   Operation 1996 'bitconcatenate' 'or_ln66_103' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 1997 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_137)   --->   "%xor_ln66_136 = xor i32 %or_ln66_101, i32 %or_ln66_102" [sha256.cpp:66]   --->   Operation 1997 'xor' 'xor_ln66_136' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1998 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_137 = xor i32 %xor_ln66_136, i32 %or_ln66_103" [sha256.cpp:66]   --->   Operation 1998 'xor' 'xor_ln66_137' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 1999 [1/1] (1.14ns)   --->   "%e_67 = add i32 %t1_34, i32 %a_63" [sha256.cpp:70]   --->   Operation 1999 'add' 'e_67' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 2000 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_141)   --->   "%lshr_ln65_104 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_67, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 2000 'partselect' 'lshr_ln65_104' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 2001 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_141)   --->   "%trunc_ln65_105 = trunc i32 %e_67" [sha256.cpp:65]   --->   Operation 2001 'trunc' 'trunc_ln65_105' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 2002 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_141)   --->   "%or_ln65_104 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_105, i26 %lshr_ln65_104" [sha256.cpp:65]   --->   Operation 2002 'bitconcatenate' 'or_ln65_104' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 2003 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_141)   --->   "%lshr_ln65_105 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_67, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 2003 'partselect' 'lshr_ln65_105' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 2004 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_141)   --->   "%trunc_ln65_106 = trunc i32 %e_67" [sha256.cpp:65]   --->   Operation 2004 'trunc' 'trunc_ln65_106' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 2005 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_141)   --->   "%or_ln65_105 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_106, i21 %lshr_ln65_105" [sha256.cpp:65]   --->   Operation 2005 'bitconcatenate' 'or_ln65_105' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 2006 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_141)   --->   "%lshr_ln65_106 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_67, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 2006 'partselect' 'lshr_ln65_106' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 2007 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_141)   --->   "%trunc_ln65_107 = trunc i32 %e_67" [sha256.cpp:65]   --->   Operation 2007 'trunc' 'trunc_ln65_107' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 2008 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_141)   --->   "%or_ln65_106 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_107, i7 %lshr_ln65_106" [sha256.cpp:65]   --->   Operation 2008 'bitconcatenate' 'or_ln65_106' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 2009 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_141)   --->   "%xor_ln65_140 = xor i32 %or_ln65_104, i32 %or_ln65_105" [sha256.cpp:65]   --->   Operation 2009 'xor' 'xor_ln65_140' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 2010 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_141 = xor i32 %xor_ln65_140, i32 %or_ln65_106" [sha256.cpp:65]   --->   Operation 2010 'xor' 'xor_ln65_141' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 2011 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_143)   --->   "%and_ln65_70 = and i32 %e_67, i32 %e_66" [sha256.cpp:65]   --->   Operation 2011 'and' 'and_ln65_70' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 2012 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_143)   --->   "%xor_ln65_142 = xor i32 %e_67, i32 4294967295" [sha256.cpp:65]   --->   Operation 2012 'xor' 'xor_ln65_142' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 2013 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_143)   --->   "%and_ln65_71 = and i32 %e_65, i32 %xor_ln65_142" [sha256.cpp:65]   --->   Operation 2013 'and' 'and_ln65_71' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 2014 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_143 = xor i32 %and_ln65_70, i32 %and_ln65_71" [sha256.cpp:65]   --->   Operation 2014 'xor' 'xor_ln65_143' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 2015 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_140 = add i32 %xor_ln65_143, i32 %e_64" [sha256.cpp:65]   --->   Operation 2015 'add' 'add_ln65_140' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 2016 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_141 = add i32 %xor_ln65_141, i32 1396182291" [sha256.cpp:65]   --->   Operation 2016 'add' 'add_ln65_141' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 2017 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_142 = add i32 %add_ln65_141, i32 %m_35" [sha256.cpp:65]   --->   Operation 2017 'add' 'add_ln65_142' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_27 : Operation 2018 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_35 = add i32 %add_ln65_142, i32 %add_ln65_140" [sha256.cpp:65]   --->   Operation 2018 'add' 't1_35' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 28 <SV = 27> <Delay = 6.49>
ST_28 : Operation 2019 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_63 = add i32 %m_21, i32 %m_30" [sha256.cpp:51]   --->   Operation 2019 'add' 'add_ln51_63' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 2020 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_37 = add i32 %add_ln51_64, i32 %add_ln51_63" [sha256.cpp:51]   --->   Operation 2020 'add' 'm_37' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 2021 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_70)   --->   "%lshr_ln51_104 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_37, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 2021 'partselect' 'lshr_ln51_104' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2022 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_70)   --->   "%trunc_ln51_58 = trunc i32 %m_37" [sha256.cpp:51]   --->   Operation 2022 'trunc' 'trunc_ln51_58' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2023 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_70)   --->   "%or_ln51_91 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_58, i15 %lshr_ln51_104" [sha256.cpp:51]   --->   Operation 2023 'bitconcatenate' 'or_ln51_91' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2024 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_70)   --->   "%lshr_ln51_105 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_37, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 2024 'partselect' 'lshr_ln51_105' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2025 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_70)   --->   "%trunc_ln51_59 = trunc i32 %m_37" [sha256.cpp:51]   --->   Operation 2025 'trunc' 'trunc_ln51_59' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2026 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_70)   --->   "%or_ln51_92 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_59, i13 %lshr_ln51_105" [sha256.cpp:51]   --->   Operation 2026 'bitconcatenate' 'or_ln51_92' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2027 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_70)   --->   "%lshr_ln51_106 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_37, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 2027 'partselect' 'lshr_ln51_106' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2028 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_70)   --->   "%zext_ln51_46 = zext i22 %lshr_ln51_106" [sha256.cpp:51]   --->   Operation 2028 'zext' 'zext_ln51_46' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2029 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_70)   --->   "%xor_ln51_92 = xor i32 %zext_ln51_46, i32 %or_ln51_92" [sha256.cpp:51]   --->   Operation 2029 'xor' 'xor_ln51_92' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2030 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_70)   --->   "%xor_ln51_93 = xor i32 %xor_ln51_92, i32 %or_ln51_91" [sha256.cpp:51]   --->   Operation 2030 'xor' 'xor_ln51_93' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2031 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_70)   --->   "%lshr_ln51_107 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_24, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2031 'partselect' 'lshr_ln51_107' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2032 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_70)   --->   "%trunc_ln51_60 = trunc i32 %m_24" [sha256.cpp:51]   --->   Operation 2032 'trunc' 'trunc_ln51_60' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2033 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_70)   --->   "%or_ln51_93 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_60, i25 %lshr_ln51_107" [sha256.cpp:51]   --->   Operation 2033 'bitconcatenate' 'or_ln51_93' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2034 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_70)   --->   "%lshr_ln51_108 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_24, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2034 'partselect' 'lshr_ln51_108' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2035 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_70)   --->   "%trunc_ln51_61 = trunc i32 %m_24" [sha256.cpp:51]   --->   Operation 2035 'trunc' 'trunc_ln51_61' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2036 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_70)   --->   "%or_ln51_94 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_61, i14 %lshr_ln51_108" [sha256.cpp:51]   --->   Operation 2036 'bitconcatenate' 'or_ln51_94' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2037 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_70)   --->   "%lshr_ln51_109 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_24, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2037 'partselect' 'lshr_ln51_109' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2038 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_70)   --->   "%zext_ln51_47 = zext i29 %lshr_ln51_109" [sha256.cpp:51]   --->   Operation 2038 'zext' 'zext_ln51_47' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2039 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_70)   --->   "%xor_ln51_94 = xor i32 %zext_ln51_47, i32 %or_ln51_94" [sha256.cpp:51]   --->   Operation 2039 'xor' 'xor_ln51_94' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2040 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_70)   --->   "%xor_ln51_95 = xor i32 %xor_ln51_94, i32 %or_ln51_93" [sha256.cpp:51]   --->   Operation 2040 'xor' 'xor_ln51_95' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2041 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_70 = add i32 %xor_ln51_95, i32 %xor_ln51_93" [sha256.cpp:51]   --->   Operation 2041 'add' 'add_ln51_70' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2042 [1/1] (0.28ns)   --->   "%and_ln66_69 = and i32 %a_66, i32 %a_65" [sha256.cpp:66]   --->   Operation 2042 'and' 'and_ln66_69' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2043 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_139)   --->   "%and_ln66_70 = and i32 %a_66, i32 %a_64" [sha256.cpp:66]   --->   Operation 2043 'and' 'and_ln66_70' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2044 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_139)   --->   "%xor_ln66_138 = xor i32 %and_ln66_67, i32 %and_ln66_70" [sha256.cpp:66]   --->   Operation 2044 'xor' 'xor_ln66_138' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2045 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_139 = xor i32 %xor_ln66_138, i32 %and_ln66_69" [sha256.cpp:66]   --->   Operation 2045 'xor' 'xor_ln66_139' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2046 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_68 = add i32 %xor_ln66_139, i32 %t1_34" [sha256.cpp:74]   --->   Operation 2046 'add' 'add_ln74_68' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 2047 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_67 = add i32 %add_ln74_68, i32 %xor_ln66_137" [sha256.cpp:74]   --->   Operation 2047 'add' 'a_67' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 2048 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_141)   --->   "%lshr_ln66_104 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_67, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 2048 'partselect' 'lshr_ln66_104' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2049 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_141)   --->   "%trunc_ln66_105 = trunc i32 %a_67" [sha256.cpp:66]   --->   Operation 2049 'trunc' 'trunc_ln66_105' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2050 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_141)   --->   "%or_ln66_104 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_105, i30 %lshr_ln66_104" [sha256.cpp:66]   --->   Operation 2050 'bitconcatenate' 'or_ln66_104' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2051 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_141)   --->   "%lshr_ln66_105 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_67, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 2051 'partselect' 'lshr_ln66_105' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2052 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_141)   --->   "%trunc_ln66_106 = trunc i32 %a_67" [sha256.cpp:66]   --->   Operation 2052 'trunc' 'trunc_ln66_106' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2053 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_141)   --->   "%or_ln66_105 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_106, i19 %lshr_ln66_105" [sha256.cpp:66]   --->   Operation 2053 'bitconcatenate' 'or_ln66_105' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2054 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_141)   --->   "%lshr_ln66_106 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_67, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 2054 'partselect' 'lshr_ln66_106' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2055 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_141)   --->   "%trunc_ln66_107 = trunc i32 %a_67" [sha256.cpp:66]   --->   Operation 2055 'trunc' 'trunc_ln66_107' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2056 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_141)   --->   "%or_ln66_106 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_107, i10 %lshr_ln66_106" [sha256.cpp:66]   --->   Operation 2056 'bitconcatenate' 'or_ln66_106' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2057 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_141)   --->   "%xor_ln66_140 = xor i32 %or_ln66_104, i32 %or_ln66_105" [sha256.cpp:66]   --->   Operation 2057 'xor' 'xor_ln66_140' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2058 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_141 = xor i32 %xor_ln66_140, i32 %or_ln66_106" [sha256.cpp:66]   --->   Operation 2058 'xor' 'xor_ln66_141' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2059 [1/1] (0.28ns)   --->   "%and_ln66_71 = and i32 %a_67, i32 %a_66" [sha256.cpp:66]   --->   Operation 2059 'and' 'and_ln66_71' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2060 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_143)   --->   "%and_ln66_72 = and i32 %a_67, i32 %a_65" [sha256.cpp:66]   --->   Operation 2060 'and' 'and_ln66_72' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2061 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_143)   --->   "%xor_ln66_142 = xor i32 %and_ln66_69, i32 %and_ln66_72" [sha256.cpp:66]   --->   Operation 2061 'xor' 'xor_ln66_142' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2062 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_143 = xor i32 %xor_ln66_142, i32 %and_ln66_71" [sha256.cpp:66]   --->   Operation 2062 'xor' 'xor_ln66_143' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2063 [1/1] (1.14ns)   --->   "%e_68 = add i32 %t1_35, i32 %a_64" [sha256.cpp:70]   --->   Operation 2063 'add' 'e_68' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2064 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_70 = add i32 %xor_ln66_143, i32 %t1_35" [sha256.cpp:74]   --->   Operation 2064 'add' 'add_ln74_70' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 2065 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_68 = add i32 %add_ln74_70, i32 %xor_ln66_141" [sha256.cpp:74]   --->   Operation 2065 'add' 'a_68' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 2066 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_145)   --->   "%lshr_ln65_107 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_68, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 2066 'partselect' 'lshr_ln65_107' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2067 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_145)   --->   "%trunc_ln65_108 = trunc i32 %e_68" [sha256.cpp:65]   --->   Operation 2067 'trunc' 'trunc_ln65_108' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2068 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_145)   --->   "%or_ln65_107 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_108, i26 %lshr_ln65_107" [sha256.cpp:65]   --->   Operation 2068 'bitconcatenate' 'or_ln65_107' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2069 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_145)   --->   "%lshr_ln65_108 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_68, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 2069 'partselect' 'lshr_ln65_108' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2070 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_145)   --->   "%trunc_ln65_109 = trunc i32 %e_68" [sha256.cpp:65]   --->   Operation 2070 'trunc' 'trunc_ln65_109' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2071 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_145)   --->   "%or_ln65_108 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_109, i21 %lshr_ln65_108" [sha256.cpp:65]   --->   Operation 2071 'bitconcatenate' 'or_ln65_108' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2072 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_145)   --->   "%lshr_ln65_109 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_68, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 2072 'partselect' 'lshr_ln65_109' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2073 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_145)   --->   "%trunc_ln65_110 = trunc i32 %e_68" [sha256.cpp:65]   --->   Operation 2073 'trunc' 'trunc_ln65_110' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2074 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_145)   --->   "%or_ln65_109 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_110, i7 %lshr_ln65_109" [sha256.cpp:65]   --->   Operation 2074 'bitconcatenate' 'or_ln65_109' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2075 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_145)   --->   "%xor_ln65_144 = xor i32 %or_ln65_107, i32 %or_ln65_108" [sha256.cpp:65]   --->   Operation 2075 'xor' 'xor_ln65_144' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2076 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_145 = xor i32 %xor_ln65_144, i32 %or_ln65_109" [sha256.cpp:65]   --->   Operation 2076 'xor' 'xor_ln65_145' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2077 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_147)   --->   "%and_ln65_72 = and i32 %e_68, i32 %e_67" [sha256.cpp:65]   --->   Operation 2077 'and' 'and_ln65_72' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2078 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_147)   --->   "%xor_ln65_146 = xor i32 %e_68, i32 4294967295" [sha256.cpp:65]   --->   Operation 2078 'xor' 'xor_ln65_146' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2079 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_147)   --->   "%and_ln65_73 = and i32 %e_66, i32 %xor_ln65_146" [sha256.cpp:65]   --->   Operation 2079 'and' 'and_ln65_73' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2080 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_147 = xor i32 %and_ln65_72, i32 %and_ln65_73" [sha256.cpp:65]   --->   Operation 2080 'xor' 'xor_ln65_147' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2081 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_144 = add i32 %xor_ln65_147, i32 %e_65" [sha256.cpp:65]   --->   Operation 2081 'add' 'add_ln65_144' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 2082 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_145 = add i32 %xor_ln65_145, i32 1695183700" [sha256.cpp:65]   --->   Operation 2082 'add' 'add_ln65_145' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 2083 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_146 = add i32 %add_ln65_145, i32 %m_36" [sha256.cpp:65]   --->   Operation 2083 'add' 'add_ln65_146' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 2084 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_36 = add i32 %add_ln65_146, i32 %add_ln65_144" [sha256.cpp:65]   --->   Operation 2084 'add' 't1_36' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 2085 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_145)   --->   "%lshr_ln66_107 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_68, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 2085 'partselect' 'lshr_ln66_107' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2086 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_145)   --->   "%trunc_ln66_108 = trunc i32 %a_68" [sha256.cpp:66]   --->   Operation 2086 'trunc' 'trunc_ln66_108' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2087 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_145)   --->   "%or_ln66_107 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_108, i30 %lshr_ln66_107" [sha256.cpp:66]   --->   Operation 2087 'bitconcatenate' 'or_ln66_107' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2088 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_145)   --->   "%lshr_ln66_108 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_68, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 2088 'partselect' 'lshr_ln66_108' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2089 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_145)   --->   "%trunc_ln66_109 = trunc i32 %a_68" [sha256.cpp:66]   --->   Operation 2089 'trunc' 'trunc_ln66_109' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2090 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_145)   --->   "%or_ln66_108 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_109, i19 %lshr_ln66_108" [sha256.cpp:66]   --->   Operation 2090 'bitconcatenate' 'or_ln66_108' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2091 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_145)   --->   "%lshr_ln66_109 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_68, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 2091 'partselect' 'lshr_ln66_109' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2092 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_145)   --->   "%trunc_ln66_110 = trunc i32 %a_68" [sha256.cpp:66]   --->   Operation 2092 'trunc' 'trunc_ln66_110' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2093 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_145)   --->   "%or_ln66_109 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_110, i10 %lshr_ln66_109" [sha256.cpp:66]   --->   Operation 2093 'bitconcatenate' 'or_ln66_109' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2094 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_145)   --->   "%xor_ln66_144 = xor i32 %or_ln66_107, i32 %or_ln66_108" [sha256.cpp:66]   --->   Operation 2094 'xor' 'xor_ln66_144' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2095 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_145 = xor i32 %xor_ln66_144, i32 %or_ln66_109" [sha256.cpp:66]   --->   Operation 2095 'xor' 'xor_ln66_145' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2096 [1/1] (1.14ns)   --->   "%e_69 = add i32 %t1_36, i32 %a_65" [sha256.cpp:70]   --->   Operation 2096 'add' 'e_69' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2097 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_149)   --->   "%lshr_ln65_110 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_69, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 2097 'partselect' 'lshr_ln65_110' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2098 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_149)   --->   "%trunc_ln65_111 = trunc i32 %e_69" [sha256.cpp:65]   --->   Operation 2098 'trunc' 'trunc_ln65_111' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2099 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_149)   --->   "%or_ln65_110 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_111, i26 %lshr_ln65_110" [sha256.cpp:65]   --->   Operation 2099 'bitconcatenate' 'or_ln65_110' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2100 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_149)   --->   "%lshr_ln65_111 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_69, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 2100 'partselect' 'lshr_ln65_111' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2101 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_149)   --->   "%trunc_ln65_112 = trunc i32 %e_69" [sha256.cpp:65]   --->   Operation 2101 'trunc' 'trunc_ln65_112' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2102 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_149)   --->   "%or_ln65_111 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_112, i21 %lshr_ln65_111" [sha256.cpp:65]   --->   Operation 2102 'bitconcatenate' 'or_ln65_111' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2103 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_149)   --->   "%lshr_ln65_112 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_69, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 2103 'partselect' 'lshr_ln65_112' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2104 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_149)   --->   "%trunc_ln65_113 = trunc i32 %e_69" [sha256.cpp:65]   --->   Operation 2104 'trunc' 'trunc_ln65_113' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2105 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_149)   --->   "%or_ln65_112 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_113, i7 %lshr_ln65_112" [sha256.cpp:65]   --->   Operation 2105 'bitconcatenate' 'or_ln65_112' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 2106 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_149)   --->   "%xor_ln65_148 = xor i32 %or_ln65_110, i32 %or_ln65_111" [sha256.cpp:65]   --->   Operation 2106 'xor' 'xor_ln65_148' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2107 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_149 = xor i32 %xor_ln65_148, i32 %or_ln65_112" [sha256.cpp:65]   --->   Operation 2107 'xor' 'xor_ln65_149' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2108 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_151)   --->   "%and_ln65_74 = and i32 %e_69, i32 %e_68" [sha256.cpp:65]   --->   Operation 2108 'and' 'and_ln65_74' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2109 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_151)   --->   "%xor_ln65_150 = xor i32 %e_69, i32 4294967295" [sha256.cpp:65]   --->   Operation 2109 'xor' 'xor_ln65_150' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2110 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_151)   --->   "%and_ln65_75 = and i32 %e_67, i32 %xor_ln65_150" [sha256.cpp:65]   --->   Operation 2110 'and' 'and_ln65_75' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2111 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_151 = xor i32 %and_ln65_74, i32 %and_ln65_75" [sha256.cpp:65]   --->   Operation 2111 'xor' 'xor_ln65_151' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 2112 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_148 = add i32 %xor_ln65_151, i32 %e_66" [sha256.cpp:65]   --->   Operation 2112 'add' 'add_ln65_148' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 2113 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_149 = add i32 %xor_ln65_149, i32 1986661051" [sha256.cpp:65]   --->   Operation 2113 'add' 'add_ln65_149' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 2114 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_150 = add i32 %add_ln65_149, i32 %m_37" [sha256.cpp:65]   --->   Operation 2114 'add' 'add_ln65_150' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_28 : Operation 2115 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_37 = add i32 %add_ln65_150, i32 %add_ln65_148" [sha256.cpp:65]   --->   Operation 2115 'add' 't1_37' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 29 <SV = 28> <Delay = 6.49>
ST_29 : Operation 2116 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_66 = add i32 %m_22, i32 %m_31" [sha256.cpp:51]   --->   Operation 2116 'add' 'add_ln51_66' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 2117 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_38 = add i32 %add_ln51_67, i32 %add_ln51_66" [sha256.cpp:51]   --->   Operation 2117 'add' 'm_38' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 2118 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_69 = add i32 %m_23, i32 %m_32" [sha256.cpp:51]   --->   Operation 2118 'add' 'add_ln51_69' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 2119 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_39 = add i32 %add_ln51_70, i32 %add_ln51_69" [sha256.cpp:51]   --->   Operation 2119 'add' 'm_39' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 2120 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_73)   --->   "%lshr_ln51_110 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_38, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 2120 'partselect' 'lshr_ln51_110' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2121 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_73)   --->   "%trunc_ln51_62 = trunc i32 %m_38" [sha256.cpp:51]   --->   Operation 2121 'trunc' 'trunc_ln51_62' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2122 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_73)   --->   "%or_ln51_95 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_62, i15 %lshr_ln51_110" [sha256.cpp:51]   --->   Operation 2122 'bitconcatenate' 'or_ln51_95' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2123 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_73)   --->   "%lshr_ln51_111 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_38, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 2123 'partselect' 'lshr_ln51_111' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2124 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_73)   --->   "%trunc_ln51_63 = trunc i32 %m_38" [sha256.cpp:51]   --->   Operation 2124 'trunc' 'trunc_ln51_63' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2125 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_73)   --->   "%or_ln51_96 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_63, i13 %lshr_ln51_111" [sha256.cpp:51]   --->   Operation 2125 'bitconcatenate' 'or_ln51_96' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2126 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_73)   --->   "%lshr_ln51_112 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_38, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 2126 'partselect' 'lshr_ln51_112' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2127 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_73)   --->   "%zext_ln51_48 = zext i22 %lshr_ln51_112" [sha256.cpp:51]   --->   Operation 2127 'zext' 'zext_ln51_48' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2128 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_73)   --->   "%xor_ln51_96 = xor i32 %zext_ln51_48, i32 %or_ln51_96" [sha256.cpp:51]   --->   Operation 2128 'xor' 'xor_ln51_96' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2129 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_73)   --->   "%xor_ln51_97 = xor i32 %xor_ln51_96, i32 %or_ln51_95" [sha256.cpp:51]   --->   Operation 2129 'xor' 'xor_ln51_97' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2130 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_73)   --->   "%lshr_ln51_113 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_25, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2130 'partselect' 'lshr_ln51_113' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2131 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_73)   --->   "%trunc_ln51_64 = trunc i32 %m_25" [sha256.cpp:51]   --->   Operation 2131 'trunc' 'trunc_ln51_64' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2132 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_73)   --->   "%or_ln51_97 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_64, i25 %lshr_ln51_113" [sha256.cpp:51]   --->   Operation 2132 'bitconcatenate' 'or_ln51_97' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2133 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_73)   --->   "%lshr_ln51_114 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_25, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2133 'partselect' 'lshr_ln51_114' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2134 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_73)   --->   "%trunc_ln51_65 = trunc i32 %m_25" [sha256.cpp:51]   --->   Operation 2134 'trunc' 'trunc_ln51_65' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2135 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_73)   --->   "%or_ln51_98 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_65, i14 %lshr_ln51_114" [sha256.cpp:51]   --->   Operation 2135 'bitconcatenate' 'or_ln51_98' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2136 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_73)   --->   "%lshr_ln51_115 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_25, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2136 'partselect' 'lshr_ln51_115' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2137 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_73)   --->   "%zext_ln51_49 = zext i29 %lshr_ln51_115" [sha256.cpp:51]   --->   Operation 2137 'zext' 'zext_ln51_49' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2138 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_73)   --->   "%xor_ln51_98 = xor i32 %zext_ln51_49, i32 %or_ln51_98" [sha256.cpp:51]   --->   Operation 2138 'xor' 'xor_ln51_98' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2139 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_73)   --->   "%xor_ln51_99 = xor i32 %xor_ln51_98, i32 %or_ln51_97" [sha256.cpp:51]   --->   Operation 2139 'xor' 'xor_ln51_99' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2140 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_73 = add i32 %xor_ln51_99, i32 %xor_ln51_97" [sha256.cpp:51]   --->   Operation 2140 'add' 'add_ln51_73' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2141 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_76)   --->   "%lshr_ln51_116 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_39, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 2141 'partselect' 'lshr_ln51_116' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2142 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_76)   --->   "%trunc_ln51_66 = trunc i32 %m_39" [sha256.cpp:51]   --->   Operation 2142 'trunc' 'trunc_ln51_66' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2143 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_76)   --->   "%or_ln51_99 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_66, i15 %lshr_ln51_116" [sha256.cpp:51]   --->   Operation 2143 'bitconcatenate' 'or_ln51_99' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2144 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_76)   --->   "%lshr_ln51_117 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_39, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 2144 'partselect' 'lshr_ln51_117' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2145 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_76)   --->   "%trunc_ln51_67 = trunc i32 %m_39" [sha256.cpp:51]   --->   Operation 2145 'trunc' 'trunc_ln51_67' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2146 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_76)   --->   "%or_ln51_100 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_67, i13 %lshr_ln51_117" [sha256.cpp:51]   --->   Operation 2146 'bitconcatenate' 'or_ln51_100' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2147 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_76)   --->   "%lshr_ln51_118 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_39, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 2147 'partselect' 'lshr_ln51_118' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2148 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_76)   --->   "%zext_ln51_50 = zext i22 %lshr_ln51_118" [sha256.cpp:51]   --->   Operation 2148 'zext' 'zext_ln51_50' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2149 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_76)   --->   "%xor_ln51_100 = xor i32 %zext_ln51_50, i32 %or_ln51_100" [sha256.cpp:51]   --->   Operation 2149 'xor' 'xor_ln51_100' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2150 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_76)   --->   "%xor_ln51_101 = xor i32 %xor_ln51_100, i32 %or_ln51_99" [sha256.cpp:51]   --->   Operation 2150 'xor' 'xor_ln51_101' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2151 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_76)   --->   "%lshr_ln51_119 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_26, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2151 'partselect' 'lshr_ln51_119' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2152 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_76)   --->   "%trunc_ln51_68 = trunc i32 %m_26" [sha256.cpp:51]   --->   Operation 2152 'trunc' 'trunc_ln51_68' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2153 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_76)   --->   "%or_ln51_101 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_68, i25 %lshr_ln51_119" [sha256.cpp:51]   --->   Operation 2153 'bitconcatenate' 'or_ln51_101' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2154 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_76)   --->   "%lshr_ln51_120 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_26, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2154 'partselect' 'lshr_ln51_120' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2155 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_76)   --->   "%trunc_ln51_69 = trunc i32 %m_26" [sha256.cpp:51]   --->   Operation 2155 'trunc' 'trunc_ln51_69' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2156 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_76)   --->   "%or_ln51_102 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_69, i14 %lshr_ln51_120" [sha256.cpp:51]   --->   Operation 2156 'bitconcatenate' 'or_ln51_102' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2157 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_76)   --->   "%lshr_ln51_121 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_26, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2157 'partselect' 'lshr_ln51_121' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2158 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_76)   --->   "%zext_ln51_51 = zext i29 %lshr_ln51_121" [sha256.cpp:51]   --->   Operation 2158 'zext' 'zext_ln51_51' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2159 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_76)   --->   "%xor_ln51_102 = xor i32 %zext_ln51_51, i32 %or_ln51_102" [sha256.cpp:51]   --->   Operation 2159 'xor' 'xor_ln51_102' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2160 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_76)   --->   "%xor_ln51_103 = xor i32 %xor_ln51_102, i32 %or_ln51_101" [sha256.cpp:51]   --->   Operation 2160 'xor' 'xor_ln51_103' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2161 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_76 = add i32 %xor_ln51_103, i32 %xor_ln51_101" [sha256.cpp:51]   --->   Operation 2161 'add' 'add_ln51_76' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2162 [1/1] (0.28ns)   --->   "%and_ln66_73 = and i32 %a_68, i32 %a_67" [sha256.cpp:66]   --->   Operation 2162 'and' 'and_ln66_73' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2163 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_147)   --->   "%and_ln66_74 = and i32 %a_68, i32 %a_66" [sha256.cpp:66]   --->   Operation 2163 'and' 'and_ln66_74' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2164 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_147)   --->   "%xor_ln66_146 = xor i32 %and_ln66_71, i32 %and_ln66_74" [sha256.cpp:66]   --->   Operation 2164 'xor' 'xor_ln66_146' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2165 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_147 = xor i32 %xor_ln66_146, i32 %and_ln66_73" [sha256.cpp:66]   --->   Operation 2165 'xor' 'xor_ln66_147' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2166 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_72 = add i32 %xor_ln66_147, i32 %t1_36" [sha256.cpp:74]   --->   Operation 2166 'add' 'add_ln74_72' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 2167 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_69 = add i32 %add_ln74_72, i32 %xor_ln66_145" [sha256.cpp:74]   --->   Operation 2167 'add' 'a_69' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 2168 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_149)   --->   "%lshr_ln66_110 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_69, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 2168 'partselect' 'lshr_ln66_110' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2169 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_149)   --->   "%trunc_ln66_111 = trunc i32 %a_69" [sha256.cpp:66]   --->   Operation 2169 'trunc' 'trunc_ln66_111' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2170 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_149)   --->   "%or_ln66_110 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_111, i30 %lshr_ln66_110" [sha256.cpp:66]   --->   Operation 2170 'bitconcatenate' 'or_ln66_110' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2171 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_149)   --->   "%lshr_ln66_111 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_69, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 2171 'partselect' 'lshr_ln66_111' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2172 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_149)   --->   "%trunc_ln66_112 = trunc i32 %a_69" [sha256.cpp:66]   --->   Operation 2172 'trunc' 'trunc_ln66_112' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2173 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_149)   --->   "%or_ln66_111 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_112, i19 %lshr_ln66_111" [sha256.cpp:66]   --->   Operation 2173 'bitconcatenate' 'or_ln66_111' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2174 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_149)   --->   "%lshr_ln66_112 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_69, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 2174 'partselect' 'lshr_ln66_112' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2175 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_149)   --->   "%trunc_ln66_113 = trunc i32 %a_69" [sha256.cpp:66]   --->   Operation 2175 'trunc' 'trunc_ln66_113' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2176 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_149)   --->   "%or_ln66_112 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_113, i10 %lshr_ln66_112" [sha256.cpp:66]   --->   Operation 2176 'bitconcatenate' 'or_ln66_112' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2177 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_149)   --->   "%xor_ln66_148 = xor i32 %or_ln66_110, i32 %or_ln66_111" [sha256.cpp:66]   --->   Operation 2177 'xor' 'xor_ln66_148' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2178 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_149 = xor i32 %xor_ln66_148, i32 %or_ln66_112" [sha256.cpp:66]   --->   Operation 2178 'xor' 'xor_ln66_149' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2179 [1/1] (0.28ns)   --->   "%and_ln66_75 = and i32 %a_69, i32 %a_68" [sha256.cpp:66]   --->   Operation 2179 'and' 'and_ln66_75' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2180 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_151)   --->   "%and_ln66_76 = and i32 %a_69, i32 %a_67" [sha256.cpp:66]   --->   Operation 2180 'and' 'and_ln66_76' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2181 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_151)   --->   "%xor_ln66_150 = xor i32 %and_ln66_73, i32 %and_ln66_76" [sha256.cpp:66]   --->   Operation 2181 'xor' 'xor_ln66_150' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2182 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_151 = xor i32 %xor_ln66_150, i32 %and_ln66_75" [sha256.cpp:66]   --->   Operation 2182 'xor' 'xor_ln66_151' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2183 [1/1] (1.14ns)   --->   "%e_70 = add i32 %t1_37, i32 %a_66" [sha256.cpp:70]   --->   Operation 2183 'add' 'e_70' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2184 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_74 = add i32 %xor_ln66_151, i32 %t1_37" [sha256.cpp:74]   --->   Operation 2184 'add' 'add_ln74_74' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 2185 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_70 = add i32 %add_ln74_74, i32 %xor_ln66_149" [sha256.cpp:74]   --->   Operation 2185 'add' 'a_70' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 2186 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_153)   --->   "%lshr_ln65_113 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_70, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 2186 'partselect' 'lshr_ln65_113' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2187 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_153)   --->   "%trunc_ln65_114 = trunc i32 %e_70" [sha256.cpp:65]   --->   Operation 2187 'trunc' 'trunc_ln65_114' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2188 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_153)   --->   "%or_ln65_113 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_114, i26 %lshr_ln65_113" [sha256.cpp:65]   --->   Operation 2188 'bitconcatenate' 'or_ln65_113' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2189 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_153)   --->   "%lshr_ln65_114 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_70, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 2189 'partselect' 'lshr_ln65_114' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2190 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_153)   --->   "%trunc_ln65_115 = trunc i32 %e_70" [sha256.cpp:65]   --->   Operation 2190 'trunc' 'trunc_ln65_115' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2191 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_153)   --->   "%or_ln65_114 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_115, i21 %lshr_ln65_114" [sha256.cpp:65]   --->   Operation 2191 'bitconcatenate' 'or_ln65_114' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2192 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_153)   --->   "%lshr_ln65_115 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_70, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 2192 'partselect' 'lshr_ln65_115' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2193 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_153)   --->   "%trunc_ln65_116 = trunc i32 %e_70" [sha256.cpp:65]   --->   Operation 2193 'trunc' 'trunc_ln65_116' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2194 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_153)   --->   "%or_ln65_115 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_116, i7 %lshr_ln65_115" [sha256.cpp:65]   --->   Operation 2194 'bitconcatenate' 'or_ln65_115' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2195 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_153)   --->   "%xor_ln65_152 = xor i32 %or_ln65_113, i32 %or_ln65_114" [sha256.cpp:65]   --->   Operation 2195 'xor' 'xor_ln65_152' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2196 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_153 = xor i32 %xor_ln65_152, i32 %or_ln65_115" [sha256.cpp:65]   --->   Operation 2196 'xor' 'xor_ln65_153' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2197 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_155)   --->   "%and_ln65_76 = and i32 %e_70, i32 %e_69" [sha256.cpp:65]   --->   Operation 2197 'and' 'and_ln65_76' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2198 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_155)   --->   "%xor_ln65_154 = xor i32 %e_70, i32 4294967295" [sha256.cpp:65]   --->   Operation 2198 'xor' 'xor_ln65_154' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2199 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_155)   --->   "%and_ln65_77 = and i32 %e_68, i32 %xor_ln65_154" [sha256.cpp:65]   --->   Operation 2199 'and' 'and_ln65_77' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2200 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_155 = xor i32 %and_ln65_76, i32 %and_ln65_77" [sha256.cpp:65]   --->   Operation 2200 'xor' 'xor_ln65_155' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2201 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_152 = add i32 %e_67, i32 %xor_ln65_155" [sha256.cpp:65]   --->   Operation 2201 'add' 'add_ln65_152' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 2202 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_153 = add i32 %m_38, i32 %xor_ln65_153" [sha256.cpp:65]   --->   Operation 2202 'add' 'add_ln65_153' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 2203 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_154 = add i32 %add_ln65_153, i32 2177026350" [sha256.cpp:65]   --->   Operation 2203 'add' 'add_ln65_154' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 2204 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_38 = add i32 %add_ln65_154, i32 %add_ln65_152" [sha256.cpp:65]   --->   Operation 2204 'add' 't1_38' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 2205 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_153)   --->   "%lshr_ln66_113 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_70, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 2205 'partselect' 'lshr_ln66_113' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2206 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_153)   --->   "%trunc_ln66_114 = trunc i32 %a_70" [sha256.cpp:66]   --->   Operation 2206 'trunc' 'trunc_ln66_114' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2207 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_153)   --->   "%or_ln66_113 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_114, i30 %lshr_ln66_113" [sha256.cpp:66]   --->   Operation 2207 'bitconcatenate' 'or_ln66_113' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2208 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_153)   --->   "%lshr_ln66_114 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_70, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 2208 'partselect' 'lshr_ln66_114' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2209 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_153)   --->   "%trunc_ln66_115 = trunc i32 %a_70" [sha256.cpp:66]   --->   Operation 2209 'trunc' 'trunc_ln66_115' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2210 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_153)   --->   "%or_ln66_114 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_115, i19 %lshr_ln66_114" [sha256.cpp:66]   --->   Operation 2210 'bitconcatenate' 'or_ln66_114' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2211 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_153)   --->   "%lshr_ln66_115 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_70, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 2211 'partselect' 'lshr_ln66_115' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2212 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_153)   --->   "%trunc_ln66_116 = trunc i32 %a_70" [sha256.cpp:66]   --->   Operation 2212 'trunc' 'trunc_ln66_116' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2213 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_153)   --->   "%or_ln66_115 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_116, i10 %lshr_ln66_115" [sha256.cpp:66]   --->   Operation 2213 'bitconcatenate' 'or_ln66_115' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2214 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_153)   --->   "%xor_ln66_152 = xor i32 %or_ln66_113, i32 %or_ln66_114" [sha256.cpp:66]   --->   Operation 2214 'xor' 'xor_ln66_152' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2215 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_153 = xor i32 %xor_ln66_152, i32 %or_ln66_115" [sha256.cpp:66]   --->   Operation 2215 'xor' 'xor_ln66_153' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2216 [1/1] (1.14ns)   --->   "%e_71 = add i32 %t1_38, i32 %a_67" [sha256.cpp:70]   --->   Operation 2216 'add' 'e_71' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2217 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_157)   --->   "%lshr_ln65_116 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_71, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 2217 'partselect' 'lshr_ln65_116' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2218 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_157)   --->   "%trunc_ln65_117 = trunc i32 %e_71" [sha256.cpp:65]   --->   Operation 2218 'trunc' 'trunc_ln65_117' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2219 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_157)   --->   "%or_ln65_116 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_117, i26 %lshr_ln65_116" [sha256.cpp:65]   --->   Operation 2219 'bitconcatenate' 'or_ln65_116' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2220 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_157)   --->   "%lshr_ln65_117 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_71, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 2220 'partselect' 'lshr_ln65_117' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2221 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_157)   --->   "%trunc_ln65_118 = trunc i32 %e_71" [sha256.cpp:65]   --->   Operation 2221 'trunc' 'trunc_ln65_118' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2222 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_157)   --->   "%or_ln65_117 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_118, i21 %lshr_ln65_117" [sha256.cpp:65]   --->   Operation 2222 'bitconcatenate' 'or_ln65_117' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2223 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_157)   --->   "%lshr_ln65_118 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_71, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 2223 'partselect' 'lshr_ln65_118' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2224 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_157)   --->   "%trunc_ln65_119 = trunc i32 %e_71" [sha256.cpp:65]   --->   Operation 2224 'trunc' 'trunc_ln65_119' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2225 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_157)   --->   "%or_ln65_118 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_119, i7 %lshr_ln65_118" [sha256.cpp:65]   --->   Operation 2225 'bitconcatenate' 'or_ln65_118' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 2226 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_157)   --->   "%xor_ln65_156 = xor i32 %or_ln65_116, i32 %or_ln65_117" [sha256.cpp:65]   --->   Operation 2226 'xor' 'xor_ln65_156' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2227 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_157 = xor i32 %xor_ln65_156, i32 %or_ln65_118" [sha256.cpp:65]   --->   Operation 2227 'xor' 'xor_ln65_157' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2228 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_159)   --->   "%and_ln65_78 = and i32 %e_71, i32 %e_70" [sha256.cpp:65]   --->   Operation 2228 'and' 'and_ln65_78' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2229 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_159)   --->   "%xor_ln65_158 = xor i32 %e_71, i32 4294967295" [sha256.cpp:65]   --->   Operation 2229 'xor' 'xor_ln65_158' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2230 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_159)   --->   "%and_ln65_79 = and i32 %e_69, i32 %xor_ln65_158" [sha256.cpp:65]   --->   Operation 2230 'and' 'and_ln65_79' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2231 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_159 = xor i32 %and_ln65_78, i32 %and_ln65_79" [sha256.cpp:65]   --->   Operation 2231 'xor' 'xor_ln65_159' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 2232 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_156 = add i32 %e_68, i32 %xor_ln65_159" [sha256.cpp:65]   --->   Operation 2232 'add' 'add_ln65_156' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 2233 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_157 = add i32 %m_39, i32 %xor_ln65_157" [sha256.cpp:65]   --->   Operation 2233 'add' 'add_ln65_157' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 2234 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_158 = add i32 %add_ln65_157, i32 2456956037" [sha256.cpp:65]   --->   Operation 2234 'add' 'add_ln65_158' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_29 : Operation 2235 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_39 = add i32 %add_ln65_158, i32 %add_ln65_156" [sha256.cpp:65]   --->   Operation 2235 'add' 't1_39' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 30 <SV = 29> <Delay = 6.49>
ST_30 : Operation 2236 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_72 = add i32 %m_24, i32 %m_33" [sha256.cpp:51]   --->   Operation 2236 'add' 'add_ln51_72' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 2237 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_40 = add i32 %add_ln51_73, i32 %add_ln51_72" [sha256.cpp:51]   --->   Operation 2237 'add' 'm_40' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 2238 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_75 = add i32 %m_25, i32 %m_34" [sha256.cpp:51]   --->   Operation 2238 'add' 'add_ln51_75' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 2239 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_41 = add i32 %add_ln51_76, i32 %add_ln51_75" [sha256.cpp:51]   --->   Operation 2239 'add' 'm_41' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 2240 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_79)   --->   "%lshr_ln51_122 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_40, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 2240 'partselect' 'lshr_ln51_122' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2241 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_79)   --->   "%trunc_ln51_70 = trunc i32 %m_40" [sha256.cpp:51]   --->   Operation 2241 'trunc' 'trunc_ln51_70' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2242 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_79)   --->   "%or_ln51_103 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_70, i15 %lshr_ln51_122" [sha256.cpp:51]   --->   Operation 2242 'bitconcatenate' 'or_ln51_103' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2243 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_79)   --->   "%lshr_ln51_123 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_40, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 2243 'partselect' 'lshr_ln51_123' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2244 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_79)   --->   "%trunc_ln51_71 = trunc i32 %m_40" [sha256.cpp:51]   --->   Operation 2244 'trunc' 'trunc_ln51_71' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2245 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_79)   --->   "%or_ln51_104 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_71, i13 %lshr_ln51_123" [sha256.cpp:51]   --->   Operation 2245 'bitconcatenate' 'or_ln51_104' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2246 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_79)   --->   "%lshr_ln51_124 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_40, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 2246 'partselect' 'lshr_ln51_124' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2247 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_79)   --->   "%zext_ln51_52 = zext i22 %lshr_ln51_124" [sha256.cpp:51]   --->   Operation 2247 'zext' 'zext_ln51_52' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2248 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_79)   --->   "%xor_ln51_104 = xor i32 %zext_ln51_52, i32 %or_ln51_104" [sha256.cpp:51]   --->   Operation 2248 'xor' 'xor_ln51_104' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2249 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_79)   --->   "%xor_ln51_105 = xor i32 %xor_ln51_104, i32 %or_ln51_103" [sha256.cpp:51]   --->   Operation 2249 'xor' 'xor_ln51_105' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2250 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_79)   --->   "%lshr_ln51_125 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_27, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2250 'partselect' 'lshr_ln51_125' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2251 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_79)   --->   "%trunc_ln51_72 = trunc i32 %m_27" [sha256.cpp:51]   --->   Operation 2251 'trunc' 'trunc_ln51_72' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2252 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_79)   --->   "%or_ln51_105 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_72, i25 %lshr_ln51_125" [sha256.cpp:51]   --->   Operation 2252 'bitconcatenate' 'or_ln51_105' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2253 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_79)   --->   "%lshr_ln51_126 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_27, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2253 'partselect' 'lshr_ln51_126' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2254 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_79)   --->   "%trunc_ln51_73 = trunc i32 %m_27" [sha256.cpp:51]   --->   Operation 2254 'trunc' 'trunc_ln51_73' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2255 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_79)   --->   "%or_ln51_106 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_73, i14 %lshr_ln51_126" [sha256.cpp:51]   --->   Operation 2255 'bitconcatenate' 'or_ln51_106' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2256 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_79)   --->   "%lshr_ln51_127 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_27, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2256 'partselect' 'lshr_ln51_127' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2257 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_79)   --->   "%zext_ln51_53 = zext i29 %lshr_ln51_127" [sha256.cpp:51]   --->   Operation 2257 'zext' 'zext_ln51_53' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2258 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_79)   --->   "%xor_ln51_106 = xor i32 %zext_ln51_53, i32 %or_ln51_106" [sha256.cpp:51]   --->   Operation 2258 'xor' 'xor_ln51_106' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2259 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_79)   --->   "%xor_ln51_107 = xor i32 %xor_ln51_106, i32 %or_ln51_105" [sha256.cpp:51]   --->   Operation 2259 'xor' 'xor_ln51_107' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2260 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_78 = add i32 %m_26, i32 %m_35" [sha256.cpp:51]   --->   Operation 2260 'add' 'add_ln51_78' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 2261 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_79 = add i32 %xor_ln51_107, i32 %xor_ln51_105" [sha256.cpp:51]   --->   Operation 2261 'add' 'add_ln51_79' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2262 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_42 = add i32 %add_ln51_79, i32 %add_ln51_78" [sha256.cpp:51]   --->   Operation 2262 'add' 'm_42' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 2263 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_82)   --->   "%lshr_ln51_128 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_41, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 2263 'partselect' 'lshr_ln51_128' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2264 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_82)   --->   "%trunc_ln51_74 = trunc i32 %m_41" [sha256.cpp:51]   --->   Operation 2264 'trunc' 'trunc_ln51_74' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2265 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_82)   --->   "%or_ln51_107 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_74, i15 %lshr_ln51_128" [sha256.cpp:51]   --->   Operation 2265 'bitconcatenate' 'or_ln51_107' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2266 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_82)   --->   "%lshr_ln51_129 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_41, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 2266 'partselect' 'lshr_ln51_129' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2267 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_82)   --->   "%trunc_ln51_75 = trunc i32 %m_41" [sha256.cpp:51]   --->   Operation 2267 'trunc' 'trunc_ln51_75' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2268 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_82)   --->   "%or_ln51_108 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_75, i13 %lshr_ln51_129" [sha256.cpp:51]   --->   Operation 2268 'bitconcatenate' 'or_ln51_108' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2269 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_82)   --->   "%lshr_ln51_130 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_41, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 2269 'partselect' 'lshr_ln51_130' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2270 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_82)   --->   "%zext_ln51_54 = zext i22 %lshr_ln51_130" [sha256.cpp:51]   --->   Operation 2270 'zext' 'zext_ln51_54' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2271 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_82)   --->   "%xor_ln51_108 = xor i32 %zext_ln51_54, i32 %or_ln51_108" [sha256.cpp:51]   --->   Operation 2271 'xor' 'xor_ln51_108' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2272 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_82)   --->   "%xor_ln51_109 = xor i32 %xor_ln51_108, i32 %or_ln51_107" [sha256.cpp:51]   --->   Operation 2272 'xor' 'xor_ln51_109' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2273 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_82)   --->   "%lshr_ln51_131 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_28, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2273 'partselect' 'lshr_ln51_131' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2274 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_82)   --->   "%trunc_ln51_76 = trunc i32 %m_28" [sha256.cpp:51]   --->   Operation 2274 'trunc' 'trunc_ln51_76' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2275 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_82)   --->   "%or_ln51_109 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_76, i25 %lshr_ln51_131" [sha256.cpp:51]   --->   Operation 2275 'bitconcatenate' 'or_ln51_109' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2276 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_82)   --->   "%lshr_ln51_132 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_28, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2276 'partselect' 'lshr_ln51_132' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2277 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_82)   --->   "%trunc_ln51_77 = trunc i32 %m_28" [sha256.cpp:51]   --->   Operation 2277 'trunc' 'trunc_ln51_77' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2278 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_82)   --->   "%or_ln51_110 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_77, i14 %lshr_ln51_132" [sha256.cpp:51]   --->   Operation 2278 'bitconcatenate' 'or_ln51_110' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2279 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_82)   --->   "%lshr_ln51_133 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_28, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2279 'partselect' 'lshr_ln51_133' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2280 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_82)   --->   "%zext_ln51_55 = zext i29 %lshr_ln51_133" [sha256.cpp:51]   --->   Operation 2280 'zext' 'zext_ln51_55' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2281 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_82)   --->   "%xor_ln51_110 = xor i32 %zext_ln51_55, i32 %or_ln51_110" [sha256.cpp:51]   --->   Operation 2281 'xor' 'xor_ln51_110' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2282 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_82)   --->   "%xor_ln51_111 = xor i32 %xor_ln51_110, i32 %or_ln51_109" [sha256.cpp:51]   --->   Operation 2282 'xor' 'xor_ln51_111' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2283 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_82 = add i32 %xor_ln51_111, i32 %xor_ln51_109" [sha256.cpp:51]   --->   Operation 2283 'add' 'add_ln51_82' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2284 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_85)   --->   "%lshr_ln51_134 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_42, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 2284 'partselect' 'lshr_ln51_134' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2285 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_85)   --->   "%trunc_ln51_78 = trunc i32 %m_42" [sha256.cpp:51]   --->   Operation 2285 'trunc' 'trunc_ln51_78' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2286 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_85)   --->   "%or_ln51_111 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_78, i15 %lshr_ln51_134" [sha256.cpp:51]   --->   Operation 2286 'bitconcatenate' 'or_ln51_111' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2287 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_85)   --->   "%lshr_ln51_135 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_42, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 2287 'partselect' 'lshr_ln51_135' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2288 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_85)   --->   "%trunc_ln51_79 = trunc i32 %m_42" [sha256.cpp:51]   --->   Operation 2288 'trunc' 'trunc_ln51_79' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2289 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_85)   --->   "%or_ln51_112 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_79, i13 %lshr_ln51_135" [sha256.cpp:51]   --->   Operation 2289 'bitconcatenate' 'or_ln51_112' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2290 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_85)   --->   "%lshr_ln51_136 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_42, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 2290 'partselect' 'lshr_ln51_136' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2291 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_85)   --->   "%zext_ln51_56 = zext i22 %lshr_ln51_136" [sha256.cpp:51]   --->   Operation 2291 'zext' 'zext_ln51_56' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2292 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_85)   --->   "%xor_ln51_112 = xor i32 %zext_ln51_56, i32 %or_ln51_112" [sha256.cpp:51]   --->   Operation 2292 'xor' 'xor_ln51_112' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2293 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_85)   --->   "%xor_ln51_113 = xor i32 %xor_ln51_112, i32 %or_ln51_111" [sha256.cpp:51]   --->   Operation 2293 'xor' 'xor_ln51_113' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2294 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_85)   --->   "%lshr_ln51_137 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_29, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2294 'partselect' 'lshr_ln51_137' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2295 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_85)   --->   "%trunc_ln51_80 = trunc i32 %m_29" [sha256.cpp:51]   --->   Operation 2295 'trunc' 'trunc_ln51_80' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2296 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_85)   --->   "%or_ln51_113 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_80, i25 %lshr_ln51_137" [sha256.cpp:51]   --->   Operation 2296 'bitconcatenate' 'or_ln51_113' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2297 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_85)   --->   "%lshr_ln51_138 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_29, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2297 'partselect' 'lshr_ln51_138' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2298 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_85)   --->   "%trunc_ln51_81 = trunc i32 %m_29" [sha256.cpp:51]   --->   Operation 2298 'trunc' 'trunc_ln51_81' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2299 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_85)   --->   "%or_ln51_114 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_81, i14 %lshr_ln51_138" [sha256.cpp:51]   --->   Operation 2299 'bitconcatenate' 'or_ln51_114' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2300 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_85)   --->   "%lshr_ln51_139 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_29, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2300 'partselect' 'lshr_ln51_139' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2301 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_85)   --->   "%zext_ln51_57 = zext i29 %lshr_ln51_139" [sha256.cpp:51]   --->   Operation 2301 'zext' 'zext_ln51_57' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2302 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_85)   --->   "%xor_ln51_114 = xor i32 %zext_ln51_57, i32 %or_ln51_114" [sha256.cpp:51]   --->   Operation 2302 'xor' 'xor_ln51_114' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2303 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_85)   --->   "%xor_ln51_115 = xor i32 %xor_ln51_114, i32 %or_ln51_113" [sha256.cpp:51]   --->   Operation 2303 'xor' 'xor_ln51_115' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2304 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_84 = add i32 %m_28, i32 %m_37" [sha256.cpp:51]   --->   Operation 2304 'add' 'add_ln51_84' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 2305 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_85 = add i32 %xor_ln51_115, i32 %xor_ln51_113" [sha256.cpp:51]   --->   Operation 2305 'add' 'add_ln51_85' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2306 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_44 = add i32 %add_ln51_85, i32 %add_ln51_84" [sha256.cpp:51]   --->   Operation 2306 'add' 'm_44' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 2307 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_91)   --->   "%lshr_ln51_146 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_44, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 2307 'partselect' 'lshr_ln51_146' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2308 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_91)   --->   "%trunc_ln51_86 = trunc i32 %m_44" [sha256.cpp:51]   --->   Operation 2308 'trunc' 'trunc_ln51_86' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2309 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_91)   --->   "%or_ln51_119 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_86, i15 %lshr_ln51_146" [sha256.cpp:51]   --->   Operation 2309 'bitconcatenate' 'or_ln51_119' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2310 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_91)   --->   "%lshr_ln51_147 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_44, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 2310 'partselect' 'lshr_ln51_147' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2311 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_91)   --->   "%trunc_ln51_87 = trunc i32 %m_44" [sha256.cpp:51]   --->   Operation 2311 'trunc' 'trunc_ln51_87' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2312 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_91)   --->   "%or_ln51_120 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_87, i13 %lshr_ln51_147" [sha256.cpp:51]   --->   Operation 2312 'bitconcatenate' 'or_ln51_120' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2313 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_91)   --->   "%lshr_ln51_148 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_44, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 2313 'partselect' 'lshr_ln51_148' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2314 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_91)   --->   "%zext_ln51_60 = zext i22 %lshr_ln51_148" [sha256.cpp:51]   --->   Operation 2314 'zext' 'zext_ln51_60' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2315 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_91)   --->   "%xor_ln51_120 = xor i32 %zext_ln51_60, i32 %or_ln51_120" [sha256.cpp:51]   --->   Operation 2315 'xor' 'xor_ln51_120' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2316 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_91)   --->   "%xor_ln51_121 = xor i32 %xor_ln51_120, i32 %or_ln51_119" [sha256.cpp:51]   --->   Operation 2316 'xor' 'xor_ln51_121' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2317 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_91)   --->   "%lshr_ln51_149 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_31, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2317 'partselect' 'lshr_ln51_149' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2318 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_91)   --->   "%trunc_ln51_88 = trunc i32 %m_31" [sha256.cpp:51]   --->   Operation 2318 'trunc' 'trunc_ln51_88' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2319 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_91)   --->   "%or_ln51_121 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_88, i25 %lshr_ln51_149" [sha256.cpp:51]   --->   Operation 2319 'bitconcatenate' 'or_ln51_121' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2320 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_91)   --->   "%lshr_ln51_150 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_31, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2320 'partselect' 'lshr_ln51_150' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2321 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_91)   --->   "%trunc_ln51_89 = trunc i32 %m_31" [sha256.cpp:51]   --->   Operation 2321 'trunc' 'trunc_ln51_89' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2322 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_91)   --->   "%or_ln51_122 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_89, i14 %lshr_ln51_150" [sha256.cpp:51]   --->   Operation 2322 'bitconcatenate' 'or_ln51_122' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2323 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_91)   --->   "%lshr_ln51_151 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_31, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2323 'partselect' 'lshr_ln51_151' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2324 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_91)   --->   "%zext_ln51_61 = zext i29 %lshr_ln51_151" [sha256.cpp:51]   --->   Operation 2324 'zext' 'zext_ln51_61' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2325 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_91)   --->   "%xor_ln51_122 = xor i32 %zext_ln51_61, i32 %or_ln51_122" [sha256.cpp:51]   --->   Operation 2325 'xor' 'xor_ln51_122' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2326 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_91)   --->   "%xor_ln51_123 = xor i32 %xor_ln51_122, i32 %or_ln51_121" [sha256.cpp:51]   --->   Operation 2326 'xor' 'xor_ln51_123' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2327 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_91 = add i32 %xor_ln51_123, i32 %xor_ln51_121" [sha256.cpp:51]   --->   Operation 2327 'add' 'add_ln51_91' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2328 [1/1] (0.28ns)   --->   "%and_ln66_77 = and i32 %a_70, i32 %a_69" [sha256.cpp:66]   --->   Operation 2328 'and' 'and_ln66_77' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2329 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_155)   --->   "%and_ln66_78 = and i32 %a_70, i32 %a_68" [sha256.cpp:66]   --->   Operation 2329 'and' 'and_ln66_78' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2330 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_155)   --->   "%xor_ln66_154 = xor i32 %and_ln66_75, i32 %and_ln66_78" [sha256.cpp:66]   --->   Operation 2330 'xor' 'xor_ln66_154' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2331 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_155 = xor i32 %xor_ln66_154, i32 %and_ln66_77" [sha256.cpp:66]   --->   Operation 2331 'xor' 'xor_ln66_155' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2332 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_76 = add i32 %xor_ln66_155, i32 %t1_38" [sha256.cpp:74]   --->   Operation 2332 'add' 'add_ln74_76' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 2333 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_71 = add i32 %add_ln74_76, i32 %xor_ln66_153" [sha256.cpp:74]   --->   Operation 2333 'add' 'a_71' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 2334 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_157)   --->   "%lshr_ln66_116 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_71, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 2334 'partselect' 'lshr_ln66_116' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2335 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_157)   --->   "%trunc_ln66_117 = trunc i32 %a_71" [sha256.cpp:66]   --->   Operation 2335 'trunc' 'trunc_ln66_117' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2336 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_157)   --->   "%or_ln66_116 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_117, i30 %lshr_ln66_116" [sha256.cpp:66]   --->   Operation 2336 'bitconcatenate' 'or_ln66_116' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2337 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_157)   --->   "%lshr_ln66_117 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_71, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 2337 'partselect' 'lshr_ln66_117' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2338 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_157)   --->   "%trunc_ln66_118 = trunc i32 %a_71" [sha256.cpp:66]   --->   Operation 2338 'trunc' 'trunc_ln66_118' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2339 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_157)   --->   "%or_ln66_117 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_118, i19 %lshr_ln66_117" [sha256.cpp:66]   --->   Operation 2339 'bitconcatenate' 'or_ln66_117' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2340 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_157)   --->   "%lshr_ln66_118 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_71, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 2340 'partselect' 'lshr_ln66_118' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2341 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_157)   --->   "%trunc_ln66_119 = trunc i32 %a_71" [sha256.cpp:66]   --->   Operation 2341 'trunc' 'trunc_ln66_119' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2342 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_157)   --->   "%or_ln66_118 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_119, i10 %lshr_ln66_118" [sha256.cpp:66]   --->   Operation 2342 'bitconcatenate' 'or_ln66_118' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2343 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_157)   --->   "%xor_ln66_156 = xor i32 %or_ln66_116, i32 %or_ln66_117" [sha256.cpp:66]   --->   Operation 2343 'xor' 'xor_ln66_156' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2344 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_157 = xor i32 %xor_ln66_156, i32 %or_ln66_118" [sha256.cpp:66]   --->   Operation 2344 'xor' 'xor_ln66_157' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2345 [1/1] (0.28ns)   --->   "%and_ln66_79 = and i32 %a_71, i32 %a_70" [sha256.cpp:66]   --->   Operation 2345 'and' 'and_ln66_79' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2346 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_159)   --->   "%and_ln66_80 = and i32 %a_71, i32 %a_69" [sha256.cpp:66]   --->   Operation 2346 'and' 'and_ln66_80' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2347 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_159)   --->   "%xor_ln66_158 = xor i32 %and_ln66_77, i32 %and_ln66_80" [sha256.cpp:66]   --->   Operation 2347 'xor' 'xor_ln66_158' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2348 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_159 = xor i32 %xor_ln66_158, i32 %and_ln66_79" [sha256.cpp:66]   --->   Operation 2348 'xor' 'xor_ln66_159' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2349 [1/1] (1.14ns)   --->   "%e_72 = add i32 %t1_39, i32 %a_68" [sha256.cpp:70]   --->   Operation 2349 'add' 'e_72' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2350 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_78 = add i32 %xor_ln66_159, i32 %t1_39" [sha256.cpp:74]   --->   Operation 2350 'add' 'add_ln74_78' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 2351 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_72 = add i32 %add_ln74_78, i32 %xor_ln66_157" [sha256.cpp:74]   --->   Operation 2351 'add' 'a_72' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 2352 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_161)   --->   "%lshr_ln65_119 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_72, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 2352 'partselect' 'lshr_ln65_119' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2353 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_161)   --->   "%trunc_ln65_120 = trunc i32 %e_72" [sha256.cpp:65]   --->   Operation 2353 'trunc' 'trunc_ln65_120' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2354 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_161)   --->   "%or_ln65_119 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_120, i26 %lshr_ln65_119" [sha256.cpp:65]   --->   Operation 2354 'bitconcatenate' 'or_ln65_119' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2355 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_161)   --->   "%lshr_ln65_120 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_72, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 2355 'partselect' 'lshr_ln65_120' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2356 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_161)   --->   "%trunc_ln65_121 = trunc i32 %e_72" [sha256.cpp:65]   --->   Operation 2356 'trunc' 'trunc_ln65_121' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2357 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_161)   --->   "%or_ln65_120 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_121, i21 %lshr_ln65_120" [sha256.cpp:65]   --->   Operation 2357 'bitconcatenate' 'or_ln65_120' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2358 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_161)   --->   "%lshr_ln65_121 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_72, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 2358 'partselect' 'lshr_ln65_121' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2359 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_161)   --->   "%trunc_ln65_122 = trunc i32 %e_72" [sha256.cpp:65]   --->   Operation 2359 'trunc' 'trunc_ln65_122' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2360 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_161)   --->   "%or_ln65_121 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_122, i7 %lshr_ln65_121" [sha256.cpp:65]   --->   Operation 2360 'bitconcatenate' 'or_ln65_121' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2361 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_161)   --->   "%xor_ln65_160 = xor i32 %or_ln65_119, i32 %or_ln65_120" [sha256.cpp:65]   --->   Operation 2361 'xor' 'xor_ln65_160' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2362 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_161 = xor i32 %xor_ln65_160, i32 %or_ln65_121" [sha256.cpp:65]   --->   Operation 2362 'xor' 'xor_ln65_161' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2363 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_163)   --->   "%and_ln65_80 = and i32 %e_72, i32 %e_71" [sha256.cpp:65]   --->   Operation 2363 'and' 'and_ln65_80' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2364 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_163)   --->   "%xor_ln65_162 = xor i32 %e_72, i32 4294967295" [sha256.cpp:65]   --->   Operation 2364 'xor' 'xor_ln65_162' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2365 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_163)   --->   "%and_ln65_81 = and i32 %e_70, i32 %xor_ln65_162" [sha256.cpp:65]   --->   Operation 2365 'and' 'and_ln65_81' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2366 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_163 = xor i32 %and_ln65_80, i32 %and_ln65_81" [sha256.cpp:65]   --->   Operation 2366 'xor' 'xor_ln65_163' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2367 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_160 = add i32 %e_69, i32 %xor_ln65_163" [sha256.cpp:65]   --->   Operation 2367 'add' 'add_ln65_160' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 2368 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_161 = add i32 %m_40, i32 %xor_ln65_161" [sha256.cpp:65]   --->   Operation 2368 'add' 'add_ln65_161' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 2369 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_162 = add i32 %add_ln65_161, i32 2730485921" [sha256.cpp:65]   --->   Operation 2369 'add' 'add_ln65_162' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 2370 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_40 = add i32 %add_ln65_162, i32 %add_ln65_160" [sha256.cpp:65]   --->   Operation 2370 'add' 't1_40' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 2371 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_161)   --->   "%lshr_ln66_119 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_72, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 2371 'partselect' 'lshr_ln66_119' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2372 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_161)   --->   "%trunc_ln66_120 = trunc i32 %a_72" [sha256.cpp:66]   --->   Operation 2372 'trunc' 'trunc_ln66_120' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2373 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_161)   --->   "%or_ln66_119 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_120, i30 %lshr_ln66_119" [sha256.cpp:66]   --->   Operation 2373 'bitconcatenate' 'or_ln66_119' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2374 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_161)   --->   "%lshr_ln66_120 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_72, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 2374 'partselect' 'lshr_ln66_120' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2375 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_161)   --->   "%trunc_ln66_121 = trunc i32 %a_72" [sha256.cpp:66]   --->   Operation 2375 'trunc' 'trunc_ln66_121' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2376 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_161)   --->   "%or_ln66_120 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_121, i19 %lshr_ln66_120" [sha256.cpp:66]   --->   Operation 2376 'bitconcatenate' 'or_ln66_120' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2377 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_161)   --->   "%lshr_ln66_121 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_72, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 2377 'partselect' 'lshr_ln66_121' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2378 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_161)   --->   "%trunc_ln66_122 = trunc i32 %a_72" [sha256.cpp:66]   --->   Operation 2378 'trunc' 'trunc_ln66_122' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2379 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_161)   --->   "%or_ln66_121 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_122, i10 %lshr_ln66_121" [sha256.cpp:66]   --->   Operation 2379 'bitconcatenate' 'or_ln66_121' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2380 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_161)   --->   "%xor_ln66_160 = xor i32 %or_ln66_119, i32 %or_ln66_120" [sha256.cpp:66]   --->   Operation 2380 'xor' 'xor_ln66_160' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2381 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_161 = xor i32 %xor_ln66_160, i32 %or_ln66_121" [sha256.cpp:66]   --->   Operation 2381 'xor' 'xor_ln66_161' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2382 [1/1] (1.14ns)   --->   "%e_73 = add i32 %t1_40, i32 %a_69" [sha256.cpp:70]   --->   Operation 2382 'add' 'e_73' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2383 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_165)   --->   "%lshr_ln65_122 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_73, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 2383 'partselect' 'lshr_ln65_122' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2384 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_165)   --->   "%trunc_ln65_123 = trunc i32 %e_73" [sha256.cpp:65]   --->   Operation 2384 'trunc' 'trunc_ln65_123' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2385 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_165)   --->   "%or_ln65_122 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_123, i26 %lshr_ln65_122" [sha256.cpp:65]   --->   Operation 2385 'bitconcatenate' 'or_ln65_122' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2386 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_165)   --->   "%lshr_ln65_123 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_73, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 2386 'partselect' 'lshr_ln65_123' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2387 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_165)   --->   "%trunc_ln65_124 = trunc i32 %e_73" [sha256.cpp:65]   --->   Operation 2387 'trunc' 'trunc_ln65_124' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2388 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_165)   --->   "%or_ln65_123 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_124, i21 %lshr_ln65_123" [sha256.cpp:65]   --->   Operation 2388 'bitconcatenate' 'or_ln65_123' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2389 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_165)   --->   "%lshr_ln65_124 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_73, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 2389 'partselect' 'lshr_ln65_124' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2390 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_165)   --->   "%trunc_ln65_125 = trunc i32 %e_73" [sha256.cpp:65]   --->   Operation 2390 'trunc' 'trunc_ln65_125' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2391 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_165)   --->   "%or_ln65_124 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_125, i7 %lshr_ln65_124" [sha256.cpp:65]   --->   Operation 2391 'bitconcatenate' 'or_ln65_124' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 2392 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_165)   --->   "%xor_ln65_164 = xor i32 %or_ln65_122, i32 %or_ln65_123" [sha256.cpp:65]   --->   Operation 2392 'xor' 'xor_ln65_164' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2393 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_165 = xor i32 %xor_ln65_164, i32 %or_ln65_124" [sha256.cpp:65]   --->   Operation 2393 'xor' 'xor_ln65_165' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2394 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_167)   --->   "%and_ln65_82 = and i32 %e_73, i32 %e_72" [sha256.cpp:65]   --->   Operation 2394 'and' 'and_ln65_82' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2395 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_167)   --->   "%xor_ln65_166 = xor i32 %e_73, i32 4294967295" [sha256.cpp:65]   --->   Operation 2395 'xor' 'xor_ln65_166' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2396 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_167)   --->   "%and_ln65_83 = and i32 %e_71, i32 %xor_ln65_166" [sha256.cpp:65]   --->   Operation 2396 'and' 'and_ln65_83' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2397 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_167 = xor i32 %and_ln65_82, i32 %and_ln65_83" [sha256.cpp:65]   --->   Operation 2397 'xor' 'xor_ln65_167' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 2398 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_164 = add i32 %e_70, i32 %xor_ln65_167" [sha256.cpp:65]   --->   Operation 2398 'add' 'add_ln65_164' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 2399 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_165 = add i32 %m_41, i32 %xor_ln65_165" [sha256.cpp:65]   --->   Operation 2399 'add' 'add_ln65_165' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 2400 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_166 = add i32 %add_ln65_165, i32 2820302411" [sha256.cpp:65]   --->   Operation 2400 'add' 'add_ln65_166' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_30 : Operation 2401 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_41 = add i32 %add_ln65_166, i32 %add_ln65_164" [sha256.cpp:65]   --->   Operation 2401 'add' 't1_41' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 31 <SV = 30> <Delay = 6.49>
ST_31 : Operation 2402 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_81 = add i32 %m_27, i32 %m_36" [sha256.cpp:51]   --->   Operation 2402 'add' 'add_ln51_81' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 2403 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_43 = add i32 %add_ln51_82, i32 %add_ln51_81" [sha256.cpp:51]   --->   Operation 2403 'add' 'm_43' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 2404 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_88)   --->   "%lshr_ln51_140 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_43, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 2404 'partselect' 'lshr_ln51_140' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2405 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_88)   --->   "%trunc_ln51_82 = trunc i32 %m_43" [sha256.cpp:51]   --->   Operation 2405 'trunc' 'trunc_ln51_82' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2406 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_88)   --->   "%or_ln51_115 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_82, i15 %lshr_ln51_140" [sha256.cpp:51]   --->   Operation 2406 'bitconcatenate' 'or_ln51_115' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2407 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_88)   --->   "%lshr_ln51_141 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_43, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 2407 'partselect' 'lshr_ln51_141' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2408 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_88)   --->   "%trunc_ln51_83 = trunc i32 %m_43" [sha256.cpp:51]   --->   Operation 2408 'trunc' 'trunc_ln51_83' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2409 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_88)   --->   "%or_ln51_116 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_83, i13 %lshr_ln51_141" [sha256.cpp:51]   --->   Operation 2409 'bitconcatenate' 'or_ln51_116' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2410 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_88)   --->   "%lshr_ln51_142 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_43, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 2410 'partselect' 'lshr_ln51_142' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2411 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_88)   --->   "%zext_ln51_58 = zext i22 %lshr_ln51_142" [sha256.cpp:51]   --->   Operation 2411 'zext' 'zext_ln51_58' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2412 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_88)   --->   "%xor_ln51_116 = xor i32 %zext_ln51_58, i32 %or_ln51_116" [sha256.cpp:51]   --->   Operation 2412 'xor' 'xor_ln51_116' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2413 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_88)   --->   "%xor_ln51_117 = xor i32 %xor_ln51_116, i32 %or_ln51_115" [sha256.cpp:51]   --->   Operation 2413 'xor' 'xor_ln51_117' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2414 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_88)   --->   "%lshr_ln51_143 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_30, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2414 'partselect' 'lshr_ln51_143' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2415 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_88)   --->   "%trunc_ln51_84 = trunc i32 %m_30" [sha256.cpp:51]   --->   Operation 2415 'trunc' 'trunc_ln51_84' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2416 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_88)   --->   "%or_ln51_117 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_84, i25 %lshr_ln51_143" [sha256.cpp:51]   --->   Operation 2416 'bitconcatenate' 'or_ln51_117' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2417 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_88)   --->   "%lshr_ln51_144 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_30, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2417 'partselect' 'lshr_ln51_144' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2418 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_88)   --->   "%trunc_ln51_85 = trunc i32 %m_30" [sha256.cpp:51]   --->   Operation 2418 'trunc' 'trunc_ln51_85' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2419 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_88)   --->   "%or_ln51_118 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_85, i14 %lshr_ln51_144" [sha256.cpp:51]   --->   Operation 2419 'bitconcatenate' 'or_ln51_118' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2420 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_88)   --->   "%lshr_ln51_145 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_30, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2420 'partselect' 'lshr_ln51_145' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2421 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_88)   --->   "%zext_ln51_59 = zext i29 %lshr_ln51_145" [sha256.cpp:51]   --->   Operation 2421 'zext' 'zext_ln51_59' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2422 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_88)   --->   "%xor_ln51_118 = xor i32 %zext_ln51_59, i32 %or_ln51_118" [sha256.cpp:51]   --->   Operation 2422 'xor' 'xor_ln51_118' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2423 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_88)   --->   "%xor_ln51_119 = xor i32 %xor_ln51_118, i32 %or_ln51_117" [sha256.cpp:51]   --->   Operation 2423 'xor' 'xor_ln51_119' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2424 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_88 = add i32 %xor_ln51_119, i32 %xor_ln51_117" [sha256.cpp:51]   --->   Operation 2424 'add' 'add_ln51_88' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2425 [1/1] (0.28ns)   --->   "%and_ln66_81 = and i32 %a_72, i32 %a_71" [sha256.cpp:66]   --->   Operation 2425 'and' 'and_ln66_81' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2426 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_163)   --->   "%and_ln66_82 = and i32 %a_72, i32 %a_70" [sha256.cpp:66]   --->   Operation 2426 'and' 'and_ln66_82' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2427 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_163)   --->   "%xor_ln66_162 = xor i32 %and_ln66_79, i32 %and_ln66_82" [sha256.cpp:66]   --->   Operation 2427 'xor' 'xor_ln66_162' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2428 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_163 = xor i32 %xor_ln66_162, i32 %and_ln66_81" [sha256.cpp:66]   --->   Operation 2428 'xor' 'xor_ln66_163' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2429 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_80 = add i32 %xor_ln66_163, i32 %t1_40" [sha256.cpp:74]   --->   Operation 2429 'add' 'add_ln74_80' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 2430 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_73 = add i32 %add_ln74_80, i32 %xor_ln66_161" [sha256.cpp:74]   --->   Operation 2430 'add' 'a_73' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 2431 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_165)   --->   "%lshr_ln66_122 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_73, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 2431 'partselect' 'lshr_ln66_122' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2432 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_165)   --->   "%trunc_ln66_123 = trunc i32 %a_73" [sha256.cpp:66]   --->   Operation 2432 'trunc' 'trunc_ln66_123' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2433 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_165)   --->   "%or_ln66_122 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_123, i30 %lshr_ln66_122" [sha256.cpp:66]   --->   Operation 2433 'bitconcatenate' 'or_ln66_122' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2434 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_165)   --->   "%lshr_ln66_123 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_73, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 2434 'partselect' 'lshr_ln66_123' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2435 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_165)   --->   "%trunc_ln66_124 = trunc i32 %a_73" [sha256.cpp:66]   --->   Operation 2435 'trunc' 'trunc_ln66_124' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2436 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_165)   --->   "%or_ln66_123 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_124, i19 %lshr_ln66_123" [sha256.cpp:66]   --->   Operation 2436 'bitconcatenate' 'or_ln66_123' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2437 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_165)   --->   "%lshr_ln66_124 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_73, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 2437 'partselect' 'lshr_ln66_124' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2438 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_165)   --->   "%trunc_ln66_125 = trunc i32 %a_73" [sha256.cpp:66]   --->   Operation 2438 'trunc' 'trunc_ln66_125' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2439 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_165)   --->   "%or_ln66_124 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_125, i10 %lshr_ln66_124" [sha256.cpp:66]   --->   Operation 2439 'bitconcatenate' 'or_ln66_124' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2440 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_165)   --->   "%xor_ln66_164 = xor i32 %or_ln66_122, i32 %or_ln66_123" [sha256.cpp:66]   --->   Operation 2440 'xor' 'xor_ln66_164' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2441 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_165 = xor i32 %xor_ln66_164, i32 %or_ln66_124" [sha256.cpp:66]   --->   Operation 2441 'xor' 'xor_ln66_165' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2442 [1/1] (0.28ns)   --->   "%and_ln66_83 = and i32 %a_73, i32 %a_72" [sha256.cpp:66]   --->   Operation 2442 'and' 'and_ln66_83' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2443 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_167)   --->   "%and_ln66_84 = and i32 %a_73, i32 %a_71" [sha256.cpp:66]   --->   Operation 2443 'and' 'and_ln66_84' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2444 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_167)   --->   "%xor_ln66_166 = xor i32 %and_ln66_81, i32 %and_ln66_84" [sha256.cpp:66]   --->   Operation 2444 'xor' 'xor_ln66_166' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2445 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_167 = xor i32 %xor_ln66_166, i32 %and_ln66_83" [sha256.cpp:66]   --->   Operation 2445 'xor' 'xor_ln66_167' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2446 [1/1] (1.14ns)   --->   "%e_74 = add i32 %t1_41, i32 %a_70" [sha256.cpp:70]   --->   Operation 2446 'add' 'e_74' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2447 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_82 = add i32 %xor_ln66_167, i32 %t1_41" [sha256.cpp:74]   --->   Operation 2447 'add' 'add_ln74_82' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 2448 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_74 = add i32 %add_ln74_82, i32 %xor_ln66_165" [sha256.cpp:74]   --->   Operation 2448 'add' 'a_74' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 2449 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_169)   --->   "%lshr_ln65_125 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_74, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 2449 'partselect' 'lshr_ln65_125' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2450 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_169)   --->   "%trunc_ln65_126 = trunc i32 %e_74" [sha256.cpp:65]   --->   Operation 2450 'trunc' 'trunc_ln65_126' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2451 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_169)   --->   "%or_ln65_125 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_126, i26 %lshr_ln65_125" [sha256.cpp:65]   --->   Operation 2451 'bitconcatenate' 'or_ln65_125' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2452 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_169)   --->   "%lshr_ln65_126 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_74, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 2452 'partselect' 'lshr_ln65_126' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2453 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_169)   --->   "%trunc_ln65_127 = trunc i32 %e_74" [sha256.cpp:65]   --->   Operation 2453 'trunc' 'trunc_ln65_127' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2454 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_169)   --->   "%or_ln65_126 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_127, i21 %lshr_ln65_126" [sha256.cpp:65]   --->   Operation 2454 'bitconcatenate' 'or_ln65_126' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2455 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_169)   --->   "%lshr_ln65_127 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_74, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 2455 'partselect' 'lshr_ln65_127' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2456 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_169)   --->   "%trunc_ln65_128 = trunc i32 %e_74" [sha256.cpp:65]   --->   Operation 2456 'trunc' 'trunc_ln65_128' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2457 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_169)   --->   "%or_ln65_127 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_128, i7 %lshr_ln65_127" [sha256.cpp:65]   --->   Operation 2457 'bitconcatenate' 'or_ln65_127' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2458 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_169)   --->   "%xor_ln65_168 = xor i32 %or_ln65_125, i32 %or_ln65_126" [sha256.cpp:65]   --->   Operation 2458 'xor' 'xor_ln65_168' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2459 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_169 = xor i32 %xor_ln65_168, i32 %or_ln65_127" [sha256.cpp:65]   --->   Operation 2459 'xor' 'xor_ln65_169' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2460 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_171)   --->   "%and_ln65_84 = and i32 %e_74, i32 %e_73" [sha256.cpp:65]   --->   Operation 2460 'and' 'and_ln65_84' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2461 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_171)   --->   "%xor_ln65_170 = xor i32 %e_74, i32 4294967295" [sha256.cpp:65]   --->   Operation 2461 'xor' 'xor_ln65_170' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2462 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_171)   --->   "%and_ln65_85 = and i32 %e_72, i32 %xor_ln65_170" [sha256.cpp:65]   --->   Operation 2462 'and' 'and_ln65_85' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2463 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_171 = xor i32 %and_ln65_84, i32 %and_ln65_85" [sha256.cpp:65]   --->   Operation 2463 'xor' 'xor_ln65_171' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2464 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_168 = add i32 %xor_ln65_171, i32 %e_71" [sha256.cpp:65]   --->   Operation 2464 'add' 'add_ln65_168' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 2465 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_169 = add i32 %xor_ln65_169, i32 3259730800" [sha256.cpp:65]   --->   Operation 2465 'add' 'add_ln65_169' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 2466 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_170 = add i32 %add_ln65_169, i32 %m_42" [sha256.cpp:65]   --->   Operation 2466 'add' 'add_ln65_170' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 2467 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_42 = add i32 %add_ln65_170, i32 %add_ln65_168" [sha256.cpp:65]   --->   Operation 2467 'add' 't1_42' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 2468 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_169)   --->   "%lshr_ln66_125 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_74, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 2468 'partselect' 'lshr_ln66_125' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2469 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_169)   --->   "%trunc_ln66_126 = trunc i32 %a_74" [sha256.cpp:66]   --->   Operation 2469 'trunc' 'trunc_ln66_126' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2470 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_169)   --->   "%or_ln66_125 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_126, i30 %lshr_ln66_125" [sha256.cpp:66]   --->   Operation 2470 'bitconcatenate' 'or_ln66_125' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2471 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_169)   --->   "%lshr_ln66_126 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_74, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 2471 'partselect' 'lshr_ln66_126' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2472 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_169)   --->   "%trunc_ln66_127 = trunc i32 %a_74" [sha256.cpp:66]   --->   Operation 2472 'trunc' 'trunc_ln66_127' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2473 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_169)   --->   "%or_ln66_126 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_127, i19 %lshr_ln66_126" [sha256.cpp:66]   --->   Operation 2473 'bitconcatenate' 'or_ln66_126' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2474 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_169)   --->   "%lshr_ln66_127 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_74, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 2474 'partselect' 'lshr_ln66_127' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2475 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_169)   --->   "%trunc_ln66_128 = trunc i32 %a_74" [sha256.cpp:66]   --->   Operation 2475 'trunc' 'trunc_ln66_128' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2476 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_169)   --->   "%or_ln66_127 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_128, i10 %lshr_ln66_127" [sha256.cpp:66]   --->   Operation 2476 'bitconcatenate' 'or_ln66_127' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2477 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_169)   --->   "%xor_ln66_168 = xor i32 %or_ln66_125, i32 %or_ln66_126" [sha256.cpp:66]   --->   Operation 2477 'xor' 'xor_ln66_168' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2478 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_169 = xor i32 %xor_ln66_168, i32 %or_ln66_127" [sha256.cpp:66]   --->   Operation 2478 'xor' 'xor_ln66_169' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2479 [1/1] (1.14ns)   --->   "%e_75 = add i32 %t1_42, i32 %a_71" [sha256.cpp:70]   --->   Operation 2479 'add' 'e_75' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2480 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_173)   --->   "%lshr_ln65_128 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_75, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 2480 'partselect' 'lshr_ln65_128' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2481 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_173)   --->   "%trunc_ln65_129 = trunc i32 %e_75" [sha256.cpp:65]   --->   Operation 2481 'trunc' 'trunc_ln65_129' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2482 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_173)   --->   "%or_ln65_128 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_129, i26 %lshr_ln65_128" [sha256.cpp:65]   --->   Operation 2482 'bitconcatenate' 'or_ln65_128' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2483 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_173)   --->   "%lshr_ln65_129 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_75, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 2483 'partselect' 'lshr_ln65_129' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2484 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_173)   --->   "%trunc_ln65_130 = trunc i32 %e_75" [sha256.cpp:65]   --->   Operation 2484 'trunc' 'trunc_ln65_130' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2485 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_173)   --->   "%or_ln65_129 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_130, i21 %lshr_ln65_129" [sha256.cpp:65]   --->   Operation 2485 'bitconcatenate' 'or_ln65_129' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2486 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_173)   --->   "%lshr_ln65_130 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_75, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 2486 'partselect' 'lshr_ln65_130' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2487 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_173)   --->   "%trunc_ln65_131 = trunc i32 %e_75" [sha256.cpp:65]   --->   Operation 2487 'trunc' 'trunc_ln65_131' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2488 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_173)   --->   "%or_ln65_130 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_131, i7 %lshr_ln65_130" [sha256.cpp:65]   --->   Operation 2488 'bitconcatenate' 'or_ln65_130' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 2489 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_173)   --->   "%xor_ln65_172 = xor i32 %or_ln65_128, i32 %or_ln65_129" [sha256.cpp:65]   --->   Operation 2489 'xor' 'xor_ln65_172' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2490 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_173 = xor i32 %xor_ln65_172, i32 %or_ln65_130" [sha256.cpp:65]   --->   Operation 2490 'xor' 'xor_ln65_173' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2491 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_175)   --->   "%and_ln65_86 = and i32 %e_75, i32 %e_74" [sha256.cpp:65]   --->   Operation 2491 'and' 'and_ln65_86' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2492 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_175)   --->   "%xor_ln65_174 = xor i32 %e_75, i32 4294967295" [sha256.cpp:65]   --->   Operation 2492 'xor' 'xor_ln65_174' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2493 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_175)   --->   "%and_ln65_87 = and i32 %e_73, i32 %xor_ln65_174" [sha256.cpp:65]   --->   Operation 2493 'and' 'and_ln65_87' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2494 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_175 = xor i32 %and_ln65_86, i32 %and_ln65_87" [sha256.cpp:65]   --->   Operation 2494 'xor' 'xor_ln65_175' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 2495 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_172 = add i32 %xor_ln65_175, i32 %e_72" [sha256.cpp:65]   --->   Operation 2495 'add' 'add_ln65_172' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 2496 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_173 = add i32 %xor_ln65_173, i32 3345764771" [sha256.cpp:65]   --->   Operation 2496 'add' 'add_ln65_173' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 2497 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_174 = add i32 %add_ln65_173, i32 %m_43" [sha256.cpp:65]   --->   Operation 2497 'add' 'add_ln65_174' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_31 : Operation 2498 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_43 = add i32 %add_ln65_174, i32 %add_ln65_172" [sha256.cpp:65]   --->   Operation 2498 'add' 't1_43' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 32 <SV = 31> <Delay = 6.49>
ST_32 : Operation 2499 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_87 = add i32 %m_29, i32 %m_38" [sha256.cpp:51]   --->   Operation 2499 'add' 'add_ln51_87' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 2500 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_45 = add i32 %add_ln51_88, i32 %add_ln51_87" [sha256.cpp:51]   --->   Operation 2500 'add' 'm_45' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 2501 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_94)   --->   "%lshr_ln51_152 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_45, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 2501 'partselect' 'lshr_ln51_152' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2502 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_94)   --->   "%trunc_ln51_90 = trunc i32 %m_45" [sha256.cpp:51]   --->   Operation 2502 'trunc' 'trunc_ln51_90' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2503 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_94)   --->   "%or_ln51_123 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_90, i15 %lshr_ln51_152" [sha256.cpp:51]   --->   Operation 2503 'bitconcatenate' 'or_ln51_123' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2504 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_94)   --->   "%lshr_ln51_153 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_45, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 2504 'partselect' 'lshr_ln51_153' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2505 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_94)   --->   "%trunc_ln51_91 = trunc i32 %m_45" [sha256.cpp:51]   --->   Operation 2505 'trunc' 'trunc_ln51_91' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2506 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_94)   --->   "%or_ln51_124 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_91, i13 %lshr_ln51_153" [sha256.cpp:51]   --->   Operation 2506 'bitconcatenate' 'or_ln51_124' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2507 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_94)   --->   "%lshr_ln51_154 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_45, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 2507 'partselect' 'lshr_ln51_154' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2508 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_94)   --->   "%zext_ln51_62 = zext i22 %lshr_ln51_154" [sha256.cpp:51]   --->   Operation 2508 'zext' 'zext_ln51_62' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2509 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_94)   --->   "%xor_ln51_124 = xor i32 %zext_ln51_62, i32 %or_ln51_124" [sha256.cpp:51]   --->   Operation 2509 'xor' 'xor_ln51_124' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2510 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_94)   --->   "%xor_ln51_125 = xor i32 %xor_ln51_124, i32 %or_ln51_123" [sha256.cpp:51]   --->   Operation 2510 'xor' 'xor_ln51_125' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2511 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_94)   --->   "%lshr_ln51_155 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_32, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2511 'partselect' 'lshr_ln51_155' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2512 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_94)   --->   "%trunc_ln51_92 = trunc i32 %m_32" [sha256.cpp:51]   --->   Operation 2512 'trunc' 'trunc_ln51_92' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2513 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_94)   --->   "%or_ln51_125 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_92, i25 %lshr_ln51_155" [sha256.cpp:51]   --->   Operation 2513 'bitconcatenate' 'or_ln51_125' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2514 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_94)   --->   "%lshr_ln51_156 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_32, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2514 'partselect' 'lshr_ln51_156' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2515 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_94)   --->   "%trunc_ln51_93 = trunc i32 %m_32" [sha256.cpp:51]   --->   Operation 2515 'trunc' 'trunc_ln51_93' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2516 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_94)   --->   "%or_ln51_126 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_93, i14 %lshr_ln51_156" [sha256.cpp:51]   --->   Operation 2516 'bitconcatenate' 'or_ln51_126' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2517 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_94)   --->   "%lshr_ln51_157 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_32, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2517 'partselect' 'lshr_ln51_157' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2518 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_94)   --->   "%zext_ln51_63 = zext i29 %lshr_ln51_157" [sha256.cpp:51]   --->   Operation 2518 'zext' 'zext_ln51_63' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2519 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_94)   --->   "%xor_ln51_126 = xor i32 %zext_ln51_63, i32 %or_ln51_126" [sha256.cpp:51]   --->   Operation 2519 'xor' 'xor_ln51_126' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2520 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_94)   --->   "%xor_ln51_127 = xor i32 %xor_ln51_126, i32 %or_ln51_125" [sha256.cpp:51]   --->   Operation 2520 'xor' 'xor_ln51_127' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2521 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_94 = add i32 %xor_ln51_127, i32 %xor_ln51_125" [sha256.cpp:51]   --->   Operation 2521 'add' 'add_ln51_94' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2522 [1/1] (0.28ns)   --->   "%and_ln66_85 = and i32 %a_74, i32 %a_73" [sha256.cpp:66]   --->   Operation 2522 'and' 'and_ln66_85' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2523 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_171)   --->   "%and_ln66_86 = and i32 %a_74, i32 %a_72" [sha256.cpp:66]   --->   Operation 2523 'and' 'and_ln66_86' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2524 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_171)   --->   "%xor_ln66_170 = xor i32 %and_ln66_83, i32 %and_ln66_86" [sha256.cpp:66]   --->   Operation 2524 'xor' 'xor_ln66_170' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2525 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_171 = xor i32 %xor_ln66_170, i32 %and_ln66_85" [sha256.cpp:66]   --->   Operation 2525 'xor' 'xor_ln66_171' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2526 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_84 = add i32 %xor_ln66_171, i32 %t1_42" [sha256.cpp:74]   --->   Operation 2526 'add' 'add_ln74_84' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 2527 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_75 = add i32 %add_ln74_84, i32 %xor_ln66_169" [sha256.cpp:74]   --->   Operation 2527 'add' 'a_75' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 2528 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_173)   --->   "%lshr_ln66_128 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_75, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 2528 'partselect' 'lshr_ln66_128' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2529 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_173)   --->   "%trunc_ln66_129 = trunc i32 %a_75" [sha256.cpp:66]   --->   Operation 2529 'trunc' 'trunc_ln66_129' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2530 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_173)   --->   "%or_ln66_128 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_129, i30 %lshr_ln66_128" [sha256.cpp:66]   --->   Operation 2530 'bitconcatenate' 'or_ln66_128' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2531 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_173)   --->   "%lshr_ln66_129 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_75, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 2531 'partselect' 'lshr_ln66_129' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2532 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_173)   --->   "%trunc_ln66_130 = trunc i32 %a_75" [sha256.cpp:66]   --->   Operation 2532 'trunc' 'trunc_ln66_130' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2533 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_173)   --->   "%or_ln66_129 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_130, i19 %lshr_ln66_129" [sha256.cpp:66]   --->   Operation 2533 'bitconcatenate' 'or_ln66_129' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2534 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_173)   --->   "%lshr_ln66_130 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_75, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 2534 'partselect' 'lshr_ln66_130' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2535 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_173)   --->   "%trunc_ln66_131 = trunc i32 %a_75" [sha256.cpp:66]   --->   Operation 2535 'trunc' 'trunc_ln66_131' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2536 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_173)   --->   "%or_ln66_130 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_131, i10 %lshr_ln66_130" [sha256.cpp:66]   --->   Operation 2536 'bitconcatenate' 'or_ln66_130' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2537 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_173)   --->   "%xor_ln66_172 = xor i32 %or_ln66_128, i32 %or_ln66_129" [sha256.cpp:66]   --->   Operation 2537 'xor' 'xor_ln66_172' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2538 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_173 = xor i32 %xor_ln66_172, i32 %or_ln66_130" [sha256.cpp:66]   --->   Operation 2538 'xor' 'xor_ln66_173' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2539 [1/1] (0.28ns)   --->   "%and_ln66_87 = and i32 %a_75, i32 %a_74" [sha256.cpp:66]   --->   Operation 2539 'and' 'and_ln66_87' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2540 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_175)   --->   "%and_ln66_88 = and i32 %a_75, i32 %a_73" [sha256.cpp:66]   --->   Operation 2540 'and' 'and_ln66_88' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2541 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_175)   --->   "%xor_ln66_174 = xor i32 %and_ln66_85, i32 %and_ln66_88" [sha256.cpp:66]   --->   Operation 2541 'xor' 'xor_ln66_174' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2542 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_175 = xor i32 %xor_ln66_174, i32 %and_ln66_87" [sha256.cpp:66]   --->   Operation 2542 'xor' 'xor_ln66_175' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2543 [1/1] (1.14ns)   --->   "%e_76 = add i32 %t1_43, i32 %a_72" [sha256.cpp:70]   --->   Operation 2543 'add' 'e_76' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2544 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_86 = add i32 %xor_ln66_175, i32 %t1_43" [sha256.cpp:74]   --->   Operation 2544 'add' 'add_ln74_86' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 2545 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_76 = add i32 %add_ln74_86, i32 %xor_ln66_173" [sha256.cpp:74]   --->   Operation 2545 'add' 'a_76' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 2546 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_177)   --->   "%lshr_ln65_131 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_76, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 2546 'partselect' 'lshr_ln65_131' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2547 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_177)   --->   "%trunc_ln65_132 = trunc i32 %e_76" [sha256.cpp:65]   --->   Operation 2547 'trunc' 'trunc_ln65_132' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2548 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_177)   --->   "%or_ln65_131 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_132, i26 %lshr_ln65_131" [sha256.cpp:65]   --->   Operation 2548 'bitconcatenate' 'or_ln65_131' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2549 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_177)   --->   "%lshr_ln65_132 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_76, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 2549 'partselect' 'lshr_ln65_132' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2550 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_177)   --->   "%trunc_ln65_133 = trunc i32 %e_76" [sha256.cpp:65]   --->   Operation 2550 'trunc' 'trunc_ln65_133' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2551 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_177)   --->   "%or_ln65_132 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_133, i21 %lshr_ln65_132" [sha256.cpp:65]   --->   Operation 2551 'bitconcatenate' 'or_ln65_132' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2552 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_177)   --->   "%lshr_ln65_133 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_76, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 2552 'partselect' 'lshr_ln65_133' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2553 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_177)   --->   "%trunc_ln65_134 = trunc i32 %e_76" [sha256.cpp:65]   --->   Operation 2553 'trunc' 'trunc_ln65_134' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2554 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_177)   --->   "%or_ln65_133 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_134, i7 %lshr_ln65_133" [sha256.cpp:65]   --->   Operation 2554 'bitconcatenate' 'or_ln65_133' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2555 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_177)   --->   "%xor_ln65_176 = xor i32 %or_ln65_131, i32 %or_ln65_132" [sha256.cpp:65]   --->   Operation 2555 'xor' 'xor_ln65_176' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2556 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_177 = xor i32 %xor_ln65_176, i32 %or_ln65_133" [sha256.cpp:65]   --->   Operation 2556 'xor' 'xor_ln65_177' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2557 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_179)   --->   "%and_ln65_88 = and i32 %e_76, i32 %e_75" [sha256.cpp:65]   --->   Operation 2557 'and' 'and_ln65_88' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2558 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_179)   --->   "%xor_ln65_178 = xor i32 %e_76, i32 4294967295" [sha256.cpp:65]   --->   Operation 2558 'xor' 'xor_ln65_178' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2559 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_179)   --->   "%and_ln65_89 = and i32 %e_74, i32 %xor_ln65_178" [sha256.cpp:65]   --->   Operation 2559 'and' 'and_ln65_89' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2560 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_179 = xor i32 %and_ln65_88, i32 %and_ln65_89" [sha256.cpp:65]   --->   Operation 2560 'xor' 'xor_ln65_179' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2561 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_176 = add i32 %xor_ln65_179, i32 %e_73" [sha256.cpp:65]   --->   Operation 2561 'add' 'add_ln65_176' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 2562 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_177 = add i32 %xor_ln65_177, i32 3516065817" [sha256.cpp:65]   --->   Operation 2562 'add' 'add_ln65_177' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 2563 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_178 = add i32 %add_ln65_177, i32 %m_44" [sha256.cpp:65]   --->   Operation 2563 'add' 'add_ln65_178' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 2564 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_44 = add i32 %add_ln65_178, i32 %add_ln65_176" [sha256.cpp:65]   --->   Operation 2564 'add' 't1_44' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 2565 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_177)   --->   "%lshr_ln66_131 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_76, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 2565 'partselect' 'lshr_ln66_131' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2566 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_177)   --->   "%trunc_ln66_132 = trunc i32 %a_76" [sha256.cpp:66]   --->   Operation 2566 'trunc' 'trunc_ln66_132' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2567 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_177)   --->   "%or_ln66_131 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_132, i30 %lshr_ln66_131" [sha256.cpp:66]   --->   Operation 2567 'bitconcatenate' 'or_ln66_131' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2568 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_177)   --->   "%lshr_ln66_132 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_76, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 2568 'partselect' 'lshr_ln66_132' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2569 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_177)   --->   "%trunc_ln66_133 = trunc i32 %a_76" [sha256.cpp:66]   --->   Operation 2569 'trunc' 'trunc_ln66_133' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2570 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_177)   --->   "%or_ln66_132 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_133, i19 %lshr_ln66_132" [sha256.cpp:66]   --->   Operation 2570 'bitconcatenate' 'or_ln66_132' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2571 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_177)   --->   "%lshr_ln66_133 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_76, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 2571 'partselect' 'lshr_ln66_133' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2572 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_177)   --->   "%trunc_ln66_134 = trunc i32 %a_76" [sha256.cpp:66]   --->   Operation 2572 'trunc' 'trunc_ln66_134' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2573 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_177)   --->   "%or_ln66_133 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_134, i10 %lshr_ln66_133" [sha256.cpp:66]   --->   Operation 2573 'bitconcatenate' 'or_ln66_133' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2574 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_177)   --->   "%xor_ln66_176 = xor i32 %or_ln66_131, i32 %or_ln66_132" [sha256.cpp:66]   --->   Operation 2574 'xor' 'xor_ln66_176' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2575 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_177 = xor i32 %xor_ln66_176, i32 %or_ln66_133" [sha256.cpp:66]   --->   Operation 2575 'xor' 'xor_ln66_177' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2576 [1/1] (1.14ns)   --->   "%e_77 = add i32 %t1_44, i32 %a_73" [sha256.cpp:70]   --->   Operation 2576 'add' 'e_77' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2577 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_181)   --->   "%lshr_ln65_134 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_77, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 2577 'partselect' 'lshr_ln65_134' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2578 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_181)   --->   "%trunc_ln65_135 = trunc i32 %e_77" [sha256.cpp:65]   --->   Operation 2578 'trunc' 'trunc_ln65_135' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2579 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_181)   --->   "%or_ln65_134 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_135, i26 %lshr_ln65_134" [sha256.cpp:65]   --->   Operation 2579 'bitconcatenate' 'or_ln65_134' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2580 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_181)   --->   "%lshr_ln65_135 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_77, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 2580 'partselect' 'lshr_ln65_135' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2581 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_181)   --->   "%trunc_ln65_136 = trunc i32 %e_77" [sha256.cpp:65]   --->   Operation 2581 'trunc' 'trunc_ln65_136' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2582 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_181)   --->   "%or_ln65_135 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_136, i21 %lshr_ln65_135" [sha256.cpp:65]   --->   Operation 2582 'bitconcatenate' 'or_ln65_135' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2583 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_181)   --->   "%lshr_ln65_136 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_77, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 2583 'partselect' 'lshr_ln65_136' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2584 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_181)   --->   "%trunc_ln65_137 = trunc i32 %e_77" [sha256.cpp:65]   --->   Operation 2584 'trunc' 'trunc_ln65_137' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2585 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_181)   --->   "%or_ln65_136 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_137, i7 %lshr_ln65_136" [sha256.cpp:65]   --->   Operation 2585 'bitconcatenate' 'or_ln65_136' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 2586 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_181)   --->   "%xor_ln65_180 = xor i32 %or_ln65_134, i32 %or_ln65_135" [sha256.cpp:65]   --->   Operation 2586 'xor' 'xor_ln65_180' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2587 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_181 = xor i32 %xor_ln65_180, i32 %or_ln65_136" [sha256.cpp:65]   --->   Operation 2587 'xor' 'xor_ln65_181' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2588 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_183)   --->   "%and_ln65_90 = and i32 %e_77, i32 %e_76" [sha256.cpp:65]   --->   Operation 2588 'and' 'and_ln65_90' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2589 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_183)   --->   "%xor_ln65_182 = xor i32 %e_77, i32 4294967295" [sha256.cpp:65]   --->   Operation 2589 'xor' 'xor_ln65_182' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2590 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_183)   --->   "%and_ln65_91 = and i32 %e_75, i32 %xor_ln65_182" [sha256.cpp:65]   --->   Operation 2590 'and' 'and_ln65_91' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2591 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_183 = xor i32 %and_ln65_90, i32 %and_ln65_91" [sha256.cpp:65]   --->   Operation 2591 'xor' 'xor_ln65_183' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 2592 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_180 = add i32 %xor_ln65_183, i32 %e_74" [sha256.cpp:65]   --->   Operation 2592 'add' 'add_ln65_180' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 2593 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_181 = add i32 %xor_ln65_181, i32 3600352804" [sha256.cpp:65]   --->   Operation 2593 'add' 'add_ln65_181' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 2594 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_182 = add i32 %add_ln65_181, i32 %m_45" [sha256.cpp:65]   --->   Operation 2594 'add' 'add_ln65_182' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_32 : Operation 2595 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_45 = add i32 %add_ln65_182, i32 %add_ln65_180" [sha256.cpp:65]   --->   Operation 2595 'add' 't1_45' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 33 <SV = 32> <Delay = 6.49>
ST_33 : Operation 2596 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_90 = add i32 %m_30, i32 %m_39" [sha256.cpp:51]   --->   Operation 2596 'add' 'add_ln51_90' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2597 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_46 = add i32 %add_ln51_91, i32 %add_ln51_90" [sha256.cpp:51]   --->   Operation 2597 'add' 'm_46' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2598 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_93 = add i32 %m_31, i32 %m_40" [sha256.cpp:51]   --->   Operation 2598 'add' 'add_ln51_93' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2599 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_47 = add i32 %add_ln51_94, i32 %add_ln51_93" [sha256.cpp:51]   --->   Operation 2599 'add' 'm_47' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2600 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_97)   --->   "%lshr_ln51_158 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_46, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 2600 'partselect' 'lshr_ln51_158' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2601 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_97)   --->   "%trunc_ln51_94 = trunc i32 %m_46" [sha256.cpp:51]   --->   Operation 2601 'trunc' 'trunc_ln51_94' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2602 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_97)   --->   "%or_ln51_127 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_94, i15 %lshr_ln51_158" [sha256.cpp:51]   --->   Operation 2602 'bitconcatenate' 'or_ln51_127' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2603 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_97)   --->   "%lshr_ln51_159 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_46, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 2603 'partselect' 'lshr_ln51_159' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2604 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_97)   --->   "%trunc_ln51_95 = trunc i32 %m_46" [sha256.cpp:51]   --->   Operation 2604 'trunc' 'trunc_ln51_95' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2605 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_97)   --->   "%or_ln51_128 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_95, i13 %lshr_ln51_159" [sha256.cpp:51]   --->   Operation 2605 'bitconcatenate' 'or_ln51_128' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2606 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_97)   --->   "%lshr_ln51_160 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_46, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 2606 'partselect' 'lshr_ln51_160' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2607 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_97)   --->   "%zext_ln51_64 = zext i22 %lshr_ln51_160" [sha256.cpp:51]   --->   Operation 2607 'zext' 'zext_ln51_64' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2608 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_97)   --->   "%xor_ln51_128 = xor i32 %zext_ln51_64, i32 %or_ln51_128" [sha256.cpp:51]   --->   Operation 2608 'xor' 'xor_ln51_128' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2609 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_97)   --->   "%xor_ln51_129 = xor i32 %xor_ln51_128, i32 %or_ln51_127" [sha256.cpp:51]   --->   Operation 2609 'xor' 'xor_ln51_129' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2610 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_97)   --->   "%lshr_ln51_161 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_33, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2610 'partselect' 'lshr_ln51_161' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2611 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_97)   --->   "%trunc_ln51_96 = trunc i32 %m_33" [sha256.cpp:51]   --->   Operation 2611 'trunc' 'trunc_ln51_96' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2612 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_97)   --->   "%or_ln51_129 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_96, i25 %lshr_ln51_161" [sha256.cpp:51]   --->   Operation 2612 'bitconcatenate' 'or_ln51_129' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2613 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_97)   --->   "%lshr_ln51_162 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_33, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2613 'partselect' 'lshr_ln51_162' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2614 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_97)   --->   "%trunc_ln51_97 = trunc i32 %m_33" [sha256.cpp:51]   --->   Operation 2614 'trunc' 'trunc_ln51_97' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2615 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_97)   --->   "%or_ln51_130 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_97, i14 %lshr_ln51_162" [sha256.cpp:51]   --->   Operation 2615 'bitconcatenate' 'or_ln51_130' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2616 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_97)   --->   "%lshr_ln51_163 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_33, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2616 'partselect' 'lshr_ln51_163' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2617 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_97)   --->   "%zext_ln51_65 = zext i29 %lshr_ln51_163" [sha256.cpp:51]   --->   Operation 2617 'zext' 'zext_ln51_65' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2618 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_97)   --->   "%xor_ln51_130 = xor i32 %zext_ln51_65, i32 %or_ln51_130" [sha256.cpp:51]   --->   Operation 2618 'xor' 'xor_ln51_130' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2619 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_97)   --->   "%xor_ln51_131 = xor i32 %xor_ln51_130, i32 %or_ln51_129" [sha256.cpp:51]   --->   Operation 2619 'xor' 'xor_ln51_131' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2620 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_96 = add i32 %m_32, i32 %m_41" [sha256.cpp:51]   --->   Operation 2620 'add' 'add_ln51_96' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2621 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_97 = add i32 %xor_ln51_131, i32 %xor_ln51_129" [sha256.cpp:51]   --->   Operation 2621 'add' 'add_ln51_97' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2622 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_48 = add i32 %add_ln51_97, i32 %add_ln51_96" [sha256.cpp:51]   --->   Operation 2622 'add' 'm_48' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2623 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_100)   --->   "%lshr_ln51_164 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_47, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 2623 'partselect' 'lshr_ln51_164' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2624 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_100)   --->   "%trunc_ln51_98 = trunc i32 %m_47" [sha256.cpp:51]   --->   Operation 2624 'trunc' 'trunc_ln51_98' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2625 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_100)   --->   "%or_ln51_131 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_98, i15 %lshr_ln51_164" [sha256.cpp:51]   --->   Operation 2625 'bitconcatenate' 'or_ln51_131' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2626 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_100)   --->   "%lshr_ln51_165 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_47, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 2626 'partselect' 'lshr_ln51_165' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2627 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_100)   --->   "%trunc_ln51_99 = trunc i32 %m_47" [sha256.cpp:51]   --->   Operation 2627 'trunc' 'trunc_ln51_99' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2628 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_100)   --->   "%or_ln51_132 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_99, i13 %lshr_ln51_165" [sha256.cpp:51]   --->   Operation 2628 'bitconcatenate' 'or_ln51_132' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2629 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_100)   --->   "%lshr_ln51_166 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_47, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 2629 'partselect' 'lshr_ln51_166' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2630 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_100)   --->   "%zext_ln51_66 = zext i22 %lshr_ln51_166" [sha256.cpp:51]   --->   Operation 2630 'zext' 'zext_ln51_66' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2631 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_100)   --->   "%xor_ln51_132 = xor i32 %zext_ln51_66, i32 %or_ln51_132" [sha256.cpp:51]   --->   Operation 2631 'xor' 'xor_ln51_132' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2632 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_100)   --->   "%xor_ln51_133 = xor i32 %xor_ln51_132, i32 %or_ln51_131" [sha256.cpp:51]   --->   Operation 2632 'xor' 'xor_ln51_133' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2633 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_100)   --->   "%lshr_ln51_167 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_34, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2633 'partselect' 'lshr_ln51_167' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2634 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_100)   --->   "%trunc_ln51_100 = trunc i32 %m_34" [sha256.cpp:51]   --->   Operation 2634 'trunc' 'trunc_ln51_100' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2635 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_100)   --->   "%or_ln51_133 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_100, i25 %lshr_ln51_167" [sha256.cpp:51]   --->   Operation 2635 'bitconcatenate' 'or_ln51_133' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2636 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_100)   --->   "%lshr_ln51_168 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_34, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2636 'partselect' 'lshr_ln51_168' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2637 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_100)   --->   "%trunc_ln51_101 = trunc i32 %m_34" [sha256.cpp:51]   --->   Operation 2637 'trunc' 'trunc_ln51_101' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2638 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_100)   --->   "%or_ln51_134 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_101, i14 %lshr_ln51_168" [sha256.cpp:51]   --->   Operation 2638 'bitconcatenate' 'or_ln51_134' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2639 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_100)   --->   "%lshr_ln51_169 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_34, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2639 'partselect' 'lshr_ln51_169' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2640 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_100)   --->   "%zext_ln51_67 = zext i29 %lshr_ln51_169" [sha256.cpp:51]   --->   Operation 2640 'zext' 'zext_ln51_67' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2641 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_100)   --->   "%xor_ln51_134 = xor i32 %zext_ln51_67, i32 %or_ln51_134" [sha256.cpp:51]   --->   Operation 2641 'xor' 'xor_ln51_134' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2642 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_100)   --->   "%xor_ln51_135 = xor i32 %xor_ln51_134, i32 %or_ln51_133" [sha256.cpp:51]   --->   Operation 2642 'xor' 'xor_ln51_135' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2643 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_99 = add i32 %m_33, i32 %m_42" [sha256.cpp:51]   --->   Operation 2643 'add' 'add_ln51_99' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2644 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_100 = add i32 %xor_ln51_135, i32 %xor_ln51_133" [sha256.cpp:51]   --->   Operation 2644 'add' 'add_ln51_100' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2645 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_49 = add i32 %add_ln51_100, i32 %add_ln51_99" [sha256.cpp:51]   --->   Operation 2645 'add' 'm_49' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2646 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_103)   --->   "%lshr_ln51_170 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_48, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 2646 'partselect' 'lshr_ln51_170' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2647 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_103)   --->   "%trunc_ln51_102 = trunc i32 %m_48" [sha256.cpp:51]   --->   Operation 2647 'trunc' 'trunc_ln51_102' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2648 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_103)   --->   "%or_ln51_135 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_102, i15 %lshr_ln51_170" [sha256.cpp:51]   --->   Operation 2648 'bitconcatenate' 'or_ln51_135' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2649 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_103)   --->   "%lshr_ln51_171 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_48, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 2649 'partselect' 'lshr_ln51_171' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2650 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_103)   --->   "%trunc_ln51_103 = trunc i32 %m_48" [sha256.cpp:51]   --->   Operation 2650 'trunc' 'trunc_ln51_103' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2651 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_103)   --->   "%or_ln51_136 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_103, i13 %lshr_ln51_171" [sha256.cpp:51]   --->   Operation 2651 'bitconcatenate' 'or_ln51_136' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2652 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_103)   --->   "%lshr_ln51_172 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_48, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 2652 'partselect' 'lshr_ln51_172' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2653 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_103)   --->   "%zext_ln51_68 = zext i22 %lshr_ln51_172" [sha256.cpp:51]   --->   Operation 2653 'zext' 'zext_ln51_68' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2654 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_103)   --->   "%xor_ln51_136 = xor i32 %zext_ln51_68, i32 %or_ln51_136" [sha256.cpp:51]   --->   Operation 2654 'xor' 'xor_ln51_136' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2655 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_103)   --->   "%xor_ln51_137 = xor i32 %xor_ln51_136, i32 %or_ln51_135" [sha256.cpp:51]   --->   Operation 2655 'xor' 'xor_ln51_137' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2656 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_103)   --->   "%lshr_ln51_173 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_35, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2656 'partselect' 'lshr_ln51_173' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2657 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_103)   --->   "%trunc_ln51_104 = trunc i32 %m_35" [sha256.cpp:51]   --->   Operation 2657 'trunc' 'trunc_ln51_104' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2658 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_103)   --->   "%or_ln51_137 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_104, i25 %lshr_ln51_173" [sha256.cpp:51]   --->   Operation 2658 'bitconcatenate' 'or_ln51_137' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2659 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_103)   --->   "%lshr_ln51_174 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_35, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2659 'partselect' 'lshr_ln51_174' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2660 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_103)   --->   "%trunc_ln51_105 = trunc i32 %m_35" [sha256.cpp:51]   --->   Operation 2660 'trunc' 'trunc_ln51_105' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2661 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_103)   --->   "%or_ln51_138 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_105, i14 %lshr_ln51_174" [sha256.cpp:51]   --->   Operation 2661 'bitconcatenate' 'or_ln51_138' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2662 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_103)   --->   "%lshr_ln51_175 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_35, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2662 'partselect' 'lshr_ln51_175' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2663 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_103)   --->   "%zext_ln51_69 = zext i29 %lshr_ln51_175" [sha256.cpp:51]   --->   Operation 2663 'zext' 'zext_ln51_69' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2664 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_103)   --->   "%xor_ln51_138 = xor i32 %zext_ln51_69, i32 %or_ln51_138" [sha256.cpp:51]   --->   Operation 2664 'xor' 'xor_ln51_138' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2665 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_103)   --->   "%xor_ln51_139 = xor i32 %xor_ln51_138, i32 %or_ln51_137" [sha256.cpp:51]   --->   Operation 2665 'xor' 'xor_ln51_139' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2666 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_102 = add i32 %m_34, i32 %m_43" [sha256.cpp:51]   --->   Operation 2666 'add' 'add_ln51_102' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2667 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_103 = add i32 %xor_ln51_139, i32 %xor_ln51_137" [sha256.cpp:51]   --->   Operation 2667 'add' 'add_ln51_103' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2668 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_50 = add i32 %add_ln51_103, i32 %add_ln51_102" [sha256.cpp:51]   --->   Operation 2668 'add' 'm_50' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2669 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_106)   --->   "%lshr_ln51_176 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_49, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 2669 'partselect' 'lshr_ln51_176' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2670 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_106)   --->   "%trunc_ln51_106 = trunc i32 %m_49" [sha256.cpp:51]   --->   Operation 2670 'trunc' 'trunc_ln51_106' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2671 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_106)   --->   "%or_ln51_139 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_106, i15 %lshr_ln51_176" [sha256.cpp:51]   --->   Operation 2671 'bitconcatenate' 'or_ln51_139' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2672 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_106)   --->   "%lshr_ln51_177 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_49, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 2672 'partselect' 'lshr_ln51_177' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2673 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_106)   --->   "%trunc_ln51_107 = trunc i32 %m_49" [sha256.cpp:51]   --->   Operation 2673 'trunc' 'trunc_ln51_107' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2674 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_106)   --->   "%or_ln51_140 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_107, i13 %lshr_ln51_177" [sha256.cpp:51]   --->   Operation 2674 'bitconcatenate' 'or_ln51_140' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2675 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_106)   --->   "%lshr_ln51_178 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_49, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 2675 'partselect' 'lshr_ln51_178' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2676 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_106)   --->   "%zext_ln51_70 = zext i22 %lshr_ln51_178" [sha256.cpp:51]   --->   Operation 2676 'zext' 'zext_ln51_70' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2677 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_106)   --->   "%xor_ln51_140 = xor i32 %zext_ln51_70, i32 %or_ln51_140" [sha256.cpp:51]   --->   Operation 2677 'xor' 'xor_ln51_140' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2678 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_106)   --->   "%xor_ln51_141 = xor i32 %xor_ln51_140, i32 %or_ln51_139" [sha256.cpp:51]   --->   Operation 2678 'xor' 'xor_ln51_141' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2679 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_106)   --->   "%lshr_ln51_179 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_36, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2679 'partselect' 'lshr_ln51_179' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2680 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_106)   --->   "%trunc_ln51_108 = trunc i32 %m_36" [sha256.cpp:51]   --->   Operation 2680 'trunc' 'trunc_ln51_108' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2681 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_106)   --->   "%or_ln51_141 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_108, i25 %lshr_ln51_179" [sha256.cpp:51]   --->   Operation 2681 'bitconcatenate' 'or_ln51_141' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2682 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_106)   --->   "%lshr_ln51_180 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_36, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2682 'partselect' 'lshr_ln51_180' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2683 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_106)   --->   "%trunc_ln51_109 = trunc i32 %m_36" [sha256.cpp:51]   --->   Operation 2683 'trunc' 'trunc_ln51_109' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2684 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_106)   --->   "%or_ln51_142 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_109, i14 %lshr_ln51_180" [sha256.cpp:51]   --->   Operation 2684 'bitconcatenate' 'or_ln51_142' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2685 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_106)   --->   "%lshr_ln51_181 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_36, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2685 'partselect' 'lshr_ln51_181' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2686 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_106)   --->   "%zext_ln51_71 = zext i29 %lshr_ln51_181" [sha256.cpp:51]   --->   Operation 2686 'zext' 'zext_ln51_71' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2687 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_106)   --->   "%xor_ln51_142 = xor i32 %zext_ln51_71, i32 %or_ln51_142" [sha256.cpp:51]   --->   Operation 2687 'xor' 'xor_ln51_142' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2688 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_106)   --->   "%xor_ln51_143 = xor i32 %xor_ln51_142, i32 %or_ln51_141" [sha256.cpp:51]   --->   Operation 2688 'xor' 'xor_ln51_143' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2689 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_106 = add i32 %xor_ln51_143, i32 %xor_ln51_141" [sha256.cpp:51]   --->   Operation 2689 'add' 'add_ln51_106' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2690 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_109)   --->   "%lshr_ln51_182 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_50, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 2690 'partselect' 'lshr_ln51_182' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2691 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_109)   --->   "%trunc_ln51_110 = trunc i32 %m_50" [sha256.cpp:51]   --->   Operation 2691 'trunc' 'trunc_ln51_110' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2692 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_109)   --->   "%or_ln51_143 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_110, i15 %lshr_ln51_182" [sha256.cpp:51]   --->   Operation 2692 'bitconcatenate' 'or_ln51_143' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2693 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_109)   --->   "%lshr_ln51_183 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_50, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 2693 'partselect' 'lshr_ln51_183' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2694 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_109)   --->   "%trunc_ln51_111 = trunc i32 %m_50" [sha256.cpp:51]   --->   Operation 2694 'trunc' 'trunc_ln51_111' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2695 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_109)   --->   "%or_ln51_144 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_111, i13 %lshr_ln51_183" [sha256.cpp:51]   --->   Operation 2695 'bitconcatenate' 'or_ln51_144' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2696 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_109)   --->   "%lshr_ln51_184 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_50, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 2696 'partselect' 'lshr_ln51_184' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2697 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_109)   --->   "%zext_ln51_72 = zext i22 %lshr_ln51_184" [sha256.cpp:51]   --->   Operation 2697 'zext' 'zext_ln51_72' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2698 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_109)   --->   "%xor_ln51_144 = xor i32 %zext_ln51_72, i32 %or_ln51_144" [sha256.cpp:51]   --->   Operation 2698 'xor' 'xor_ln51_144' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2699 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_109)   --->   "%xor_ln51_145 = xor i32 %xor_ln51_144, i32 %or_ln51_143" [sha256.cpp:51]   --->   Operation 2699 'xor' 'xor_ln51_145' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2700 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_109)   --->   "%lshr_ln51_185 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_37, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2700 'partselect' 'lshr_ln51_185' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2701 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_109)   --->   "%trunc_ln51_112 = trunc i32 %m_37" [sha256.cpp:51]   --->   Operation 2701 'trunc' 'trunc_ln51_112' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2702 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_109)   --->   "%or_ln51_145 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_112, i25 %lshr_ln51_185" [sha256.cpp:51]   --->   Operation 2702 'bitconcatenate' 'or_ln51_145' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2703 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_109)   --->   "%lshr_ln51_186 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_37, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2703 'partselect' 'lshr_ln51_186' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2704 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_109)   --->   "%trunc_ln51_113 = trunc i32 %m_37" [sha256.cpp:51]   --->   Operation 2704 'trunc' 'trunc_ln51_113' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2705 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_109)   --->   "%or_ln51_146 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_113, i14 %lshr_ln51_186" [sha256.cpp:51]   --->   Operation 2705 'bitconcatenate' 'or_ln51_146' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2706 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_109)   --->   "%lshr_ln51_187 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_37, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2706 'partselect' 'lshr_ln51_187' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2707 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_109)   --->   "%zext_ln51_73 = zext i29 %lshr_ln51_187" [sha256.cpp:51]   --->   Operation 2707 'zext' 'zext_ln51_73' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2708 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_109)   --->   "%xor_ln51_146 = xor i32 %zext_ln51_73, i32 %or_ln51_146" [sha256.cpp:51]   --->   Operation 2708 'xor' 'xor_ln51_146' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2709 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_109)   --->   "%xor_ln51_147 = xor i32 %xor_ln51_146, i32 %or_ln51_145" [sha256.cpp:51]   --->   Operation 2709 'xor' 'xor_ln51_147' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2710 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_109 = add i32 %xor_ln51_147, i32 %xor_ln51_145" [sha256.cpp:51]   --->   Operation 2710 'add' 'add_ln51_109' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2711 [1/1] (0.00ns) (grouped into LUT with out node xor_ln51_187)   --->   "%lshr_ln51_245 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_47, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2711 'partselect' 'lshr_ln51_245' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2712 [1/1] (0.00ns) (grouped into LUT with out node xor_ln51_187)   --->   "%trunc_ln51_152 = trunc i32 %m_47" [sha256.cpp:51]   --->   Operation 2712 'trunc' 'trunc_ln51_152' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2713 [1/1] (0.00ns) (grouped into LUT with out node xor_ln51_187)   --->   "%or_ln51_185 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_152, i25 %lshr_ln51_245" [sha256.cpp:51]   --->   Operation 2713 'bitconcatenate' 'or_ln51_185' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2714 [1/1] (0.00ns) (grouped into LUT with out node xor_ln51_187)   --->   "%lshr_ln51_246 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_47, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2714 'partselect' 'lshr_ln51_246' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2715 [1/1] (0.00ns) (grouped into LUT with out node xor_ln51_187)   --->   "%trunc_ln51_153 = trunc i32 %m_47" [sha256.cpp:51]   --->   Operation 2715 'trunc' 'trunc_ln51_153' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2716 [1/1] (0.00ns) (grouped into LUT with out node xor_ln51_187)   --->   "%or_ln51_186 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_153, i14 %lshr_ln51_246" [sha256.cpp:51]   --->   Operation 2716 'bitconcatenate' 'or_ln51_186' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2717 [1/1] (0.00ns) (grouped into LUT with out node xor_ln51_187)   --->   "%lshr_ln51_247 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_47, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2717 'partselect' 'lshr_ln51_247' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2718 [1/1] (0.00ns) (grouped into LUT with out node xor_ln51_187)   --->   "%zext_ln51_93 = zext i29 %lshr_ln51_247" [sha256.cpp:51]   --->   Operation 2718 'zext' 'zext_ln51_93' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2719 [1/1] (0.00ns) (grouped into LUT with out node xor_ln51_187)   --->   "%xor_ln51_186 = xor i32 %zext_ln51_93, i32 %or_ln51_186" [sha256.cpp:51]   --->   Operation 2719 'xor' 'xor_ln51_186' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2720 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln51_187 = xor i32 %xor_ln51_186, i32 %or_ln51_185" [sha256.cpp:51]   --->   Operation 2720 'xor' 'xor_ln51_187' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2721 [1/1] (0.00ns) (grouped into LUT with out node xor_ln51_191)   --->   "%lshr_ln51_251 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_48, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2721 'partselect' 'lshr_ln51_251' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2722 [1/1] (0.00ns) (grouped into LUT with out node xor_ln51_191)   --->   "%trunc_ln51_156 = trunc i32 %m_48" [sha256.cpp:51]   --->   Operation 2722 'trunc' 'trunc_ln51_156' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2723 [1/1] (0.00ns) (grouped into LUT with out node xor_ln51_191)   --->   "%or_ln51_189 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_156, i25 %lshr_ln51_251" [sha256.cpp:51]   --->   Operation 2723 'bitconcatenate' 'or_ln51_189' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2724 [1/1] (0.00ns) (grouped into LUT with out node xor_ln51_191)   --->   "%lshr_ln51_252 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_48, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2724 'partselect' 'lshr_ln51_252' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2725 [1/1] (0.00ns) (grouped into LUT with out node xor_ln51_191)   --->   "%trunc_ln51_157 = trunc i32 %m_48" [sha256.cpp:51]   --->   Operation 2725 'trunc' 'trunc_ln51_157' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2726 [1/1] (0.00ns) (grouped into LUT with out node xor_ln51_191)   --->   "%or_ln51_190 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_157, i14 %lshr_ln51_252" [sha256.cpp:51]   --->   Operation 2726 'bitconcatenate' 'or_ln51_190' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2727 [1/1] (0.00ns) (grouped into LUT with out node xor_ln51_191)   --->   "%lshr_ln51_253 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_48, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2727 'partselect' 'lshr_ln51_253' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2728 [1/1] (0.00ns) (grouped into LUT with out node xor_ln51_191)   --->   "%zext_ln51_95 = zext i29 %lshr_ln51_253" [sha256.cpp:51]   --->   Operation 2728 'zext' 'zext_ln51_95' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2729 [1/1] (0.00ns) (grouped into LUT with out node xor_ln51_191)   --->   "%xor_ln51_190 = xor i32 %zext_ln51_95, i32 %or_ln51_190" [sha256.cpp:51]   --->   Operation 2729 'xor' 'xor_ln51_190' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2730 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln51_191 = xor i32 %xor_ln51_190, i32 %or_ln51_189" [sha256.cpp:51]   --->   Operation 2730 'xor' 'xor_ln51_191' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2731 [1/1] (0.28ns)   --->   "%and_ln66_89 = and i32 %a_76, i32 %a_75" [sha256.cpp:66]   --->   Operation 2731 'and' 'and_ln66_89' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2732 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_179)   --->   "%and_ln66_90 = and i32 %a_76, i32 %a_74" [sha256.cpp:66]   --->   Operation 2732 'and' 'and_ln66_90' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2733 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_179)   --->   "%xor_ln66_178 = xor i32 %and_ln66_87, i32 %and_ln66_90" [sha256.cpp:66]   --->   Operation 2733 'xor' 'xor_ln66_178' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2734 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_179 = xor i32 %xor_ln66_178, i32 %and_ln66_89" [sha256.cpp:66]   --->   Operation 2734 'xor' 'xor_ln66_179' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2735 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_88 = add i32 %xor_ln66_179, i32 %t1_44" [sha256.cpp:74]   --->   Operation 2735 'add' 'add_ln74_88' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2736 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_77 = add i32 %add_ln74_88, i32 %xor_ln66_177" [sha256.cpp:74]   --->   Operation 2736 'add' 'a_77' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2737 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_181)   --->   "%lshr_ln66_134 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_77, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 2737 'partselect' 'lshr_ln66_134' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2738 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_181)   --->   "%trunc_ln66_135 = trunc i32 %a_77" [sha256.cpp:66]   --->   Operation 2738 'trunc' 'trunc_ln66_135' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2739 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_181)   --->   "%or_ln66_134 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_135, i30 %lshr_ln66_134" [sha256.cpp:66]   --->   Operation 2739 'bitconcatenate' 'or_ln66_134' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2740 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_181)   --->   "%lshr_ln66_135 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_77, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 2740 'partselect' 'lshr_ln66_135' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2741 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_181)   --->   "%trunc_ln66_136 = trunc i32 %a_77" [sha256.cpp:66]   --->   Operation 2741 'trunc' 'trunc_ln66_136' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2742 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_181)   --->   "%or_ln66_135 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_136, i19 %lshr_ln66_135" [sha256.cpp:66]   --->   Operation 2742 'bitconcatenate' 'or_ln66_135' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2743 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_181)   --->   "%lshr_ln66_136 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_77, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 2743 'partselect' 'lshr_ln66_136' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2744 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_181)   --->   "%trunc_ln66_137 = trunc i32 %a_77" [sha256.cpp:66]   --->   Operation 2744 'trunc' 'trunc_ln66_137' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2745 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_181)   --->   "%or_ln66_136 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_137, i10 %lshr_ln66_136" [sha256.cpp:66]   --->   Operation 2745 'bitconcatenate' 'or_ln66_136' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2746 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_181)   --->   "%xor_ln66_180 = xor i32 %or_ln66_134, i32 %or_ln66_135" [sha256.cpp:66]   --->   Operation 2746 'xor' 'xor_ln66_180' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2747 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_181 = xor i32 %xor_ln66_180, i32 %or_ln66_136" [sha256.cpp:66]   --->   Operation 2747 'xor' 'xor_ln66_181' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2748 [1/1] (0.28ns)   --->   "%and_ln66_91 = and i32 %a_77, i32 %a_76" [sha256.cpp:66]   --->   Operation 2748 'and' 'and_ln66_91' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2749 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_183)   --->   "%and_ln66_92 = and i32 %a_77, i32 %a_75" [sha256.cpp:66]   --->   Operation 2749 'and' 'and_ln66_92' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2750 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_183)   --->   "%xor_ln66_182 = xor i32 %and_ln66_89, i32 %and_ln66_92" [sha256.cpp:66]   --->   Operation 2750 'xor' 'xor_ln66_182' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2751 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_183 = xor i32 %xor_ln66_182, i32 %and_ln66_91" [sha256.cpp:66]   --->   Operation 2751 'xor' 'xor_ln66_183' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2752 [1/1] (1.14ns)   --->   "%e_78 = add i32 %t1_45, i32 %a_74" [sha256.cpp:70]   --->   Operation 2752 'add' 'e_78' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2753 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_90 = add i32 %xor_ln66_183, i32 %t1_45" [sha256.cpp:74]   --->   Operation 2753 'add' 'add_ln74_90' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2754 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_78 = add i32 %add_ln74_90, i32 %xor_ln66_181" [sha256.cpp:74]   --->   Operation 2754 'add' 'a_78' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2755 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_185)   --->   "%lshr_ln65_137 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_78, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 2755 'partselect' 'lshr_ln65_137' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2756 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_185)   --->   "%trunc_ln65_138 = trunc i32 %e_78" [sha256.cpp:65]   --->   Operation 2756 'trunc' 'trunc_ln65_138' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2757 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_185)   --->   "%or_ln65_137 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_138, i26 %lshr_ln65_137" [sha256.cpp:65]   --->   Operation 2757 'bitconcatenate' 'or_ln65_137' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2758 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_185)   --->   "%lshr_ln65_138 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_78, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 2758 'partselect' 'lshr_ln65_138' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2759 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_185)   --->   "%trunc_ln65_139 = trunc i32 %e_78" [sha256.cpp:65]   --->   Operation 2759 'trunc' 'trunc_ln65_139' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2760 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_185)   --->   "%or_ln65_138 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_139, i21 %lshr_ln65_138" [sha256.cpp:65]   --->   Operation 2760 'bitconcatenate' 'or_ln65_138' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2761 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_185)   --->   "%lshr_ln65_139 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_78, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 2761 'partselect' 'lshr_ln65_139' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2762 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_185)   --->   "%trunc_ln65_140 = trunc i32 %e_78" [sha256.cpp:65]   --->   Operation 2762 'trunc' 'trunc_ln65_140' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2763 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_185)   --->   "%or_ln65_139 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_140, i7 %lshr_ln65_139" [sha256.cpp:65]   --->   Operation 2763 'bitconcatenate' 'or_ln65_139' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2764 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_185)   --->   "%xor_ln65_184 = xor i32 %or_ln65_137, i32 %or_ln65_138" [sha256.cpp:65]   --->   Operation 2764 'xor' 'xor_ln65_184' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2765 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_185 = xor i32 %xor_ln65_184, i32 %or_ln65_139" [sha256.cpp:65]   --->   Operation 2765 'xor' 'xor_ln65_185' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2766 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_187)   --->   "%and_ln65_92 = and i32 %e_78, i32 %e_77" [sha256.cpp:65]   --->   Operation 2766 'and' 'and_ln65_92' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2767 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_187)   --->   "%xor_ln65_186 = xor i32 %e_78, i32 4294967295" [sha256.cpp:65]   --->   Operation 2767 'xor' 'xor_ln65_186' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2768 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_187)   --->   "%and_ln65_93 = and i32 %e_76, i32 %xor_ln65_186" [sha256.cpp:65]   --->   Operation 2768 'and' 'and_ln65_93' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2769 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_187 = xor i32 %and_ln65_92, i32 %and_ln65_93" [sha256.cpp:65]   --->   Operation 2769 'xor' 'xor_ln65_187' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2770 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_184 = add i32 %xor_ln65_187, i32 %e_75" [sha256.cpp:65]   --->   Operation 2770 'add' 'add_ln65_184' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2771 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_185 = add i32 %xor_ln65_185, i32 4094571909" [sha256.cpp:65]   --->   Operation 2771 'add' 'add_ln65_185' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2772 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_186 = add i32 %add_ln65_185, i32 %m_46" [sha256.cpp:65]   --->   Operation 2772 'add' 'add_ln65_186' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2773 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_46 = add i32 %add_ln65_186, i32 %add_ln65_184" [sha256.cpp:65]   --->   Operation 2773 'add' 't1_46' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2774 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_185)   --->   "%lshr_ln66_137 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_78, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 2774 'partselect' 'lshr_ln66_137' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2775 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_185)   --->   "%trunc_ln66_138 = trunc i32 %a_78" [sha256.cpp:66]   --->   Operation 2775 'trunc' 'trunc_ln66_138' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2776 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_185)   --->   "%or_ln66_137 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_138, i30 %lshr_ln66_137" [sha256.cpp:66]   --->   Operation 2776 'bitconcatenate' 'or_ln66_137' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2777 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_185)   --->   "%lshr_ln66_138 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_78, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 2777 'partselect' 'lshr_ln66_138' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2778 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_185)   --->   "%trunc_ln66_139 = trunc i32 %a_78" [sha256.cpp:66]   --->   Operation 2778 'trunc' 'trunc_ln66_139' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2779 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_185)   --->   "%or_ln66_138 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_139, i19 %lshr_ln66_138" [sha256.cpp:66]   --->   Operation 2779 'bitconcatenate' 'or_ln66_138' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2780 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_185)   --->   "%lshr_ln66_139 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_78, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 2780 'partselect' 'lshr_ln66_139' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2781 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_185)   --->   "%trunc_ln66_140 = trunc i32 %a_78" [sha256.cpp:66]   --->   Operation 2781 'trunc' 'trunc_ln66_140' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2782 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_185)   --->   "%or_ln66_139 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_140, i10 %lshr_ln66_139" [sha256.cpp:66]   --->   Operation 2782 'bitconcatenate' 'or_ln66_139' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2783 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_185)   --->   "%xor_ln66_184 = xor i32 %or_ln66_137, i32 %or_ln66_138" [sha256.cpp:66]   --->   Operation 2783 'xor' 'xor_ln66_184' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2784 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_185 = xor i32 %xor_ln66_184, i32 %or_ln66_139" [sha256.cpp:66]   --->   Operation 2784 'xor' 'xor_ln66_185' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2785 [1/1] (1.14ns)   --->   "%e_79 = add i32 %t1_46, i32 %a_75" [sha256.cpp:70]   --->   Operation 2785 'add' 'e_79' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2786 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_189)   --->   "%lshr_ln65_140 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_79, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 2786 'partselect' 'lshr_ln65_140' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2787 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_189)   --->   "%trunc_ln65_141 = trunc i32 %e_79" [sha256.cpp:65]   --->   Operation 2787 'trunc' 'trunc_ln65_141' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2788 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_189)   --->   "%or_ln65_140 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_141, i26 %lshr_ln65_140" [sha256.cpp:65]   --->   Operation 2788 'bitconcatenate' 'or_ln65_140' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2789 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_189)   --->   "%lshr_ln65_141 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_79, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 2789 'partselect' 'lshr_ln65_141' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2790 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_189)   --->   "%trunc_ln65_142 = trunc i32 %e_79" [sha256.cpp:65]   --->   Operation 2790 'trunc' 'trunc_ln65_142' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2791 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_189)   --->   "%or_ln65_141 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_142, i21 %lshr_ln65_141" [sha256.cpp:65]   --->   Operation 2791 'bitconcatenate' 'or_ln65_141' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2792 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_189)   --->   "%lshr_ln65_142 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_79, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 2792 'partselect' 'lshr_ln65_142' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2793 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_189)   --->   "%trunc_ln65_143 = trunc i32 %e_79" [sha256.cpp:65]   --->   Operation 2793 'trunc' 'trunc_ln65_143' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2794 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_189)   --->   "%or_ln65_142 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_143, i7 %lshr_ln65_142" [sha256.cpp:65]   --->   Operation 2794 'bitconcatenate' 'or_ln65_142' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 2795 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_189)   --->   "%xor_ln65_188 = xor i32 %or_ln65_140, i32 %or_ln65_141" [sha256.cpp:65]   --->   Operation 2795 'xor' 'xor_ln65_188' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2796 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_189 = xor i32 %xor_ln65_188, i32 %or_ln65_142" [sha256.cpp:65]   --->   Operation 2796 'xor' 'xor_ln65_189' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2797 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_191)   --->   "%and_ln65_94 = and i32 %e_79, i32 %e_78" [sha256.cpp:65]   --->   Operation 2797 'and' 'and_ln65_94' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2798 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_191)   --->   "%xor_ln65_190 = xor i32 %e_79, i32 4294967295" [sha256.cpp:65]   --->   Operation 2798 'xor' 'xor_ln65_190' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2799 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_191)   --->   "%and_ln65_95 = and i32 %e_77, i32 %xor_ln65_190" [sha256.cpp:65]   --->   Operation 2799 'and' 'and_ln65_95' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2800 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_191 = xor i32 %and_ln65_94, i32 %and_ln65_95" [sha256.cpp:65]   --->   Operation 2800 'xor' 'xor_ln65_191' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 2801 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_188 = add i32 %xor_ln65_191, i32 %e_76" [sha256.cpp:65]   --->   Operation 2801 'add' 'add_ln65_188' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2802 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_189 = add i32 %xor_ln65_189, i32 275423344" [sha256.cpp:65]   --->   Operation 2802 'add' 'add_ln65_189' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2803 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_190 = add i32 %add_ln65_189, i32 %m_47" [sha256.cpp:65]   --->   Operation 2803 'add' 'add_ln65_190' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_33 : Operation 2804 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_47 = add i32 %add_ln65_190, i32 %add_ln65_188" [sha256.cpp:65]   --->   Operation 2804 'add' 't1_47' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 34 <SV = 33> <Delay = 6.49>
ST_34 : Operation 2805 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_105 = add i32 %m_35, i32 %m_44" [sha256.cpp:51]   --->   Operation 2805 'add' 'add_ln51_105' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 2806 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_51 = add i32 %add_ln51_106, i32 %add_ln51_105" [sha256.cpp:51]   --->   Operation 2806 'add' 'm_51' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 2807 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_108 = add i32 %m_36, i32 %m_45" [sha256.cpp:51]   --->   Operation 2807 'add' 'add_ln51_108' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 2808 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_52 = add i32 %add_ln51_109, i32 %add_ln51_108" [sha256.cpp:51]   --->   Operation 2808 'add' 'm_52' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 2809 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_112)   --->   "%lshr_ln51_188 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_51, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 2809 'partselect' 'lshr_ln51_188' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2810 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_112)   --->   "%trunc_ln51_114 = trunc i32 %m_51" [sha256.cpp:51]   --->   Operation 2810 'trunc' 'trunc_ln51_114' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2811 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_112)   --->   "%or_ln51_147 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_114, i15 %lshr_ln51_188" [sha256.cpp:51]   --->   Operation 2811 'bitconcatenate' 'or_ln51_147' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2812 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_112)   --->   "%lshr_ln51_189 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_51, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 2812 'partselect' 'lshr_ln51_189' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2813 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_112)   --->   "%trunc_ln51_115 = trunc i32 %m_51" [sha256.cpp:51]   --->   Operation 2813 'trunc' 'trunc_ln51_115' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2814 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_112)   --->   "%or_ln51_148 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_115, i13 %lshr_ln51_189" [sha256.cpp:51]   --->   Operation 2814 'bitconcatenate' 'or_ln51_148' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2815 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_112)   --->   "%lshr_ln51_190 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_51, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 2815 'partselect' 'lshr_ln51_190' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2816 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_112)   --->   "%zext_ln51_74 = zext i22 %lshr_ln51_190" [sha256.cpp:51]   --->   Operation 2816 'zext' 'zext_ln51_74' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2817 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_112)   --->   "%xor_ln51_148 = xor i32 %zext_ln51_74, i32 %or_ln51_148" [sha256.cpp:51]   --->   Operation 2817 'xor' 'xor_ln51_148' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2818 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_112)   --->   "%xor_ln51_149 = xor i32 %xor_ln51_148, i32 %or_ln51_147" [sha256.cpp:51]   --->   Operation 2818 'xor' 'xor_ln51_149' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2819 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_112)   --->   "%lshr_ln51_191 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_38, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2819 'partselect' 'lshr_ln51_191' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2820 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_112)   --->   "%trunc_ln51_116 = trunc i32 %m_38" [sha256.cpp:51]   --->   Operation 2820 'trunc' 'trunc_ln51_116' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2821 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_112)   --->   "%or_ln51_149 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_116, i25 %lshr_ln51_191" [sha256.cpp:51]   --->   Operation 2821 'bitconcatenate' 'or_ln51_149' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2822 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_112)   --->   "%lshr_ln51_192 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_38, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2822 'partselect' 'lshr_ln51_192' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2823 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_112)   --->   "%trunc_ln51_117 = trunc i32 %m_38" [sha256.cpp:51]   --->   Operation 2823 'trunc' 'trunc_ln51_117' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2824 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_112)   --->   "%or_ln51_150 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_117, i14 %lshr_ln51_192" [sha256.cpp:51]   --->   Operation 2824 'bitconcatenate' 'or_ln51_150' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2825 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_112)   --->   "%lshr_ln51_193 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_38, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2825 'partselect' 'lshr_ln51_193' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2826 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_112)   --->   "%zext_ln51_75 = zext i29 %lshr_ln51_193" [sha256.cpp:51]   --->   Operation 2826 'zext' 'zext_ln51_75' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2827 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_112)   --->   "%xor_ln51_150 = xor i32 %zext_ln51_75, i32 %or_ln51_150" [sha256.cpp:51]   --->   Operation 2827 'xor' 'xor_ln51_150' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2828 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_112)   --->   "%xor_ln51_151 = xor i32 %xor_ln51_150, i32 %or_ln51_149" [sha256.cpp:51]   --->   Operation 2828 'xor' 'xor_ln51_151' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2829 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_111 = add i32 %m_37, i32 %m_46" [sha256.cpp:51]   --->   Operation 2829 'add' 'add_ln51_111' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 2830 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_112 = add i32 %xor_ln51_151, i32 %xor_ln51_149" [sha256.cpp:51]   --->   Operation 2830 'add' 'add_ln51_112' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2831 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_53 = add i32 %add_ln51_112, i32 %add_ln51_111" [sha256.cpp:51]   --->   Operation 2831 'add' 'm_53' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 2832 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_115)   --->   "%lshr_ln51_194 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_52, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 2832 'partselect' 'lshr_ln51_194' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2833 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_115)   --->   "%trunc_ln51_118 = trunc i32 %m_52" [sha256.cpp:51]   --->   Operation 2833 'trunc' 'trunc_ln51_118' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2834 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_115)   --->   "%or_ln51_151 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_118, i15 %lshr_ln51_194" [sha256.cpp:51]   --->   Operation 2834 'bitconcatenate' 'or_ln51_151' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2835 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_115)   --->   "%lshr_ln51_195 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_52, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 2835 'partselect' 'lshr_ln51_195' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2836 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_115)   --->   "%trunc_ln51_119 = trunc i32 %m_52" [sha256.cpp:51]   --->   Operation 2836 'trunc' 'trunc_ln51_119' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2837 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_115)   --->   "%or_ln51_152 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_119, i13 %lshr_ln51_195" [sha256.cpp:51]   --->   Operation 2837 'bitconcatenate' 'or_ln51_152' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2838 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_115)   --->   "%lshr_ln51_196 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_52, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 2838 'partselect' 'lshr_ln51_196' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2839 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_115)   --->   "%zext_ln51_76 = zext i22 %lshr_ln51_196" [sha256.cpp:51]   --->   Operation 2839 'zext' 'zext_ln51_76' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2840 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_115)   --->   "%xor_ln51_152 = xor i32 %zext_ln51_76, i32 %or_ln51_152" [sha256.cpp:51]   --->   Operation 2840 'xor' 'xor_ln51_152' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2841 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_115)   --->   "%xor_ln51_153 = xor i32 %xor_ln51_152, i32 %or_ln51_151" [sha256.cpp:51]   --->   Operation 2841 'xor' 'xor_ln51_153' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2842 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_115)   --->   "%lshr_ln51_197 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_39, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2842 'partselect' 'lshr_ln51_197' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2843 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_115)   --->   "%trunc_ln51_120 = trunc i32 %m_39" [sha256.cpp:51]   --->   Operation 2843 'trunc' 'trunc_ln51_120' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2844 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_115)   --->   "%or_ln51_153 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_120, i25 %lshr_ln51_197" [sha256.cpp:51]   --->   Operation 2844 'bitconcatenate' 'or_ln51_153' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2845 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_115)   --->   "%lshr_ln51_198 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_39, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2845 'partselect' 'lshr_ln51_198' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2846 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_115)   --->   "%trunc_ln51_121 = trunc i32 %m_39" [sha256.cpp:51]   --->   Operation 2846 'trunc' 'trunc_ln51_121' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2847 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_115)   --->   "%or_ln51_154 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_121, i14 %lshr_ln51_198" [sha256.cpp:51]   --->   Operation 2847 'bitconcatenate' 'or_ln51_154' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2848 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_115)   --->   "%lshr_ln51_199 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_39, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2848 'partselect' 'lshr_ln51_199' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2849 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_115)   --->   "%zext_ln51_77 = zext i29 %lshr_ln51_199" [sha256.cpp:51]   --->   Operation 2849 'zext' 'zext_ln51_77' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2850 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_115)   --->   "%xor_ln51_154 = xor i32 %zext_ln51_77, i32 %or_ln51_154" [sha256.cpp:51]   --->   Operation 2850 'xor' 'xor_ln51_154' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2851 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_115)   --->   "%xor_ln51_155 = xor i32 %xor_ln51_154, i32 %or_ln51_153" [sha256.cpp:51]   --->   Operation 2851 'xor' 'xor_ln51_155' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2852 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_114 = add i32 %m_38, i32 %m_47" [sha256.cpp:51]   --->   Operation 2852 'add' 'add_ln51_114' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 2853 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_115 = add i32 %xor_ln51_155, i32 %xor_ln51_153" [sha256.cpp:51]   --->   Operation 2853 'add' 'add_ln51_115' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2854 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_54 = add i32 %add_ln51_115, i32 %add_ln51_114" [sha256.cpp:51]   --->   Operation 2854 'add' 'm_54' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 2855 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_118)   --->   "%lshr_ln51_200 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_53, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 2855 'partselect' 'lshr_ln51_200' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2856 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_118)   --->   "%trunc_ln51_122 = trunc i32 %m_53" [sha256.cpp:51]   --->   Operation 2856 'trunc' 'trunc_ln51_122' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2857 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_118)   --->   "%or_ln51_155 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_122, i15 %lshr_ln51_200" [sha256.cpp:51]   --->   Operation 2857 'bitconcatenate' 'or_ln51_155' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2858 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_118)   --->   "%lshr_ln51_201 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_53, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 2858 'partselect' 'lshr_ln51_201' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2859 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_118)   --->   "%trunc_ln51_123 = trunc i32 %m_53" [sha256.cpp:51]   --->   Operation 2859 'trunc' 'trunc_ln51_123' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2860 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_118)   --->   "%or_ln51_156 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_123, i13 %lshr_ln51_201" [sha256.cpp:51]   --->   Operation 2860 'bitconcatenate' 'or_ln51_156' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2861 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_118)   --->   "%lshr_ln51_202 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_53, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 2861 'partselect' 'lshr_ln51_202' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2862 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_118)   --->   "%zext_ln51_78 = zext i22 %lshr_ln51_202" [sha256.cpp:51]   --->   Operation 2862 'zext' 'zext_ln51_78' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2863 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_118)   --->   "%xor_ln51_156 = xor i32 %zext_ln51_78, i32 %or_ln51_156" [sha256.cpp:51]   --->   Operation 2863 'xor' 'xor_ln51_156' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2864 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_118)   --->   "%xor_ln51_157 = xor i32 %xor_ln51_156, i32 %or_ln51_155" [sha256.cpp:51]   --->   Operation 2864 'xor' 'xor_ln51_157' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2865 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_118)   --->   "%lshr_ln51_203 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_40, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2865 'partselect' 'lshr_ln51_203' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2866 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_118)   --->   "%trunc_ln51_124 = trunc i32 %m_40" [sha256.cpp:51]   --->   Operation 2866 'trunc' 'trunc_ln51_124' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2867 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_118)   --->   "%or_ln51_157 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_124, i25 %lshr_ln51_203" [sha256.cpp:51]   --->   Operation 2867 'bitconcatenate' 'or_ln51_157' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2868 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_118)   --->   "%lshr_ln51_204 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_40, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2868 'partselect' 'lshr_ln51_204' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2869 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_118)   --->   "%trunc_ln51_125 = trunc i32 %m_40" [sha256.cpp:51]   --->   Operation 2869 'trunc' 'trunc_ln51_125' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2870 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_118)   --->   "%or_ln51_158 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_125, i14 %lshr_ln51_204" [sha256.cpp:51]   --->   Operation 2870 'bitconcatenate' 'or_ln51_158' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2871 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_118)   --->   "%lshr_ln51_205 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_40, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2871 'partselect' 'lshr_ln51_205' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2872 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_118)   --->   "%zext_ln51_79 = zext i29 %lshr_ln51_205" [sha256.cpp:51]   --->   Operation 2872 'zext' 'zext_ln51_79' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2873 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_118)   --->   "%xor_ln51_158 = xor i32 %zext_ln51_79, i32 %or_ln51_158" [sha256.cpp:51]   --->   Operation 2873 'xor' 'xor_ln51_158' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2874 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_118)   --->   "%xor_ln51_159 = xor i32 %xor_ln51_158, i32 %or_ln51_157" [sha256.cpp:51]   --->   Operation 2874 'xor' 'xor_ln51_159' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2875 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_117 = add i32 %m_39, i32 %m_48" [sha256.cpp:51]   --->   Operation 2875 'add' 'add_ln51_117' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 2876 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_118 = add i32 %xor_ln51_159, i32 %xor_ln51_157" [sha256.cpp:51]   --->   Operation 2876 'add' 'add_ln51_118' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2877 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_55 = add i32 %add_ln51_118, i32 %add_ln51_117" [sha256.cpp:51]   --->   Operation 2877 'add' 'm_55' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 2878 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_121)   --->   "%lshr_ln51_206 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_54, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 2878 'partselect' 'lshr_ln51_206' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2879 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_121)   --->   "%trunc_ln51_126 = trunc i32 %m_54" [sha256.cpp:51]   --->   Operation 2879 'trunc' 'trunc_ln51_126' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2880 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_121)   --->   "%or_ln51_159 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_126, i15 %lshr_ln51_206" [sha256.cpp:51]   --->   Operation 2880 'bitconcatenate' 'or_ln51_159' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2881 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_121)   --->   "%lshr_ln51_207 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_54, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 2881 'partselect' 'lshr_ln51_207' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2882 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_121)   --->   "%trunc_ln51_127 = trunc i32 %m_54" [sha256.cpp:51]   --->   Operation 2882 'trunc' 'trunc_ln51_127' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2883 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_121)   --->   "%or_ln51_160 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_127, i13 %lshr_ln51_207" [sha256.cpp:51]   --->   Operation 2883 'bitconcatenate' 'or_ln51_160' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2884 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_121)   --->   "%lshr_ln51_208 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_54, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 2884 'partselect' 'lshr_ln51_208' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2885 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_121)   --->   "%zext_ln51_80 = zext i22 %lshr_ln51_208" [sha256.cpp:51]   --->   Operation 2885 'zext' 'zext_ln51_80' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2886 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_121)   --->   "%xor_ln51_160 = xor i32 %zext_ln51_80, i32 %or_ln51_160" [sha256.cpp:51]   --->   Operation 2886 'xor' 'xor_ln51_160' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2887 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_121)   --->   "%xor_ln51_161 = xor i32 %xor_ln51_160, i32 %or_ln51_159" [sha256.cpp:51]   --->   Operation 2887 'xor' 'xor_ln51_161' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2888 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_121)   --->   "%lshr_ln51_209 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_41, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2888 'partselect' 'lshr_ln51_209' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2889 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_121)   --->   "%trunc_ln51_128 = trunc i32 %m_41" [sha256.cpp:51]   --->   Operation 2889 'trunc' 'trunc_ln51_128' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2890 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_121)   --->   "%or_ln51_161 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_128, i25 %lshr_ln51_209" [sha256.cpp:51]   --->   Operation 2890 'bitconcatenate' 'or_ln51_161' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2891 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_121)   --->   "%lshr_ln51_210 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_41, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2891 'partselect' 'lshr_ln51_210' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2892 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_121)   --->   "%trunc_ln51_129 = trunc i32 %m_41" [sha256.cpp:51]   --->   Operation 2892 'trunc' 'trunc_ln51_129' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2893 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_121)   --->   "%or_ln51_162 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_129, i14 %lshr_ln51_210" [sha256.cpp:51]   --->   Operation 2893 'bitconcatenate' 'or_ln51_162' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2894 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_121)   --->   "%lshr_ln51_211 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_41, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2894 'partselect' 'lshr_ln51_211' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2895 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_121)   --->   "%zext_ln51_81 = zext i29 %lshr_ln51_211" [sha256.cpp:51]   --->   Operation 2895 'zext' 'zext_ln51_81' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2896 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_121)   --->   "%xor_ln51_162 = xor i32 %zext_ln51_81, i32 %or_ln51_162" [sha256.cpp:51]   --->   Operation 2896 'xor' 'xor_ln51_162' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2897 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_121)   --->   "%xor_ln51_163 = xor i32 %xor_ln51_162, i32 %or_ln51_161" [sha256.cpp:51]   --->   Operation 2897 'xor' 'xor_ln51_163' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2898 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_120 = add i32 %m_40, i32 %m_49" [sha256.cpp:51]   --->   Operation 2898 'add' 'add_ln51_120' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 2899 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_121 = add i32 %xor_ln51_163, i32 %xor_ln51_161" [sha256.cpp:51]   --->   Operation 2899 'add' 'add_ln51_121' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2900 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_56 = add i32 %add_ln51_121, i32 %add_ln51_120" [sha256.cpp:51]   --->   Operation 2900 'add' 'm_56' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 2901 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_124)   --->   "%lshr_ln51_212 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_55, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 2901 'partselect' 'lshr_ln51_212' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2902 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_124)   --->   "%trunc_ln51_130 = trunc i32 %m_55" [sha256.cpp:51]   --->   Operation 2902 'trunc' 'trunc_ln51_130' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2903 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_124)   --->   "%or_ln51_163 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_130, i15 %lshr_ln51_212" [sha256.cpp:51]   --->   Operation 2903 'bitconcatenate' 'or_ln51_163' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2904 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_124)   --->   "%lshr_ln51_213 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_55, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 2904 'partselect' 'lshr_ln51_213' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2905 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_124)   --->   "%trunc_ln51_131 = trunc i32 %m_55" [sha256.cpp:51]   --->   Operation 2905 'trunc' 'trunc_ln51_131' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2906 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_124)   --->   "%or_ln51_164 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_131, i13 %lshr_ln51_213" [sha256.cpp:51]   --->   Operation 2906 'bitconcatenate' 'or_ln51_164' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2907 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_124)   --->   "%lshr_ln51_214 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_55, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 2907 'partselect' 'lshr_ln51_214' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2908 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_124)   --->   "%zext_ln51_82 = zext i22 %lshr_ln51_214" [sha256.cpp:51]   --->   Operation 2908 'zext' 'zext_ln51_82' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2909 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_124)   --->   "%xor_ln51_164 = xor i32 %zext_ln51_82, i32 %or_ln51_164" [sha256.cpp:51]   --->   Operation 2909 'xor' 'xor_ln51_164' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2910 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_124)   --->   "%xor_ln51_165 = xor i32 %xor_ln51_164, i32 %or_ln51_163" [sha256.cpp:51]   --->   Operation 2910 'xor' 'xor_ln51_165' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2911 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_124)   --->   "%lshr_ln51_215 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_42, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2911 'partselect' 'lshr_ln51_215' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2912 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_124)   --->   "%trunc_ln51_132 = trunc i32 %m_42" [sha256.cpp:51]   --->   Operation 2912 'trunc' 'trunc_ln51_132' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2913 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_124)   --->   "%or_ln51_165 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_132, i25 %lshr_ln51_215" [sha256.cpp:51]   --->   Operation 2913 'bitconcatenate' 'or_ln51_165' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2914 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_124)   --->   "%lshr_ln51_216 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_42, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2914 'partselect' 'lshr_ln51_216' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2915 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_124)   --->   "%trunc_ln51_133 = trunc i32 %m_42" [sha256.cpp:51]   --->   Operation 2915 'trunc' 'trunc_ln51_133' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2916 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_124)   --->   "%or_ln51_166 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_133, i14 %lshr_ln51_216" [sha256.cpp:51]   --->   Operation 2916 'bitconcatenate' 'or_ln51_166' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2917 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_124)   --->   "%lshr_ln51_217 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_42, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2917 'partselect' 'lshr_ln51_217' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2918 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_124)   --->   "%zext_ln51_83 = zext i29 %lshr_ln51_217" [sha256.cpp:51]   --->   Operation 2918 'zext' 'zext_ln51_83' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2919 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_124)   --->   "%xor_ln51_166 = xor i32 %zext_ln51_83, i32 %or_ln51_166" [sha256.cpp:51]   --->   Operation 2919 'xor' 'xor_ln51_166' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2920 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_124)   --->   "%xor_ln51_167 = xor i32 %xor_ln51_166, i32 %or_ln51_165" [sha256.cpp:51]   --->   Operation 2920 'xor' 'xor_ln51_167' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2921 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_124 = add i32 %xor_ln51_167, i32 %xor_ln51_165" [sha256.cpp:51]   --->   Operation 2921 'add' 'add_ln51_124' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2922 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_127)   --->   "%lshr_ln51_218 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_56, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 2922 'partselect' 'lshr_ln51_218' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2923 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_127)   --->   "%trunc_ln51_134 = trunc i32 %m_56" [sha256.cpp:51]   --->   Operation 2923 'trunc' 'trunc_ln51_134' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2924 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_127)   --->   "%or_ln51_167 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_134, i15 %lshr_ln51_218" [sha256.cpp:51]   --->   Operation 2924 'bitconcatenate' 'or_ln51_167' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2925 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_127)   --->   "%lshr_ln51_219 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_56, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 2925 'partselect' 'lshr_ln51_219' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2926 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_127)   --->   "%trunc_ln51_135 = trunc i32 %m_56" [sha256.cpp:51]   --->   Operation 2926 'trunc' 'trunc_ln51_135' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2927 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_127)   --->   "%or_ln51_168 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_135, i13 %lshr_ln51_219" [sha256.cpp:51]   --->   Operation 2927 'bitconcatenate' 'or_ln51_168' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2928 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_127)   --->   "%lshr_ln51_220 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_56, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 2928 'partselect' 'lshr_ln51_220' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2929 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_127)   --->   "%zext_ln51_84 = zext i22 %lshr_ln51_220" [sha256.cpp:51]   --->   Operation 2929 'zext' 'zext_ln51_84' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2930 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_127)   --->   "%xor_ln51_168 = xor i32 %zext_ln51_84, i32 %or_ln51_168" [sha256.cpp:51]   --->   Operation 2930 'xor' 'xor_ln51_168' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2931 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_127)   --->   "%xor_ln51_169 = xor i32 %xor_ln51_168, i32 %or_ln51_167" [sha256.cpp:51]   --->   Operation 2931 'xor' 'xor_ln51_169' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2932 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_127)   --->   "%lshr_ln51_221 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_43, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 2932 'partselect' 'lshr_ln51_221' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2933 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_127)   --->   "%trunc_ln51_136 = trunc i32 %m_43" [sha256.cpp:51]   --->   Operation 2933 'trunc' 'trunc_ln51_136' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2934 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_127)   --->   "%or_ln51_169 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_136, i25 %lshr_ln51_221" [sha256.cpp:51]   --->   Operation 2934 'bitconcatenate' 'or_ln51_169' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2935 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_127)   --->   "%lshr_ln51_222 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_43, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 2935 'partselect' 'lshr_ln51_222' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2936 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_127)   --->   "%trunc_ln51_137 = trunc i32 %m_43" [sha256.cpp:51]   --->   Operation 2936 'trunc' 'trunc_ln51_137' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2937 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_127)   --->   "%or_ln51_170 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_137, i14 %lshr_ln51_222" [sha256.cpp:51]   --->   Operation 2937 'bitconcatenate' 'or_ln51_170' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2938 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_127)   --->   "%lshr_ln51_223 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_43, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 2938 'partselect' 'lshr_ln51_223' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2939 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_127)   --->   "%zext_ln51_85 = zext i29 %lshr_ln51_223" [sha256.cpp:51]   --->   Operation 2939 'zext' 'zext_ln51_85' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2940 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_127)   --->   "%xor_ln51_170 = xor i32 %zext_ln51_85, i32 %or_ln51_170" [sha256.cpp:51]   --->   Operation 2940 'xor' 'xor_ln51_170' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2941 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_127)   --->   "%xor_ln51_171 = xor i32 %xor_ln51_170, i32 %or_ln51_169" [sha256.cpp:51]   --->   Operation 2941 'xor' 'xor_ln51_171' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2942 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_127 = add i32 %xor_ln51_171, i32 %xor_ln51_169" [sha256.cpp:51]   --->   Operation 2942 'add' 'add_ln51_127' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2943 [1/1] (0.28ns)   --->   "%and_ln66_93 = and i32 %a_78, i32 %a_77" [sha256.cpp:66]   --->   Operation 2943 'and' 'and_ln66_93' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2944 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_187)   --->   "%and_ln66_94 = and i32 %a_78, i32 %a_76" [sha256.cpp:66]   --->   Operation 2944 'and' 'and_ln66_94' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2945 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_187)   --->   "%xor_ln66_186 = xor i32 %and_ln66_91, i32 %and_ln66_94" [sha256.cpp:66]   --->   Operation 2945 'xor' 'xor_ln66_186' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2946 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_187 = xor i32 %xor_ln66_186, i32 %and_ln66_93" [sha256.cpp:66]   --->   Operation 2946 'xor' 'xor_ln66_187' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2947 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_92 = add i32 %xor_ln66_187, i32 %t1_46" [sha256.cpp:74]   --->   Operation 2947 'add' 'add_ln74_92' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 2948 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_79 = add i32 %add_ln74_92, i32 %xor_ln66_185" [sha256.cpp:74]   --->   Operation 2948 'add' 'a_79' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 2949 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_189)   --->   "%lshr_ln66_140 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_79, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 2949 'partselect' 'lshr_ln66_140' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2950 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_189)   --->   "%trunc_ln66_141 = trunc i32 %a_79" [sha256.cpp:66]   --->   Operation 2950 'trunc' 'trunc_ln66_141' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2951 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_189)   --->   "%or_ln66_140 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_141, i30 %lshr_ln66_140" [sha256.cpp:66]   --->   Operation 2951 'bitconcatenate' 'or_ln66_140' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2952 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_189)   --->   "%lshr_ln66_141 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_79, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 2952 'partselect' 'lshr_ln66_141' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2953 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_189)   --->   "%trunc_ln66_142 = trunc i32 %a_79" [sha256.cpp:66]   --->   Operation 2953 'trunc' 'trunc_ln66_142' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2954 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_189)   --->   "%or_ln66_141 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_142, i19 %lshr_ln66_141" [sha256.cpp:66]   --->   Operation 2954 'bitconcatenate' 'or_ln66_141' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2955 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_189)   --->   "%lshr_ln66_142 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_79, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 2955 'partselect' 'lshr_ln66_142' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2956 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_189)   --->   "%trunc_ln66_143 = trunc i32 %a_79" [sha256.cpp:66]   --->   Operation 2956 'trunc' 'trunc_ln66_143' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2957 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_189)   --->   "%or_ln66_142 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_143, i10 %lshr_ln66_142" [sha256.cpp:66]   --->   Operation 2957 'bitconcatenate' 'or_ln66_142' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2958 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_189)   --->   "%xor_ln66_188 = xor i32 %or_ln66_140, i32 %or_ln66_141" [sha256.cpp:66]   --->   Operation 2958 'xor' 'xor_ln66_188' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2959 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_189 = xor i32 %xor_ln66_188, i32 %or_ln66_142" [sha256.cpp:66]   --->   Operation 2959 'xor' 'xor_ln66_189' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2960 [1/1] (0.28ns)   --->   "%and_ln66_95 = and i32 %a_79, i32 %a_78" [sha256.cpp:66]   --->   Operation 2960 'and' 'and_ln66_95' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2961 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_191)   --->   "%and_ln66_96 = and i32 %a_79, i32 %a_77" [sha256.cpp:66]   --->   Operation 2961 'and' 'and_ln66_96' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2962 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_191)   --->   "%xor_ln66_190 = xor i32 %and_ln66_93, i32 %and_ln66_96" [sha256.cpp:66]   --->   Operation 2962 'xor' 'xor_ln66_190' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2963 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_191 = xor i32 %xor_ln66_190, i32 %and_ln66_95" [sha256.cpp:66]   --->   Operation 2963 'xor' 'xor_ln66_191' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2964 [1/1] (1.14ns)   --->   "%e_80 = add i32 %t1_47, i32 %a_76" [sha256.cpp:70]   --->   Operation 2964 'add' 'e_80' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2965 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_94 = add i32 %xor_ln66_191, i32 %t1_47" [sha256.cpp:74]   --->   Operation 2965 'add' 'add_ln74_94' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 2966 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_80 = add i32 %add_ln74_94, i32 %xor_ln66_189" [sha256.cpp:74]   --->   Operation 2966 'add' 'a_80' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 2967 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_193)   --->   "%lshr_ln65_143 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_80, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 2967 'partselect' 'lshr_ln65_143' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2968 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_193)   --->   "%trunc_ln65_144 = trunc i32 %e_80" [sha256.cpp:65]   --->   Operation 2968 'trunc' 'trunc_ln65_144' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2969 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_193)   --->   "%or_ln65_143 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_144, i26 %lshr_ln65_143" [sha256.cpp:65]   --->   Operation 2969 'bitconcatenate' 'or_ln65_143' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2970 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_193)   --->   "%lshr_ln65_144 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_80, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 2970 'partselect' 'lshr_ln65_144' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2971 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_193)   --->   "%trunc_ln65_145 = trunc i32 %e_80" [sha256.cpp:65]   --->   Operation 2971 'trunc' 'trunc_ln65_145' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2972 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_193)   --->   "%or_ln65_144 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_145, i21 %lshr_ln65_144" [sha256.cpp:65]   --->   Operation 2972 'bitconcatenate' 'or_ln65_144' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2973 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_193)   --->   "%lshr_ln65_145 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_80, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 2973 'partselect' 'lshr_ln65_145' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2974 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_193)   --->   "%trunc_ln65_146 = trunc i32 %e_80" [sha256.cpp:65]   --->   Operation 2974 'trunc' 'trunc_ln65_146' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2975 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_193)   --->   "%or_ln65_145 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_146, i7 %lshr_ln65_145" [sha256.cpp:65]   --->   Operation 2975 'bitconcatenate' 'or_ln65_145' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2976 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_193)   --->   "%xor_ln65_192 = xor i32 %or_ln65_143, i32 %or_ln65_144" [sha256.cpp:65]   --->   Operation 2976 'xor' 'xor_ln65_192' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2977 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_193 = xor i32 %xor_ln65_192, i32 %or_ln65_145" [sha256.cpp:65]   --->   Operation 2977 'xor' 'xor_ln65_193' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2978 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_195)   --->   "%and_ln65_96 = and i32 %e_80, i32 %e_79" [sha256.cpp:65]   --->   Operation 2978 'and' 'and_ln65_96' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2979 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_195)   --->   "%xor_ln65_194 = xor i32 %e_80, i32 4294967295" [sha256.cpp:65]   --->   Operation 2979 'xor' 'xor_ln65_194' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2980 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_195)   --->   "%and_ln65_97 = and i32 %e_78, i32 %xor_ln65_194" [sha256.cpp:65]   --->   Operation 2980 'and' 'and_ln65_97' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2981 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_195 = xor i32 %and_ln65_96, i32 %and_ln65_97" [sha256.cpp:65]   --->   Operation 2981 'xor' 'xor_ln65_195' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2982 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_192 = add i32 %xor_ln65_195, i32 %e_77" [sha256.cpp:65]   --->   Operation 2982 'add' 'add_ln65_192' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 2983 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_193 = add i32 %xor_ln65_193, i32 430227734" [sha256.cpp:65]   --->   Operation 2983 'add' 'add_ln65_193' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 2984 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_194 = add i32 %add_ln65_193, i32 %m_48" [sha256.cpp:65]   --->   Operation 2984 'add' 'add_ln65_194' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 2985 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_48 = add i32 %add_ln65_194, i32 %add_ln65_192" [sha256.cpp:65]   --->   Operation 2985 'add' 't1_48' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 2986 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_193)   --->   "%lshr_ln66_143 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_80, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 2986 'partselect' 'lshr_ln66_143' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2987 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_193)   --->   "%trunc_ln66_144 = trunc i32 %a_80" [sha256.cpp:66]   --->   Operation 2987 'trunc' 'trunc_ln66_144' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2988 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_193)   --->   "%or_ln66_143 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_144, i30 %lshr_ln66_143" [sha256.cpp:66]   --->   Operation 2988 'bitconcatenate' 'or_ln66_143' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2989 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_193)   --->   "%lshr_ln66_144 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_80, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 2989 'partselect' 'lshr_ln66_144' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2990 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_193)   --->   "%trunc_ln66_145 = trunc i32 %a_80" [sha256.cpp:66]   --->   Operation 2990 'trunc' 'trunc_ln66_145' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2991 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_193)   --->   "%or_ln66_144 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_145, i19 %lshr_ln66_144" [sha256.cpp:66]   --->   Operation 2991 'bitconcatenate' 'or_ln66_144' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2992 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_193)   --->   "%lshr_ln66_145 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_80, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 2992 'partselect' 'lshr_ln66_145' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2993 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_193)   --->   "%trunc_ln66_146 = trunc i32 %a_80" [sha256.cpp:66]   --->   Operation 2993 'trunc' 'trunc_ln66_146' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2994 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_193)   --->   "%or_ln66_145 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_146, i10 %lshr_ln66_145" [sha256.cpp:66]   --->   Operation 2994 'bitconcatenate' 'or_ln66_145' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2995 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_193)   --->   "%xor_ln66_192 = xor i32 %or_ln66_143, i32 %or_ln66_144" [sha256.cpp:66]   --->   Operation 2995 'xor' 'xor_ln66_192' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2996 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_193 = xor i32 %xor_ln66_192, i32 %or_ln66_145" [sha256.cpp:66]   --->   Operation 2996 'xor' 'xor_ln66_193' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2997 [1/1] (1.14ns)   --->   "%e_81 = add i32 %t1_48, i32 %a_77" [sha256.cpp:70]   --->   Operation 2997 'add' 'e_81' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 2998 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_197)   --->   "%lshr_ln65_146 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_81, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 2998 'partselect' 'lshr_ln65_146' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 2999 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_197)   --->   "%trunc_ln65_147 = trunc i32 %e_81" [sha256.cpp:65]   --->   Operation 2999 'trunc' 'trunc_ln65_147' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 3000 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_197)   --->   "%or_ln65_146 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_147, i26 %lshr_ln65_146" [sha256.cpp:65]   --->   Operation 3000 'bitconcatenate' 'or_ln65_146' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 3001 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_197)   --->   "%lshr_ln65_147 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_81, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 3001 'partselect' 'lshr_ln65_147' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 3002 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_197)   --->   "%trunc_ln65_148 = trunc i32 %e_81" [sha256.cpp:65]   --->   Operation 3002 'trunc' 'trunc_ln65_148' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 3003 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_197)   --->   "%or_ln65_147 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_148, i21 %lshr_ln65_147" [sha256.cpp:65]   --->   Operation 3003 'bitconcatenate' 'or_ln65_147' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 3004 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_197)   --->   "%lshr_ln65_148 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_81, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 3004 'partselect' 'lshr_ln65_148' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 3005 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_197)   --->   "%trunc_ln65_149 = trunc i32 %e_81" [sha256.cpp:65]   --->   Operation 3005 'trunc' 'trunc_ln65_149' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 3006 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_197)   --->   "%or_ln65_148 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_149, i7 %lshr_ln65_148" [sha256.cpp:65]   --->   Operation 3006 'bitconcatenate' 'or_ln65_148' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 3007 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_197)   --->   "%xor_ln65_196 = xor i32 %or_ln65_146, i32 %or_ln65_147" [sha256.cpp:65]   --->   Operation 3007 'xor' 'xor_ln65_196' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 3008 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_197 = xor i32 %xor_ln65_196, i32 %or_ln65_148" [sha256.cpp:65]   --->   Operation 3008 'xor' 'xor_ln65_197' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 3009 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_199)   --->   "%and_ln65_98 = and i32 %e_81, i32 %e_80" [sha256.cpp:65]   --->   Operation 3009 'and' 'and_ln65_98' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 3010 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_199)   --->   "%xor_ln65_198 = xor i32 %e_81, i32 4294967295" [sha256.cpp:65]   --->   Operation 3010 'xor' 'xor_ln65_198' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 3011 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_199)   --->   "%and_ln65_99 = and i32 %e_79, i32 %xor_ln65_198" [sha256.cpp:65]   --->   Operation 3011 'and' 'and_ln65_99' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 3012 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_199 = xor i32 %and_ln65_98, i32 %and_ln65_99" [sha256.cpp:65]   --->   Operation 3012 'xor' 'xor_ln65_199' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 3013 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_196 = add i32 %xor_ln65_199, i32 %e_78" [sha256.cpp:65]   --->   Operation 3013 'add' 'add_ln65_196' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 3014 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_197 = add i32 %xor_ln65_197, i32 506948616" [sha256.cpp:65]   --->   Operation 3014 'add' 'add_ln65_197' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 3015 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_198 = add i32 %add_ln65_197, i32 %m_49" [sha256.cpp:65]   --->   Operation 3015 'add' 'add_ln65_198' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_34 : Operation 3016 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_49 = add i32 %add_ln65_198, i32 %add_ln65_196" [sha256.cpp:65]   --->   Operation 3016 'add' 't1_49' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 35 <SV = 34> <Delay = 6.49>
ST_35 : Operation 3017 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_123 = add i32 %m_41, i32 %m_50" [sha256.cpp:51]   --->   Operation 3017 'add' 'add_ln51_123' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 3018 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_57 = add i32 %add_ln51_124, i32 %add_ln51_123" [sha256.cpp:51]   --->   Operation 3018 'add' 'm_57' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 3019 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_126 = add i32 %m_42, i32 %m_51" [sha256.cpp:51]   --->   Operation 3019 'add' 'add_ln51_126' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 3020 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_58 = add i32 %add_ln51_127, i32 %add_ln51_126" [sha256.cpp:51]   --->   Operation 3020 'add' 'm_58' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 3021 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_130)   --->   "%lshr_ln51_224 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_57, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 3021 'partselect' 'lshr_ln51_224' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3022 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_130)   --->   "%trunc_ln51_138 = trunc i32 %m_57" [sha256.cpp:51]   --->   Operation 3022 'trunc' 'trunc_ln51_138' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3023 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_130)   --->   "%or_ln51_171 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_138, i15 %lshr_ln51_224" [sha256.cpp:51]   --->   Operation 3023 'bitconcatenate' 'or_ln51_171' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3024 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_130)   --->   "%lshr_ln51_225 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_57, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 3024 'partselect' 'lshr_ln51_225' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3025 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_130)   --->   "%trunc_ln51_139 = trunc i32 %m_57" [sha256.cpp:51]   --->   Operation 3025 'trunc' 'trunc_ln51_139' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3026 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_130)   --->   "%or_ln51_172 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_139, i13 %lshr_ln51_225" [sha256.cpp:51]   --->   Operation 3026 'bitconcatenate' 'or_ln51_172' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3027 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_130)   --->   "%lshr_ln51_226 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_57, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 3027 'partselect' 'lshr_ln51_226' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3028 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_130)   --->   "%zext_ln51_86 = zext i22 %lshr_ln51_226" [sha256.cpp:51]   --->   Operation 3028 'zext' 'zext_ln51_86' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3029 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_130)   --->   "%xor_ln51_172 = xor i32 %zext_ln51_86, i32 %or_ln51_172" [sha256.cpp:51]   --->   Operation 3029 'xor' 'xor_ln51_172' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3030 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_130)   --->   "%xor_ln51_173 = xor i32 %xor_ln51_172, i32 %or_ln51_171" [sha256.cpp:51]   --->   Operation 3030 'xor' 'xor_ln51_173' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3031 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_130)   --->   "%lshr_ln51_227 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_44, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 3031 'partselect' 'lshr_ln51_227' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3032 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_130)   --->   "%trunc_ln51_140 = trunc i32 %m_44" [sha256.cpp:51]   --->   Operation 3032 'trunc' 'trunc_ln51_140' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3033 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_130)   --->   "%or_ln51_173 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_140, i25 %lshr_ln51_227" [sha256.cpp:51]   --->   Operation 3033 'bitconcatenate' 'or_ln51_173' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3034 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_130)   --->   "%lshr_ln51_228 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_44, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 3034 'partselect' 'lshr_ln51_228' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3035 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_130)   --->   "%trunc_ln51_141 = trunc i32 %m_44" [sha256.cpp:51]   --->   Operation 3035 'trunc' 'trunc_ln51_141' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3036 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_130)   --->   "%or_ln51_174 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_141, i14 %lshr_ln51_228" [sha256.cpp:51]   --->   Operation 3036 'bitconcatenate' 'or_ln51_174' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3037 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_130)   --->   "%lshr_ln51_229 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_44, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 3037 'partselect' 'lshr_ln51_229' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3038 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_130)   --->   "%zext_ln51_87 = zext i29 %lshr_ln51_229" [sha256.cpp:51]   --->   Operation 3038 'zext' 'zext_ln51_87' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3039 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_130)   --->   "%xor_ln51_174 = xor i32 %zext_ln51_87, i32 %or_ln51_174" [sha256.cpp:51]   --->   Operation 3039 'xor' 'xor_ln51_174' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3040 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_130)   --->   "%xor_ln51_175 = xor i32 %xor_ln51_174, i32 %or_ln51_173" [sha256.cpp:51]   --->   Operation 3040 'xor' 'xor_ln51_175' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3041 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_129 = add i32 %m_43, i32 %m_52" [sha256.cpp:51]   --->   Operation 3041 'add' 'add_ln51_129' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 3042 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_130 = add i32 %xor_ln51_175, i32 %xor_ln51_173" [sha256.cpp:51]   --->   Operation 3042 'add' 'add_ln51_130' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3043 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_59 = add i32 %add_ln51_130, i32 %add_ln51_129" [sha256.cpp:51]   --->   Operation 3043 'add' 'm_59' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 3044 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_133)   --->   "%lshr_ln51_230 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_58, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 3044 'partselect' 'lshr_ln51_230' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3045 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_133)   --->   "%trunc_ln51_142 = trunc i32 %m_58" [sha256.cpp:51]   --->   Operation 3045 'trunc' 'trunc_ln51_142' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3046 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_133)   --->   "%or_ln51_175 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_142, i15 %lshr_ln51_230" [sha256.cpp:51]   --->   Operation 3046 'bitconcatenate' 'or_ln51_175' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3047 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_133)   --->   "%lshr_ln51_231 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_58, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 3047 'partselect' 'lshr_ln51_231' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3048 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_133)   --->   "%trunc_ln51_143 = trunc i32 %m_58" [sha256.cpp:51]   --->   Operation 3048 'trunc' 'trunc_ln51_143' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3049 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_133)   --->   "%or_ln51_176 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_143, i13 %lshr_ln51_231" [sha256.cpp:51]   --->   Operation 3049 'bitconcatenate' 'or_ln51_176' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3050 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_133)   --->   "%lshr_ln51_232 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_58, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 3050 'partselect' 'lshr_ln51_232' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3051 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_133)   --->   "%zext_ln51_88 = zext i22 %lshr_ln51_232" [sha256.cpp:51]   --->   Operation 3051 'zext' 'zext_ln51_88' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3052 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_133)   --->   "%xor_ln51_176 = xor i32 %zext_ln51_88, i32 %or_ln51_176" [sha256.cpp:51]   --->   Operation 3052 'xor' 'xor_ln51_176' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3053 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_133)   --->   "%xor_ln51_177 = xor i32 %xor_ln51_176, i32 %or_ln51_175" [sha256.cpp:51]   --->   Operation 3053 'xor' 'xor_ln51_177' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3054 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_133)   --->   "%lshr_ln51_233 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_45, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 3054 'partselect' 'lshr_ln51_233' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3055 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_133)   --->   "%trunc_ln51_144 = trunc i32 %m_45" [sha256.cpp:51]   --->   Operation 3055 'trunc' 'trunc_ln51_144' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3056 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_133)   --->   "%or_ln51_177 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_144, i25 %lshr_ln51_233" [sha256.cpp:51]   --->   Operation 3056 'bitconcatenate' 'or_ln51_177' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3057 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_133)   --->   "%lshr_ln51_234 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_45, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 3057 'partselect' 'lshr_ln51_234' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3058 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_133)   --->   "%trunc_ln51_145 = trunc i32 %m_45" [sha256.cpp:51]   --->   Operation 3058 'trunc' 'trunc_ln51_145' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3059 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_133)   --->   "%or_ln51_178 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_145, i14 %lshr_ln51_234" [sha256.cpp:51]   --->   Operation 3059 'bitconcatenate' 'or_ln51_178' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3060 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_133)   --->   "%lshr_ln51_235 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_45, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 3060 'partselect' 'lshr_ln51_235' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3061 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_133)   --->   "%zext_ln51_89 = zext i29 %lshr_ln51_235" [sha256.cpp:51]   --->   Operation 3061 'zext' 'zext_ln51_89' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3062 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_133)   --->   "%xor_ln51_178 = xor i32 %zext_ln51_89, i32 %or_ln51_178" [sha256.cpp:51]   --->   Operation 3062 'xor' 'xor_ln51_178' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3063 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_133)   --->   "%xor_ln51_179 = xor i32 %xor_ln51_178, i32 %or_ln51_177" [sha256.cpp:51]   --->   Operation 3063 'xor' 'xor_ln51_179' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3064 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_133 = add i32 %xor_ln51_179, i32 %xor_ln51_177" [sha256.cpp:51]   --->   Operation 3064 'add' 'add_ln51_133' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3065 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_136)   --->   "%lshr_ln51_236 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_59, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 3065 'partselect' 'lshr_ln51_236' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3066 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_136)   --->   "%trunc_ln51_146 = trunc i32 %m_59" [sha256.cpp:51]   --->   Operation 3066 'trunc' 'trunc_ln51_146' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3067 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_136)   --->   "%or_ln51_179 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_146, i15 %lshr_ln51_236" [sha256.cpp:51]   --->   Operation 3067 'bitconcatenate' 'or_ln51_179' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3068 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_136)   --->   "%lshr_ln51_237 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_59, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 3068 'partselect' 'lshr_ln51_237' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3069 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_136)   --->   "%trunc_ln51_147 = trunc i32 %m_59" [sha256.cpp:51]   --->   Operation 3069 'trunc' 'trunc_ln51_147' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3070 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_136)   --->   "%or_ln51_180 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_147, i13 %lshr_ln51_237" [sha256.cpp:51]   --->   Operation 3070 'bitconcatenate' 'or_ln51_180' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3071 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_136)   --->   "%lshr_ln51_238 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_59, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 3071 'partselect' 'lshr_ln51_238' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3072 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_136)   --->   "%zext_ln51_90 = zext i22 %lshr_ln51_238" [sha256.cpp:51]   --->   Operation 3072 'zext' 'zext_ln51_90' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3073 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_136)   --->   "%xor_ln51_180 = xor i32 %zext_ln51_90, i32 %or_ln51_180" [sha256.cpp:51]   --->   Operation 3073 'xor' 'xor_ln51_180' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3074 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_136)   --->   "%xor_ln51_181 = xor i32 %xor_ln51_180, i32 %or_ln51_179" [sha256.cpp:51]   --->   Operation 3074 'xor' 'xor_ln51_181' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3075 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_136)   --->   "%lshr_ln51_239 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %m_46, i32 7, i32 31" [sha256.cpp:51]   --->   Operation 3075 'partselect' 'lshr_ln51_239' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3076 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_136)   --->   "%trunc_ln51_148 = trunc i32 %m_46" [sha256.cpp:51]   --->   Operation 3076 'trunc' 'trunc_ln51_148' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3077 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_136)   --->   "%or_ln51_181 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln51_148, i25 %lshr_ln51_239" [sha256.cpp:51]   --->   Operation 3077 'bitconcatenate' 'or_ln51_181' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3078 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_136)   --->   "%lshr_ln51_240 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %m_46, i32 18, i32 31" [sha256.cpp:51]   --->   Operation 3078 'partselect' 'lshr_ln51_240' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3079 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_136)   --->   "%trunc_ln51_149 = trunc i32 %m_46" [sha256.cpp:51]   --->   Operation 3079 'trunc' 'trunc_ln51_149' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3080 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_136)   --->   "%or_ln51_182 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln51_149, i14 %lshr_ln51_240" [sha256.cpp:51]   --->   Operation 3080 'bitconcatenate' 'or_ln51_182' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3081 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_136)   --->   "%lshr_ln51_241 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %m_46, i32 3, i32 31" [sha256.cpp:51]   --->   Operation 3081 'partselect' 'lshr_ln51_241' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3082 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_136)   --->   "%zext_ln51_91 = zext i29 %lshr_ln51_241" [sha256.cpp:51]   --->   Operation 3082 'zext' 'zext_ln51_91' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3083 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_136)   --->   "%xor_ln51_182 = xor i32 %zext_ln51_91, i32 %or_ln51_182" [sha256.cpp:51]   --->   Operation 3083 'xor' 'xor_ln51_182' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3084 [1/1] (0.00ns) (grouped into LUT with out node add_ln51_136)   --->   "%xor_ln51_183 = xor i32 %xor_ln51_182, i32 %or_ln51_181" [sha256.cpp:51]   --->   Operation 3084 'xor' 'xor_ln51_183' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3085 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_135 = add i32 %m_45, i32 %m_54" [sha256.cpp:51]   --->   Operation 3085 'add' 'add_ln51_135' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 3086 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln51_136 = add i32 %xor_ln51_183, i32 %xor_ln51_181" [sha256.cpp:51]   --->   Operation 3086 'add' 'add_ln51_136' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3087 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_61 = add i32 %add_ln51_136, i32 %add_ln51_135" [sha256.cpp:51]   --->   Operation 3087 'add' 'm_61' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 3088 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_256)   --->   "%lshr_ln51_248 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_61, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 3088 'partselect' 'lshr_ln51_248' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3089 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_256)   --->   "%trunc_ln51_154 = trunc i32 %m_61" [sha256.cpp:51]   --->   Operation 3089 'trunc' 'trunc_ln51_154' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3090 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_256)   --->   "%or_ln51_187 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_154, i15 %lshr_ln51_248" [sha256.cpp:51]   --->   Operation 3090 'bitconcatenate' 'or_ln51_187' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3091 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_256)   --->   "%lshr_ln51_249 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_61, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 3091 'partselect' 'lshr_ln51_249' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3092 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_256)   --->   "%trunc_ln51_155 = trunc i32 %m_61" [sha256.cpp:51]   --->   Operation 3092 'trunc' 'trunc_ln51_155' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3093 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_256)   --->   "%or_ln51_188 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_155, i13 %lshr_ln51_249" [sha256.cpp:51]   --->   Operation 3093 'bitconcatenate' 'or_ln51_188' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3094 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_256)   --->   "%lshr_ln51_250 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_61, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 3094 'partselect' 'lshr_ln51_250' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3095 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_256)   --->   "%zext_ln51_94 = zext i22 %lshr_ln51_250" [sha256.cpp:51]   --->   Operation 3095 'zext' 'zext_ln51_94' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3096 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_256)   --->   "%xor_ln51_188 = xor i32 %zext_ln51_94, i32 %or_ln51_188" [sha256.cpp:51]   --->   Operation 3096 'xor' 'xor_ln51_188' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3097 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_256)   --->   "%xor_ln51_189 = xor i32 %xor_ln51_188, i32 %or_ln51_187" [sha256.cpp:51]   --->   Operation 3097 'xor' 'xor_ln51_189' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3098 [1/1] (0.28ns)   --->   "%and_ln66_97 = and i32 %a_80, i32 %a_79" [sha256.cpp:66]   --->   Operation 3098 'and' 'and_ln66_97' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3099 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_195)   --->   "%and_ln66_98 = and i32 %a_80, i32 %a_78" [sha256.cpp:66]   --->   Operation 3099 'and' 'and_ln66_98' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3100 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_195)   --->   "%xor_ln66_194 = xor i32 %and_ln66_95, i32 %and_ln66_98" [sha256.cpp:66]   --->   Operation 3100 'xor' 'xor_ln66_194' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3101 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_195 = xor i32 %xor_ln66_194, i32 %and_ln66_97" [sha256.cpp:66]   --->   Operation 3101 'xor' 'xor_ln66_195' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3102 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_96 = add i32 %xor_ln66_195, i32 %t1_48" [sha256.cpp:74]   --->   Operation 3102 'add' 'add_ln74_96' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 3103 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_81 = add i32 %add_ln74_96, i32 %xor_ln66_193" [sha256.cpp:74]   --->   Operation 3103 'add' 'a_81' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 3104 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_197)   --->   "%lshr_ln66_146 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_81, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 3104 'partselect' 'lshr_ln66_146' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3105 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_197)   --->   "%trunc_ln66_147 = trunc i32 %a_81" [sha256.cpp:66]   --->   Operation 3105 'trunc' 'trunc_ln66_147' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3106 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_197)   --->   "%or_ln66_146 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_147, i30 %lshr_ln66_146" [sha256.cpp:66]   --->   Operation 3106 'bitconcatenate' 'or_ln66_146' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3107 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_197)   --->   "%lshr_ln66_147 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_81, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 3107 'partselect' 'lshr_ln66_147' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3108 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_197)   --->   "%trunc_ln66_148 = trunc i32 %a_81" [sha256.cpp:66]   --->   Operation 3108 'trunc' 'trunc_ln66_148' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3109 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_197)   --->   "%or_ln66_147 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_148, i19 %lshr_ln66_147" [sha256.cpp:66]   --->   Operation 3109 'bitconcatenate' 'or_ln66_147' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3110 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_197)   --->   "%lshr_ln66_148 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_81, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 3110 'partselect' 'lshr_ln66_148' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3111 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_197)   --->   "%trunc_ln66_149 = trunc i32 %a_81" [sha256.cpp:66]   --->   Operation 3111 'trunc' 'trunc_ln66_149' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3112 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_197)   --->   "%or_ln66_148 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_149, i10 %lshr_ln66_148" [sha256.cpp:66]   --->   Operation 3112 'bitconcatenate' 'or_ln66_148' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3113 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_197)   --->   "%xor_ln66_196 = xor i32 %or_ln66_146, i32 %or_ln66_147" [sha256.cpp:66]   --->   Operation 3113 'xor' 'xor_ln66_196' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3114 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_197 = xor i32 %xor_ln66_196, i32 %or_ln66_148" [sha256.cpp:66]   --->   Operation 3114 'xor' 'xor_ln66_197' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3115 [1/1] (0.28ns)   --->   "%and_ln66_99 = and i32 %a_81, i32 %a_80" [sha256.cpp:66]   --->   Operation 3115 'and' 'and_ln66_99' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3116 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_199)   --->   "%and_ln66_100 = and i32 %a_81, i32 %a_79" [sha256.cpp:66]   --->   Operation 3116 'and' 'and_ln66_100' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3117 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_199)   --->   "%xor_ln66_198 = xor i32 %and_ln66_97, i32 %and_ln66_100" [sha256.cpp:66]   --->   Operation 3117 'xor' 'xor_ln66_198' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3118 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_199 = xor i32 %xor_ln66_198, i32 %and_ln66_99" [sha256.cpp:66]   --->   Operation 3118 'xor' 'xor_ln66_199' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3119 [1/1] (1.14ns)   --->   "%e_82 = add i32 %t1_49, i32 %a_78" [sha256.cpp:70]   --->   Operation 3119 'add' 'e_82' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3120 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_98 = add i32 %xor_ln66_199, i32 %t1_49" [sha256.cpp:74]   --->   Operation 3120 'add' 'add_ln74_98' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 3121 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_82 = add i32 %add_ln74_98, i32 %xor_ln66_197" [sha256.cpp:74]   --->   Operation 3121 'add' 'a_82' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 3122 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_201)   --->   "%lshr_ln65_149 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_82, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 3122 'partselect' 'lshr_ln65_149' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3123 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_201)   --->   "%trunc_ln65_150 = trunc i32 %e_82" [sha256.cpp:65]   --->   Operation 3123 'trunc' 'trunc_ln65_150' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3124 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_201)   --->   "%or_ln65_149 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_150, i26 %lshr_ln65_149" [sha256.cpp:65]   --->   Operation 3124 'bitconcatenate' 'or_ln65_149' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3125 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_201)   --->   "%lshr_ln65_150 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_82, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 3125 'partselect' 'lshr_ln65_150' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3126 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_201)   --->   "%trunc_ln65_151 = trunc i32 %e_82" [sha256.cpp:65]   --->   Operation 3126 'trunc' 'trunc_ln65_151' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3127 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_201)   --->   "%or_ln65_150 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_151, i21 %lshr_ln65_150" [sha256.cpp:65]   --->   Operation 3127 'bitconcatenate' 'or_ln65_150' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3128 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_201)   --->   "%lshr_ln65_151 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_82, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 3128 'partselect' 'lshr_ln65_151' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3129 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_201)   --->   "%trunc_ln65_152 = trunc i32 %e_82" [sha256.cpp:65]   --->   Operation 3129 'trunc' 'trunc_ln65_152' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3130 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_201)   --->   "%or_ln65_151 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_152, i7 %lshr_ln65_151" [sha256.cpp:65]   --->   Operation 3130 'bitconcatenate' 'or_ln65_151' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3131 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_201)   --->   "%xor_ln65_200 = xor i32 %or_ln65_149, i32 %or_ln65_150" [sha256.cpp:65]   --->   Operation 3131 'xor' 'xor_ln65_200' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3132 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_201 = xor i32 %xor_ln65_200, i32 %or_ln65_151" [sha256.cpp:65]   --->   Operation 3132 'xor' 'xor_ln65_201' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3133 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_203)   --->   "%and_ln65_100 = and i32 %e_82, i32 %e_81" [sha256.cpp:65]   --->   Operation 3133 'and' 'and_ln65_100' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3134 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_203)   --->   "%xor_ln65_202 = xor i32 %e_82, i32 4294967295" [sha256.cpp:65]   --->   Operation 3134 'xor' 'xor_ln65_202' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3135 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_203)   --->   "%and_ln65_101 = and i32 %e_80, i32 %xor_ln65_202" [sha256.cpp:65]   --->   Operation 3135 'and' 'and_ln65_101' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3136 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_203 = xor i32 %and_ln65_100, i32 %and_ln65_101" [sha256.cpp:65]   --->   Operation 3136 'xor' 'xor_ln65_203' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3137 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_200 = add i32 %xor_ln65_203, i32 %e_79" [sha256.cpp:65]   --->   Operation 3137 'add' 'add_ln65_200' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 3138 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_201 = add i32 %xor_ln65_201, i32 659060556" [sha256.cpp:65]   --->   Operation 3138 'add' 'add_ln65_201' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 3139 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_202 = add i32 %add_ln65_201, i32 %m_50" [sha256.cpp:65]   --->   Operation 3139 'add' 'add_ln65_202' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 3140 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_50 = add i32 %add_ln65_202, i32 %add_ln65_200" [sha256.cpp:65]   --->   Operation 3140 'add' 't1_50' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 3141 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_201)   --->   "%lshr_ln66_149 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_82, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 3141 'partselect' 'lshr_ln66_149' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3142 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_201)   --->   "%trunc_ln66_150 = trunc i32 %a_82" [sha256.cpp:66]   --->   Operation 3142 'trunc' 'trunc_ln66_150' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3143 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_201)   --->   "%or_ln66_149 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_150, i30 %lshr_ln66_149" [sha256.cpp:66]   --->   Operation 3143 'bitconcatenate' 'or_ln66_149' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3144 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_201)   --->   "%lshr_ln66_150 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_82, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 3144 'partselect' 'lshr_ln66_150' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3145 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_201)   --->   "%trunc_ln66_151 = trunc i32 %a_82" [sha256.cpp:66]   --->   Operation 3145 'trunc' 'trunc_ln66_151' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3146 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_201)   --->   "%or_ln66_150 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_151, i19 %lshr_ln66_150" [sha256.cpp:66]   --->   Operation 3146 'bitconcatenate' 'or_ln66_150' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3147 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_201)   --->   "%lshr_ln66_151 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_82, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 3147 'partselect' 'lshr_ln66_151' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3148 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_201)   --->   "%trunc_ln66_152 = trunc i32 %a_82" [sha256.cpp:66]   --->   Operation 3148 'trunc' 'trunc_ln66_152' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3149 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_201)   --->   "%or_ln66_151 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_152, i10 %lshr_ln66_151" [sha256.cpp:66]   --->   Operation 3149 'bitconcatenate' 'or_ln66_151' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3150 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_201)   --->   "%xor_ln66_200 = xor i32 %or_ln66_149, i32 %or_ln66_150" [sha256.cpp:66]   --->   Operation 3150 'xor' 'xor_ln66_200' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3151 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_201 = xor i32 %xor_ln66_200, i32 %or_ln66_151" [sha256.cpp:66]   --->   Operation 3151 'xor' 'xor_ln66_201' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3152 [1/1] (1.14ns)   --->   "%e_83 = add i32 %t1_50, i32 %a_79" [sha256.cpp:70]   --->   Operation 3152 'add' 'e_83' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3153 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_205)   --->   "%lshr_ln65_152 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_83, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 3153 'partselect' 'lshr_ln65_152' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3154 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_205)   --->   "%trunc_ln65_153 = trunc i32 %e_83" [sha256.cpp:65]   --->   Operation 3154 'trunc' 'trunc_ln65_153' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3155 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_205)   --->   "%or_ln65_152 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_153, i26 %lshr_ln65_152" [sha256.cpp:65]   --->   Operation 3155 'bitconcatenate' 'or_ln65_152' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3156 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_205)   --->   "%lshr_ln65_153 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_83, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 3156 'partselect' 'lshr_ln65_153' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3157 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_205)   --->   "%trunc_ln65_154 = trunc i32 %e_83" [sha256.cpp:65]   --->   Operation 3157 'trunc' 'trunc_ln65_154' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3158 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_205)   --->   "%or_ln65_153 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_154, i21 %lshr_ln65_153" [sha256.cpp:65]   --->   Operation 3158 'bitconcatenate' 'or_ln65_153' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3159 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_205)   --->   "%lshr_ln65_154 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_83, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 3159 'partselect' 'lshr_ln65_154' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3160 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_205)   --->   "%trunc_ln65_155 = trunc i32 %e_83" [sha256.cpp:65]   --->   Operation 3160 'trunc' 'trunc_ln65_155' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3161 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_205)   --->   "%or_ln65_154 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_155, i7 %lshr_ln65_154" [sha256.cpp:65]   --->   Operation 3161 'bitconcatenate' 'or_ln65_154' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 3162 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_205)   --->   "%xor_ln65_204 = xor i32 %or_ln65_152, i32 %or_ln65_153" [sha256.cpp:65]   --->   Operation 3162 'xor' 'xor_ln65_204' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3163 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_205 = xor i32 %xor_ln65_204, i32 %or_ln65_154" [sha256.cpp:65]   --->   Operation 3163 'xor' 'xor_ln65_205' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3164 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_207)   --->   "%and_ln65_102 = and i32 %e_83, i32 %e_82" [sha256.cpp:65]   --->   Operation 3164 'and' 'and_ln65_102' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3165 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_207)   --->   "%xor_ln65_206 = xor i32 %e_83, i32 4294967295" [sha256.cpp:65]   --->   Operation 3165 'xor' 'xor_ln65_206' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3166 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_207)   --->   "%and_ln65_103 = and i32 %e_81, i32 %xor_ln65_206" [sha256.cpp:65]   --->   Operation 3166 'and' 'and_ln65_103' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3167 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_207 = xor i32 %and_ln65_102, i32 %and_ln65_103" [sha256.cpp:65]   --->   Operation 3167 'xor' 'xor_ln65_207' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 3168 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_204 = add i32 %xor_ln65_207, i32 %e_80" [sha256.cpp:65]   --->   Operation 3168 'add' 'add_ln65_204' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 3169 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_205 = add i32 %xor_ln65_205, i32 883997877" [sha256.cpp:65]   --->   Operation 3169 'add' 'add_ln65_205' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 3170 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_206 = add i32 %add_ln65_205, i32 %m_51" [sha256.cpp:65]   --->   Operation 3170 'add' 'add_ln65_206' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 3171 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_51 = add i32 %add_ln65_206, i32 %add_ln65_204" [sha256.cpp:65]   --->   Operation 3171 'add' 't1_51' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_35 : Operation 3172 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln65_256 = add i32 %xor_ln51_189, i32 %m_47" [sha256.cpp:65]   --->   Operation 3172 'add' 'add_ln65_256' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 36 <SV = 35> <Delay = 6.49>
ST_36 : Operation 3173 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln51_132 = add i32 %m_44, i32 %m_53" [sha256.cpp:51]   --->   Operation 3173 'add' 'add_ln51_132' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 3174 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_60 = add i32 %add_ln51_133, i32 %add_ln51_132" [sha256.cpp:51]   --->   Operation 3174 'add' 'm_60' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 3175 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_249)   --->   "%lshr_ln51_242 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %m_60, i32 17, i32 31" [sha256.cpp:51]   --->   Operation 3175 'partselect' 'lshr_ln51_242' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3176 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_249)   --->   "%trunc_ln51_150 = trunc i32 %m_60" [sha256.cpp:51]   --->   Operation 3176 'trunc' 'trunc_ln51_150' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3177 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_249)   --->   "%or_ln51_183 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln51_150, i15 %lshr_ln51_242" [sha256.cpp:51]   --->   Operation 3177 'bitconcatenate' 'or_ln51_183' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3178 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_249)   --->   "%lshr_ln51_243 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %m_60, i32 19, i32 31" [sha256.cpp:51]   --->   Operation 3178 'partselect' 'lshr_ln51_243' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3179 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_249)   --->   "%trunc_ln51_151 = trunc i32 %m_60" [sha256.cpp:51]   --->   Operation 3179 'trunc' 'trunc_ln51_151' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3180 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_249)   --->   "%or_ln51_184 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln51_151, i13 %lshr_ln51_243" [sha256.cpp:51]   --->   Operation 3180 'bitconcatenate' 'or_ln51_184' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3181 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_249)   --->   "%lshr_ln51_244 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %m_60, i32 10, i32 31" [sha256.cpp:51]   --->   Operation 3181 'partselect' 'lshr_ln51_244' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3182 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_249)   --->   "%zext_ln51_92 = zext i22 %lshr_ln51_244" [sha256.cpp:51]   --->   Operation 3182 'zext' 'zext_ln51_92' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3183 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_249)   --->   "%xor_ln51_184 = xor i32 %zext_ln51_92, i32 %or_ln51_184" [sha256.cpp:51]   --->   Operation 3183 'xor' 'xor_ln51_184' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3184 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_249)   --->   "%xor_ln51_185 = xor i32 %xor_ln51_184, i32 %or_ln51_183" [sha256.cpp:51]   --->   Operation 3184 'xor' 'xor_ln51_185' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3185 [1/1] (0.28ns)   --->   "%and_ln66_101 = and i32 %a_82, i32 %a_81" [sha256.cpp:66]   --->   Operation 3185 'and' 'and_ln66_101' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3186 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_203)   --->   "%and_ln66_102 = and i32 %a_82, i32 %a_80" [sha256.cpp:66]   --->   Operation 3186 'and' 'and_ln66_102' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3187 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_203)   --->   "%xor_ln66_202 = xor i32 %and_ln66_99, i32 %and_ln66_102" [sha256.cpp:66]   --->   Operation 3187 'xor' 'xor_ln66_202' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3188 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_203 = xor i32 %xor_ln66_202, i32 %and_ln66_101" [sha256.cpp:66]   --->   Operation 3188 'xor' 'xor_ln66_203' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3189 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_100 = add i32 %xor_ln66_203, i32 %t1_50" [sha256.cpp:74]   --->   Operation 3189 'add' 'add_ln74_100' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 3190 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_83 = add i32 %add_ln74_100, i32 %xor_ln66_201" [sha256.cpp:74]   --->   Operation 3190 'add' 'a_83' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 3191 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_205)   --->   "%lshr_ln66_152 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_83, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 3191 'partselect' 'lshr_ln66_152' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3192 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_205)   --->   "%trunc_ln66_153 = trunc i32 %a_83" [sha256.cpp:66]   --->   Operation 3192 'trunc' 'trunc_ln66_153' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3193 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_205)   --->   "%or_ln66_152 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_153, i30 %lshr_ln66_152" [sha256.cpp:66]   --->   Operation 3193 'bitconcatenate' 'or_ln66_152' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3194 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_205)   --->   "%lshr_ln66_153 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_83, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 3194 'partselect' 'lshr_ln66_153' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3195 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_205)   --->   "%trunc_ln66_154 = trunc i32 %a_83" [sha256.cpp:66]   --->   Operation 3195 'trunc' 'trunc_ln66_154' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3196 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_205)   --->   "%or_ln66_153 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_154, i19 %lshr_ln66_153" [sha256.cpp:66]   --->   Operation 3196 'bitconcatenate' 'or_ln66_153' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3197 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_205)   --->   "%lshr_ln66_154 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_83, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 3197 'partselect' 'lshr_ln66_154' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3198 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_205)   --->   "%trunc_ln66_155 = trunc i32 %a_83" [sha256.cpp:66]   --->   Operation 3198 'trunc' 'trunc_ln66_155' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3199 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_205)   --->   "%or_ln66_154 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_155, i10 %lshr_ln66_154" [sha256.cpp:66]   --->   Operation 3199 'bitconcatenate' 'or_ln66_154' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3200 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_205)   --->   "%xor_ln66_204 = xor i32 %or_ln66_152, i32 %or_ln66_153" [sha256.cpp:66]   --->   Operation 3200 'xor' 'xor_ln66_204' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3201 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_205 = xor i32 %xor_ln66_204, i32 %or_ln66_154" [sha256.cpp:66]   --->   Operation 3201 'xor' 'xor_ln66_205' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3202 [1/1] (0.28ns)   --->   "%and_ln66_103 = and i32 %a_83, i32 %a_82" [sha256.cpp:66]   --->   Operation 3202 'and' 'and_ln66_103' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3203 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_207)   --->   "%and_ln66_104 = and i32 %a_83, i32 %a_81" [sha256.cpp:66]   --->   Operation 3203 'and' 'and_ln66_104' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3204 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_207)   --->   "%xor_ln66_206 = xor i32 %and_ln66_101, i32 %and_ln66_104" [sha256.cpp:66]   --->   Operation 3204 'xor' 'xor_ln66_206' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3205 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_207 = xor i32 %xor_ln66_206, i32 %and_ln66_103" [sha256.cpp:66]   --->   Operation 3205 'xor' 'xor_ln66_207' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3206 [1/1] (1.14ns)   --->   "%e_84 = add i32 %t1_51, i32 %a_80" [sha256.cpp:70]   --->   Operation 3206 'add' 'e_84' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3207 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_102 = add i32 %xor_ln66_207, i32 %t1_51" [sha256.cpp:74]   --->   Operation 3207 'add' 'add_ln74_102' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 3208 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_84 = add i32 %add_ln74_102, i32 %xor_ln66_205" [sha256.cpp:74]   --->   Operation 3208 'add' 'a_84' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 3209 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_209)   --->   "%lshr_ln65_155 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_84, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 3209 'partselect' 'lshr_ln65_155' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3210 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_209)   --->   "%trunc_ln65_156 = trunc i32 %e_84" [sha256.cpp:65]   --->   Operation 3210 'trunc' 'trunc_ln65_156' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3211 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_209)   --->   "%or_ln65_155 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_156, i26 %lshr_ln65_155" [sha256.cpp:65]   --->   Operation 3211 'bitconcatenate' 'or_ln65_155' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3212 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_209)   --->   "%lshr_ln65_156 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_84, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 3212 'partselect' 'lshr_ln65_156' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3213 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_209)   --->   "%trunc_ln65_157 = trunc i32 %e_84" [sha256.cpp:65]   --->   Operation 3213 'trunc' 'trunc_ln65_157' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3214 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_209)   --->   "%or_ln65_156 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_157, i21 %lshr_ln65_156" [sha256.cpp:65]   --->   Operation 3214 'bitconcatenate' 'or_ln65_156' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3215 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_209)   --->   "%lshr_ln65_157 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_84, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 3215 'partselect' 'lshr_ln65_157' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3216 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_209)   --->   "%trunc_ln65_158 = trunc i32 %e_84" [sha256.cpp:65]   --->   Operation 3216 'trunc' 'trunc_ln65_158' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3217 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_209)   --->   "%or_ln65_157 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_158, i7 %lshr_ln65_157" [sha256.cpp:65]   --->   Operation 3217 'bitconcatenate' 'or_ln65_157' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3218 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_209)   --->   "%xor_ln65_208 = xor i32 %or_ln65_155, i32 %or_ln65_156" [sha256.cpp:65]   --->   Operation 3218 'xor' 'xor_ln65_208' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3219 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_209 = xor i32 %xor_ln65_208, i32 %or_ln65_157" [sha256.cpp:65]   --->   Operation 3219 'xor' 'xor_ln65_209' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3220 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_211)   --->   "%and_ln65_104 = and i32 %e_84, i32 %e_83" [sha256.cpp:65]   --->   Operation 3220 'and' 'and_ln65_104' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3221 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_211)   --->   "%xor_ln65_210 = xor i32 %e_84, i32 4294967295" [sha256.cpp:65]   --->   Operation 3221 'xor' 'xor_ln65_210' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3222 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_211)   --->   "%and_ln65_105 = and i32 %e_82, i32 %xor_ln65_210" [sha256.cpp:65]   --->   Operation 3222 'and' 'and_ln65_105' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3223 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_211 = xor i32 %and_ln65_104, i32 %and_ln65_105" [sha256.cpp:65]   --->   Operation 3223 'xor' 'xor_ln65_211' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3224 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_208 = add i32 %xor_ln65_211, i32 %e_81" [sha256.cpp:65]   --->   Operation 3224 'add' 'add_ln65_208' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 3225 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_209 = add i32 %xor_ln65_209, i32 958139571" [sha256.cpp:65]   --->   Operation 3225 'add' 'add_ln65_209' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 3226 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_210 = add i32 %add_ln65_209, i32 %m_52" [sha256.cpp:65]   --->   Operation 3226 'add' 'add_ln65_210' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 3227 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_52 = add i32 %add_ln65_210, i32 %add_ln65_208" [sha256.cpp:65]   --->   Operation 3227 'add' 't1_52' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 3228 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_209)   --->   "%lshr_ln66_155 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_84, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 3228 'partselect' 'lshr_ln66_155' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3229 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_209)   --->   "%trunc_ln66_156 = trunc i32 %a_84" [sha256.cpp:66]   --->   Operation 3229 'trunc' 'trunc_ln66_156' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3230 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_209)   --->   "%or_ln66_155 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_156, i30 %lshr_ln66_155" [sha256.cpp:66]   --->   Operation 3230 'bitconcatenate' 'or_ln66_155' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3231 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_209)   --->   "%lshr_ln66_156 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_84, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 3231 'partselect' 'lshr_ln66_156' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3232 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_209)   --->   "%trunc_ln66_157 = trunc i32 %a_84" [sha256.cpp:66]   --->   Operation 3232 'trunc' 'trunc_ln66_157' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3233 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_209)   --->   "%or_ln66_156 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_157, i19 %lshr_ln66_156" [sha256.cpp:66]   --->   Operation 3233 'bitconcatenate' 'or_ln66_156' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3234 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_209)   --->   "%lshr_ln66_157 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_84, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 3234 'partselect' 'lshr_ln66_157' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3235 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_209)   --->   "%trunc_ln66_158 = trunc i32 %a_84" [sha256.cpp:66]   --->   Operation 3235 'trunc' 'trunc_ln66_158' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3236 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_209)   --->   "%or_ln66_157 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_158, i10 %lshr_ln66_157" [sha256.cpp:66]   --->   Operation 3236 'bitconcatenate' 'or_ln66_157' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3237 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_209)   --->   "%xor_ln66_208 = xor i32 %or_ln66_155, i32 %or_ln66_156" [sha256.cpp:66]   --->   Operation 3237 'xor' 'xor_ln66_208' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3238 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_209 = xor i32 %xor_ln66_208, i32 %or_ln66_157" [sha256.cpp:66]   --->   Operation 3238 'xor' 'xor_ln66_209' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3239 [1/1] (1.14ns)   --->   "%e_85 = add i32 %t1_52, i32 %a_81" [sha256.cpp:70]   --->   Operation 3239 'add' 'e_85' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3240 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_213)   --->   "%lshr_ln65_158 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_85, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 3240 'partselect' 'lshr_ln65_158' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3241 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_213)   --->   "%trunc_ln65_159 = trunc i32 %e_85" [sha256.cpp:65]   --->   Operation 3241 'trunc' 'trunc_ln65_159' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3242 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_213)   --->   "%or_ln65_158 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_159, i26 %lshr_ln65_158" [sha256.cpp:65]   --->   Operation 3242 'bitconcatenate' 'or_ln65_158' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3243 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_213)   --->   "%lshr_ln65_159 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_85, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 3243 'partselect' 'lshr_ln65_159' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3244 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_213)   --->   "%trunc_ln65_160 = trunc i32 %e_85" [sha256.cpp:65]   --->   Operation 3244 'trunc' 'trunc_ln65_160' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3245 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_213)   --->   "%or_ln65_159 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_160, i21 %lshr_ln65_159" [sha256.cpp:65]   --->   Operation 3245 'bitconcatenate' 'or_ln65_159' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3246 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_213)   --->   "%lshr_ln65_160 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_85, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 3246 'partselect' 'lshr_ln65_160' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3247 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_213)   --->   "%trunc_ln65_161 = trunc i32 %e_85" [sha256.cpp:65]   --->   Operation 3247 'trunc' 'trunc_ln65_161' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3248 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_213)   --->   "%or_ln65_160 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_161, i7 %lshr_ln65_160" [sha256.cpp:65]   --->   Operation 3248 'bitconcatenate' 'or_ln65_160' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 3249 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_213)   --->   "%xor_ln65_212 = xor i32 %or_ln65_158, i32 %or_ln65_159" [sha256.cpp:65]   --->   Operation 3249 'xor' 'xor_ln65_212' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3250 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_213 = xor i32 %xor_ln65_212, i32 %or_ln65_160" [sha256.cpp:65]   --->   Operation 3250 'xor' 'xor_ln65_213' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3251 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_215)   --->   "%and_ln65_106 = and i32 %e_85, i32 %e_84" [sha256.cpp:65]   --->   Operation 3251 'and' 'and_ln65_106' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3252 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_215)   --->   "%xor_ln65_214 = xor i32 %e_85, i32 4294967295" [sha256.cpp:65]   --->   Operation 3252 'xor' 'xor_ln65_214' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3253 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_215)   --->   "%and_ln65_107 = and i32 %e_83, i32 %xor_ln65_214" [sha256.cpp:65]   --->   Operation 3253 'and' 'and_ln65_107' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3254 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_215 = xor i32 %and_ln65_106, i32 %and_ln65_107" [sha256.cpp:65]   --->   Operation 3254 'xor' 'xor_ln65_215' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 3255 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_212 = add i32 %xor_ln65_215, i32 %e_82" [sha256.cpp:65]   --->   Operation 3255 'add' 'add_ln65_212' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 3256 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_213 = add i32 %xor_ln65_213, i32 1322822218" [sha256.cpp:65]   --->   Operation 3256 'add' 'add_ln65_213' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 3257 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_214 = add i32 %add_ln65_213, i32 %m_53" [sha256.cpp:65]   --->   Operation 3257 'add' 'add_ln65_214' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 3258 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_53 = add i32 %add_ln65_214, i32 %add_ln65_212" [sha256.cpp:65]   --->   Operation 3258 'add' 't1_53' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_36 : Operation 3259 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln65_249 = add i32 %xor_ln51_185, i32 %m_55" [sha256.cpp:65]   --->   Operation 3259 'add' 'add_ln65_249' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 37 <SV = 36> <Delay = 6.49>
ST_37 : Operation 3260 [1/1] (0.28ns)   --->   "%and_ln66_105 = and i32 %a_84, i32 %a_83" [sha256.cpp:66]   --->   Operation 3260 'and' 'and_ln66_105' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3261 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_211)   --->   "%and_ln66_106 = and i32 %a_84, i32 %a_82" [sha256.cpp:66]   --->   Operation 3261 'and' 'and_ln66_106' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3262 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_211)   --->   "%xor_ln66_210 = xor i32 %and_ln66_103, i32 %and_ln66_106" [sha256.cpp:66]   --->   Operation 3262 'xor' 'xor_ln66_210' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3263 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_211 = xor i32 %xor_ln66_210, i32 %and_ln66_105" [sha256.cpp:66]   --->   Operation 3263 'xor' 'xor_ln66_211' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3264 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_104 = add i32 %xor_ln66_211, i32 %t1_52" [sha256.cpp:74]   --->   Operation 3264 'add' 'add_ln74_104' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 3265 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_85 = add i32 %add_ln74_104, i32 %xor_ln66_209" [sha256.cpp:74]   --->   Operation 3265 'add' 'a_85' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 3266 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_213)   --->   "%lshr_ln66_158 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_85, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 3266 'partselect' 'lshr_ln66_158' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3267 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_213)   --->   "%trunc_ln66_159 = trunc i32 %a_85" [sha256.cpp:66]   --->   Operation 3267 'trunc' 'trunc_ln66_159' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3268 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_213)   --->   "%or_ln66_158 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_159, i30 %lshr_ln66_158" [sha256.cpp:66]   --->   Operation 3268 'bitconcatenate' 'or_ln66_158' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3269 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_213)   --->   "%lshr_ln66_159 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_85, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 3269 'partselect' 'lshr_ln66_159' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3270 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_213)   --->   "%trunc_ln66_160 = trunc i32 %a_85" [sha256.cpp:66]   --->   Operation 3270 'trunc' 'trunc_ln66_160' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3271 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_213)   --->   "%or_ln66_159 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_160, i19 %lshr_ln66_159" [sha256.cpp:66]   --->   Operation 3271 'bitconcatenate' 'or_ln66_159' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3272 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_213)   --->   "%lshr_ln66_160 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_85, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 3272 'partselect' 'lshr_ln66_160' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3273 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_213)   --->   "%trunc_ln66_161 = trunc i32 %a_85" [sha256.cpp:66]   --->   Operation 3273 'trunc' 'trunc_ln66_161' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3274 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_213)   --->   "%or_ln66_160 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_161, i10 %lshr_ln66_160" [sha256.cpp:66]   --->   Operation 3274 'bitconcatenate' 'or_ln66_160' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3275 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_213)   --->   "%xor_ln66_212 = xor i32 %or_ln66_158, i32 %or_ln66_159" [sha256.cpp:66]   --->   Operation 3275 'xor' 'xor_ln66_212' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3276 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_213 = xor i32 %xor_ln66_212, i32 %or_ln66_160" [sha256.cpp:66]   --->   Operation 3276 'xor' 'xor_ln66_213' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3277 [1/1] (0.28ns)   --->   "%and_ln66_107 = and i32 %a_85, i32 %a_84" [sha256.cpp:66]   --->   Operation 3277 'and' 'and_ln66_107' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3278 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_215)   --->   "%and_ln66_108 = and i32 %a_85, i32 %a_83" [sha256.cpp:66]   --->   Operation 3278 'and' 'and_ln66_108' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3279 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_215)   --->   "%xor_ln66_214 = xor i32 %and_ln66_105, i32 %and_ln66_108" [sha256.cpp:66]   --->   Operation 3279 'xor' 'xor_ln66_214' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3280 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_215 = xor i32 %xor_ln66_214, i32 %and_ln66_107" [sha256.cpp:66]   --->   Operation 3280 'xor' 'xor_ln66_215' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3281 [1/1] (1.14ns)   --->   "%e_86 = add i32 %t1_53, i32 %a_82" [sha256.cpp:70]   --->   Operation 3281 'add' 'e_86' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3282 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_106 = add i32 %xor_ln66_215, i32 %t1_53" [sha256.cpp:74]   --->   Operation 3282 'add' 'add_ln74_106' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 3283 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_86 = add i32 %add_ln74_106, i32 %xor_ln66_213" [sha256.cpp:74]   --->   Operation 3283 'add' 'a_86' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 3284 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_217)   --->   "%lshr_ln65_161 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_86, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 3284 'partselect' 'lshr_ln65_161' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3285 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_217)   --->   "%trunc_ln65_162 = trunc i32 %e_86" [sha256.cpp:65]   --->   Operation 3285 'trunc' 'trunc_ln65_162' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3286 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_217)   --->   "%or_ln65_161 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_162, i26 %lshr_ln65_161" [sha256.cpp:65]   --->   Operation 3286 'bitconcatenate' 'or_ln65_161' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3287 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_217)   --->   "%lshr_ln65_162 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_86, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 3287 'partselect' 'lshr_ln65_162' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3288 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_217)   --->   "%trunc_ln65_163 = trunc i32 %e_86" [sha256.cpp:65]   --->   Operation 3288 'trunc' 'trunc_ln65_163' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3289 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_217)   --->   "%or_ln65_162 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_163, i21 %lshr_ln65_162" [sha256.cpp:65]   --->   Operation 3289 'bitconcatenate' 'or_ln65_162' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3290 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_217)   --->   "%lshr_ln65_163 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_86, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 3290 'partselect' 'lshr_ln65_163' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3291 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_217)   --->   "%trunc_ln65_164 = trunc i32 %e_86" [sha256.cpp:65]   --->   Operation 3291 'trunc' 'trunc_ln65_164' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3292 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_217)   --->   "%or_ln65_163 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_164, i7 %lshr_ln65_163" [sha256.cpp:65]   --->   Operation 3292 'bitconcatenate' 'or_ln65_163' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3293 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_217)   --->   "%xor_ln65_216 = xor i32 %or_ln65_161, i32 %or_ln65_162" [sha256.cpp:65]   --->   Operation 3293 'xor' 'xor_ln65_216' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3294 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_217 = xor i32 %xor_ln65_216, i32 %or_ln65_163" [sha256.cpp:65]   --->   Operation 3294 'xor' 'xor_ln65_217' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3295 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_219)   --->   "%and_ln65_108 = and i32 %e_86, i32 %e_85" [sha256.cpp:65]   --->   Operation 3295 'and' 'and_ln65_108' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3296 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_219)   --->   "%xor_ln65_218 = xor i32 %e_86, i32 4294967295" [sha256.cpp:65]   --->   Operation 3296 'xor' 'xor_ln65_218' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3297 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_219)   --->   "%and_ln65_109 = and i32 %e_84, i32 %xor_ln65_218" [sha256.cpp:65]   --->   Operation 3297 'and' 'and_ln65_109' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3298 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_219 = xor i32 %and_ln65_108, i32 %and_ln65_109" [sha256.cpp:65]   --->   Operation 3298 'xor' 'xor_ln65_219' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3299 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_216 = add i32 %xor_ln65_219, i32 %e_83" [sha256.cpp:65]   --->   Operation 3299 'add' 'add_ln65_216' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 3300 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_217 = add i32 %xor_ln65_217, i32 1537002063" [sha256.cpp:65]   --->   Operation 3300 'add' 'add_ln65_217' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 3301 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_218 = add i32 %add_ln65_217, i32 %m_54" [sha256.cpp:65]   --->   Operation 3301 'add' 'add_ln65_218' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 3302 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_54 = add i32 %add_ln65_218, i32 %add_ln65_216" [sha256.cpp:65]   --->   Operation 3302 'add' 't1_54' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 3303 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_217)   --->   "%lshr_ln66_161 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_86, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 3303 'partselect' 'lshr_ln66_161' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3304 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_217)   --->   "%trunc_ln66_162 = trunc i32 %a_86" [sha256.cpp:66]   --->   Operation 3304 'trunc' 'trunc_ln66_162' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3305 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_217)   --->   "%or_ln66_161 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_162, i30 %lshr_ln66_161" [sha256.cpp:66]   --->   Operation 3305 'bitconcatenate' 'or_ln66_161' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3306 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_217)   --->   "%lshr_ln66_162 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_86, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 3306 'partselect' 'lshr_ln66_162' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3307 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_217)   --->   "%trunc_ln66_163 = trunc i32 %a_86" [sha256.cpp:66]   --->   Operation 3307 'trunc' 'trunc_ln66_163' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3308 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_217)   --->   "%or_ln66_162 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_163, i19 %lshr_ln66_162" [sha256.cpp:66]   --->   Operation 3308 'bitconcatenate' 'or_ln66_162' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3309 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_217)   --->   "%lshr_ln66_163 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_86, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 3309 'partselect' 'lshr_ln66_163' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3310 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_217)   --->   "%trunc_ln66_164 = trunc i32 %a_86" [sha256.cpp:66]   --->   Operation 3310 'trunc' 'trunc_ln66_164' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3311 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_217)   --->   "%or_ln66_163 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_164, i10 %lshr_ln66_163" [sha256.cpp:66]   --->   Operation 3311 'bitconcatenate' 'or_ln66_163' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3312 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_217)   --->   "%xor_ln66_216 = xor i32 %or_ln66_161, i32 %or_ln66_162" [sha256.cpp:66]   --->   Operation 3312 'xor' 'xor_ln66_216' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3313 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_217 = xor i32 %xor_ln66_216, i32 %or_ln66_163" [sha256.cpp:66]   --->   Operation 3313 'xor' 'xor_ln66_217' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3314 [1/1] (1.14ns)   --->   "%e_87 = add i32 %t1_54, i32 %a_83" [sha256.cpp:70]   --->   Operation 3314 'add' 'e_87' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3315 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_221)   --->   "%lshr_ln65_164 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_87, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 3315 'partselect' 'lshr_ln65_164' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3316 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_221)   --->   "%trunc_ln65_165 = trunc i32 %e_87" [sha256.cpp:65]   --->   Operation 3316 'trunc' 'trunc_ln65_165' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3317 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_221)   --->   "%or_ln65_164 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_165, i26 %lshr_ln65_164" [sha256.cpp:65]   --->   Operation 3317 'bitconcatenate' 'or_ln65_164' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3318 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_221)   --->   "%lshr_ln65_165 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_87, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 3318 'partselect' 'lshr_ln65_165' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3319 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_221)   --->   "%trunc_ln65_166 = trunc i32 %e_87" [sha256.cpp:65]   --->   Operation 3319 'trunc' 'trunc_ln65_166' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3320 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_221)   --->   "%or_ln65_165 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_166, i21 %lshr_ln65_165" [sha256.cpp:65]   --->   Operation 3320 'bitconcatenate' 'or_ln65_165' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3321 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_221)   --->   "%lshr_ln65_166 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_87, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 3321 'partselect' 'lshr_ln65_166' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3322 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_221)   --->   "%trunc_ln65_167 = trunc i32 %e_87" [sha256.cpp:65]   --->   Operation 3322 'trunc' 'trunc_ln65_167' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3323 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_221)   --->   "%or_ln65_166 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_167, i7 %lshr_ln65_166" [sha256.cpp:65]   --->   Operation 3323 'bitconcatenate' 'or_ln65_166' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 3324 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_221)   --->   "%xor_ln65_220 = xor i32 %or_ln65_164, i32 %or_ln65_165" [sha256.cpp:65]   --->   Operation 3324 'xor' 'xor_ln65_220' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3325 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_221 = xor i32 %xor_ln65_220, i32 %or_ln65_166" [sha256.cpp:65]   --->   Operation 3325 'xor' 'xor_ln65_221' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3326 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_223)   --->   "%and_ln65_110 = and i32 %e_87, i32 %e_86" [sha256.cpp:65]   --->   Operation 3326 'and' 'and_ln65_110' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3327 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_223)   --->   "%xor_ln65_222 = xor i32 %e_87, i32 4294967295" [sha256.cpp:65]   --->   Operation 3327 'xor' 'xor_ln65_222' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3328 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_223)   --->   "%and_ln65_111 = and i32 %e_85, i32 %xor_ln65_222" [sha256.cpp:65]   --->   Operation 3328 'and' 'and_ln65_111' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3329 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_223 = xor i32 %and_ln65_110, i32 %and_ln65_111" [sha256.cpp:65]   --->   Operation 3329 'xor' 'xor_ln65_223' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 3330 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_220 = add i32 %xor_ln65_223, i32 %e_84" [sha256.cpp:65]   --->   Operation 3330 'add' 'add_ln65_220' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 3331 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_221 = add i32 %xor_ln65_221, i32 1747873779" [sha256.cpp:65]   --->   Operation 3331 'add' 'add_ln65_221' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 3332 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_222 = add i32 %add_ln65_221, i32 %m_55" [sha256.cpp:65]   --->   Operation 3332 'add' 'add_ln65_222' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_37 : Operation 3333 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_55 = add i32 %add_ln65_222, i32 %add_ln65_220" [sha256.cpp:65]   --->   Operation 3333 'add' 't1_55' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 38 <SV = 37> <Delay = 6.49>
ST_38 : Operation 3334 [1/1] (0.28ns)   --->   "%and_ln66_109 = and i32 %a_86, i32 %a_85" [sha256.cpp:66]   --->   Operation 3334 'and' 'and_ln66_109' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3335 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_219)   --->   "%and_ln66_110 = and i32 %a_86, i32 %a_84" [sha256.cpp:66]   --->   Operation 3335 'and' 'and_ln66_110' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3336 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_219)   --->   "%xor_ln66_218 = xor i32 %and_ln66_107, i32 %and_ln66_110" [sha256.cpp:66]   --->   Operation 3336 'xor' 'xor_ln66_218' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3337 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_219 = xor i32 %xor_ln66_218, i32 %and_ln66_109" [sha256.cpp:66]   --->   Operation 3337 'xor' 'xor_ln66_219' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3338 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_108 = add i32 %xor_ln66_219, i32 %t1_54" [sha256.cpp:74]   --->   Operation 3338 'add' 'add_ln74_108' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 3339 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_87 = add i32 %add_ln74_108, i32 %xor_ln66_217" [sha256.cpp:74]   --->   Operation 3339 'add' 'a_87' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 3340 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_221)   --->   "%lshr_ln66_164 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_87, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 3340 'partselect' 'lshr_ln66_164' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3341 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_221)   --->   "%trunc_ln66_165 = trunc i32 %a_87" [sha256.cpp:66]   --->   Operation 3341 'trunc' 'trunc_ln66_165' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3342 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_221)   --->   "%or_ln66_164 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_165, i30 %lshr_ln66_164" [sha256.cpp:66]   --->   Operation 3342 'bitconcatenate' 'or_ln66_164' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3343 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_221)   --->   "%lshr_ln66_165 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_87, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 3343 'partselect' 'lshr_ln66_165' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3344 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_221)   --->   "%trunc_ln66_166 = trunc i32 %a_87" [sha256.cpp:66]   --->   Operation 3344 'trunc' 'trunc_ln66_166' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3345 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_221)   --->   "%or_ln66_165 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_166, i19 %lshr_ln66_165" [sha256.cpp:66]   --->   Operation 3345 'bitconcatenate' 'or_ln66_165' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3346 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_221)   --->   "%lshr_ln66_166 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_87, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 3346 'partselect' 'lshr_ln66_166' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3347 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_221)   --->   "%trunc_ln66_167 = trunc i32 %a_87" [sha256.cpp:66]   --->   Operation 3347 'trunc' 'trunc_ln66_167' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3348 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_221)   --->   "%or_ln66_166 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_167, i10 %lshr_ln66_166" [sha256.cpp:66]   --->   Operation 3348 'bitconcatenate' 'or_ln66_166' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3349 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_221)   --->   "%xor_ln66_220 = xor i32 %or_ln66_164, i32 %or_ln66_165" [sha256.cpp:66]   --->   Operation 3349 'xor' 'xor_ln66_220' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3350 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_221 = xor i32 %xor_ln66_220, i32 %or_ln66_166" [sha256.cpp:66]   --->   Operation 3350 'xor' 'xor_ln66_221' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3351 [1/1] (0.28ns)   --->   "%and_ln66_111 = and i32 %a_87, i32 %a_86" [sha256.cpp:66]   --->   Operation 3351 'and' 'and_ln66_111' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3352 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_223)   --->   "%and_ln66_112 = and i32 %a_87, i32 %a_85" [sha256.cpp:66]   --->   Operation 3352 'and' 'and_ln66_112' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3353 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_223)   --->   "%xor_ln66_222 = xor i32 %and_ln66_109, i32 %and_ln66_112" [sha256.cpp:66]   --->   Operation 3353 'xor' 'xor_ln66_222' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3354 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_223 = xor i32 %xor_ln66_222, i32 %and_ln66_111" [sha256.cpp:66]   --->   Operation 3354 'xor' 'xor_ln66_223' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3355 [1/1] (1.14ns)   --->   "%e_88 = add i32 %t1_55, i32 %a_84" [sha256.cpp:70]   --->   Operation 3355 'add' 'e_88' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3356 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_110 = add i32 %xor_ln66_223, i32 %t1_55" [sha256.cpp:74]   --->   Operation 3356 'add' 'add_ln74_110' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 3357 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_88 = add i32 %add_ln74_110, i32 %xor_ln66_221" [sha256.cpp:74]   --->   Operation 3357 'add' 'a_88' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 3358 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_225)   --->   "%lshr_ln65_167 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_88, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 3358 'partselect' 'lshr_ln65_167' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3359 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_225)   --->   "%trunc_ln65_168 = trunc i32 %e_88" [sha256.cpp:65]   --->   Operation 3359 'trunc' 'trunc_ln65_168' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3360 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_225)   --->   "%or_ln65_167 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_168, i26 %lshr_ln65_167" [sha256.cpp:65]   --->   Operation 3360 'bitconcatenate' 'or_ln65_167' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3361 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_225)   --->   "%lshr_ln65_168 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_88, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 3361 'partselect' 'lshr_ln65_168' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3362 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_225)   --->   "%trunc_ln65_169 = trunc i32 %e_88" [sha256.cpp:65]   --->   Operation 3362 'trunc' 'trunc_ln65_169' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3363 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_225)   --->   "%or_ln65_168 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_169, i21 %lshr_ln65_168" [sha256.cpp:65]   --->   Operation 3363 'bitconcatenate' 'or_ln65_168' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3364 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_225)   --->   "%lshr_ln65_169 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_88, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 3364 'partselect' 'lshr_ln65_169' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3365 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_225)   --->   "%trunc_ln65_170 = trunc i32 %e_88" [sha256.cpp:65]   --->   Operation 3365 'trunc' 'trunc_ln65_170' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3366 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_225)   --->   "%or_ln65_169 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_170, i7 %lshr_ln65_169" [sha256.cpp:65]   --->   Operation 3366 'bitconcatenate' 'or_ln65_169' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3367 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_225)   --->   "%xor_ln65_224 = xor i32 %or_ln65_167, i32 %or_ln65_168" [sha256.cpp:65]   --->   Operation 3367 'xor' 'xor_ln65_224' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3368 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_225 = xor i32 %xor_ln65_224, i32 %or_ln65_169" [sha256.cpp:65]   --->   Operation 3368 'xor' 'xor_ln65_225' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3369 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_227)   --->   "%and_ln65_112 = and i32 %e_88, i32 %e_87" [sha256.cpp:65]   --->   Operation 3369 'and' 'and_ln65_112' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3370 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_227)   --->   "%xor_ln65_226 = xor i32 %e_88, i32 4294967295" [sha256.cpp:65]   --->   Operation 3370 'xor' 'xor_ln65_226' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3371 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_227)   --->   "%and_ln65_113 = and i32 %e_86, i32 %xor_ln65_226" [sha256.cpp:65]   --->   Operation 3371 'and' 'and_ln65_113' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3372 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_227 = xor i32 %and_ln65_112, i32 %and_ln65_113" [sha256.cpp:65]   --->   Operation 3372 'xor' 'xor_ln65_227' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3373 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_224 = add i32 %xor_ln65_227, i32 %e_85" [sha256.cpp:65]   --->   Operation 3373 'add' 'add_ln65_224' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 3374 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_225 = add i32 %xor_ln65_225, i32 1955562222" [sha256.cpp:65]   --->   Operation 3374 'add' 'add_ln65_225' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 3375 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_226 = add i32 %add_ln65_225, i32 %m_56" [sha256.cpp:65]   --->   Operation 3375 'add' 'add_ln65_226' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 3376 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_56 = add i32 %add_ln65_226, i32 %add_ln65_224" [sha256.cpp:65]   --->   Operation 3376 'add' 't1_56' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 3377 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_225)   --->   "%lshr_ln66_167 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_88, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 3377 'partselect' 'lshr_ln66_167' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3378 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_225)   --->   "%trunc_ln66_168 = trunc i32 %a_88" [sha256.cpp:66]   --->   Operation 3378 'trunc' 'trunc_ln66_168' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3379 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_225)   --->   "%or_ln66_167 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_168, i30 %lshr_ln66_167" [sha256.cpp:66]   --->   Operation 3379 'bitconcatenate' 'or_ln66_167' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3380 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_225)   --->   "%lshr_ln66_168 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_88, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 3380 'partselect' 'lshr_ln66_168' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3381 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_225)   --->   "%trunc_ln66_169 = trunc i32 %a_88" [sha256.cpp:66]   --->   Operation 3381 'trunc' 'trunc_ln66_169' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3382 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_225)   --->   "%or_ln66_168 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_169, i19 %lshr_ln66_168" [sha256.cpp:66]   --->   Operation 3382 'bitconcatenate' 'or_ln66_168' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3383 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_225)   --->   "%lshr_ln66_169 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_88, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 3383 'partselect' 'lshr_ln66_169' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3384 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_225)   --->   "%trunc_ln66_170 = trunc i32 %a_88" [sha256.cpp:66]   --->   Operation 3384 'trunc' 'trunc_ln66_170' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3385 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_225)   --->   "%or_ln66_169 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_170, i10 %lshr_ln66_169" [sha256.cpp:66]   --->   Operation 3385 'bitconcatenate' 'or_ln66_169' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3386 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_225)   --->   "%xor_ln66_224 = xor i32 %or_ln66_167, i32 %or_ln66_168" [sha256.cpp:66]   --->   Operation 3386 'xor' 'xor_ln66_224' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3387 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_225 = xor i32 %xor_ln66_224, i32 %or_ln66_169" [sha256.cpp:66]   --->   Operation 3387 'xor' 'xor_ln66_225' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3388 [1/1] (1.14ns)   --->   "%e_89 = add i32 %t1_56, i32 %a_85" [sha256.cpp:70]   --->   Operation 3388 'add' 'e_89' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3389 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_229)   --->   "%lshr_ln65_170 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_89, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 3389 'partselect' 'lshr_ln65_170' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3390 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_229)   --->   "%trunc_ln65_171 = trunc i32 %e_89" [sha256.cpp:65]   --->   Operation 3390 'trunc' 'trunc_ln65_171' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3391 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_229)   --->   "%or_ln65_170 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_171, i26 %lshr_ln65_170" [sha256.cpp:65]   --->   Operation 3391 'bitconcatenate' 'or_ln65_170' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3392 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_229)   --->   "%lshr_ln65_171 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_89, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 3392 'partselect' 'lshr_ln65_171' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3393 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_229)   --->   "%trunc_ln65_172 = trunc i32 %e_89" [sha256.cpp:65]   --->   Operation 3393 'trunc' 'trunc_ln65_172' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3394 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_229)   --->   "%or_ln65_171 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_172, i21 %lshr_ln65_171" [sha256.cpp:65]   --->   Operation 3394 'bitconcatenate' 'or_ln65_171' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3395 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_229)   --->   "%lshr_ln65_172 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_89, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 3395 'partselect' 'lshr_ln65_172' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3396 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_229)   --->   "%trunc_ln65_173 = trunc i32 %e_89" [sha256.cpp:65]   --->   Operation 3396 'trunc' 'trunc_ln65_173' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3397 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_229)   --->   "%or_ln65_172 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_173, i7 %lshr_ln65_172" [sha256.cpp:65]   --->   Operation 3397 'bitconcatenate' 'or_ln65_172' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 3398 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_229)   --->   "%xor_ln65_228 = xor i32 %or_ln65_170, i32 %or_ln65_171" [sha256.cpp:65]   --->   Operation 3398 'xor' 'xor_ln65_228' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3399 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_229 = xor i32 %xor_ln65_228, i32 %or_ln65_172" [sha256.cpp:65]   --->   Operation 3399 'xor' 'xor_ln65_229' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3400 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_231)   --->   "%and_ln65_114 = and i32 %e_89, i32 %e_88" [sha256.cpp:65]   --->   Operation 3400 'and' 'and_ln65_114' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3401 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_231)   --->   "%xor_ln65_230 = xor i32 %e_89, i32 4294967295" [sha256.cpp:65]   --->   Operation 3401 'xor' 'xor_ln65_230' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3402 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_231)   --->   "%and_ln65_115 = and i32 %e_87, i32 %xor_ln65_230" [sha256.cpp:65]   --->   Operation 3402 'and' 'and_ln65_115' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3403 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_231 = xor i32 %and_ln65_114, i32 %and_ln65_115" [sha256.cpp:65]   --->   Operation 3403 'xor' 'xor_ln65_231' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 3404 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_228 = add i32 %xor_ln65_231, i32 %e_86" [sha256.cpp:65]   --->   Operation 3404 'add' 'add_ln65_228' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 3405 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_229 = add i32 %xor_ln65_229, i32 2024104815" [sha256.cpp:65]   --->   Operation 3405 'add' 'add_ln65_229' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 3406 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_230 = add i32 %add_ln65_229, i32 %m_57" [sha256.cpp:65]   --->   Operation 3406 'add' 'add_ln65_230' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_38 : Operation 3407 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_57 = add i32 %add_ln65_230, i32 %add_ln65_228" [sha256.cpp:65]   --->   Operation 3407 'add' 't1_57' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>

State 39 <SV = 38> <Delay = 6.49>
ST_39 : Operation 3408 [1/1] (0.28ns)   --->   "%and_ln66_113 = and i32 %a_88, i32 %a_87" [sha256.cpp:66]   --->   Operation 3408 'and' 'and_ln66_113' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3409 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_227)   --->   "%and_ln66_114 = and i32 %a_88, i32 %a_86" [sha256.cpp:66]   --->   Operation 3409 'and' 'and_ln66_114' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3410 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_227)   --->   "%xor_ln66_226 = xor i32 %and_ln66_111, i32 %and_ln66_114" [sha256.cpp:66]   --->   Operation 3410 'xor' 'xor_ln66_226' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3411 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_227 = xor i32 %xor_ln66_226, i32 %and_ln66_113" [sha256.cpp:66]   --->   Operation 3411 'xor' 'xor_ln66_227' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3412 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_112 = add i32 %xor_ln66_227, i32 %t1_56" [sha256.cpp:74]   --->   Operation 3412 'add' 'add_ln74_112' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 3413 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_89 = add i32 %add_ln74_112, i32 %xor_ln66_225" [sha256.cpp:74]   --->   Operation 3413 'add' 'a_89' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 3414 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_229)   --->   "%lshr_ln66_170 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_89, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 3414 'partselect' 'lshr_ln66_170' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3415 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_229)   --->   "%trunc_ln66_171 = trunc i32 %a_89" [sha256.cpp:66]   --->   Operation 3415 'trunc' 'trunc_ln66_171' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3416 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_229)   --->   "%or_ln66_170 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_171, i30 %lshr_ln66_170" [sha256.cpp:66]   --->   Operation 3416 'bitconcatenate' 'or_ln66_170' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3417 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_229)   --->   "%lshr_ln66_171 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_89, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 3417 'partselect' 'lshr_ln66_171' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3418 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_229)   --->   "%trunc_ln66_172 = trunc i32 %a_89" [sha256.cpp:66]   --->   Operation 3418 'trunc' 'trunc_ln66_172' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3419 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_229)   --->   "%or_ln66_171 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_172, i19 %lshr_ln66_171" [sha256.cpp:66]   --->   Operation 3419 'bitconcatenate' 'or_ln66_171' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3420 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_229)   --->   "%lshr_ln66_172 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_89, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 3420 'partselect' 'lshr_ln66_172' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3421 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_229)   --->   "%trunc_ln66_173 = trunc i32 %a_89" [sha256.cpp:66]   --->   Operation 3421 'trunc' 'trunc_ln66_173' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3422 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_229)   --->   "%or_ln66_172 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_173, i10 %lshr_ln66_172" [sha256.cpp:66]   --->   Operation 3422 'bitconcatenate' 'or_ln66_172' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3423 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_229)   --->   "%xor_ln66_228 = xor i32 %or_ln66_170, i32 %or_ln66_171" [sha256.cpp:66]   --->   Operation 3423 'xor' 'xor_ln66_228' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3424 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_229 = xor i32 %xor_ln66_228, i32 %or_ln66_172" [sha256.cpp:66]   --->   Operation 3424 'xor' 'xor_ln66_229' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3425 [1/1] (0.28ns)   --->   "%and_ln66_115 = and i32 %a_89, i32 %a_88" [sha256.cpp:66]   --->   Operation 3425 'and' 'and_ln66_115' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3426 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_231)   --->   "%and_ln66_116 = and i32 %a_89, i32 %a_87" [sha256.cpp:66]   --->   Operation 3426 'and' 'and_ln66_116' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3427 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_231)   --->   "%xor_ln66_230 = xor i32 %and_ln66_113, i32 %and_ln66_116" [sha256.cpp:66]   --->   Operation 3427 'xor' 'xor_ln66_230' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3428 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_231 = xor i32 %xor_ln66_230, i32 %and_ln66_115" [sha256.cpp:66]   --->   Operation 3428 'xor' 'xor_ln66_231' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3429 [1/1] (1.14ns)   --->   "%e_90 = add i32 %t1_57, i32 %a_86" [sha256.cpp:70]   --->   Operation 3429 'add' 'e_90' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3430 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_114 = add i32 %xor_ln66_231, i32 %t1_57" [sha256.cpp:74]   --->   Operation 3430 'add' 'add_ln74_114' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 3431 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_90 = add i32 %add_ln74_114, i32 %xor_ln66_229" [sha256.cpp:74]   --->   Operation 3431 'add' 'a_90' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 3432 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_233)   --->   "%lshr_ln65_173 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_90, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 3432 'partselect' 'lshr_ln65_173' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3433 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_233)   --->   "%trunc_ln65_174 = trunc i32 %e_90" [sha256.cpp:65]   --->   Operation 3433 'trunc' 'trunc_ln65_174' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3434 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_233)   --->   "%or_ln65_173 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_174, i26 %lshr_ln65_173" [sha256.cpp:65]   --->   Operation 3434 'bitconcatenate' 'or_ln65_173' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3435 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_233)   --->   "%lshr_ln65_174 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_90, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 3435 'partselect' 'lshr_ln65_174' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3436 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_233)   --->   "%trunc_ln65_175 = trunc i32 %e_90" [sha256.cpp:65]   --->   Operation 3436 'trunc' 'trunc_ln65_175' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3437 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_233)   --->   "%or_ln65_174 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_175, i21 %lshr_ln65_174" [sha256.cpp:65]   --->   Operation 3437 'bitconcatenate' 'or_ln65_174' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3438 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_233)   --->   "%lshr_ln65_175 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_90, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 3438 'partselect' 'lshr_ln65_175' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3439 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_233)   --->   "%trunc_ln65_176 = trunc i32 %e_90" [sha256.cpp:65]   --->   Operation 3439 'trunc' 'trunc_ln65_176' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3440 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_233)   --->   "%or_ln65_175 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_176, i7 %lshr_ln65_175" [sha256.cpp:65]   --->   Operation 3440 'bitconcatenate' 'or_ln65_175' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3441 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_233)   --->   "%xor_ln65_232 = xor i32 %or_ln65_173, i32 %or_ln65_174" [sha256.cpp:65]   --->   Operation 3441 'xor' 'xor_ln65_232' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3442 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_233 = xor i32 %xor_ln65_232, i32 %or_ln65_175" [sha256.cpp:65]   --->   Operation 3442 'xor' 'xor_ln65_233' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3443 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_235)   --->   "%and_ln65_116 = and i32 %e_90, i32 %e_89" [sha256.cpp:65]   --->   Operation 3443 'and' 'and_ln65_116' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3444 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_235)   --->   "%xor_ln65_234 = xor i32 %e_90, i32 4294967295" [sha256.cpp:65]   --->   Operation 3444 'xor' 'xor_ln65_234' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3445 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_235)   --->   "%and_ln65_117 = and i32 %e_88, i32 %xor_ln65_234" [sha256.cpp:65]   --->   Operation 3445 'and' 'and_ln65_117' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3446 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_235 = xor i32 %and_ln65_116, i32 %and_ln65_117" [sha256.cpp:65]   --->   Operation 3446 'xor' 'xor_ln65_235' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3447 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_232 = add i32 %e_87, i32 %xor_ln65_235" [sha256.cpp:65]   --->   Operation 3447 'add' 'add_ln65_232' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 3448 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_233 = add i32 %m_58, i32 %xor_ln65_233" [sha256.cpp:65]   --->   Operation 3448 'add' 'add_ln65_233' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 3449 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_234 = add i32 %add_ln65_233, i32 2227730452" [sha256.cpp:65]   --->   Operation 3449 'add' 'add_ln65_234' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 3450 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_58 = add i32 %add_ln65_234, i32 %add_ln65_232" [sha256.cpp:65]   --->   Operation 3450 'add' 't1_58' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 3451 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_233)   --->   "%lshr_ln66_173 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_90, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 3451 'partselect' 'lshr_ln66_173' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3452 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_233)   --->   "%trunc_ln66_174 = trunc i32 %a_90" [sha256.cpp:66]   --->   Operation 3452 'trunc' 'trunc_ln66_174' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3453 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_233)   --->   "%or_ln66_173 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_174, i30 %lshr_ln66_173" [sha256.cpp:66]   --->   Operation 3453 'bitconcatenate' 'or_ln66_173' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3454 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_233)   --->   "%lshr_ln66_174 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_90, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 3454 'partselect' 'lshr_ln66_174' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3455 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_233)   --->   "%trunc_ln66_175 = trunc i32 %a_90" [sha256.cpp:66]   --->   Operation 3455 'trunc' 'trunc_ln66_175' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3456 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_233)   --->   "%or_ln66_174 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_175, i19 %lshr_ln66_174" [sha256.cpp:66]   --->   Operation 3456 'bitconcatenate' 'or_ln66_174' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3457 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_233)   --->   "%lshr_ln66_175 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_90, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 3457 'partselect' 'lshr_ln66_175' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3458 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_233)   --->   "%trunc_ln66_176 = trunc i32 %a_90" [sha256.cpp:66]   --->   Operation 3458 'trunc' 'trunc_ln66_176' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3459 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_233)   --->   "%or_ln66_175 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_176, i10 %lshr_ln66_175" [sha256.cpp:66]   --->   Operation 3459 'bitconcatenate' 'or_ln66_175' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3460 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_233)   --->   "%xor_ln66_232 = xor i32 %or_ln66_173, i32 %or_ln66_174" [sha256.cpp:66]   --->   Operation 3460 'xor' 'xor_ln66_232' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3461 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_233 = xor i32 %xor_ln66_232, i32 %or_ln66_175" [sha256.cpp:66]   --->   Operation 3461 'xor' 'xor_ln66_233' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3462 [1/1] (1.14ns)   --->   "%e_91 = add i32 %t1_58, i32 %a_87" [sha256.cpp:70]   --->   Operation 3462 'add' 'e_91' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3463 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_237)   --->   "%lshr_ln65_176 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_91, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 3463 'partselect' 'lshr_ln65_176' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3464 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_237)   --->   "%trunc_ln65_177 = trunc i32 %e_91" [sha256.cpp:65]   --->   Operation 3464 'trunc' 'trunc_ln65_177' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3465 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_237)   --->   "%or_ln65_176 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_177, i26 %lshr_ln65_176" [sha256.cpp:65]   --->   Operation 3465 'bitconcatenate' 'or_ln65_176' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3466 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_237)   --->   "%lshr_ln65_177 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_91, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 3466 'partselect' 'lshr_ln65_177' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3467 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_237)   --->   "%trunc_ln65_178 = trunc i32 %e_91" [sha256.cpp:65]   --->   Operation 3467 'trunc' 'trunc_ln65_178' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3468 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_237)   --->   "%or_ln65_177 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_178, i21 %lshr_ln65_177" [sha256.cpp:65]   --->   Operation 3468 'bitconcatenate' 'or_ln65_177' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3469 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_237)   --->   "%lshr_ln65_178 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_91, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 3469 'partselect' 'lshr_ln65_178' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3470 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_237)   --->   "%trunc_ln65_179 = trunc i32 %e_91" [sha256.cpp:65]   --->   Operation 3470 'trunc' 'trunc_ln65_179' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3471 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_237)   --->   "%or_ln65_178 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_179, i7 %lshr_ln65_178" [sha256.cpp:65]   --->   Operation 3471 'bitconcatenate' 'or_ln65_178' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 3472 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_237)   --->   "%xor_ln65_236 = xor i32 %or_ln65_176, i32 %or_ln65_177" [sha256.cpp:65]   --->   Operation 3472 'xor' 'xor_ln65_236' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3473 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_237 = xor i32 %xor_ln65_236, i32 %or_ln65_178" [sha256.cpp:65]   --->   Operation 3473 'xor' 'xor_ln65_237' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3474 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_239)   --->   "%and_ln65_118 = and i32 %e_91, i32 %e_90" [sha256.cpp:65]   --->   Operation 3474 'and' 'and_ln65_118' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3475 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_239)   --->   "%xor_ln65_238 = xor i32 %e_91, i32 4294967295" [sha256.cpp:65]   --->   Operation 3475 'xor' 'xor_ln65_238' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3476 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_239)   --->   "%and_ln65_119 = and i32 %e_89, i32 %xor_ln65_238" [sha256.cpp:65]   --->   Operation 3476 'and' 'and_ln65_119' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3477 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_239 = xor i32 %and_ln65_118, i32 %and_ln65_119" [sha256.cpp:65]   --->   Operation 3477 'xor' 'xor_ln65_239' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 3478 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_236 = add i32 %e_88, i32 %xor_ln65_239" [sha256.cpp:65]   --->   Operation 3478 'add' 'add_ln65_236' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 3479 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_237 = add i32 %m_59, i32 %xor_ln65_237" [sha256.cpp:65]   --->   Operation 3479 'add' 'add_ln65_237' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 3480 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_238 = add i32 %add_ln65_237, i32 2361852424" [sha256.cpp:65]   --->   Operation 3480 'add' 'add_ln65_238' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 3481 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_59 = add i32 %add_ln65_238, i32 %add_ln65_236" [sha256.cpp:65]   --->   Operation 3481 'add' 't1_59' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_39 : Operation 3482 [2/2] (0.73ns)   --->   "%ctx_load_32 = load i4 %ctx_addr_38" [sha256.cpp:81]   --->   Operation 3482 'load' 'ctx_load_32' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>

State 40 <SV = 39> <Delay = 6.49>
ST_40 : Operation 3483 [1/1] (0.28ns)   --->   "%and_ln66_117 = and i32 %a_90, i32 %a_89" [sha256.cpp:66]   --->   Operation 3483 'and' 'and_ln66_117' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3484 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_235)   --->   "%and_ln66_118 = and i32 %a_90, i32 %a_88" [sha256.cpp:66]   --->   Operation 3484 'and' 'and_ln66_118' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3485 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_235)   --->   "%xor_ln66_234 = xor i32 %and_ln66_115, i32 %and_ln66_118" [sha256.cpp:66]   --->   Operation 3485 'xor' 'xor_ln66_234' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3486 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_235 = xor i32 %xor_ln66_234, i32 %and_ln66_117" [sha256.cpp:66]   --->   Operation 3486 'xor' 'xor_ln66_235' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3487 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_116 = add i32 %xor_ln66_235, i32 %t1_58" [sha256.cpp:74]   --->   Operation 3487 'add' 'add_ln74_116' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 3488 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_91 = add i32 %add_ln74_116, i32 %xor_ln66_233" [sha256.cpp:74]   --->   Operation 3488 'add' 'a_91' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 3489 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_237)   --->   "%lshr_ln66_176 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_91, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 3489 'partselect' 'lshr_ln66_176' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3490 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_237)   --->   "%trunc_ln66_177 = trunc i32 %a_91" [sha256.cpp:66]   --->   Operation 3490 'trunc' 'trunc_ln66_177' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3491 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_237)   --->   "%or_ln66_176 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_177, i30 %lshr_ln66_176" [sha256.cpp:66]   --->   Operation 3491 'bitconcatenate' 'or_ln66_176' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3492 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_237)   --->   "%lshr_ln66_177 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_91, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 3492 'partselect' 'lshr_ln66_177' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3493 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_237)   --->   "%trunc_ln66_178 = trunc i32 %a_91" [sha256.cpp:66]   --->   Operation 3493 'trunc' 'trunc_ln66_178' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3494 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_237)   --->   "%or_ln66_177 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_178, i19 %lshr_ln66_177" [sha256.cpp:66]   --->   Operation 3494 'bitconcatenate' 'or_ln66_177' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3495 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_237)   --->   "%lshr_ln66_178 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_91, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 3495 'partselect' 'lshr_ln66_178' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3496 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_237)   --->   "%trunc_ln66_179 = trunc i32 %a_91" [sha256.cpp:66]   --->   Operation 3496 'trunc' 'trunc_ln66_179' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3497 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_237)   --->   "%or_ln66_178 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_179, i10 %lshr_ln66_178" [sha256.cpp:66]   --->   Operation 3497 'bitconcatenate' 'or_ln66_178' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3498 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_237)   --->   "%xor_ln66_236 = xor i32 %or_ln66_176, i32 %or_ln66_177" [sha256.cpp:66]   --->   Operation 3498 'xor' 'xor_ln66_236' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3499 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_237 = xor i32 %xor_ln66_236, i32 %or_ln66_178" [sha256.cpp:66]   --->   Operation 3499 'xor' 'xor_ln66_237' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3500 [1/1] (0.28ns)   --->   "%and_ln66_119 = and i32 %a_91, i32 %a_90" [sha256.cpp:66]   --->   Operation 3500 'and' 'and_ln66_119' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3501 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_239)   --->   "%and_ln66_120 = and i32 %a_91, i32 %a_89" [sha256.cpp:66]   --->   Operation 3501 'and' 'and_ln66_120' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3502 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_239)   --->   "%xor_ln66_238 = xor i32 %and_ln66_117, i32 %and_ln66_120" [sha256.cpp:66]   --->   Operation 3502 'xor' 'xor_ln66_238' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3503 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_239 = xor i32 %xor_ln66_238, i32 %and_ln66_119" [sha256.cpp:66]   --->   Operation 3503 'xor' 'xor_ln66_239' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3504 [1/1] (1.14ns)   --->   "%e_92 = add i32 %t1_59, i32 %a_88" [sha256.cpp:70]   --->   Operation 3504 'add' 'e_92' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3505 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_118 = add i32 %xor_ln66_239, i32 %t1_59" [sha256.cpp:74]   --->   Operation 3505 'add' 'add_ln74_118' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 3506 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_92 = add i32 %add_ln74_118, i32 %xor_ln66_237" [sha256.cpp:74]   --->   Operation 3506 'add' 'a_92' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 3507 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_241)   --->   "%lshr_ln65_179 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_92, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 3507 'partselect' 'lshr_ln65_179' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3508 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_241)   --->   "%trunc_ln65_180 = trunc i32 %e_92" [sha256.cpp:65]   --->   Operation 3508 'trunc' 'trunc_ln65_180' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3509 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_241)   --->   "%or_ln65_179 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_180, i26 %lshr_ln65_179" [sha256.cpp:65]   --->   Operation 3509 'bitconcatenate' 'or_ln65_179' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3510 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_241)   --->   "%lshr_ln65_180 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_92, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 3510 'partselect' 'lshr_ln65_180' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3511 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_241)   --->   "%trunc_ln65_181 = trunc i32 %e_92" [sha256.cpp:65]   --->   Operation 3511 'trunc' 'trunc_ln65_181' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3512 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_241)   --->   "%or_ln65_180 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_181, i21 %lshr_ln65_180" [sha256.cpp:65]   --->   Operation 3512 'bitconcatenate' 'or_ln65_180' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3513 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_241)   --->   "%lshr_ln65_181 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_92, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 3513 'partselect' 'lshr_ln65_181' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3514 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_241)   --->   "%trunc_ln65_182 = trunc i32 %e_92" [sha256.cpp:65]   --->   Operation 3514 'trunc' 'trunc_ln65_182' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3515 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_241)   --->   "%or_ln65_181 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_182, i7 %lshr_ln65_181" [sha256.cpp:65]   --->   Operation 3515 'bitconcatenate' 'or_ln65_181' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3516 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_241)   --->   "%xor_ln65_240 = xor i32 %or_ln65_179, i32 %or_ln65_180" [sha256.cpp:65]   --->   Operation 3516 'xor' 'xor_ln65_240' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3517 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_241 = xor i32 %xor_ln65_240, i32 %or_ln65_181" [sha256.cpp:65]   --->   Operation 3517 'xor' 'xor_ln65_241' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3518 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_243)   --->   "%and_ln65_120 = and i32 %e_92, i32 %e_91" [sha256.cpp:65]   --->   Operation 3518 'and' 'and_ln65_120' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3519 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_243)   --->   "%xor_ln65_242 = xor i32 %e_92, i32 4294967295" [sha256.cpp:65]   --->   Operation 3519 'xor' 'xor_ln65_242' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3520 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_243)   --->   "%and_ln65_121 = and i32 %e_90, i32 %xor_ln65_242" [sha256.cpp:65]   --->   Operation 3520 'and' 'and_ln65_121' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3521 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_243 = xor i32 %and_ln65_120, i32 %and_ln65_121" [sha256.cpp:65]   --->   Operation 3521 'xor' 'xor_ln65_243' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3522 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_240 = add i32 %e_89, i32 %xor_ln65_243" [sha256.cpp:65]   --->   Operation 3522 'add' 'add_ln65_240' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 3523 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_241 = add i32 %m_60, i32 %xor_ln65_241" [sha256.cpp:65]   --->   Operation 3523 'add' 'add_ln65_241' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 3524 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_242 = add i32 %add_ln65_241, i32 2428436474" [sha256.cpp:65]   --->   Operation 3524 'add' 'add_ln65_242' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 3525 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_60 = add i32 %add_ln65_242, i32 %add_ln65_240" [sha256.cpp:65]   --->   Operation 3525 'add' 't1_60' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 3526 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_241)   --->   "%lshr_ln66_179 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_92, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 3526 'partselect' 'lshr_ln66_179' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3527 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_241)   --->   "%trunc_ln66_180 = trunc i32 %a_92" [sha256.cpp:66]   --->   Operation 3527 'trunc' 'trunc_ln66_180' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3528 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_241)   --->   "%or_ln66_179 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_180, i30 %lshr_ln66_179" [sha256.cpp:66]   --->   Operation 3528 'bitconcatenate' 'or_ln66_179' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3529 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_241)   --->   "%lshr_ln66_180 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_92, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 3529 'partselect' 'lshr_ln66_180' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3530 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_241)   --->   "%trunc_ln66_181 = trunc i32 %a_92" [sha256.cpp:66]   --->   Operation 3530 'trunc' 'trunc_ln66_181' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3531 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_241)   --->   "%or_ln66_180 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_181, i19 %lshr_ln66_180" [sha256.cpp:66]   --->   Operation 3531 'bitconcatenate' 'or_ln66_180' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3532 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_241)   --->   "%lshr_ln66_181 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_92, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 3532 'partselect' 'lshr_ln66_181' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3533 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_241)   --->   "%trunc_ln66_182 = trunc i32 %a_92" [sha256.cpp:66]   --->   Operation 3533 'trunc' 'trunc_ln66_182' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3534 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_241)   --->   "%or_ln66_181 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_182, i10 %lshr_ln66_181" [sha256.cpp:66]   --->   Operation 3534 'bitconcatenate' 'or_ln66_181' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3535 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_241)   --->   "%xor_ln66_240 = xor i32 %or_ln66_179, i32 %or_ln66_180" [sha256.cpp:66]   --->   Operation 3535 'xor' 'xor_ln66_240' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3536 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_241 = xor i32 %xor_ln66_240, i32 %or_ln66_181" [sha256.cpp:66]   --->   Operation 3536 'xor' 'xor_ln66_241' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3537 [1/1] (1.14ns)   --->   "%e_93 = add i32 %t1_60, i32 %a_89" [sha256.cpp:70]   --->   Operation 3537 'add' 'e_93' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3538 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_245)   --->   "%lshr_ln65_182 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_93, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 3538 'partselect' 'lshr_ln65_182' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3539 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_245)   --->   "%trunc_ln65_183 = trunc i32 %e_93" [sha256.cpp:65]   --->   Operation 3539 'trunc' 'trunc_ln65_183' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3540 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_245)   --->   "%or_ln65_182 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_183, i26 %lshr_ln65_182" [sha256.cpp:65]   --->   Operation 3540 'bitconcatenate' 'or_ln65_182' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3541 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_245)   --->   "%lshr_ln65_183 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_93, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 3541 'partselect' 'lshr_ln65_183' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3542 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_245)   --->   "%trunc_ln65_184 = trunc i32 %e_93" [sha256.cpp:65]   --->   Operation 3542 'trunc' 'trunc_ln65_184' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3543 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_245)   --->   "%or_ln65_183 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_184, i21 %lshr_ln65_183" [sha256.cpp:65]   --->   Operation 3543 'bitconcatenate' 'or_ln65_183' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3544 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_245)   --->   "%lshr_ln65_184 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_93, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 3544 'partselect' 'lshr_ln65_184' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3545 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_245)   --->   "%trunc_ln65_185 = trunc i32 %e_93" [sha256.cpp:65]   --->   Operation 3545 'trunc' 'trunc_ln65_185' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3546 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_245)   --->   "%or_ln65_184 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_185, i7 %lshr_ln65_184" [sha256.cpp:65]   --->   Operation 3546 'bitconcatenate' 'or_ln65_184' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3547 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_245)   --->   "%xor_ln65_244 = xor i32 %or_ln65_182, i32 %or_ln65_183" [sha256.cpp:65]   --->   Operation 3547 'xor' 'xor_ln65_244' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3548 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_245 = xor i32 %xor_ln65_244, i32 %or_ln65_184" [sha256.cpp:65]   --->   Operation 3548 'xor' 'xor_ln65_245' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3549 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_247)   --->   "%and_ln65_122 = and i32 %e_93, i32 %e_92" [sha256.cpp:65]   --->   Operation 3549 'and' 'and_ln65_122' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3550 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_247)   --->   "%xor_ln65_246 = xor i32 %e_93, i32 4294967295" [sha256.cpp:65]   --->   Operation 3550 'xor' 'xor_ln65_246' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3551 [1/1] (0.00ns) (grouped into LUT with out node xor_ln65_247)   --->   "%and_ln65_123 = and i32 %e_91, i32 %xor_ln65_246" [sha256.cpp:65]   --->   Operation 3551 'and' 'and_ln65_123' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3552 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln65_247 = xor i32 %and_ln65_122, i32 %and_ln65_123" [sha256.cpp:65]   --->   Operation 3552 'xor' 'xor_ln65_247' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 3553 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_244 = add i32 %e_90, i32 %xor_ln65_247" [sha256.cpp:65]   --->   Operation 3553 'add' 'add_ln65_244' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 3554 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_245 = add i32 %m_61, i32 %xor_ln65_245" [sha256.cpp:65]   --->   Operation 3554 'add' 'add_ln65_245' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 3555 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_246 = add i32 %add_ln65_245, i32 2756734187" [sha256.cpp:65]   --->   Operation 3555 'add' 'add_ln65_246' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 3556 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_61 = add i32 %add_ln65_246, i32 %add_ln65_244" [sha256.cpp:65]   --->   Operation 3556 'add' 't1_61' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_40 : Operation 3557 [2/2] (0.73ns)   --->   "%ctx_load_31 = load i4 %ctx_addr_37" [sha256.cpp:79]   --->   Operation 3557 'load' 'ctx_load_31' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_40 : Operation 3558 [1/2] (0.73ns)   --->   "%ctx_load_32 = load i4 %ctx_addr_38" [sha256.cpp:81]   --->   Operation 3558 'load' 'ctx_load_32' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_40 : Operation 3559 [1/1] (0.00ns)   --->   "%trunc_ln81 = trunc i64 %ctx_load_32" [sha256.cpp:81]   --->   Operation 3559 'trunc' 'trunc_ln81' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3560 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ctx_load_32, i32 32, i32 63" [sha256.cpp:82]   --->   Operation 3560 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 3561 [2/2] (0.73ns)   --->   "%ctx_load_34 = load i4 %ctx_addr_40" [sha256.cpp:85]   --->   Operation 3561 'load' 'ctx_load_34' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>

State 41 <SV = 40> <Delay = 7.28>
ST_41 : Operation 3562 [1/1] (0.28ns)   --->   "%and_ln66_121 = and i32 %a_92, i32 %a_91" [sha256.cpp:66]   --->   Operation 3562 'and' 'and_ln66_121' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3563 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_243)   --->   "%and_ln66_122 = and i32 %a_92, i32 %a_90" [sha256.cpp:66]   --->   Operation 3563 'and' 'and_ln66_122' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3564 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_243)   --->   "%xor_ln66_242 = xor i32 %and_ln66_119, i32 %and_ln66_122" [sha256.cpp:66]   --->   Operation 3564 'xor' 'xor_ln66_242' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3565 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_243 = xor i32 %xor_ln66_242, i32 %and_ln66_121" [sha256.cpp:66]   --->   Operation 3565 'xor' 'xor_ln66_243' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3566 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_120 = add i32 %xor_ln66_243, i32 %t1_60" [sha256.cpp:74]   --->   Operation 3566 'add' 'add_ln74_120' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 3567 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_93 = add i32 %add_ln74_120, i32 %xor_ln66_241" [sha256.cpp:74]   --->   Operation 3567 'add' 'a_93' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 3568 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_245)   --->   "%lshr_ln66_182 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_93, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 3568 'partselect' 'lshr_ln66_182' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3569 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_245)   --->   "%trunc_ln66_183 = trunc i32 %a_93" [sha256.cpp:66]   --->   Operation 3569 'trunc' 'trunc_ln66_183' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3570 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_245)   --->   "%or_ln66_182 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_183, i30 %lshr_ln66_182" [sha256.cpp:66]   --->   Operation 3570 'bitconcatenate' 'or_ln66_182' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3571 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_245)   --->   "%lshr_ln66_183 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_93, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 3571 'partselect' 'lshr_ln66_183' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3572 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_245)   --->   "%trunc_ln66_184 = trunc i32 %a_93" [sha256.cpp:66]   --->   Operation 3572 'trunc' 'trunc_ln66_184' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3573 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_245)   --->   "%or_ln66_183 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_184, i19 %lshr_ln66_183" [sha256.cpp:66]   --->   Operation 3573 'bitconcatenate' 'or_ln66_183' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3574 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_245)   --->   "%lshr_ln66_184 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_93, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 3574 'partselect' 'lshr_ln66_184' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3575 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_245)   --->   "%trunc_ln66_185 = trunc i32 %a_93" [sha256.cpp:66]   --->   Operation 3575 'trunc' 'trunc_ln66_185' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3576 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_245)   --->   "%or_ln66_184 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_185, i10 %lshr_ln66_184" [sha256.cpp:66]   --->   Operation 3576 'bitconcatenate' 'or_ln66_184' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3577 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_245)   --->   "%xor_ln66_244 = xor i32 %or_ln66_182, i32 %or_ln66_183" [sha256.cpp:66]   --->   Operation 3577 'xor' 'xor_ln66_244' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3578 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_245 = xor i32 %xor_ln66_244, i32 %or_ln66_184" [sha256.cpp:66]   --->   Operation 3578 'xor' 'xor_ln66_245' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3579 [1/1] (0.28ns)   --->   "%and_ln66_123 = and i32 %a_93, i32 %a_92" [sha256.cpp:66]   --->   Operation 3579 'and' 'and_ln66_123' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3580 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_247)   --->   "%and_ln66_124 = and i32 %a_93, i32 %a_91" [sha256.cpp:66]   --->   Operation 3580 'and' 'and_ln66_124' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3581 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_247)   --->   "%xor_ln66_246 = xor i32 %and_ln66_121, i32 %and_ln66_124" [sha256.cpp:66]   --->   Operation 3581 'xor' 'xor_ln66_246' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3582 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_247 = xor i32 %xor_ln66_246, i32 %and_ln66_123" [sha256.cpp:66]   --->   Operation 3582 'xor' 'xor_ln66_247' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3583 [1/1] (1.14ns)   --->   "%e_94 = add i32 %t1_61, i32 %a_90" [sha256.cpp:70]   --->   Operation 3583 'add' 'e_94' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3584 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_122 = add i32 %xor_ln66_247, i32 %t1_61" [sha256.cpp:74]   --->   Operation 3584 'add' 'add_ln74_122' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 3585 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_94 = add i32 %add_ln74_122, i32 %xor_ln66_245" [sha256.cpp:74]   --->   Operation 3585 'add' 'a_94' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 3586 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_252)   --->   "%lshr_ln65_185 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_94, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 3586 'partselect' 'lshr_ln65_185' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3587 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_252)   --->   "%trunc_ln65_186 = trunc i32 %e_94" [sha256.cpp:65]   --->   Operation 3587 'trunc' 'trunc_ln65_186' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3588 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_252)   --->   "%or_ln65_185 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_186, i26 %lshr_ln65_185" [sha256.cpp:65]   --->   Operation 3588 'bitconcatenate' 'or_ln65_185' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3589 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_252)   --->   "%lshr_ln65_186 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_94, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 3589 'partselect' 'lshr_ln65_186' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3590 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_252)   --->   "%trunc_ln65_187 = trunc i32 %e_94" [sha256.cpp:65]   --->   Operation 3590 'trunc' 'trunc_ln65_187' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3591 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_252)   --->   "%or_ln65_186 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_187, i21 %lshr_ln65_186" [sha256.cpp:65]   --->   Operation 3591 'bitconcatenate' 'or_ln65_186' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3592 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_252)   --->   "%lshr_ln65_187 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_94, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 3592 'partselect' 'lshr_ln65_187' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3593 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_252)   --->   "%trunc_ln65_188 = trunc i32 %e_94" [sha256.cpp:65]   --->   Operation 3593 'trunc' 'trunc_ln65_188' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3594 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_252)   --->   "%or_ln65_187 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_188, i7 %lshr_ln65_187" [sha256.cpp:65]   --->   Operation 3594 'bitconcatenate' 'or_ln65_187' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3595 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_252)   --->   "%xor_ln65_248 = xor i32 %or_ln65_185, i32 %or_ln65_186" [sha256.cpp:65]   --->   Operation 3595 'xor' 'xor_ln65_248' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3596 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_252)   --->   "%xor_ln65_249 = xor i32 %xor_ln65_248, i32 %or_ln65_187" [sha256.cpp:65]   --->   Operation 3596 'xor' 'xor_ln65_249' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3597 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_248)   --->   "%and_ln65_124 = and i32 %e_94, i32 %e_93" [sha256.cpp:65]   --->   Operation 3597 'and' 'and_ln65_124' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3598 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_248)   --->   "%xor_ln65_250 = xor i32 %e_94, i32 4294967295" [sha256.cpp:65]   --->   Operation 3598 'xor' 'xor_ln65_250' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3599 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_248)   --->   "%and_ln65_125 = and i32 %e_92, i32 %xor_ln65_250" [sha256.cpp:65]   --->   Operation 3599 'and' 'and_ln65_125' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3600 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_248)   --->   "%xor_ln65_251 = xor i32 %and_ln65_124, i32 %and_ln65_125" [sha256.cpp:65]   --->   Operation 3600 'xor' 'xor_ln65_251' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3601 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln65_248 = add i32 %e_91, i32 %xor_ln65_251" [sha256.cpp:65]   --->   Operation 3601 'add' 'add_ln65_248' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3602 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_250 = add i32 %add_ln65_249, i32 %add_ln65_248" [sha256.cpp:65]   --->   Operation 3602 'add' 'add_ln65_250' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 3603 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_251 = add i32 %m_46, i32 %xor_ln51_187" [sha256.cpp:65]   --->   Operation 3603 'add' 'add_ln65_251' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 3604 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln65_252 = add i32 %xor_ln65_249, i32 3204031479" [sha256.cpp:65]   --->   Operation 3604 'add' 'add_ln65_252' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3605 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_253 = add i32 %add_ln65_252, i32 %add_ln65_251" [sha256.cpp:65]   --->   Operation 3605 'add' 'add_ln65_253' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 3606 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_62 = add i32 %add_ln65_253, i32 %add_ln65_250" [sha256.cpp:65]   --->   Operation 3606 'add' 't1_62' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 3607 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_249)   --->   "%lshr_ln66_185 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_94, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 3607 'partselect' 'lshr_ln66_185' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3608 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_249)   --->   "%trunc_ln66_186 = trunc i32 %a_94" [sha256.cpp:66]   --->   Operation 3608 'trunc' 'trunc_ln66_186' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3609 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_249)   --->   "%or_ln66_185 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_186, i30 %lshr_ln66_185" [sha256.cpp:66]   --->   Operation 3609 'bitconcatenate' 'or_ln66_185' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3610 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_249)   --->   "%lshr_ln66_186 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_94, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 3610 'partselect' 'lshr_ln66_186' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3611 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_249)   --->   "%trunc_ln66_187 = trunc i32 %a_94" [sha256.cpp:66]   --->   Operation 3611 'trunc' 'trunc_ln66_187' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3612 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_249)   --->   "%or_ln66_186 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_187, i19 %lshr_ln66_186" [sha256.cpp:66]   --->   Operation 3612 'bitconcatenate' 'or_ln66_186' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3613 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_249)   --->   "%lshr_ln66_187 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_94, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 3613 'partselect' 'lshr_ln66_187' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3614 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_249)   --->   "%trunc_ln66_188 = trunc i32 %a_94" [sha256.cpp:66]   --->   Operation 3614 'trunc' 'trunc_ln66_188' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3615 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_249)   --->   "%or_ln66_187 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_188, i10 %lshr_ln66_187" [sha256.cpp:66]   --->   Operation 3615 'bitconcatenate' 'or_ln66_187' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3616 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_249)   --->   "%xor_ln66_248 = xor i32 %or_ln66_185, i32 %or_ln66_186" [sha256.cpp:66]   --->   Operation 3616 'xor' 'xor_ln66_248' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3617 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_249 = xor i32 %xor_ln66_248, i32 %or_ln66_187" [sha256.cpp:66]   --->   Operation 3617 'xor' 'xor_ln66_249' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3618 [1/1] (1.14ns)   --->   "%e_95 = add i32 %t1_62, i32 %a_91" [sha256.cpp:70]   --->   Operation 3618 'add' 'e_95' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3619 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_259)   --->   "%lshr_ln65_188 = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %e_95, i32 6, i32 31" [sha256.cpp:65]   --->   Operation 3619 'partselect' 'lshr_ln65_188' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3620 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_259)   --->   "%trunc_ln65_189 = trunc i32 %e_95" [sha256.cpp:65]   --->   Operation 3620 'trunc' 'trunc_ln65_189' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3621 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_259)   --->   "%or_ln65_188 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln65_189, i26 %lshr_ln65_188" [sha256.cpp:65]   --->   Operation 3621 'bitconcatenate' 'or_ln65_188' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3622 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_259)   --->   "%lshr_ln65_189 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %e_95, i32 11, i32 31" [sha256.cpp:65]   --->   Operation 3622 'partselect' 'lshr_ln65_189' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3623 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_259)   --->   "%trunc_ln65_190 = trunc i32 %e_95" [sha256.cpp:65]   --->   Operation 3623 'trunc' 'trunc_ln65_190' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3624 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_259)   --->   "%or_ln65_189 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln65_190, i21 %lshr_ln65_189" [sha256.cpp:65]   --->   Operation 3624 'bitconcatenate' 'or_ln65_189' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3625 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_259)   --->   "%lshr_ln65_190 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %e_95, i32 25, i32 31" [sha256.cpp:65]   --->   Operation 3625 'partselect' 'lshr_ln65_190' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3626 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_259)   --->   "%trunc_ln65_191 = trunc i32 %e_95" [sha256.cpp:65]   --->   Operation 3626 'trunc' 'trunc_ln65_191' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3627 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_259)   --->   "%or_ln65_190 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln65_191, i7 %lshr_ln65_190" [sha256.cpp:65]   --->   Operation 3627 'bitconcatenate' 'or_ln65_190' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3628 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_259)   --->   "%xor_ln65_252 = xor i32 %or_ln65_188, i32 %or_ln65_189" [sha256.cpp:65]   --->   Operation 3628 'xor' 'xor_ln65_252' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3629 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_259)   --->   "%xor_ln65_253 = xor i32 %xor_ln65_252, i32 %or_ln65_190" [sha256.cpp:65]   --->   Operation 3629 'xor' 'xor_ln65_253' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3630 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_255)   --->   "%and_ln65_126 = and i32 %e_95, i32 %e_94" [sha256.cpp:65]   --->   Operation 3630 'and' 'and_ln65_126' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3631 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_255)   --->   "%xor_ln65_254 = xor i32 %e_95, i32 4294967295" [sha256.cpp:65]   --->   Operation 3631 'xor' 'xor_ln65_254' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3632 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_255)   --->   "%and_ln65_127 = and i32 %e_93, i32 %xor_ln65_254" [sha256.cpp:65]   --->   Operation 3632 'and' 'and_ln65_127' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3633 [1/1] (0.00ns) (grouped into LUT with out node add_ln65_255)   --->   "%xor_ln65_255 = xor i32 %and_ln65_126, i32 %and_ln65_127" [sha256.cpp:65]   --->   Operation 3633 'xor' 'xor_ln65_255' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3634 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln65_255 = add i32 %xor_ln65_255, i32 %e_92" [sha256.cpp:65]   --->   Operation 3634 'add' 'add_ln65_255' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3635 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_258 = add i32 %m_56, i32 %xor_ln51_191" [sha256.cpp:65]   --->   Operation 3635 'add' 'add_ln65_258' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 3636 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln65_259 = add i32 %xor_ln65_253, i32 3329325298" [sha256.cpp:65]   --->   Operation 3636 'add' 'add_ln65_259' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3637 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln65_260 = add i32 %add_ln65_259, i32 %add_ln65_258" [sha256.cpp:65]   --->   Operation 3637 'add' 'add_ln65_260' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_41 : Operation 3638 [1/2] (0.73ns)   --->   "%ctx_load_31 = load i4 %ctx_addr_37" [sha256.cpp:79]   --->   Operation 3638 'load' 'ctx_load_31' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_41 : Operation 3639 [1/1] (0.00ns)   --->   "%trunc_ln79 = trunc i64 %ctx_load_31" [sha256.cpp:79]   --->   Operation 3639 'trunc' 'trunc_ln79' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3640 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ctx_load_31, i32 32, i32 63" [sha256.cpp:80]   --->   Operation 3640 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3641 [1/1] (1.14ns)   --->   "%add_ln81 = add i32 %a_94, i32 %trunc_ln81" [sha256.cpp:81]   --->   Operation 3641 'add' 'add_ln81' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3642 [1/1] (1.14ns)   --->   "%add_ln82 = add i32 %a_93, i32 %trunc_ln1" [sha256.cpp:82]   --->   Operation 3642 'add' 'add_ln82' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3643 [1/1] (0.00ns)   --->   "%or_ln82_3 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %add_ln82, i32 %add_ln81" [sha256.cpp:82]   --->   Operation 3643 'bitconcatenate' 'or_ln82_3' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3644 [1/1] (0.73ns)   --->   "%store_ln82 = store void @_ssdm_op_Write.bram.i64, i4 %ctx_addr_38, i64 %or_ln82_3, i8 255" [sha256.cpp:82]   --->   Operation 3644 'store' 'store_ln82' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_41 : Operation 3645 [2/2] (0.73ns)   --->   "%ctx_load_33 = load i4 %ctx_addr_39" [sha256.cpp:83]   --->   Operation 3645 'load' 'ctx_load_33' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_41 : Operation 3646 [1/2] (0.73ns)   --->   "%ctx_load_34 = load i4 %ctx_addr_40" [sha256.cpp:85]   --->   Operation 3646 'load' 'ctx_load_34' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_41 : Operation 3647 [1/1] (0.00ns)   --->   "%trunc_ln85 = trunc i64 %ctx_load_34" [sha256.cpp:85]   --->   Operation 3647 'trunc' 'trunc_ln85' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3648 [1/1] (1.14ns)   --->   "%add_ln85 = add i32 %e_94, i32 %trunc_ln85" [sha256.cpp:85]   --->   Operation 3648 'add' 'add_ln85' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 3649 [1/1] (0.00ns)   --->   "%trunc_ln3 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ctx_load_34, i32 32, i32 63" [sha256.cpp:86]   --->   Operation 3649 'partselect' 'trunc_ln3' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 3650 [1/1] (1.14ns)   --->   "%add_ln86 = add i32 %e_93, i32 %trunc_ln3" [sha256.cpp:86]   --->   Operation 3650 'add' 'add_ln86' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 42 <SV = 41> <Delay = 4.26>
ST_42 : Operation 3651 [1/1] (0.28ns)   --->   "%and_ln66_125 = and i32 %a_94, i32 %a_93" [sha256.cpp:66]   --->   Operation 3651 'and' 'and_ln66_125' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 3652 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_251)   --->   "%and_ln66_126 = and i32 %a_94, i32 %a_92" [sha256.cpp:66]   --->   Operation 3652 'and' 'and_ln66_126' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 3653 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_251)   --->   "%xor_ln66_250 = xor i32 %and_ln66_123, i32 %and_ln66_126" [sha256.cpp:66]   --->   Operation 3653 'xor' 'xor_ln66_250' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 3654 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_251 = xor i32 %xor_ln66_250, i32 %and_ln66_125" [sha256.cpp:66]   --->   Operation 3654 'xor' 'xor_ln66_251' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 3655 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln74_124 = add i32 %xor_ln66_251, i32 %t1_62" [sha256.cpp:74]   --->   Operation 3655 'add' 'add_ln74_124' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_42 : Operation 3656 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_95 = add i32 %add_ln74_124, i32 %xor_ln66_249" [sha256.cpp:74]   --->   Operation 3656 'add' 'a_95' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_42 : Operation 3657 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln65_257 = add i32 %add_ln65_256, i32 %add_ln65_255" [sha256.cpp:65]   --->   Operation 3657 'add' 'add_ln65_257' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_42 : Operation 3658 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1_63 = add i32 %add_ln65_260, i32 %add_ln65_257" [sha256.cpp:65]   --->   Operation 3658 'add' 't1_63' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_42 : Operation 3659 [1/1] (0.00ns) (grouped into LUT with out node add_ln79_2)   --->   "%lshr_ln66_188 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_95, i32 2, i32 31" [sha256.cpp:66]   --->   Operation 3659 'partselect' 'lshr_ln66_188' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 3660 [1/1] (0.00ns) (grouped into LUT with out node add_ln79_2)   --->   "%trunc_ln66_189 = trunc i32 %a_95" [sha256.cpp:66]   --->   Operation 3660 'trunc' 'trunc_ln66_189' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 3661 [1/1] (0.00ns) (grouped into LUT with out node add_ln79_2)   --->   "%or_ln66_188 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln66_189, i30 %lshr_ln66_188" [sha256.cpp:66]   --->   Operation 3661 'bitconcatenate' 'or_ln66_188' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 3662 [1/1] (0.00ns) (grouped into LUT with out node add_ln79_2)   --->   "%lshr_ln66_189 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_95, i32 13, i32 31" [sha256.cpp:66]   --->   Operation 3662 'partselect' 'lshr_ln66_189' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 3663 [1/1] (0.00ns) (grouped into LUT with out node add_ln79_2)   --->   "%trunc_ln66_190 = trunc i32 %a_95" [sha256.cpp:66]   --->   Operation 3663 'trunc' 'trunc_ln66_190' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 3664 [1/1] (0.00ns) (grouped into LUT with out node add_ln79_2)   --->   "%or_ln66_189 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln66_190, i19 %lshr_ln66_189" [sha256.cpp:66]   --->   Operation 3664 'bitconcatenate' 'or_ln66_189' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 3665 [1/1] (0.00ns) (grouped into LUT with out node add_ln79_2)   --->   "%lshr_ln66_190 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_95, i32 22, i32 31" [sha256.cpp:66]   --->   Operation 3665 'partselect' 'lshr_ln66_190' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 3666 [1/1] (0.00ns) (grouped into LUT with out node add_ln79_2)   --->   "%trunc_ln66_191 = trunc i32 %a_95" [sha256.cpp:66]   --->   Operation 3666 'trunc' 'trunc_ln66_191' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 3667 [1/1] (0.00ns) (grouped into LUT with out node add_ln79_2)   --->   "%or_ln66_190 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln66_191, i10 %lshr_ln66_190" [sha256.cpp:66]   --->   Operation 3667 'bitconcatenate' 'or_ln66_190' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 3668 [1/1] (0.00ns) (grouped into LUT with out node add_ln79_2)   --->   "%xor_ln66_252 = xor i32 %or_ln66_188, i32 %or_ln66_189" [sha256.cpp:66]   --->   Operation 3668 'xor' 'xor_ln66_252' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 3669 [1/1] (0.00ns) (grouped into LUT with out node add_ln79_2)   --->   "%xor_ln66_253 = xor i32 %xor_ln66_252, i32 %or_ln66_190" [sha256.cpp:66]   --->   Operation 3669 'xor' 'xor_ln66_253' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 3670 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_255)   --->   "%xor_ln66_254 = xor i32 %a_94, i32 %a_93" [sha256.cpp:66]   --->   Operation 3670 'xor' 'xor_ln66_254' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 3671 [1/1] (0.00ns) (grouped into LUT with out node xor_ln66_255)   --->   "%and_ln66_127 = and i32 %a_95, i32 %xor_ln66_254" [sha256.cpp:66]   --->   Operation 3671 'and' 'and_ln66_127' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 3672 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln66_255 = xor i32 %and_ln66_127, i32 %and_ln66_125" [sha256.cpp:66]   --->   Operation 3672 'xor' 'xor_ln66_255' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 3673 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln79_1 = add i32 %xor_ln66_255, i32 %trunc_ln79" [sha256.cpp:79]   --->   Operation 3673 'add' 'add_ln79_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_42 : Operation 3674 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln79_2 = add i32 %xor_ln66_253, i32 %t1_63" [sha256.cpp:79]   --->   Operation 3674 'add' 'add_ln79_2' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 3675 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln79 = add i32 %add_ln79_2, i32 %add_ln79_1" [sha256.cpp:79]   --->   Operation 3675 'add' 'add_ln79' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_42 : Operation 3676 [1/1] (1.14ns)   --->   "%add_ln80 = add i32 %a_95, i32 %trunc_ln" [sha256.cpp:80]   --->   Operation 3676 'add' 'add_ln80' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 3677 [1/1] (0.00ns)   --->   "%or_ln80_3 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %add_ln80, i32 %add_ln79" [sha256.cpp:80]   --->   Operation 3677 'bitconcatenate' 'or_ln80_3' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 3678 [1/1] (0.73ns)   --->   "%store_ln80 = store void @_ssdm_op_Write.bram.i64, i4 %ctx_addr_37, i64 %or_ln80_3, i8 255" [sha256.cpp:80]   --->   Operation 3678 'store' 'store_ln80' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_42 : Operation 3679 [1/2] (0.73ns)   --->   "%ctx_load_33 = load i4 %ctx_addr_39" [sha256.cpp:83]   --->   Operation 3679 'load' 'ctx_load_33' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_42 : Operation 3680 [1/1] (0.00ns)   --->   "%trunc_ln83 = trunc i64 %ctx_load_33" [sha256.cpp:83]   --->   Operation 3680 'trunc' 'trunc_ln83' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 3681 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln83_1 = add i32 %trunc_ln83, i32 %t1_63" [sha256.cpp:83]   --->   Operation 3681 'add' 'add_ln83_1' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_42 : Operation 3682 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln83 = add i32 %add_ln83_1, i32 %a_92" [sha256.cpp:83]   --->   Operation 3682 'add' 'add_ln83' <Predicate = true> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_42 : Operation 3683 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ctx_load_33, i32 32, i32 63" [sha256.cpp:84]   --->   Operation 3683 'partselect' 'trunc_ln2' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 3684 [1/1] (1.14ns)   --->   "%add_ln84 = add i32 %e_95, i32 %trunc_ln2" [sha256.cpp:84]   --->   Operation 3684 'add' 'add_ln84' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 3685 [1/1] (0.00ns)   --->   "%or_ln86_3 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %add_ln86, i32 %add_ln85" [sha256.cpp:86]   --->   Operation 3685 'bitconcatenate' 'or_ln86_3' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 3686 [1/1] (0.73ns)   --->   "%store_ln86 = store void @_ssdm_op_Write.bram.i64, i4 %ctx_addr_40, i64 %or_ln86_3, i8 255" [sha256.cpp:86]   --->   Operation 3686 'store' 'store_ln86' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>

State 43 <SV = 42> <Delay = 0.73>
ST_43 : Operation 3687 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %ctx, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 3687 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 3688 [1/1] (0.00ns)   --->   "%specbramwithbyteenable_ln0 = specbramwithbyteenable void @_ssdm_op_SpecBRAMWithByteEnable, i64 %ctx"   --->   Operation 3688 'specbramwithbyteenable' 'specbramwithbyteenable_ln0' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 3689 [1/1] (0.00ns)   --->   "%specbramwithbyteenable_ln0 = specbramwithbyteenable void @_ssdm_op_SpecBRAMWithByteEnable, i64 %ctx"   --->   Operation 3689 'specbramwithbyteenable' 'specbramwithbyteenable_ln0' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 3690 [1/1] (0.00ns)   --->   "%or_ln84_3 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %add_ln84, i32 %add_ln83" [sha256.cpp:84]   --->   Operation 3690 'bitconcatenate' 'or_ln84_3' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 3691 [1/1] (0.73ns)   --->   "%store_ln84 = store void @_ssdm_op_Write.bram.i64, i4 %ctx_addr_39, i64 %or_ln84_3, i8 255" [sha256.cpp:84]   --->   Operation 3691 'store' 'store_ln84' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 14> <RAM>
ST_43 : Operation 3692 [1/1] (0.00ns)   --->   "%ret_ln87 = ret" [sha256.cpp:87]   --->   Operation 3692 'ret' 'ret_ln87' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.73ns
The critical path consists of the following:
	'getelementptr' operation ('ctx_addr_30', sha256.cpp:49) [17]  (0 ns)
	'load' operation ('ctx_load_20', sha256.cpp:49) on array 'ctx' [18]  (0.73 ns)

 <State 2>: 0.73ns
The critical path consists of the following:
	'load' operation ('ctx_load_20', sha256.cpp:49) on array 'ctx' [18]  (0.73 ns)

 <State 3>: 0.73ns
The critical path consists of the following:
	'load' operation ('ctx_load_22', sha256.cpp:49) on array 'ctx' [42]  (0.73 ns)

 <State 4>: 0.73ns
The critical path consists of the following:
	'getelementptr' operation ('ctx_addr', sha256.cpp:49) [5]  (0 ns)
	'load' operation ('ctx_load', sha256.cpp:49) on array 'ctx' [6]  (0.73 ns)

 <State 5>: 1.87ns
The critical path consists of the following:
	'load' operation ('ctx_load', sha256.cpp:49) on array 'ctx' [6]  (0.73 ns)
	'xor' operation ('xor_ln51_2', sha256.cpp:51) [121]  (0 ns)
	'xor' operation ('xor_ln51_3', sha256.cpp:51) [122]  (0 ns)
	'add' operation ('add_ln51_1', sha256.cpp:51) [124]  (1.14 ns)

 <State 6>: 2.05ns
The critical path consists of the following:
	'add' operation ('add_ln51_3', sha256.cpp:51) [148]  (0 ns)
	'add' operation ('m', sha256.cpp:51) [150]  (0.907 ns)
	'xor' operation ('xor_ln51_13', sha256.cpp:51) [184]  (0 ns)
	'add' operation ('add_ln51_10', sha256.cpp:51) [197]  (1.14 ns)

 <State 7>: 4.83ns
The critical path consists of the following:
	'load' operation ('ctx_load_23', sha256.cpp:49) on array 'ctx' [54]  (0.73 ns)
	'add' operation ('add_ln51', sha256.cpp:51) [123]  (0 ns)
	'add' operation ('m', sha256.cpp:51) [125]  (0.907 ns)
	'xor' operation ('xor_ln51_8', sha256.cpp:51) [159]  (0 ns)
	'xor' operation ('xor_ln51_9', sha256.cpp:51) [160]  (0 ns)
	'add' operation ('add_ln51_7', sha256.cpp:51) [173]  (1.14 ns)
	'add' operation ('m', sha256.cpp:51) [174]  (0.907 ns)
	'xor' operation ('xor_ln51_17', sha256.cpp:51) [208]  (0 ns)
	'add' operation ('add_ln51_13', sha256.cpp:51) [221]  (1.14 ns)

 <State 8>: 6.88ns
The critical path consists of the following:
	'load' operation ('ctx_load_25', sha256.cpp:49) on array 'ctx' [78]  (0.73 ns)
	'add' operation ('add_ln51_9', sha256.cpp:51) [196]  (0 ns)
	'add' operation ('m', sha256.cpp:51) [198]  (0.907 ns)
	'xor' operation ('xor_ln51_21', sha256.cpp:51) [232]  (0 ns)
	'add' operation ('add_ln51_16', sha256.cpp:51) [245]  (1.14 ns)
	'add' operation ('m', sha256.cpp:51) [246]  (0.907 ns)
	'xor' operation ('xor_ln51_29', sha256.cpp:51) [280]  (0 ns)
	'add' operation ('add_ln51_22', sha256.cpp:51) [293]  (1.14 ns)
	'add' operation ('m', sha256.cpp:51) [294]  (0.907 ns)
	'xor' operation ('xor_ln51_37', sha256.cpp:51) [328]  (0 ns)
	'add' operation ('add_ln51_28', sha256.cpp:51) [341]  (1.14 ns)

 <State 9>: 4.1ns
The critical path consists of the following:
	'add' operation ('add_ln51_27', sha256.cpp:51) [340]  (0 ns)
	'add' operation ('m', sha256.cpp:51) [342]  (0.907 ns)
	'xor' operation ('xor_ln51_45', sha256.cpp:51) [376]  (0 ns)
	'add' operation ('add_ln51_34', sha256.cpp:51) [389]  (1.14 ns)
	'add' operation ('m', sha256.cpp:51) [390]  (0.907 ns)
	'xor' operation ('xor_ln51_53', sha256.cpp:51) [424]  (0 ns)
	'add' operation ('add_ln51_40', sha256.cpp:51) [437]  (1.14 ns)

 <State 10>: 6.08ns
The critical path consists of the following:
	'load' operation ('ctx_load_29', sha256.cpp:58) on array 'ctx' [1225]  (0.73 ns)
	'xor' operation ('xor_ln65_1', sha256.cpp:65) [1242]  (0.289 ns)
	'add' operation ('add_ln65_1', sha256.cpp:65) [1248]  (0 ns)
	'add' operation ('add_ln65_2', sha256.cpp:65) [1249]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1250]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [1267]  (1.14 ns)
	'xor' operation ('xor_ln65_5', sha256.cpp:65) [1280]  (0.289 ns)
	'add' operation ('add_ln65_5', sha256.cpp:65) [1286]  (0 ns)
	'add' operation ('add_ln65_6', sha256.cpp:65) [1287]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1288]  (0.907 ns)

 <State 11>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [1304]  (1.14 ns)
	'xor' operation ('xor_ln65_8', sha256.cpp:65) [1316]  (0 ns)
	'xor' operation ('xor_ln65_9', sha256.cpp:65) [1317]  (0.289 ns)
	'add' operation ('add_ln65_9', sha256.cpp:65) [1323]  (0 ns)
	'add' operation ('add_ln65_10', sha256.cpp:65) [1324]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1325]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [1341]  (1.14 ns)
	'xor' operation ('xor_ln65_13', sha256.cpp:65) [1354]  (0.289 ns)
	'add' operation ('add_ln65_13', sha256.cpp:65) [1360]  (0 ns)
	'add' operation ('add_ln65_14', sha256.cpp:65) [1361]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1362]  (0.907 ns)

 <State 12>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [1378]  (1.14 ns)
	'xor' operation ('xor_ln65_17', sha256.cpp:65) [1391]  (0.289 ns)
	'add' operation ('add_ln65_17', sha256.cpp:65) [1397]  (0 ns)
	'add' operation ('add_ln65_18', sha256.cpp:65) [1398]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1399]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [1415]  (1.14 ns)
	'xor' operation ('xor_ln65_20', sha256.cpp:65) [1427]  (0 ns)
	'xor' operation ('xor_ln65_21', sha256.cpp:65) [1428]  (0.289 ns)
	'add' operation ('add_ln65_21', sha256.cpp:65) [1434]  (0 ns)
	'add' operation ('add_ln65_22', sha256.cpp:65) [1435]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1436]  (0.907 ns)

 <State 13>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [1452]  (1.14 ns)
	'xor' operation ('xor_ln65_25', sha256.cpp:65) [1465]  (0.289 ns)
	'add' operation ('add_ln65_25', sha256.cpp:65) [1471]  (0 ns)
	'add' operation ('add_ln65_26', sha256.cpp:65) [1472]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1473]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [1489]  (1.14 ns)
	'xor' operation ('xor_ln65_29', sha256.cpp:65) [1502]  (0.289 ns)
	'add' operation ('add_ln65_29', sha256.cpp:65) [1508]  (0 ns)
	'add' operation ('add_ln65_30', sha256.cpp:65) [1509]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1510]  (0.907 ns)

 <State 14>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [1526]  (1.14 ns)
	'xor' operation ('xor_ln65_32', sha256.cpp:65) [1538]  (0 ns)
	'xor' operation ('xor_ln65_33', sha256.cpp:65) [1539]  (0.289 ns)
	'add' operation ('add_ln65_33', sha256.cpp:65) [1545]  (0 ns)
	'add' operation ('add_ln65_34', sha256.cpp:65) [1546]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1547]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [1563]  (1.14 ns)
	'xor' operation ('xor_ln65_36', sha256.cpp:65) [1575]  (0 ns)
	'xor' operation ('xor_ln65_37', sha256.cpp:65) [1576]  (0.289 ns)
	'add' operation ('add_ln65_37', sha256.cpp:65) [1582]  (0 ns)
	'add' operation ('add_ln65_38', sha256.cpp:65) [1583]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1584]  (0.907 ns)

 <State 15>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [1600]  (1.14 ns)
	'xor' operation ('xor_ln65_40', sha256.cpp:65) [1612]  (0 ns)
	'xor' operation ('xor_ln65_41', sha256.cpp:65) [1613]  (0.289 ns)
	'add' operation ('add_ln65_41', sha256.cpp:65) [1619]  (0 ns)
	'add' operation ('add_ln65_42', sha256.cpp:65) [1620]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1621]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [1637]  (1.14 ns)
	'xor' operation ('xor_ln65_44', sha256.cpp:65) [1649]  (0 ns)
	'xor' operation ('xor_ln65_45', sha256.cpp:65) [1650]  (0.289 ns)
	'add' operation ('add_ln65_45', sha256.cpp:65) [1656]  (0 ns)
	'add' operation ('add_ln65_46', sha256.cpp:65) [1657]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1658]  (0.907 ns)

 <State 16>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [1674]  (1.14 ns)
	'xor' operation ('xor_ln65_49', sha256.cpp:65) [1687]  (0.289 ns)
	'add' operation ('add_ln65_49', sha256.cpp:65) [1693]  (0 ns)
	'add' operation ('add_ln65_50', sha256.cpp:65) [1694]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1695]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [1711]  (1.14 ns)
	'xor' operation ('xor_ln65_53', sha256.cpp:65) [1724]  (0.289 ns)
	'add' operation ('add_ln65_53', sha256.cpp:65) [1730]  (0 ns)
	'add' operation ('add_ln65_54', sha256.cpp:65) [1731]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1732]  (0.907 ns)

 <State 17>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [1748]  (1.14 ns)
	'xor' operation ('xor_ln65_57', sha256.cpp:65) [1761]  (0.289 ns)
	'add' operation ('add_ln65_57', sha256.cpp:65) [1767]  (0 ns)
	'add' operation ('add_ln65_58', sha256.cpp:65) [1768]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1769]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [1785]  (1.14 ns)
	'xor' operation ('xor_ln65_61', sha256.cpp:65) [1798]  (0.289 ns)
	'add' operation ('add_ln65_61', sha256.cpp:65) [1804]  (0 ns)
	'add' operation ('add_ln65_62', sha256.cpp:65) [1805]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1806]  (0.907 ns)

 <State 18>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [1822]  (1.14 ns)
	'xor' operation ('xor_ln65_65', sha256.cpp:65) [1835]  (0.289 ns)
	'add' operation ('add_ln65_65', sha256.cpp:65) [1841]  (0 ns)
	'add' operation ('add_ln65_66', sha256.cpp:65) [1842]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1843]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [1859]  (1.14 ns)
	'xor' operation ('xor_ln65_69', sha256.cpp:65) [1872]  (0.289 ns)
	'add' operation ('add_ln65_69', sha256.cpp:65) [1878]  (0 ns)
	'add' operation ('add_ln65_70', sha256.cpp:65) [1879]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1880]  (0.907 ns)

 <State 19>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [1896]  (1.14 ns)
	'xor' operation ('xor_ln65_72', sha256.cpp:65) [1908]  (0 ns)
	'xor' operation ('xor_ln65_73', sha256.cpp:65) [1909]  (0.289 ns)
	'add' operation ('add_ln65_73', sha256.cpp:65) [1915]  (0 ns)
	'add' operation ('add_ln65_74', sha256.cpp:65) [1916]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1917]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [1933]  (1.14 ns)
	'xor' operation ('xor_ln65_76', sha256.cpp:65) [1945]  (0 ns)
	'xor' operation ('xor_ln65_77', sha256.cpp:65) [1946]  (0.289 ns)
	'add' operation ('add_ln65_77', sha256.cpp:65) [1952]  (0 ns)
	'add' operation ('add_ln65_78', sha256.cpp:65) [1953]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1954]  (0.907 ns)

 <State 20>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [1970]  (1.14 ns)
	'xor' operation ('xor_ln65_80', sha256.cpp:65) [1982]  (0 ns)
	'xor' operation ('xor_ln65_81', sha256.cpp:65) [1983]  (0.289 ns)
	'add' operation ('add_ln65_81', sha256.cpp:65) [1989]  (0 ns)
	'add' operation ('add_ln65_82', sha256.cpp:65) [1990]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [1991]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [2007]  (1.14 ns)
	'xor' operation ('xor_ln65_85', sha256.cpp:65) [2020]  (0.289 ns)
	'add' operation ('add_ln65_85', sha256.cpp:65) [2026]  (0 ns)
	'add' operation ('add_ln65_86', sha256.cpp:65) [2027]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2028]  (0.907 ns)

 <State 21>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [2044]  (1.14 ns)
	'xor' operation ('xor_ln65_88', sha256.cpp:65) [2056]  (0 ns)
	'xor' operation ('xor_ln65_89', sha256.cpp:65) [2057]  (0.289 ns)
	'add' operation ('add_ln65_89', sha256.cpp:65) [2063]  (0 ns)
	'add' operation ('add_ln65_90', sha256.cpp:65) [2064]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2065]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [2081]  (1.14 ns)
	'xor' operation ('xor_ln65_93', sha256.cpp:65) [2094]  (0.289 ns)
	'add' operation ('add_ln65_93', sha256.cpp:65) [2100]  (0 ns)
	'add' operation ('add_ln65_94', sha256.cpp:65) [2101]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2102]  (0.907 ns)

 <State 22>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [2118]  (1.14 ns)
	'xor' operation ('xor_ln65_97', sha256.cpp:65) [2131]  (0.289 ns)
	'add' operation ('add_ln65_97', sha256.cpp:65) [2137]  (0 ns)
	'add' operation ('add_ln65_98', sha256.cpp:65) [2138]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2139]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [2155]  (1.14 ns)
	'xor' operation ('xor_ln65_101', sha256.cpp:65) [2168]  (0.289 ns)
	'add' operation ('add_ln65_101', sha256.cpp:65) [2174]  (0 ns)
	'add' operation ('add_ln65_102', sha256.cpp:65) [2175]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2176]  (0.907 ns)

 <State 23>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [2192]  (1.14 ns)
	'xor' operation ('xor_ln65_104', sha256.cpp:65) [2204]  (0 ns)
	'xor' operation ('xor_ln65_105', sha256.cpp:65) [2205]  (0.289 ns)
	'add' operation ('add_ln65_105', sha256.cpp:65) [2211]  (0 ns)
	'add' operation ('add_ln65_106', sha256.cpp:65) [2212]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2213]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [2229]  (1.14 ns)
	'xor' operation ('xor_ln65_109', sha256.cpp:65) [2242]  (0.289 ns)
	'add' operation ('add_ln65_109', sha256.cpp:65) [2248]  (0 ns)
	'add' operation ('add_ln65_110', sha256.cpp:65) [2249]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2250]  (0.907 ns)

 <State 24>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [2266]  (1.14 ns)
	'xor' operation ('xor_ln65_112', sha256.cpp:65) [2278]  (0 ns)
	'xor' operation ('xor_ln65_113', sha256.cpp:65) [2279]  (0.289 ns)
	'add' operation ('add_ln65_113', sha256.cpp:65) [2285]  (0 ns)
	'add' operation ('add_ln65_114', sha256.cpp:65) [2286]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2287]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [2303]  (1.14 ns)
	'xor' operation ('xor_ln65_116', sha256.cpp:65) [2315]  (0 ns)
	'xor' operation ('xor_ln65_117', sha256.cpp:65) [2316]  (0.289 ns)
	'add' operation ('add_ln65_117', sha256.cpp:65) [2322]  (0 ns)
	'add' operation ('add_ln65_118', sha256.cpp:65) [2323]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2324]  (0.907 ns)

 <State 25>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [2340]  (1.14 ns)
	'xor' operation ('xor_ln65_120', sha256.cpp:65) [2352]  (0 ns)
	'xor' operation ('xor_ln65_121', sha256.cpp:65) [2353]  (0.289 ns)
	'add' operation ('add_ln65_121', sha256.cpp:65) [2359]  (0 ns)
	'add' operation ('add_ln65_122', sha256.cpp:65) [2360]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2361]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [2377]  (1.14 ns)
	'xor' operation ('xor_ln65_125', sha256.cpp:65) [2390]  (0.289 ns)
	'add' operation ('add_ln65_125', sha256.cpp:65) [2396]  (0 ns)
	'add' operation ('add_ln65_126', sha256.cpp:65) [2397]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2398]  (0.907 ns)

 <State 26>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [2414]  (1.14 ns)
	'xor' operation ('xor_ln65_129', sha256.cpp:65) [2427]  (0.289 ns)
	'add' operation ('add_ln65_129', sha256.cpp:65) [2433]  (0 ns)
	'add' operation ('add_ln65_130', sha256.cpp:65) [2434]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2435]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [2451]  (1.14 ns)
	'xor' operation ('xor_ln65_132', sha256.cpp:65) [2463]  (0 ns)
	'xor' operation ('xor_ln65_133', sha256.cpp:65) [2464]  (0.289 ns)
	'add' operation ('add_ln65_133', sha256.cpp:65) [2470]  (0 ns)
	'add' operation ('add_ln65_134', sha256.cpp:65) [2471]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2472]  (0.907 ns)

 <State 27>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [2488]  (1.14 ns)
	'xor' operation ('xor_ln65_137', sha256.cpp:65) [2501]  (0.289 ns)
	'add' operation ('add_ln65_137', sha256.cpp:65) [2507]  (0 ns)
	'add' operation ('add_ln65_138', sha256.cpp:65) [2508]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2509]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [2525]  (1.14 ns)
	'xor' operation ('xor_ln65_140', sha256.cpp:65) [2537]  (0 ns)
	'xor' operation ('xor_ln65_141', sha256.cpp:65) [2538]  (0.289 ns)
	'add' operation ('add_ln65_141', sha256.cpp:65) [2544]  (0 ns)
	'add' operation ('add_ln65_142', sha256.cpp:65) [2545]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2546]  (0.907 ns)

 <State 28>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [2562]  (1.14 ns)
	'xor' operation ('xor_ln65_145', sha256.cpp:65) [2575]  (0.289 ns)
	'add' operation ('add_ln65_145', sha256.cpp:65) [2581]  (0 ns)
	'add' operation ('add_ln65_146', sha256.cpp:65) [2582]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2583]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [2599]  (1.14 ns)
	'xor' operation ('xor_ln65_149', sha256.cpp:65) [2612]  (0.289 ns)
	'add' operation ('add_ln65_149', sha256.cpp:65) [2618]  (0 ns)
	'add' operation ('add_ln65_150', sha256.cpp:65) [2619]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2620]  (0.907 ns)

 <State 29>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [2636]  (1.14 ns)
	'xor' operation ('xor_ln65_153', sha256.cpp:65) [2649]  (0.289 ns)
	'add' operation ('add_ln65_153', sha256.cpp:65) [2655]  (0 ns)
	'add' operation ('add_ln65_154', sha256.cpp:65) [2656]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2657]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [2673]  (1.14 ns)
	'xor' operation ('xor_ln65_157', sha256.cpp:65) [2686]  (0.289 ns)
	'add' operation ('add_ln65_157', sha256.cpp:65) [2692]  (0 ns)
	'add' operation ('add_ln65_158', sha256.cpp:65) [2693]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2694]  (0.907 ns)

 <State 30>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [2710]  (1.14 ns)
	'xor' operation ('xor_ln65_160', sha256.cpp:65) [2722]  (0 ns)
	'xor' operation ('xor_ln65_161', sha256.cpp:65) [2723]  (0.289 ns)
	'add' operation ('add_ln65_161', sha256.cpp:65) [2729]  (0 ns)
	'add' operation ('add_ln65_162', sha256.cpp:65) [2730]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2731]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [2747]  (1.14 ns)
	'xor' operation ('xor_ln65_165', sha256.cpp:65) [2760]  (0.289 ns)
	'add' operation ('add_ln65_165', sha256.cpp:65) [2766]  (0 ns)
	'add' operation ('add_ln65_166', sha256.cpp:65) [2767]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2768]  (0.907 ns)

 <State 31>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [2784]  (1.14 ns)
	'xor' operation ('xor_ln65_169', sha256.cpp:65) [2797]  (0.289 ns)
	'add' operation ('add_ln65_169', sha256.cpp:65) [2803]  (0 ns)
	'add' operation ('add_ln65_170', sha256.cpp:65) [2804]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2805]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [2821]  (1.14 ns)
	'xor' operation ('xor_ln65_172', sha256.cpp:65) [2833]  (0 ns)
	'xor' operation ('xor_ln65_173', sha256.cpp:65) [2834]  (0.289 ns)
	'add' operation ('add_ln65_173', sha256.cpp:65) [2840]  (0 ns)
	'add' operation ('add_ln65_174', sha256.cpp:65) [2841]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2842]  (0.907 ns)

 <State 32>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [2858]  (1.14 ns)
	'xor' operation ('xor_ln65_177', sha256.cpp:65) [2871]  (0.289 ns)
	'add' operation ('add_ln65_177', sha256.cpp:65) [2877]  (0 ns)
	'add' operation ('add_ln65_178', sha256.cpp:65) [2878]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2879]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [2895]  (1.14 ns)
	'xor' operation ('xor_ln65_181', sha256.cpp:65) [2908]  (0.289 ns)
	'add' operation ('add_ln65_181', sha256.cpp:65) [2914]  (0 ns)
	'add' operation ('add_ln65_182', sha256.cpp:65) [2915]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2916]  (0.907 ns)

 <State 33>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [2932]  (1.14 ns)
	'xor' operation ('xor_ln65_184', sha256.cpp:65) [2944]  (0 ns)
	'xor' operation ('xor_ln65_185', sha256.cpp:65) [2945]  (0.289 ns)
	'add' operation ('add_ln65_185', sha256.cpp:65) [2951]  (0 ns)
	'add' operation ('add_ln65_186', sha256.cpp:65) [2952]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2953]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [2969]  (1.14 ns)
	'xor' operation ('xor_ln65_189', sha256.cpp:65) [2982]  (0.289 ns)
	'add' operation ('add_ln65_189', sha256.cpp:65) [2988]  (0 ns)
	'add' operation ('add_ln65_190', sha256.cpp:65) [2989]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [2990]  (0.907 ns)

 <State 34>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [3006]  (1.14 ns)
	'xor' operation ('xor_ln65_192', sha256.cpp:65) [3018]  (0 ns)
	'xor' operation ('xor_ln65_193', sha256.cpp:65) [3019]  (0.289 ns)
	'add' operation ('add_ln65_193', sha256.cpp:65) [3025]  (0 ns)
	'add' operation ('add_ln65_194', sha256.cpp:65) [3026]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [3027]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [3043]  (1.14 ns)
	'xor' operation ('xor_ln65_197', sha256.cpp:65) [3056]  (0.289 ns)
	'add' operation ('add_ln65_197', sha256.cpp:65) [3062]  (0 ns)
	'add' operation ('add_ln65_198', sha256.cpp:65) [3063]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [3064]  (0.907 ns)

 <State 35>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [3080]  (1.14 ns)
	'xor' operation ('xor_ln65_200', sha256.cpp:65) [3092]  (0 ns)
	'xor' operation ('xor_ln65_201', sha256.cpp:65) [3093]  (0.289 ns)
	'add' operation ('add_ln65_201', sha256.cpp:65) [3099]  (0 ns)
	'add' operation ('add_ln65_202', sha256.cpp:65) [3100]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [3101]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [3117]  (1.14 ns)
	'xor' operation ('xor_ln65_205', sha256.cpp:65) [3130]  (0.289 ns)
	'add' operation ('add_ln65_205', sha256.cpp:65) [3136]  (0 ns)
	'add' operation ('add_ln65_206', sha256.cpp:65) [3137]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [3138]  (0.907 ns)

 <State 36>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [3154]  (1.14 ns)
	'xor' operation ('xor_ln65_208', sha256.cpp:65) [3166]  (0 ns)
	'xor' operation ('xor_ln65_209', sha256.cpp:65) [3167]  (0.289 ns)
	'add' operation ('add_ln65_209', sha256.cpp:65) [3173]  (0 ns)
	'add' operation ('add_ln65_210', sha256.cpp:65) [3174]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [3175]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [3191]  (1.14 ns)
	'xor' operation ('xor_ln65_212', sha256.cpp:65) [3203]  (0 ns)
	'xor' operation ('xor_ln65_213', sha256.cpp:65) [3204]  (0.289 ns)
	'add' operation ('add_ln65_213', sha256.cpp:65) [3210]  (0 ns)
	'add' operation ('add_ln65_214', sha256.cpp:65) [3211]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [3212]  (0.907 ns)

 <State 37>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [3228]  (1.14 ns)
	'xor' operation ('xor_ln65_217', sha256.cpp:65) [3241]  (0.289 ns)
	'add' operation ('add_ln65_217', sha256.cpp:65) [3247]  (0 ns)
	'add' operation ('add_ln65_218', sha256.cpp:65) [3248]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [3249]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [3265]  (1.14 ns)
	'xor' operation ('xor_ln65_221', sha256.cpp:65) [3278]  (0.289 ns)
	'add' operation ('add_ln65_221', sha256.cpp:65) [3284]  (0 ns)
	'add' operation ('add_ln65_222', sha256.cpp:65) [3285]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [3286]  (0.907 ns)

 <State 38>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [3302]  (1.14 ns)
	'xor' operation ('xor_ln65_224', sha256.cpp:65) [3314]  (0 ns)
	'xor' operation ('xor_ln65_225', sha256.cpp:65) [3315]  (0.289 ns)
	'add' operation ('add_ln65_225', sha256.cpp:65) [3321]  (0 ns)
	'add' operation ('add_ln65_226', sha256.cpp:65) [3322]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [3323]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [3339]  (1.14 ns)
	'xor' operation ('xor_ln65_228', sha256.cpp:65) [3351]  (0 ns)
	'xor' operation ('xor_ln65_229', sha256.cpp:65) [3352]  (0.289 ns)
	'add' operation ('add_ln65_229', sha256.cpp:65) [3358]  (0 ns)
	'add' operation ('add_ln65_230', sha256.cpp:65) [3359]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [3360]  (0.907 ns)

 <State 39>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [3376]  (1.14 ns)
	'xor' operation ('xor_ln65_232', sha256.cpp:65) [3388]  (0 ns)
	'xor' operation ('xor_ln65_233', sha256.cpp:65) [3389]  (0.289 ns)
	'add' operation ('add_ln65_233', sha256.cpp:65) [3395]  (0 ns)
	'add' operation ('add_ln65_234', sha256.cpp:65) [3396]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [3397]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [3413]  (1.14 ns)
	'xor' operation ('xor_ln65_236', sha256.cpp:65) [3425]  (0 ns)
	'xor' operation ('xor_ln65_237', sha256.cpp:65) [3426]  (0.289 ns)
	'add' operation ('add_ln65_237', sha256.cpp:65) [3432]  (0 ns)
	'add' operation ('add_ln65_238', sha256.cpp:65) [3433]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [3434]  (0.907 ns)

 <State 40>: 6.49ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [3450]  (1.14 ns)
	'xor' operation ('xor_ln65_241', sha256.cpp:65) [3463]  (0.289 ns)
	'add' operation ('add_ln65_241', sha256.cpp:65) [3469]  (0 ns)
	'add' operation ('add_ln65_242', sha256.cpp:65) [3470]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [3471]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [3487]  (1.14 ns)
	'xor' operation ('xor_ln65_244', sha256.cpp:65) [3499]  (0 ns)
	'xor' operation ('xor_ln65_245', sha256.cpp:65) [3500]  (0.289 ns)
	'add' operation ('add_ln65_245', sha256.cpp:65) [3506]  (0 ns)
	'add' operation ('add_ln65_246', sha256.cpp:65) [3507]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [3508]  (0.907 ns)

 <State 41>: 7.29ns
The critical path consists of the following:
	'add' operation ('e', sha256.cpp:70) [3524]  (1.14 ns)
	'xor' operation ('xor_ln65_248', sha256.cpp:65) [3536]  (0 ns)
	'xor' operation ('xor_ln65_249', sha256.cpp:65) [3537]  (0 ns)
	'add' operation ('add_ln65_252', sha256.cpp:65) [3546]  (1.14 ns)
	'add' operation ('add_ln65_253', sha256.cpp:65) [3547]  (0.907 ns)
	'add' operation ('t1', sha256.cpp:65) [3548]  (0.907 ns)
	'add' operation ('e', sha256.cpp:70) [3564]  (1.14 ns)
	'xor' operation ('xor_ln65_252', sha256.cpp:65) [3576]  (0 ns)
	'xor' operation ('xor_ln65_253', sha256.cpp:65) [3577]  (0 ns)
	'add' operation ('add_ln65_259', sha256.cpp:65) [3586]  (1.14 ns)
	'add' operation ('add_ln65_260', sha256.cpp:65) [3587]  (0.907 ns)

 <State 42>: 4.26ns
The critical path consists of the following:
	'and' operation ('and_ln66_125', sha256.cpp:66) [3560]  (0.289 ns)
	'xor' operation ('xor_ln66_251', sha256.cpp:66) [3563]  (0.289 ns)
	'add' operation ('add_ln74_124', sha256.cpp:74) [3565]  (0 ns)
	'add' operation ('a', sha256.cpp:74) [3566]  (0.907 ns)
	'xor' operation ('xor_ln66_252', sha256.cpp:66) [3598]  (0 ns)
	'xor' operation ('xor_ln66_253', sha256.cpp:66) [3599]  (0 ns)
	'add' operation ('add_ln79_2', sha256.cpp:79) [3606]  (1.14 ns)
	'add' operation ('add_ln79', sha256.cpp:79) [3607]  (0.907 ns)
	'store' operation ('store_ln80', sha256.cpp:80) of constant <constant:_ssdm_op_Write.bram.i64> on array 'ctx' [3611]  (0.73 ns)

 <State 43>: 0.73ns
The critical path consists of the following:
	'store' operation ('store_ln84', sha256.cpp:84) of constant <constant:_ssdm_op_Write.bram.i64> on array 'ctx' [3626]  (0.73 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
