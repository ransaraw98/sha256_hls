

================================================================
== Vitis HLS Report for 'sha256'
================================================================
* Date:           Mon Jun 21 01:57:56 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        sha256
* Solution:       optimize_5 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.346 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      153|      153|  1.530 us|  1.530 us|  154|  154|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                     |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- convert_to_words   |       16|       16|         1|          1|          1|    16|       yes|
        |- create_schedule    |       48|       48|         1|          1|          1|    48|       yes|
        |- compression        |       65|       65|         2|          1|          1|    64|       yes|
        |- convert_endianess  |       16|       16|         4|          4|          4|     4|       yes|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1
  * Pipeline-1: initiation interval (II) = 1, depth = 1
  * Pipeline-2: initiation interval (II) = 1, depth = 2
  * Pipeline-3: initiation interval (II) = 4, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 4
  Pipeline-0 : II = 1, D = 1, States = { 2 }
  Pipeline-1 : II = 1, D = 1, States = { 4 }
  Pipeline-2 : II = 1, D = 2, States = { 6 7 }
  Pipeline-3 : II = 4, D = 4, States = { 9 10 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 2 
3 --> 4 
4 --> 5 4 
5 --> 6 
6 --> 7 
7 --> 8 6 
8 --> 9 
9 --> 13 10 
10 --> 11 
11 --> 12 
12 --> 9 
13 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%m_15 = alloca i32 1"   --->   Operation 14 'alloca' 'm_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%m_15_1 = alloca i32 1"   --->   Operation 15 'alloca' 'm_15_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%m_15_2 = alloca i32 1"   --->   Operation 16 'alloca' 'm_15_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%m_15_3 = alloca i32 1"   --->   Operation 17 'alloca' 'm_15_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%m_15_4 = alloca i32 1"   --->   Operation 18 'alloca' 'm_15_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%m_15_5 = alloca i32 1"   --->   Operation 19 'alloca' 'm_15_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%m_15_6 = alloca i32 1"   --->   Operation 20 'alloca' 'm_15_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%m_15_7 = alloca i32 1"   --->   Operation 21 'alloca' 'm_15_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%m_15_8 = alloca i32 1"   --->   Operation 22 'alloca' 'm_15_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%m_15_9 = alloca i32 1"   --->   Operation 23 'alloca' 'm_15_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%m_15_10 = alloca i32 1"   --->   Operation 24 'alloca' 'm_15_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%m_15_11 = alloca i32 1"   --->   Operation 25 'alloca' 'm_15_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%m_15_12 = alloca i32 1"   --->   Operation 26 'alloca' 'm_15_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%m_15_13 = alloca i32 1"   --->   Operation 27 'alloca' 'm_15_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%m_15_14 = alloca i32 1"   --->   Operation 28 'alloca' 'm_15_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%m_15_15 = alloca i32 1"   --->   Operation 29 'alloca' 'm_15_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_2"   --->   Operation 30 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %stateREG"   --->   Operation 31 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %stateREG, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 32 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %data"   --->   Operation 33 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %data, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 34 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %hash, void @empty_1, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 35 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %hash"   --->   Operation 36 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%data_read = read i8 @_ssdm_op_Read.ap_auto.i8P0A, i8 %data" [sha256.cpp:32]   --->   Operation 37 'read' 'data_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%m_0 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %data_read, i8 %data_read, i8 %data_read, i8 %data_read" [sha256.cpp:32]   --->   Operation 38 'bitconcatenate' 'm_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.46ns)   --->   "%br_ln30 = br void" [sha256.cpp:30]   --->   Operation 39 'br' 'br_ln30' <Predicate = true> <Delay = 0.46>

State 2 <SV = 1> <Delay = 0.82>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%i = phi i5 0, void, i5 %add_ln30, void %.split6709" [sha256.cpp:30]   --->   Operation 40 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.82ns)   --->   "%add_ln30 = add i5 %i, i5 1" [sha256.cpp:30]   --->   Operation 41 'add' 'add_ln30' <Predicate = true> <Delay = 0.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%m_15_load = load i32 %m_15" [sha256.cpp:34]   --->   Operation 42 'load' 'm_15_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%m_15_1_load = load i32 %m_15_1" [sha256.cpp:34]   --->   Operation 43 'load' 'm_15_1_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.72ns)   --->   "%icmp_ln30 = icmp_eq  i5 %i, i5 16" [sha256.cpp:30]   --->   Operation 44 'icmp' 'icmp_ln30' <Predicate = true> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.56> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 16, i64 16, i64 16"   --->   Operation 45 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%br_ln30 = br i1 %icmp_ln30, void %.split6, void %.lr.ph.preheader" [sha256.cpp:30]   --->   Operation 46 'br' 'br_ln30' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%specpipeline_ln28 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [sha256.cpp:28]   --->   Operation 47 'specpipeline' 'specpipeline_ln28' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%specloopname_ln28 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [sha256.cpp:28]   --->   Operation 48 'specloopname' 'specloopname_ln28' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%trunc_ln32 = trunc i5 %i" [sha256.cpp:32]   --->   Operation 49 'trunc' 'trunc_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.71ns)   --->   "%switch_ln32 = switch i4 %trunc_ln32, void %branch335, i4 0, void %.split6..split6709_crit_edge, i4 1, void %branch321, i4 2, void %branch322, i4 3, void %branch323, i4 4, void %branch324, i4 5, void %branch325, i4 6, void %branch326, i4 7, void %branch327, i4 8, void %branch328, i4 9, void %branch329, i4 10, void %branch330, i4 11, void %branch331, i4 12, void %branch332, i4 13, void %branch333, i4 14, void %branch334" [sha256.cpp:32]   --->   Operation 50 'switch' 'switch_ln32' <Predicate = (!icmp_ln30)> <Delay = 0.71>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%store_ln32 = store i32 %m_0, i32 %m_15" [sha256.cpp:32]   --->   Operation 51 'store' 'store_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 14)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%br_ln32 = br void %.split6709" [sha256.cpp:32]   --->   Operation 52 'br' 'br_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 14)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%store_ln32 = store i32 %m_0, i32 %m_15_15" [sha256.cpp:32]   --->   Operation 53 'store' 'store_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 13)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%br_ln32 = br void %.split6709" [sha256.cpp:32]   --->   Operation 54 'br' 'br_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 13)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%store_ln32 = store i32 %m_0, i32 %m_15_14" [sha256.cpp:32]   --->   Operation 55 'store' 'store_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 12)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%br_ln32 = br void %.split6709" [sha256.cpp:32]   --->   Operation 56 'br' 'br_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 12)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%store_ln32 = store i32 %m_0, i32 %m_15_13" [sha256.cpp:32]   --->   Operation 57 'store' 'store_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 11)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%br_ln32 = br void %.split6709" [sha256.cpp:32]   --->   Operation 58 'br' 'br_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 11)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%store_ln32 = store i32 %m_0, i32 %m_15_12" [sha256.cpp:32]   --->   Operation 59 'store' 'store_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 10)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%br_ln32 = br void %.split6709" [sha256.cpp:32]   --->   Operation 60 'br' 'br_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 10)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%store_ln32 = store i32 %m_0, i32 %m_15_11" [sha256.cpp:32]   --->   Operation 61 'store' 'store_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 9)> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%br_ln32 = br void %.split6709" [sha256.cpp:32]   --->   Operation 62 'br' 'br_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 9)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%store_ln32 = store i32 %m_0, i32 %m_15_10" [sha256.cpp:32]   --->   Operation 63 'store' 'store_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 8)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%br_ln32 = br void %.split6709" [sha256.cpp:32]   --->   Operation 64 'br' 'br_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 8)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%store_ln32 = store i32 %m_0, i32 %m_15_9" [sha256.cpp:32]   --->   Operation 65 'store' 'store_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 7)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%br_ln32 = br void %.split6709" [sha256.cpp:32]   --->   Operation 66 'br' 'br_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 7)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%store_ln32 = store i32 %m_0, i32 %m_15_8" [sha256.cpp:32]   --->   Operation 67 'store' 'store_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 6)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%br_ln32 = br void %.split6709" [sha256.cpp:32]   --->   Operation 68 'br' 'br_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 6)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%store_ln32 = store i32 %m_0, i32 %m_15_7" [sha256.cpp:32]   --->   Operation 69 'store' 'store_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 5)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%br_ln32 = br void %.split6709" [sha256.cpp:32]   --->   Operation 70 'br' 'br_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 5)> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%store_ln32 = store i32 %m_0, i32 %m_15_6" [sha256.cpp:32]   --->   Operation 71 'store' 'store_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 4)> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%br_ln32 = br void %.split6709" [sha256.cpp:32]   --->   Operation 72 'br' 'br_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 4)> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%store_ln32 = store i32 %m_0, i32 %m_15_5" [sha256.cpp:32]   --->   Operation 73 'store' 'store_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 3)> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%br_ln32 = br void %.split6709" [sha256.cpp:32]   --->   Operation 74 'br' 'br_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 3)> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%store_ln32 = store i32 %m_0, i32 %m_15_4" [sha256.cpp:32]   --->   Operation 75 'store' 'store_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 2)> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%br_ln32 = br void %.split6709" [sha256.cpp:32]   --->   Operation 76 'br' 'br_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 2)> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%store_ln32 = store i32 %m_0, i32 %m_15_3" [sha256.cpp:32]   --->   Operation 77 'store' 'store_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 1)> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%br_ln32 = br void %.split6709" [sha256.cpp:32]   --->   Operation 78 'br' 'br_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 1)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%store_ln32 = store i32 %m_0, i32 %m_15_2" [sha256.cpp:32]   --->   Operation 79 'store' 'store_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 0)> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%br_ln32 = br void %.split6709" [sha256.cpp:32]   --->   Operation 80 'br' 'br_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 0)> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%store_ln32 = store i32 %m_0, i32 %m_15_1" [sha256.cpp:32]   --->   Operation 81 'store' 'store_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 15)> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "%br_ln32 = br void %.split6709" [sha256.cpp:32]   --->   Operation 82 'br' 'br_ln32' <Predicate = (!icmp_ln30 & trunc_ln32 == 15)> <Delay = 0.00>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 83 'br' 'br_ln0' <Predicate = (!icmp_ln30)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.46>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%m_63 = alloca i32 1"   --->   Operation 84 'alloca' 'm_63' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%m_63_1 = alloca i32 1"   --->   Operation 85 'alloca' 'm_63_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%m_63_2 = alloca i32 1"   --->   Operation 86 'alloca' 'm_63_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%m_63_3 = alloca i32 1"   --->   Operation 87 'alloca' 'm_63_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%m_63_4 = alloca i32 1"   --->   Operation 88 'alloca' 'm_63_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%m_63_5 = alloca i32 1"   --->   Operation 89 'alloca' 'm_63_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%m_63_6 = alloca i32 1"   --->   Operation 90 'alloca' 'm_63_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%m_63_7 = alloca i32 1"   --->   Operation 91 'alloca' 'm_63_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%m_63_8 = alloca i32 1"   --->   Operation 92 'alloca' 'm_63_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%m_63_9 = alloca i32 1"   --->   Operation 93 'alloca' 'm_63_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%m_63_10 = alloca i32 1"   --->   Operation 94 'alloca' 'm_63_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%m_63_11 = alloca i32 1"   --->   Operation 95 'alloca' 'm_63_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%m_63_12 = alloca i32 1"   --->   Operation 96 'alloca' 'm_63_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%m_63_13 = alloca i32 1"   --->   Operation 97 'alloca' 'm_63_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 98 [1/1] (0.00ns)   --->   "%m_63_14 = alloca i32 1"   --->   Operation 98 'alloca' 'm_63_14' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 99 [1/1] (0.00ns)   --->   "%m_63_15 = alloca i32 1"   --->   Operation 99 'alloca' 'm_63_15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%m_63_16 = alloca i32 1"   --->   Operation 100 'alloca' 'm_63_16' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 101 [1/1] (0.00ns)   --->   "%m_63_17 = alloca i32 1"   --->   Operation 101 'alloca' 'm_63_17' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 102 [1/1] (0.00ns)   --->   "%m_63_18 = alloca i32 1"   --->   Operation 102 'alloca' 'm_63_18' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 103 [1/1] (0.00ns)   --->   "%m_63_19 = alloca i32 1"   --->   Operation 103 'alloca' 'm_63_19' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 104 [1/1] (0.00ns)   --->   "%m_63_20 = alloca i32 1"   --->   Operation 104 'alloca' 'm_63_20' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 105 [1/1] (0.00ns)   --->   "%m_63_21 = alloca i32 1"   --->   Operation 105 'alloca' 'm_63_21' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 106 [1/1] (0.00ns)   --->   "%m_63_22 = alloca i32 1"   --->   Operation 106 'alloca' 'm_63_22' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 107 [1/1] (0.00ns)   --->   "%m_63_23 = alloca i32 1"   --->   Operation 107 'alloca' 'm_63_23' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 108 [1/1] (0.00ns)   --->   "%m_63_24 = alloca i32 1"   --->   Operation 108 'alloca' 'm_63_24' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 109 [1/1] (0.00ns)   --->   "%m_63_25 = alloca i32 1"   --->   Operation 109 'alloca' 'm_63_25' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 110 [1/1] (0.00ns)   --->   "%m_63_26 = alloca i32 1"   --->   Operation 110 'alloca' 'm_63_26' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 111 [1/1] (0.00ns)   --->   "%m_63_27 = alloca i32 1"   --->   Operation 111 'alloca' 'm_63_27' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 112 [1/1] (0.00ns)   --->   "%m_63_28 = alloca i32 1"   --->   Operation 112 'alloca' 'm_63_28' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 113 [1/1] (0.00ns)   --->   "%m_63_29 = alloca i32 1"   --->   Operation 113 'alloca' 'm_63_29' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 114 [1/1] (0.00ns)   --->   "%m_63_30 = alloca i32 1"   --->   Operation 114 'alloca' 'm_63_30' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 115 [1/1] (0.00ns)   --->   "%m_63_31 = alloca i32 1"   --->   Operation 115 'alloca' 'm_63_31' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 116 [1/1] (0.00ns)   --->   "%m_63_32 = alloca i32 1"   --->   Operation 116 'alloca' 'm_63_32' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 117 [1/1] (0.00ns)   --->   "%m_63_33 = alloca i32 1"   --->   Operation 117 'alloca' 'm_63_33' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 118 [1/1] (0.00ns)   --->   "%m_63_34 = alloca i32 1"   --->   Operation 118 'alloca' 'm_63_34' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 119 [1/1] (0.00ns)   --->   "%m_63_35 = alloca i32 1"   --->   Operation 119 'alloca' 'm_63_35' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 120 [1/1] (0.00ns)   --->   "%m_63_36 = alloca i32 1"   --->   Operation 120 'alloca' 'm_63_36' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 121 [1/1] (0.00ns)   --->   "%m_63_37 = alloca i32 1"   --->   Operation 121 'alloca' 'm_63_37' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 122 [1/1] (0.00ns)   --->   "%m_63_38 = alloca i32 1"   --->   Operation 122 'alloca' 'm_63_38' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 123 [1/1] (0.00ns)   --->   "%m_63_39 = alloca i32 1"   --->   Operation 123 'alloca' 'm_63_39' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 124 [1/1] (0.00ns)   --->   "%m_63_40 = alloca i32 1"   --->   Operation 124 'alloca' 'm_63_40' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 125 [1/1] (0.00ns)   --->   "%m_63_41 = alloca i32 1"   --->   Operation 125 'alloca' 'm_63_41' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 126 [1/1] (0.00ns)   --->   "%m_63_42 = alloca i32 1"   --->   Operation 126 'alloca' 'm_63_42' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 127 [1/1] (0.00ns)   --->   "%m_63_43 = alloca i32 1"   --->   Operation 127 'alloca' 'm_63_43' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 128 [1/1] (0.00ns)   --->   "%m_63_44 = alloca i32 1"   --->   Operation 128 'alloca' 'm_63_44' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 129 [1/1] (0.00ns)   --->   "%m_63_45 = alloca i32 1"   --->   Operation 129 'alloca' 'm_63_45' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 130 [1/1] (0.00ns)   --->   "%m_63_46 = alloca i32 1"   --->   Operation 130 'alloca' 'm_63_46' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 131 [1/1] (0.00ns)   --->   "%m_63_47 = alloca i32 1"   --->   Operation 131 'alloca' 'm_63_47' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 132 [1/1] (0.46ns)   --->   "%br_ln33 = br void %.lr.ph" [sha256.cpp:33]   --->   Operation 132 'br' 'br_ln33' <Predicate = true> <Delay = 0.46>

State 4 <SV = 3> <Delay = 2.92>
ST_4 : Operation 133 [1/1] (0.00ns)   --->   "%i_1 = phi i7 %add_ln33, void %.split4128, i7 16, void %.lr.ph.preheader" [sha256.cpp:33]   --->   Operation 133 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 134 [1/1] (0.00ns)   --->   "%m_63_load = load i32 %m_63" [sha256.cpp:48]   --->   Operation 134 'load' 'm_63_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 135 [1/1] (0.00ns)   --->   "%m_63_1_load = load i32 %m_63_1" [sha256.cpp:48]   --->   Operation 135 'load' 'm_63_1_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 136 [1/1] (0.00ns)   --->   "%m_63_2_load = load i32 %m_63_2" [sha256.cpp:48]   --->   Operation 136 'load' 'm_63_2_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 137 [1/1] (0.00ns)   --->   "%m_63_3_load = load i32 %m_63_3" [sha256.cpp:48]   --->   Operation 137 'load' 'm_63_3_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 138 [1/1] (0.00ns)   --->   "%m_63_4_load = load i32 %m_63_4" [sha256.cpp:48]   --->   Operation 138 'load' 'm_63_4_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 139 [1/1] (0.00ns)   --->   "%m_63_5_load = load i32 %m_63_5" [sha256.cpp:48]   --->   Operation 139 'load' 'm_63_5_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 140 [1/1] (0.00ns)   --->   "%m_63_6_load = load i32 %m_63_6" [sha256.cpp:48]   --->   Operation 140 'load' 'm_63_6_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 141 [1/1] (0.00ns)   --->   "%m_63_7_load = load i32 %m_63_7" [sha256.cpp:48]   --->   Operation 141 'load' 'm_63_7_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 142 [1/1] (0.00ns)   --->   "%m_63_8_load = load i32 %m_63_8" [sha256.cpp:48]   --->   Operation 142 'load' 'm_63_8_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 143 [1/1] (0.00ns)   --->   "%m_63_9_load = load i32 %m_63_9" [sha256.cpp:48]   --->   Operation 143 'load' 'm_63_9_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 144 [1/1] (0.00ns)   --->   "%m_63_10_load = load i32 %m_63_10" [sha256.cpp:48]   --->   Operation 144 'load' 'm_63_10_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 145 [1/1] (0.00ns)   --->   "%m_63_11_load = load i32 %m_63_11" [sha256.cpp:48]   --->   Operation 145 'load' 'm_63_11_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 146 [1/1] (0.00ns)   --->   "%m_63_12_load = load i32 %m_63_12" [sha256.cpp:48]   --->   Operation 146 'load' 'm_63_12_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 147 [1/1] (0.00ns)   --->   "%m_63_13_load = load i32 %m_63_13" [sha256.cpp:48]   --->   Operation 147 'load' 'm_63_13_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 148 [1/1] (0.00ns)   --->   "%m_63_14_load = load i32 %m_63_14" [sha256.cpp:48]   --->   Operation 148 'load' 'm_63_14_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 149 [1/1] (0.00ns)   --->   "%m_63_15_load = load i32 %m_63_15" [sha256.cpp:48]   --->   Operation 149 'load' 'm_63_15_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 150 [1/1] (0.00ns)   --->   "%m_63_16_load = load i32 %m_63_16" [sha256.cpp:48]   --->   Operation 150 'load' 'm_63_16_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 151 [1/1] (0.00ns)   --->   "%m_63_17_load = load i32 %m_63_17" [sha256.cpp:48]   --->   Operation 151 'load' 'm_63_17_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 152 [1/1] (0.00ns)   --->   "%m_63_18_load = load i32 %m_63_18" [sha256.cpp:48]   --->   Operation 152 'load' 'm_63_18_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 153 [1/1] (0.00ns)   --->   "%m_63_19_load = load i32 %m_63_19" [sha256.cpp:48]   --->   Operation 153 'load' 'm_63_19_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 154 [1/1] (0.00ns)   --->   "%m_63_20_load = load i32 %m_63_20" [sha256.cpp:48]   --->   Operation 154 'load' 'm_63_20_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 155 [1/1] (0.00ns)   --->   "%m_63_21_load = load i32 %m_63_21" [sha256.cpp:48]   --->   Operation 155 'load' 'm_63_21_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 156 [1/1] (0.00ns)   --->   "%m_63_22_load = load i32 %m_63_22" [sha256.cpp:48]   --->   Operation 156 'load' 'm_63_22_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 157 [1/1] (0.00ns)   --->   "%m_63_23_load = load i32 %m_63_23" [sha256.cpp:48]   --->   Operation 157 'load' 'm_63_23_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 158 [1/1] (0.00ns)   --->   "%m_63_24_load = load i32 %m_63_24" [sha256.cpp:48]   --->   Operation 158 'load' 'm_63_24_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 159 [1/1] (0.00ns)   --->   "%m_63_25_load = load i32 %m_63_25" [sha256.cpp:48]   --->   Operation 159 'load' 'm_63_25_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 160 [1/1] (0.00ns)   --->   "%m_63_26_load = load i32 %m_63_26" [sha256.cpp:48]   --->   Operation 160 'load' 'm_63_26_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 161 [1/1] (0.00ns)   --->   "%m_63_27_load = load i32 %m_63_27" [sha256.cpp:48]   --->   Operation 161 'load' 'm_63_27_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 162 [1/1] (0.00ns)   --->   "%m_63_28_load = load i32 %m_63_28" [sha256.cpp:48]   --->   Operation 162 'load' 'm_63_28_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 163 [1/1] (0.00ns)   --->   "%m_63_29_load = load i32 %m_63_29" [sha256.cpp:48]   --->   Operation 163 'load' 'm_63_29_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 164 [1/1] (0.00ns)   --->   "%m_63_30_load = load i32 %m_63_30" [sha256.cpp:48]   --->   Operation 164 'load' 'm_63_30_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 165 [1/1] (0.00ns)   --->   "%m_63_31_load = load i32 %m_63_31" [sha256.cpp:48]   --->   Operation 165 'load' 'm_63_31_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 166 [1/1] (0.00ns)   --->   "%m_63_32_load = load i32 %m_63_32" [sha256.cpp:48]   --->   Operation 166 'load' 'm_63_32_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 167 [1/1] (0.00ns)   --->   "%m_63_33_load = load i32 %m_63_33" [sha256.cpp:48]   --->   Operation 167 'load' 'm_63_33_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 168 [1/1] (0.00ns)   --->   "%m_63_34_load = load i32 %m_63_34" [sha256.cpp:48]   --->   Operation 168 'load' 'm_63_34_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 169 [1/1] (0.00ns)   --->   "%m_63_35_load = load i32 %m_63_35" [sha256.cpp:48]   --->   Operation 169 'load' 'm_63_35_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 170 [1/1] (0.00ns)   --->   "%m_63_36_load = load i32 %m_63_36" [sha256.cpp:48]   --->   Operation 170 'load' 'm_63_36_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 171 [1/1] (0.00ns)   --->   "%m_63_37_load = load i32 %m_63_37" [sha256.cpp:48]   --->   Operation 171 'load' 'm_63_37_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 172 [1/1] (0.00ns)   --->   "%m_63_38_load = load i32 %m_63_38" [sha256.cpp:48]   --->   Operation 172 'load' 'm_63_38_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 173 [1/1] (0.00ns)   --->   "%m_63_39_load = load i32 %m_63_39" [sha256.cpp:48]   --->   Operation 173 'load' 'm_63_39_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 174 [1/1] (0.00ns)   --->   "%m_63_40_load = load i32 %m_63_40" [sha256.cpp:48]   --->   Operation 174 'load' 'm_63_40_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 175 [1/1] (0.00ns)   --->   "%m_63_41_load = load i32 %m_63_41" [sha256.cpp:48]   --->   Operation 175 'load' 'm_63_41_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 176 [1/1] (0.00ns)   --->   "%m_63_42_load = load i32 %m_63_42" [sha256.cpp:48]   --->   Operation 176 'load' 'm_63_42_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 177 [1/1] (0.00ns)   --->   "%m_63_43_load = load i32 %m_63_43" [sha256.cpp:48]   --->   Operation 177 'load' 'm_63_43_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 178 [1/1] (0.00ns)   --->   "%m_63_44_load = load i32 %m_63_44" [sha256.cpp:48]   --->   Operation 178 'load' 'm_63_44_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 179 [1/1] (0.00ns)   --->   "%m_63_45_load = load i32 %m_63_45" [sha256.cpp:48]   --->   Operation 179 'load' 'm_63_45_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 180 [1/1] (0.71ns)   --->   "%icmp_ln33 = icmp_eq  i7 %i_1, i7 64" [sha256.cpp:33]   --->   Operation 180 'icmp' 'icmp_ln33' <Predicate = true> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.56> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 181 [1/1] (0.00ns)   --->   "%empty_12 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 48, i64 48, i64 48"   --->   Operation 181 'speclooptripcount' 'empty_12' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 182 [1/1] (0.00ns)   --->   "%br_ln33 = br i1 %icmp_ln33, void %.split4, void %._crit_edge" [sha256.cpp:33]   --->   Operation 182 'br' 'br_ln33' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 183 [1/1] (0.00ns)   --->   "%specpipeline_ln28 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [sha256.cpp:28]   --->   Operation 183 'specpipeline' 'specpipeline_ln28' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 184 [1/1] (0.00ns)   --->   "%specloopname_ln28 = specloopname void @_ssdm_op_SpecLoopName, void @empty_5" [sha256.cpp:28]   --->   Operation 184 'specloopname' 'specloopname_ln28' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 185 [1/1] (0.00ns)   --->   "%trunc_ln34 = trunc i7 %i_1" [sha256.cpp:34]   --->   Operation 185 'trunc' 'trunc_ln34' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 186 [1/1] (0.86ns)   --->   "%switch_ln34 = switch i6 %trunc_ln34, void %branch317, i6 16, void %.split4580, i6 17, void %branch271, i6 18, void %branch272, i6 19, void %branch273, i6 20, void %branch274, i6 21, void %branch275, i6 22, void %branch276, i6 23, void %branch277, i6 24, void %branch278, i6 25, void %branch279, i6 26, void %branch280, i6 27, void %branch281, i6 28, void %branch282, i6 29, void %branch283, i6 30, void %branch284, i6 31, void %branch285, i6 32, void %branch286, i6 33, void %branch287, i6 34, void %branch288, i6 35, void %branch289, i6 36, void %branch290, i6 37, void %branch291, i6 38, void %branch292, i6 39, void %branch293, i6 40, void %branch294, i6 41, void %branch295, i6 42, void %branch296, i6 43, void %branch297, i6 44, void %branch298, i6 45, void %branch299, i6 46, void %branch300, i6 47, void %branch301, i6 48, void %branch302, i6 49, void %branch303, i6 50, void %branch304, i6 51, void %branch305, i6 52, void %branch306, i6 53, void %branch307, i6 54, void %branch308, i6 55, void %branch309, i6 56, void %branch310, i6 57, void %branch311, i6 58, void %branch312, i6 59, void %branch313, i6 60, void %branch314, i6 61, void %branch315, i6 62, void %branch316" [sha256.cpp:34]   --->   Operation 186 'switch' 'switch_ln34' <Predicate = (!icmp_ln33)> <Delay = 0.86>
ST_4 : Operation 187 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 187 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 62)> <Delay = 0.86>
ST_4 : Operation 188 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 188 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 61)> <Delay = 0.86>
ST_4 : Operation 189 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 189 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 60)> <Delay = 0.86>
ST_4 : Operation 190 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 190 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 59)> <Delay = 0.86>
ST_4 : Operation 191 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 191 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 58)> <Delay = 0.86>
ST_4 : Operation 192 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 192 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 57)> <Delay = 0.86>
ST_4 : Operation 193 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 193 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 56)> <Delay = 0.86>
ST_4 : Operation 194 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 194 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 55)> <Delay = 0.86>
ST_4 : Operation 195 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 195 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 54)> <Delay = 0.86>
ST_4 : Operation 196 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 196 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 53)> <Delay = 0.86>
ST_4 : Operation 197 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 197 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 52)> <Delay = 0.86>
ST_4 : Operation 198 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 198 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 51)> <Delay = 0.86>
ST_4 : Operation 199 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 199 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 50)> <Delay = 0.86>
ST_4 : Operation 200 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 200 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 49)> <Delay = 0.86>
ST_4 : Operation 201 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 201 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 48)> <Delay = 0.86>
ST_4 : Operation 202 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 202 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 47)> <Delay = 0.86>
ST_4 : Operation 203 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 203 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 46)> <Delay = 0.86>
ST_4 : Operation 204 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 204 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 45)> <Delay = 0.86>
ST_4 : Operation 205 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 205 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 44)> <Delay = 0.86>
ST_4 : Operation 206 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 206 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 43)> <Delay = 0.86>
ST_4 : Operation 207 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 207 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 42)> <Delay = 0.86>
ST_4 : Operation 208 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 208 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 41)> <Delay = 0.86>
ST_4 : Operation 209 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 209 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 40)> <Delay = 0.86>
ST_4 : Operation 210 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 210 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 39)> <Delay = 0.86>
ST_4 : Operation 211 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 211 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 38)> <Delay = 0.86>
ST_4 : Operation 212 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 212 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 37)> <Delay = 0.86>
ST_4 : Operation 213 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 213 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 36)> <Delay = 0.86>
ST_4 : Operation 214 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 214 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 35)> <Delay = 0.86>
ST_4 : Operation 215 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 215 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 34)> <Delay = 0.86>
ST_4 : Operation 216 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 216 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 33)> <Delay = 0.86>
ST_4 : Operation 217 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 217 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 32)> <Delay = 0.86>
ST_4 : Operation 218 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 218 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 31)> <Delay = 0.86>
ST_4 : Operation 219 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 219 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 30)> <Delay = 0.86>
ST_4 : Operation 220 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 220 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 29)> <Delay = 0.86>
ST_4 : Operation 221 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 221 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 28)> <Delay = 0.86>
ST_4 : Operation 222 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 222 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 27)> <Delay = 0.86>
ST_4 : Operation 223 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 223 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 26)> <Delay = 0.86>
ST_4 : Operation 224 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 224 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 25)> <Delay = 0.86>
ST_4 : Operation 225 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 225 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 24)> <Delay = 0.86>
ST_4 : Operation 226 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 226 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 23)> <Delay = 0.86>
ST_4 : Operation 227 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 227 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 22)> <Delay = 0.86>
ST_4 : Operation 228 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 228 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 21)> <Delay = 0.86>
ST_4 : Operation 229 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 229 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 20)> <Delay = 0.86>
ST_4 : Operation 230 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 230 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 19)> <Delay = 0.86>
ST_4 : Operation 231 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 231 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 18)> <Delay = 0.86>
ST_4 : Operation 232 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 232 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 17)> <Delay = 0.86>
ST_4 : Operation 233 [1/1] (0.86ns)   --->   "%br_ln34 = br void %.split4580" [sha256.cpp:34]   --->   Operation 233 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 63) | (!icmp_ln33 & trunc_ln34 == 15) | (!icmp_ln33 & trunc_ln34 == 14) | (!icmp_ln33 & trunc_ln34 == 13) | (!icmp_ln33 & trunc_ln34 == 12) | (!icmp_ln33 & trunc_ln34 == 11) | (!icmp_ln33 & trunc_ln34 == 10) | (!icmp_ln33 & trunc_ln34 == 9) | (!icmp_ln33 & trunc_ln34 == 8) | (!icmp_ln33 & trunc_ln34 == 7) | (!icmp_ln33 & trunc_ln34 == 6) | (!icmp_ln33 & trunc_ln34 == 5) | (!icmp_ln33 & trunc_ln34 == 4) | (!icmp_ln33 & trunc_ln34 == 3) | (!icmp_ln33 & trunc_ln34 == 2) | (!icmp_ln33 & trunc_ln34 == 1) | (!icmp_ln33 & trunc_ln34 == 0)> <Delay = 0.86>
ST_4 : Operation 234 [1/1] (0.00ns)   --->   "%phi_ln34 = phi i32 %m_15_1_load, void %branch271, i32 %m_63_load, void %branch272, i32 %m_63_1_load, void %branch273, i32 %m_63_2_load, void %branch274, i32 %m_63_3_load, void %branch275, i32 %m_63_4_load, void %branch276, i32 %m_63_5_load, void %branch277, i32 %m_63_6_load, void %branch278, i32 %m_63_7_load, void %branch279, i32 %m_63_8_load, void %branch280, i32 %m_63_9_load, void %branch281, i32 %m_63_10_load, void %branch282, i32 %m_63_11_load, void %branch283, i32 %m_63_12_load, void %branch284, i32 %m_63_13_load, void %branch285, i32 %m_63_14_load, void %branch286, i32 %m_63_15_load, void %branch287, i32 %m_63_16_load, void %branch288, i32 %m_63_17_load, void %branch289, i32 %m_63_18_load, void %branch290, i32 %m_63_19_load, void %branch291, i32 %m_63_20_load, void %branch292, i32 %m_63_21_load, void %branch293, i32 %m_63_22_load, void %branch294, i32 %m_63_23_load, void %branch295, i32 %m_63_24_load, void %branch296, i32 %m_63_25_load, void %branch297, i32 %m_63_26_load, void %branch298, i32 %m_63_27_load, void %branch299, i32 %m_63_28_load, void %branch300, i32 %m_63_29_load, void %branch301, i32 %m_63_30_load, void %branch302, i32 %m_63_31_load, void %branch303, i32 %m_63_32_load, void %branch304, i32 %m_63_33_load, void %branch305, i32 %m_63_34_load, void %branch306, i32 %m_63_35_load, void %branch307, i32 %m_63_36_load, void %branch308, i32 %m_63_37_load, void %branch309, i32 %m_63_38_load, void %branch310, i32 %m_63_39_load, void %branch311, i32 %m_63_40_load, void %branch312, i32 %m_63_41_load, void %branch313, i32 %m_63_42_load, void %branch314, i32 %m_63_43_load, void %branch315, i32 %m_63_44_load, void %branch316, i32 %m_63_45_load, void %branch317, i32 %m_15_load, void %.split4" [sha256.cpp:34]   --->   Operation 234 'phi' 'phi_ln34' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 235 [1/1] (0.00ns)   --->   "%m_15_2_load_1 = load i32 %m_15_2" [sha256.cpp:34]   --->   Operation 235 'load' 'm_15_2_load_1' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 236 [1/1] (0.00ns)   --->   "%m_15_3_load_1 = load i32 %m_15_3" [sha256.cpp:34]   --->   Operation 236 'load' 'm_15_3_load_1' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 237 [1/1] (0.00ns)   --->   "%m_15_4_load_1 = load i32 %m_15_4" [sha256.cpp:34]   --->   Operation 237 'load' 'm_15_4_load_1' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 238 [1/1] (0.00ns)   --->   "%m_15_5_load_1 = load i32 %m_15_5" [sha256.cpp:34]   --->   Operation 238 'load' 'm_15_5_load_1' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 239 [1/1] (0.00ns)   --->   "%m_15_6_load_1 = load i32 %m_15_6" [sha256.cpp:34]   --->   Operation 239 'load' 'm_15_6_load_1' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 240 [1/1] (0.00ns)   --->   "%m_15_7_load_1 = load i32 %m_15_7" [sha256.cpp:34]   --->   Operation 240 'load' 'm_15_7_load_1' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 241 [1/1] (0.00ns)   --->   "%m_15_8_load_1 = load i32 %m_15_8" [sha256.cpp:34]   --->   Operation 241 'load' 'm_15_8_load_1' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 242 [1/1] (0.00ns)   --->   "%m_15_9_load_1 = load i32 %m_15_9" [sha256.cpp:34]   --->   Operation 242 'load' 'm_15_9_load_1' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 243 [1/1] (0.00ns)   --->   "%m_15_10_load_1 = load i32 %m_15_10" [sha256.cpp:34]   --->   Operation 243 'load' 'm_15_10_load_1' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 244 [1/1] (0.00ns)   --->   "%m_15_11_load_1 = load i32 %m_15_11" [sha256.cpp:34]   --->   Operation 244 'load' 'm_15_11_load_1' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 245 [1/1] (0.00ns)   --->   "%m_15_12_load_1 = load i32 %m_15_12" [sha256.cpp:34]   --->   Operation 245 'load' 'm_15_12_load_1' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 246 [1/1] (0.00ns)   --->   "%m_15_13_load_1 = load i32 %m_15_13" [sha256.cpp:34]   --->   Operation 246 'load' 'm_15_13_load_1' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 247 [1/1] (0.00ns)   --->   "%m_15_14_load_1 = load i32 %m_15_14" [sha256.cpp:34]   --->   Operation 247 'load' 'm_15_14_load_1' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 248 [1/1] (0.00ns)   --->   "%m_15_15_load_1 = load i32 %m_15_15" [sha256.cpp:34]   --->   Operation 248 'load' 'm_15_15_load_1' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 249 [1/1] (0.00ns) (grouped into LUT with out node add_ln34_1)   --->   "%lshr_ln2 = partselect i15 @_ssdm_op_PartSelect.i15.i32.i32.i32, i32 %phi_ln34, i32 17, i32 31" [sha256.cpp:34]   --->   Operation 249 'partselect' 'lshr_ln2' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 250 [1/1] (0.00ns) (grouped into LUT with out node add_ln34_1)   --->   "%trunc_ln34_1 = trunc i32 %phi_ln34" [sha256.cpp:34]   --->   Operation 250 'trunc' 'trunc_ln34_1' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 251 [1/1] (0.00ns) (grouped into LUT with out node add_ln34_1)   --->   "%or_ln2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i17.i15, i17 %trunc_ln34_1, i15 %lshr_ln2" [sha256.cpp:34]   --->   Operation 251 'bitconcatenate' 'or_ln2' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 252 [1/1] (0.00ns) (grouped into LUT with out node add_ln34_1)   --->   "%lshr_ln34_1 = partselect i13 @_ssdm_op_PartSelect.i13.i32.i32.i32, i32 %phi_ln34, i32 19, i32 31" [sha256.cpp:34]   --->   Operation 252 'partselect' 'lshr_ln34_1' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 253 [1/1] (0.00ns) (grouped into LUT with out node add_ln34_1)   --->   "%trunc_ln34_2 = trunc i32 %phi_ln34" [sha256.cpp:34]   --->   Operation 253 'trunc' 'trunc_ln34_2' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 254 [1/1] (0.00ns) (grouped into LUT with out node add_ln34_1)   --->   "%or_ln34_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i19.i13, i19 %trunc_ln34_2, i13 %lshr_ln34_1" [sha256.cpp:34]   --->   Operation 254 'bitconcatenate' 'or_ln34_1' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 255 [1/1] (0.00ns) (grouped into LUT with out node add_ln34_1)   --->   "%lshr_ln34_2 = partselect i22 @_ssdm_op_PartSelect.i22.i32.i32.i32, i32 %phi_ln34, i32 10, i32 31" [sha256.cpp:34]   --->   Operation 255 'partselect' 'lshr_ln34_2' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 256 [1/1] (0.00ns) (grouped into LUT with out node add_ln34_1)   --->   "%zext_ln34 = zext i22 %lshr_ln34_2" [sha256.cpp:34]   --->   Operation 256 'zext' 'zext_ln34' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 257 [1/1] (0.00ns) (grouped into LUT with out node add_ln34_1)   --->   "%xor_ln34 = xor i32 %zext_ln34, i32 %or_ln34_1" [sha256.cpp:34]   --->   Operation 257 'xor' 'xor_ln34' <Predicate = (!icmp_ln33)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 258 [1/1] (0.00ns) (grouped into LUT with out node add_ln34_1)   --->   "%xor_ln34_1 = xor i32 %xor_ln34, i32 %or_ln2" [sha256.cpp:34]   --->   Operation 258 'xor' 'xor_ln34_1' <Predicate = (!icmp_ln33)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 259 [1/1] (0.87ns)   --->   "%phi_ln34_1 = mux i32 @_ssdm_op_Mux.ap_auto.64i32.i6, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_63_40_load, i32 %m_15_11_load_1, i32 %m_15_12_load_1, i32 %m_15_13_load_1, i32 %m_15_14_load_1, i32 %m_15_15_load_1, i32 %m_15_load, i32 %m_15_1_load, i32 %m_63_load, i32 %m_63_1_load, i32 %m_63_2_load, i32 %m_63_3_load, i32 %m_63_4_load, i32 %m_63_5_load, i32 %m_63_6_load, i32 %m_63_7_load, i32 %m_63_8_load, i32 %m_63_9_load, i32 %m_63_10_load, i32 %m_63_11_load, i32 %m_63_12_load, i32 %m_63_13_load, i32 %m_63_14_load, i32 %m_63_15_load, i32 %m_63_16_load, i32 %m_63_17_load, i32 %m_63_18_load, i32 %m_63_19_load, i32 %m_63_20_load, i32 %m_63_21_load, i32 %m_63_22_load, i32 %m_63_23_load, i32 %m_63_24_load, i32 %m_63_25_load, i32 %m_63_26_load, i32 %m_63_27_load, i32 %m_63_28_load, i32 %m_63_29_load, i32 %m_63_30_load, i32 %m_63_31_load, i32 %m_63_32_load, i32 %m_63_33_load, i32 %m_63_34_load, i32 %m_63_35_load, i32 %m_63_36_load, i32 %m_63_37_load, i32 %m_63_38_load, i32 %m_63_39_load, i32 %m_63_40_load, i6 %trunc_ln34" [sha256.cpp:34]   --->   Operation 259 'mux' 'phi_ln34_1' <Predicate = (!icmp_ln33)> <Delay = 0.87> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 260 [1/1] (0.87ns)   --->   "%phi_ln34_2 = mux i32 @_ssdm_op_Mux.ap_auto.64i32.i6, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_63_32_load, i32 %m_15_3_load_1, i32 %m_15_4_load_1, i32 %m_15_5_load_1, i32 %m_15_6_load_1, i32 %m_15_7_load_1, i32 %m_15_8_load_1, i32 %m_15_9_load_1, i32 %m_15_10_load_1, i32 %m_15_11_load_1, i32 %m_15_12_load_1, i32 %m_15_13_load_1, i32 %m_15_14_load_1, i32 %m_15_15_load_1, i32 %m_15_load, i32 %m_15_1_load, i32 %m_63_load, i32 %m_63_1_load, i32 %m_63_2_load, i32 %m_63_3_load, i32 %m_63_4_load, i32 %m_63_5_load, i32 %m_63_6_load, i32 %m_63_7_load, i32 %m_63_8_load, i32 %m_63_9_load, i32 %m_63_10_load, i32 %m_63_11_load, i32 %m_63_12_load, i32 %m_63_13_load, i32 %m_63_14_load, i32 %m_63_15_load, i32 %m_63_16_load, i32 %m_63_17_load, i32 %m_63_18_load, i32 %m_63_19_load, i32 %m_63_20_load, i32 %m_63_21_load, i32 %m_63_22_load, i32 %m_63_23_load, i32 %m_63_24_load, i32 %m_63_25_load, i32 %m_63_26_load, i32 %m_63_27_load, i32 %m_63_28_load, i32 %m_63_29_load, i32 %m_63_30_load, i32 %m_63_31_load, i32 %m_63_32_load, i6 %trunc_ln34" [sha256.cpp:34]   --->   Operation 260 'mux' 'phi_ln34_2' <Predicate = (!icmp_ln33)> <Delay = 0.87> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 261 [1/1] (0.00ns) (grouped into LUT with out node add_ln34_1)   --->   "%lshr_ln34_3 = partselect i25 @_ssdm_op_PartSelect.i25.i32.i32.i32, i32 %phi_ln34_2, i32 7, i32 31" [sha256.cpp:34]   --->   Operation 261 'partselect' 'lshr_ln34_3' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 262 [1/1] (0.00ns) (grouped into LUT with out node add_ln34_1)   --->   "%trunc_ln34_3 = trunc i32 %phi_ln34_2" [sha256.cpp:34]   --->   Operation 262 'trunc' 'trunc_ln34_3' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 263 [1/1] (0.00ns) (grouped into LUT with out node add_ln34_1)   --->   "%or_ln34_2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i7.i25, i7 %trunc_ln34_3, i25 %lshr_ln34_3" [sha256.cpp:34]   --->   Operation 263 'bitconcatenate' 'or_ln34_2' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 264 [1/1] (0.00ns) (grouped into LUT with out node add_ln34_1)   --->   "%lshr_ln34_4 = partselect i14 @_ssdm_op_PartSelect.i14.i32.i32.i32, i32 %phi_ln34_2, i32 18, i32 31" [sha256.cpp:34]   --->   Operation 264 'partselect' 'lshr_ln34_4' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 265 [1/1] (0.00ns) (grouped into LUT with out node add_ln34_1)   --->   "%trunc_ln34_4 = trunc i32 %phi_ln34_2" [sha256.cpp:34]   --->   Operation 265 'trunc' 'trunc_ln34_4' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 266 [1/1] (0.00ns) (grouped into LUT with out node add_ln34_1)   --->   "%or_ln34_3 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i18.i14, i18 %trunc_ln34_4, i14 %lshr_ln34_4" [sha256.cpp:34]   --->   Operation 266 'bitconcatenate' 'or_ln34_3' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 267 [1/1] (0.00ns) (grouped into LUT with out node add_ln34_1)   --->   "%lshr_ln34_5 = partselect i29 @_ssdm_op_PartSelect.i29.i32.i32.i32, i32 %phi_ln34_2, i32 3, i32 31" [sha256.cpp:34]   --->   Operation 267 'partselect' 'lshr_ln34_5' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 268 [1/1] (0.00ns) (grouped into LUT with out node add_ln34_1)   --->   "%zext_ln34_1 = zext i29 %lshr_ln34_5" [sha256.cpp:34]   --->   Operation 268 'zext' 'zext_ln34_1' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_4 : Operation 269 [1/1] (0.00ns) (grouped into LUT with out node add_ln34_1)   --->   "%xor_ln34_2 = xor i32 %zext_ln34_1, i32 %or_ln34_3" [sha256.cpp:34]   --->   Operation 269 'xor' 'xor_ln34_2' <Predicate = (!icmp_ln33)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 270 [1/1] (0.00ns) (grouped into LUT with out node add_ln34_1)   --->   "%xor_ln34_3 = xor i32 %xor_ln34_2, i32 %or_ln34_2" [sha256.cpp:34]   --->   Operation 270 'xor' 'xor_ln34_3' <Predicate = (!icmp_ln33)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 271 [1/1] (0.87ns)   --->   "%phi_ln34_3 = mux i32 @_ssdm_op_Mux.ap_auto.64i32.i6, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_63_31_load, i32 %m_15_2_load_1, i32 %m_15_3_load_1, i32 %m_15_4_load_1, i32 %m_15_5_load_1, i32 %m_15_6_load_1, i32 %m_15_7_load_1, i32 %m_15_8_load_1, i32 %m_15_9_load_1, i32 %m_15_10_load_1, i32 %m_15_11_load_1, i32 %m_15_12_load_1, i32 %m_15_13_load_1, i32 %m_15_14_load_1, i32 %m_15_15_load_1, i32 %m_15_load, i32 %m_15_1_load, i32 %m_63_load, i32 %m_63_1_load, i32 %m_63_2_load, i32 %m_63_3_load, i32 %m_63_4_load, i32 %m_63_5_load, i32 %m_63_6_load, i32 %m_63_7_load, i32 %m_63_8_load, i32 %m_63_9_load, i32 %m_63_10_load, i32 %m_63_11_load, i32 %m_63_12_load, i32 %m_63_13_load, i32 %m_63_14_load, i32 %m_63_15_load, i32 %m_63_16_load, i32 %m_63_17_load, i32 %m_63_18_load, i32 %m_63_19_load, i32 %m_63_20_load, i32 %m_63_21_load, i32 %m_63_22_load, i32 %m_63_23_load, i32 %m_63_24_load, i32 %m_63_25_load, i32 %m_63_26_load, i32 %m_63_27_load, i32 %m_63_28_load, i32 %m_63_29_load, i32 %m_63_30_load, i32 %m_63_31_load, i6 %trunc_ln34" [sha256.cpp:34]   --->   Operation 271 'mux' 'phi_ln34_3' <Predicate = (!icmp_ln33)> <Delay = 0.87> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 272 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln34 = add i32 %phi_ln34_1, i32 %phi_ln34_3" [sha256.cpp:34]   --->   Operation 272 'add' 'add_ln34' <Predicate = (!icmp_ln33)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 273 [1/1] (1.14ns) (out node of the LUT)   --->   "%add_ln34_1 = add i32 %xor_ln34_1, i32 %xor_ln34_3" [sha256.cpp:34]   --->   Operation 273 'add' 'add_ln34_1' <Predicate = (!icmp_ln33)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 274 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%m_16 = add i32 %add_ln34_1, i32 %add_ln34" [sha256.cpp:34]   --->   Operation 274 'add' 'm_16' <Predicate = (!icmp_ln33)> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 275 [1/1] (0.71ns)   --->   "%switch_ln34 = switch i6 %trunc_ln34, void %branch63, i6 16, void %.split4580..split4128_crit_edge, i6 17, void %branch17, i6 18, void %branch18, i6 19, void %branch19, i6 20, void %branch20, i6 21, void %branch21, i6 22, void %branch22, i6 23, void %branch23, i6 24, void %branch24, i6 25, void %branch25, i6 26, void %branch26, i6 27, void %branch27, i6 28, void %branch28, i6 29, void %branch29, i6 30, void %branch30, i6 31, void %branch31, i6 32, void %branch32, i6 33, void %branch33, i6 34, void %branch34, i6 35, void %branch35, i6 36, void %branch36, i6 37, void %branch37, i6 38, void %branch38, i6 39, void %branch39, i6 40, void %branch40, i6 41, void %branch41, i6 42, void %branch42, i6 43, void %branch43, i6 44, void %branch44, i6 45, void %branch45, i6 46, void %branch46, i6 47, void %branch47, i6 48, void %branch48, i6 49, void %branch49, i6 50, void %branch50, i6 51, void %branch51, i6 52, void %branch52, i6 53, void %branch53, i6 54, void %branch54, i6 55, void %branch55, i6 56, void %branch56, i6 57, void %branch57, i6 58, void %branch58, i6 59, void %branch59, i6 60, void %branch60, i6 61, void %branch61, i6 62, void %branch62" [sha256.cpp:34]   --->   Operation 275 'switch' 'switch_ln34' <Predicate = (!icmp_ln33)> <Delay = 0.71>
ST_4 : Operation 276 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_46" [sha256.cpp:34]   --->   Operation 276 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 62)> <Delay = 0.00>
ST_4 : Operation 277 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 277 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 62)> <Delay = 0.00>
ST_4 : Operation 278 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_45" [sha256.cpp:34]   --->   Operation 278 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 61)> <Delay = 0.00>
ST_4 : Operation 279 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 279 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 61)> <Delay = 0.00>
ST_4 : Operation 280 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_44" [sha256.cpp:34]   --->   Operation 280 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 60)> <Delay = 0.00>
ST_4 : Operation 281 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 281 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 60)> <Delay = 0.00>
ST_4 : Operation 282 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_43" [sha256.cpp:34]   --->   Operation 282 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 59)> <Delay = 0.00>
ST_4 : Operation 283 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 283 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 59)> <Delay = 0.00>
ST_4 : Operation 284 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_42" [sha256.cpp:34]   --->   Operation 284 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 58)> <Delay = 0.00>
ST_4 : Operation 285 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 285 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 58)> <Delay = 0.00>
ST_4 : Operation 286 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_41" [sha256.cpp:34]   --->   Operation 286 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 57)> <Delay = 0.00>
ST_4 : Operation 287 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 287 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 57)> <Delay = 0.00>
ST_4 : Operation 288 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_40" [sha256.cpp:34]   --->   Operation 288 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 56)> <Delay = 0.00>
ST_4 : Operation 289 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 289 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 56)> <Delay = 0.00>
ST_4 : Operation 290 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_39" [sha256.cpp:34]   --->   Operation 290 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 55)> <Delay = 0.00>
ST_4 : Operation 291 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 291 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 55)> <Delay = 0.00>
ST_4 : Operation 292 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_38" [sha256.cpp:34]   --->   Operation 292 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 54)> <Delay = 0.00>
ST_4 : Operation 293 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 293 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 54)> <Delay = 0.00>
ST_4 : Operation 294 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_37" [sha256.cpp:34]   --->   Operation 294 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 53)> <Delay = 0.00>
ST_4 : Operation 295 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 295 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 53)> <Delay = 0.00>
ST_4 : Operation 296 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_36" [sha256.cpp:34]   --->   Operation 296 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 52)> <Delay = 0.00>
ST_4 : Operation 297 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 297 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 52)> <Delay = 0.00>
ST_4 : Operation 298 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_35" [sha256.cpp:34]   --->   Operation 298 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 51)> <Delay = 0.00>
ST_4 : Operation 299 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 299 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 51)> <Delay = 0.00>
ST_4 : Operation 300 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_34" [sha256.cpp:34]   --->   Operation 300 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 50)> <Delay = 0.00>
ST_4 : Operation 301 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 301 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 50)> <Delay = 0.00>
ST_4 : Operation 302 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_33" [sha256.cpp:34]   --->   Operation 302 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 49)> <Delay = 0.00>
ST_4 : Operation 303 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 303 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 49)> <Delay = 0.00>
ST_4 : Operation 304 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_32" [sha256.cpp:34]   --->   Operation 304 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 48)> <Delay = 0.00>
ST_4 : Operation 305 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 305 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 48)> <Delay = 0.00>
ST_4 : Operation 306 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_31" [sha256.cpp:34]   --->   Operation 306 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 47)> <Delay = 0.00>
ST_4 : Operation 307 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 307 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 47)> <Delay = 0.00>
ST_4 : Operation 308 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_30" [sha256.cpp:34]   --->   Operation 308 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 46)> <Delay = 0.00>
ST_4 : Operation 309 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 309 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 46)> <Delay = 0.00>
ST_4 : Operation 310 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_29" [sha256.cpp:34]   --->   Operation 310 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 45)> <Delay = 0.00>
ST_4 : Operation 311 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 311 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 45)> <Delay = 0.00>
ST_4 : Operation 312 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_28" [sha256.cpp:34]   --->   Operation 312 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 44)> <Delay = 0.00>
ST_4 : Operation 313 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 313 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 44)> <Delay = 0.00>
ST_4 : Operation 314 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_27" [sha256.cpp:34]   --->   Operation 314 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 43)> <Delay = 0.00>
ST_4 : Operation 315 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 315 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 43)> <Delay = 0.00>
ST_4 : Operation 316 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_26" [sha256.cpp:34]   --->   Operation 316 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 42)> <Delay = 0.00>
ST_4 : Operation 317 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 317 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 42)> <Delay = 0.00>
ST_4 : Operation 318 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_25" [sha256.cpp:34]   --->   Operation 318 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 41)> <Delay = 0.00>
ST_4 : Operation 319 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 319 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 41)> <Delay = 0.00>
ST_4 : Operation 320 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_24" [sha256.cpp:34]   --->   Operation 320 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 40)> <Delay = 0.00>
ST_4 : Operation 321 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 321 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 40)> <Delay = 0.00>
ST_4 : Operation 322 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_23" [sha256.cpp:34]   --->   Operation 322 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 39)> <Delay = 0.00>
ST_4 : Operation 323 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 323 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 39)> <Delay = 0.00>
ST_4 : Operation 324 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_22" [sha256.cpp:34]   --->   Operation 324 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 38)> <Delay = 0.00>
ST_4 : Operation 325 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 325 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 38)> <Delay = 0.00>
ST_4 : Operation 326 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_21" [sha256.cpp:34]   --->   Operation 326 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 37)> <Delay = 0.00>
ST_4 : Operation 327 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 327 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 37)> <Delay = 0.00>
ST_4 : Operation 328 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_20" [sha256.cpp:34]   --->   Operation 328 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 36)> <Delay = 0.00>
ST_4 : Operation 329 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 329 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 36)> <Delay = 0.00>
ST_4 : Operation 330 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_19" [sha256.cpp:34]   --->   Operation 330 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 35)> <Delay = 0.00>
ST_4 : Operation 331 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 331 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 35)> <Delay = 0.00>
ST_4 : Operation 332 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_18" [sha256.cpp:34]   --->   Operation 332 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 34)> <Delay = 0.00>
ST_4 : Operation 333 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 333 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 34)> <Delay = 0.00>
ST_4 : Operation 334 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_17" [sha256.cpp:34]   --->   Operation 334 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 33)> <Delay = 0.00>
ST_4 : Operation 335 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 335 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 33)> <Delay = 0.00>
ST_4 : Operation 336 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_16" [sha256.cpp:34]   --->   Operation 336 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 32)> <Delay = 0.00>
ST_4 : Operation 337 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 337 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 32)> <Delay = 0.00>
ST_4 : Operation 338 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_15" [sha256.cpp:34]   --->   Operation 338 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 31)> <Delay = 0.00>
ST_4 : Operation 339 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 339 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 31)> <Delay = 0.00>
ST_4 : Operation 340 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_14" [sha256.cpp:34]   --->   Operation 340 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 30)> <Delay = 0.00>
ST_4 : Operation 341 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 341 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 30)> <Delay = 0.00>
ST_4 : Operation 342 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_13" [sha256.cpp:34]   --->   Operation 342 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 29)> <Delay = 0.00>
ST_4 : Operation 343 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 343 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 29)> <Delay = 0.00>
ST_4 : Operation 344 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_12" [sha256.cpp:34]   --->   Operation 344 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 28)> <Delay = 0.00>
ST_4 : Operation 345 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 345 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 28)> <Delay = 0.00>
ST_4 : Operation 346 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_11" [sha256.cpp:34]   --->   Operation 346 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 27)> <Delay = 0.00>
ST_4 : Operation 347 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 347 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 27)> <Delay = 0.00>
ST_4 : Operation 348 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_10" [sha256.cpp:34]   --->   Operation 348 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 26)> <Delay = 0.00>
ST_4 : Operation 349 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 349 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 26)> <Delay = 0.00>
ST_4 : Operation 350 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_9" [sha256.cpp:34]   --->   Operation 350 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 25)> <Delay = 0.00>
ST_4 : Operation 351 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 351 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 25)> <Delay = 0.00>
ST_4 : Operation 352 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_8" [sha256.cpp:34]   --->   Operation 352 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 24)> <Delay = 0.00>
ST_4 : Operation 353 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 353 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 24)> <Delay = 0.00>
ST_4 : Operation 354 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_7" [sha256.cpp:34]   --->   Operation 354 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 23)> <Delay = 0.00>
ST_4 : Operation 355 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 355 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 23)> <Delay = 0.00>
ST_4 : Operation 356 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_6" [sha256.cpp:34]   --->   Operation 356 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 22)> <Delay = 0.00>
ST_4 : Operation 357 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 357 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 22)> <Delay = 0.00>
ST_4 : Operation 358 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_5" [sha256.cpp:34]   --->   Operation 358 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 21)> <Delay = 0.00>
ST_4 : Operation 359 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 359 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 21)> <Delay = 0.00>
ST_4 : Operation 360 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_4" [sha256.cpp:34]   --->   Operation 360 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 20)> <Delay = 0.00>
ST_4 : Operation 361 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 361 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 20)> <Delay = 0.00>
ST_4 : Operation 362 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_3" [sha256.cpp:34]   --->   Operation 362 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 19)> <Delay = 0.00>
ST_4 : Operation 363 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 363 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 19)> <Delay = 0.00>
ST_4 : Operation 364 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_2" [sha256.cpp:34]   --->   Operation 364 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 18)> <Delay = 0.00>
ST_4 : Operation 365 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 365 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 18)> <Delay = 0.00>
ST_4 : Operation 366 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_1" [sha256.cpp:34]   --->   Operation 366 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 17)> <Delay = 0.00>
ST_4 : Operation 367 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 367 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 17)> <Delay = 0.00>
ST_4 : Operation 368 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63" [sha256.cpp:34]   --->   Operation 368 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 16)> <Delay = 0.00>
ST_4 : Operation 369 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 369 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 16)> <Delay = 0.00>
ST_4 : Operation 370 [1/1] (0.00ns)   --->   "%store_ln34 = store i32 %m_16, i32 %m_63_47" [sha256.cpp:34]   --->   Operation 370 'store' 'store_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 63) | (!icmp_ln33 & trunc_ln34 == 15) | (!icmp_ln33 & trunc_ln34 == 14) | (!icmp_ln33 & trunc_ln34 == 13) | (!icmp_ln33 & trunc_ln34 == 12) | (!icmp_ln33 & trunc_ln34 == 11) | (!icmp_ln33 & trunc_ln34 == 10) | (!icmp_ln33 & trunc_ln34 == 9) | (!icmp_ln33 & trunc_ln34 == 8) | (!icmp_ln33 & trunc_ln34 == 7) | (!icmp_ln33 & trunc_ln34 == 6) | (!icmp_ln33 & trunc_ln34 == 5) | (!icmp_ln33 & trunc_ln34 == 4) | (!icmp_ln33 & trunc_ln34 == 3) | (!icmp_ln33 & trunc_ln34 == 2) | (!icmp_ln33 & trunc_ln34 == 1) | (!icmp_ln33 & trunc_ln34 == 0)> <Delay = 0.00>
ST_4 : Operation 371 [1/1] (0.00ns)   --->   "%br_ln34 = br void %.split4128" [sha256.cpp:34]   --->   Operation 371 'br' 'br_ln34' <Predicate = (!icmp_ln33 & trunc_ln34 == 63) | (!icmp_ln33 & trunc_ln34 == 15) | (!icmp_ln33 & trunc_ln34 == 14) | (!icmp_ln33 & trunc_ln34 == 13) | (!icmp_ln33 & trunc_ln34 == 12) | (!icmp_ln33 & trunc_ln34 == 11) | (!icmp_ln33 & trunc_ln34 == 10) | (!icmp_ln33 & trunc_ln34 == 9) | (!icmp_ln33 & trunc_ln34 == 8) | (!icmp_ln33 & trunc_ln34 == 7) | (!icmp_ln33 & trunc_ln34 == 6) | (!icmp_ln33 & trunc_ln34 == 5) | (!icmp_ln33 & trunc_ln34 == 4) | (!icmp_ln33 & trunc_ln34 == 3) | (!icmp_ln33 & trunc_ln34 == 2) | (!icmp_ln33 & trunc_ln34 == 1) | (!icmp_ln33 & trunc_ln34 == 0)> <Delay = 0.00>
ST_4 : Operation 372 [1/1] (0.85ns)   --->   "%add_ln33 = add i7 %i_1, i7 1" [sha256.cpp:33]   --->   Operation 372 'add' 'add_ln33' <Predicate = (!icmp_ln33)> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 373 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.lr.ph"   --->   Operation 373 'br' 'br_ln0' <Predicate = (!icmp_ln33)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 0.46>
ST_5 : Operation 374 [1/1] (0.00ns)   --->   "%h = alloca i32 1"   --->   Operation 374 'alloca' 'h' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 375 [1/1] (0.00ns)   --->   "%h_1 = alloca i32 1"   --->   Operation 375 'alloca' 'h_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 376 [1/1] (0.00ns)   --->   "%g = alloca i32 1"   --->   Operation 376 'alloca' 'g' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 377 [1/1] (0.00ns)   --->   "%f = alloca i32 1"   --->   Operation 377 'alloca' 'f' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 378 [1/1] (0.00ns)   --->   "%d = alloca i32 1"   --->   Operation 378 'alloca' 'd' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 379 [1/1] (0.00ns)   --->   "%d_1 = alloca i32 1"   --->   Operation 379 'alloca' 'd_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 380 [1/1] (0.00ns)   --->   "%c = alloca i32 1"   --->   Operation 380 'alloca' 'c' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 381 [1/1] (0.00ns)   --->   "%a = read i32 @_ssdm_op_Read.ap_auto.i32P0A, i32 %stateREG" [sha256.cpp:37]   --->   Operation 381 'read' 'a' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 382 [1/1] (0.46ns)   --->   "%br_ln47 = br void" [sha256.cpp:47]   --->   Operation 382 'br' 'br_ln47' <Predicate = true> <Delay = 0.46>

State 6 <SV = 5> <Delay = 1.29>
ST_6 : Operation 383 [1/1] (0.00ns)   --->   "%i_2 = phi i7 %add_ln47, void %.split2, i7 0, void %._crit_edge" [sha256.cpp:47]   --->   Operation 383 'phi' 'i_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 384 [1/1] (0.85ns)   --->   "%add_ln47 = add i7 %i_2, i7 1" [sha256.cpp:47]   --->   Operation 384 'add' 'add_ln47' <Predicate = true> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 385 [1/1] (0.71ns)   --->   "%icmp_ln47 = icmp_eq  i7 %i_2, i7 64" [sha256.cpp:47]   --->   Operation 385 'icmp' 'icmp_ln47' <Predicate = true> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.56> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 386 [1/1] (0.00ns)   --->   "%br_ln47 = br i1 %icmp_ln47, void %.split2, void" [sha256.cpp:47]   --->   Operation 386 'br' 'br_ln47' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 387 [1/1] (0.00ns)   --->   "%m_63_46_load = load i32 %m_63_46" [sha256.cpp:48]   --->   Operation 387 'load' 'm_63_46_load' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 388 [1/1] (0.00ns)   --->   "%m_63_47_load = load i32 %m_63_47" [sha256.cpp:48]   --->   Operation 388 'load' 'm_63_47_load' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 389 [1/1] (0.00ns)   --->   "%m_15_2_load = load i32 %m_15_2" [sha256.cpp:48]   --->   Operation 389 'load' 'm_15_2_load' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 390 [1/1] (0.00ns)   --->   "%m_15_3_load = load i32 %m_15_3" [sha256.cpp:48]   --->   Operation 390 'load' 'm_15_3_load' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 391 [1/1] (0.00ns)   --->   "%m_15_4_load = load i32 %m_15_4" [sha256.cpp:48]   --->   Operation 391 'load' 'm_15_4_load' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 392 [1/1] (0.00ns)   --->   "%m_15_5_load = load i32 %m_15_5" [sha256.cpp:48]   --->   Operation 392 'load' 'm_15_5_load' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 393 [1/1] (0.00ns)   --->   "%m_15_6_load = load i32 %m_15_6" [sha256.cpp:48]   --->   Operation 393 'load' 'm_15_6_load' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 394 [1/1] (0.00ns)   --->   "%m_15_7_load = load i32 %m_15_7" [sha256.cpp:48]   --->   Operation 394 'load' 'm_15_7_load' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 395 [1/1] (0.00ns)   --->   "%m_15_8_load = load i32 %m_15_8" [sha256.cpp:48]   --->   Operation 395 'load' 'm_15_8_load' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 396 [1/1] (0.00ns)   --->   "%m_15_9_load = load i32 %m_15_9" [sha256.cpp:48]   --->   Operation 396 'load' 'm_15_9_load' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 397 [1/1] (0.00ns)   --->   "%m_15_10_load = load i32 %m_15_10" [sha256.cpp:48]   --->   Operation 397 'load' 'm_15_10_load' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 398 [1/1] (0.00ns)   --->   "%m_15_11_load = load i32 %m_15_11" [sha256.cpp:48]   --->   Operation 398 'load' 'm_15_11_load' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 399 [1/1] (0.00ns)   --->   "%m_15_12_load = load i32 %m_15_12" [sha256.cpp:48]   --->   Operation 399 'load' 'm_15_12_load' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 400 [1/1] (0.00ns)   --->   "%m_15_13_load = load i32 %m_15_13" [sha256.cpp:48]   --->   Operation 400 'load' 'm_15_13_load' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 401 [1/1] (0.00ns)   --->   "%m_15_14_load = load i32 %m_15_14" [sha256.cpp:48]   --->   Operation 401 'load' 'm_15_14_load' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 402 [1/1] (0.00ns)   --->   "%m_15_15_load = load i32 %m_15_15" [sha256.cpp:48]   --->   Operation 402 'load' 'm_15_15_load' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 403 [1/1] (0.00ns)   --->   "%zext_ln47 = zext i7 %i_2" [sha256.cpp:47]   --->   Operation 403 'zext' 'zext_ln47' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 404 [1/1] (0.00ns)   --->   "%k_addr = getelementptr i32 %k, i64 0, i64 %zext_ln47" [sha256.cpp:48]   --->   Operation 404 'getelementptr' 'k_addr' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 405 [2/2] (1.29ns)   --->   "%k_load = load i6 %k_addr" [sha256.cpp:48]   --->   Operation 405 'load' 'k_load' <Predicate = (!icmp_ln47)> <Delay = 1.29> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 64> <ROM>
ST_6 : Operation 406 [1/1] (0.00ns)   --->   "%trunc_ln48_3 = trunc i7 %i_2" [sha256.cpp:48]   --->   Operation 406 'trunc' 'trunc_ln48_3' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_6 : Operation 407 [1/1] (0.87ns)   --->   "%tmp_2 = mux i32 @_ssdm_op_Mux.ap_auto.64i32.i6, i32 %m_15_2_load, i32 %m_15_3_load, i32 %m_15_4_load, i32 %m_15_5_load, i32 %m_15_6_load, i32 %m_15_7_load, i32 %m_15_8_load, i32 %m_15_9_load, i32 %m_15_10_load, i32 %m_15_11_load, i32 %m_15_12_load, i32 %m_15_13_load, i32 %m_15_14_load, i32 %m_15_15_load, i32 %m_15_load, i32 %m_15_1_load, i32 %m_63_load, i32 %m_63_1_load, i32 %m_63_2_load, i32 %m_63_3_load, i32 %m_63_4_load, i32 %m_63_5_load, i32 %m_63_6_load, i32 %m_63_7_load, i32 %m_63_8_load, i32 %m_63_9_load, i32 %m_63_10_load, i32 %m_63_11_load, i32 %m_63_12_load, i32 %m_63_13_load, i32 %m_63_14_load, i32 %m_63_15_load, i32 %m_63_16_load, i32 %m_63_17_load, i32 %m_63_18_load, i32 %m_63_19_load, i32 %m_63_20_load, i32 %m_63_21_load, i32 %m_63_22_load, i32 %m_63_23_load, i32 %m_63_24_load, i32 %m_63_25_load, i32 %m_63_26_load, i32 %m_63_27_load, i32 %m_63_28_load, i32 %m_63_29_load, i32 %m_63_30_load, i32 %m_63_31_load, i32 %m_63_32_load, i32 %m_63_33_load, i32 %m_63_34_load, i32 %m_63_35_load, i32 %m_63_36_load, i32 %m_63_37_load, i32 %m_63_38_load, i32 %m_63_39_load, i32 %m_63_40_load, i32 %m_63_41_load, i32 %m_63_42_load, i32 %m_63_43_load, i32 %m_63_44_load, i32 %m_63_45_load, i32 %m_63_46_load, i32 %m_63_47_load, i6 %trunc_ln48_3" [sha256.cpp:48]   --->   Operation 407 'mux' 'tmp_2' <Predicate = (!icmp_ln47)> <Delay = 0.87> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 3.34>
ST_7 : Operation 408 [1/1] (0.00ns)   --->   "%a_3 = phi i32 %a_2, void %.split2, i32 %a, void %._crit_edge"   --->   Operation 408 'phi' 'a_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 409 [1/1] (0.00ns)   --->   "%h_load = load i32 %h" [sha256.cpp:48]   --->   Operation 409 'load' 'h_load' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 410 [1/1] (0.00ns)   --->   "%h_1_load = load i32 %h_1" [sha256.cpp:48]   --->   Operation 410 'load' 'h_1_load' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 411 [1/1] (0.00ns)   --->   "%g_load = load i32 %g" [sha256.cpp:48]   --->   Operation 411 'load' 'g_load' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 412 [1/1] (0.00ns)   --->   "%f_load = load i32 %f"   --->   Operation 412 'load' 'f_load' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 413 [1/1] (0.00ns)   --->   "%d_load = load i32 %d" [sha256.cpp:53]   --->   Operation 413 'load' 'd_load' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 414 [1/1] (0.00ns)   --->   "%d_1_load = load i32 %d_1" [sha256.cpp:49]   --->   Operation 414 'load' 'd_1_load' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 415 [1/1] (0.00ns)   --->   "%c_load = load i32 %c" [sha256.cpp:49]   --->   Operation 415 'load' 'c_load' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 416 [1/1] (0.00ns)   --->   "%empty_13 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 64, i64 64, i64 64"   --->   Operation 416 'speclooptripcount' 'empty_13' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 417 [1/1] (0.00ns)   --->   "%store_ln47 = store i32 %a_3, i32 %c" [sha256.cpp:47]   --->   Operation 417 'store' 'store_ln47' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 418 [1/1] (0.00ns)   --->   "%store_ln47 = store i32 %c_load, i32 %d_1" [sha256.cpp:47]   --->   Operation 418 'store' 'store_ln47' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 419 [1/1] (0.00ns)   --->   "%store_ln47 = store i32 %d_1_load, i32 %d" [sha256.cpp:47]   --->   Operation 419 'store' 'store_ln47' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 420 [1/1] (0.00ns)   --->   "%store_ln47 = store i32 %f_load, i32 %g" [sha256.cpp:47]   --->   Operation 420 'store' 'store_ln47' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 421 [1/1] (0.00ns)   --->   "%store_ln47 = store i32 %g_load, i32 %h_1" [sha256.cpp:47]   --->   Operation 421 'store' 'store_ln47' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 422 [1/1] (0.00ns)   --->   "%store_ln47 = store i32 %h_1_load, i32 %h" [sha256.cpp:47]   --->   Operation 422 'store' 'store_ln47' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 423 [1/1] (0.00ns)   --->   "%f_load_1 = load i32 %f" [sha256.cpp:48]   --->   Operation 423 'load' 'f_load_1' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 424 [1/1] (0.00ns)   --->   "%specpipeline_ln28 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [sha256.cpp:28]   --->   Operation 424 'specpipeline' 'specpipeline_ln28' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 425 [1/1] (0.00ns)   --->   "%specloopname_ln28 = specloopname void @_ssdm_op_SpecLoopName, void @empty_4" [sha256.cpp:28]   --->   Operation 425 'specloopname' 'specloopname_ln28' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 426 [1/1] (0.00ns) (grouped into LUT with out node xor_ln48_1)   --->   "%lshr_ln = partselect i26 @_ssdm_op_PartSelect.i26.i32.i32.i32, i32 %f_load_1, i32 6, i32 31" [sha256.cpp:48]   --->   Operation 426 'partselect' 'lshr_ln' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 427 [1/1] (0.00ns) (grouped into LUT with out node xor_ln48_1)   --->   "%trunc_ln48 = trunc i32 %f_load_1" [sha256.cpp:48]   --->   Operation 427 'trunc' 'trunc_ln48' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 428 [1/1] (0.00ns) (grouped into LUT with out node xor_ln48_1)   --->   "%or_ln = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i6.i26, i6 %trunc_ln48, i26 %lshr_ln" [sha256.cpp:48]   --->   Operation 428 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 429 [1/1] (0.00ns) (grouped into LUT with out node xor_ln48_1)   --->   "%lshr_ln48_1 = partselect i21 @_ssdm_op_PartSelect.i21.i32.i32.i32, i32 %f_load_1, i32 11, i32 31" [sha256.cpp:48]   --->   Operation 429 'partselect' 'lshr_ln48_1' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 430 [1/1] (0.00ns) (grouped into LUT with out node xor_ln48_1)   --->   "%trunc_ln48_1 = trunc i32 %f_load_1" [sha256.cpp:48]   --->   Operation 430 'trunc' 'trunc_ln48_1' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 431 [1/1] (0.00ns) (grouped into LUT with out node xor_ln48_1)   --->   "%or_ln48_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i11.i21, i11 %trunc_ln48_1, i21 %lshr_ln48_1" [sha256.cpp:48]   --->   Operation 431 'bitconcatenate' 'or_ln48_1' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 432 [1/1] (0.00ns) (grouped into LUT with out node xor_ln48_1)   --->   "%lshr_ln48_2 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %f_load_1, i32 25, i32 31" [sha256.cpp:48]   --->   Operation 432 'partselect' 'lshr_ln48_2' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 433 [1/1] (0.00ns) (grouped into LUT with out node xor_ln48_1)   --->   "%trunc_ln48_2 = trunc i32 %f_load_1" [sha256.cpp:48]   --->   Operation 433 'trunc' 'trunc_ln48_2' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 434 [1/1] (0.00ns) (grouped into LUT with out node xor_ln48_1)   --->   "%or_ln48_2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i25.i7, i25 %trunc_ln48_2, i7 %lshr_ln48_2" [sha256.cpp:48]   --->   Operation 434 'bitconcatenate' 'or_ln48_2' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 435 [1/1] (0.00ns) (grouped into LUT with out node xor_ln48_1)   --->   "%xor_ln48 = xor i32 %or_ln, i32 %or_ln48_1" [sha256.cpp:48]   --->   Operation 435 'xor' 'xor_ln48' <Predicate = (!icmp_ln47)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 436 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln48_1 = xor i32 %xor_ln48, i32 %or_ln48_2" [sha256.cpp:48]   --->   Operation 436 'xor' 'xor_ln48_1' <Predicate = (!icmp_ln47)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 437 [1/1] (0.00ns) (grouped into LUT with out node xor_ln48_3)   --->   "%and_ln48 = and i32 %g_load, i32 %f_load_1" [sha256.cpp:48]   --->   Operation 437 'and' 'and_ln48' <Predicate = (!icmp_ln47)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 438 [1/1] (0.00ns) (grouped into LUT with out node xor_ln48_3)   --->   "%xor_ln48_2 = xor i32 %f_load_1, i32 4294967295" [sha256.cpp:48]   --->   Operation 438 'xor' 'xor_ln48_2' <Predicate = (!icmp_ln47)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 439 [1/1] (0.00ns) (grouped into LUT with out node xor_ln48_3)   --->   "%and_ln48_1 = and i32 %h_1_load, i32 %xor_ln48_2" [sha256.cpp:48]   --->   Operation 439 'and' 'and_ln48_1' <Predicate = (!icmp_ln47)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 440 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln48_3 = xor i32 %and_ln48_1, i32 %and_ln48" [sha256.cpp:48]   --->   Operation 440 'xor' 'xor_ln48_3' <Predicate = (!icmp_ln47)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 441 [1/2] (1.29ns)   --->   "%k_load = load i6 %k_addr" [sha256.cpp:48]   --->   Operation 441 'load' 'k_load' <Predicate = (!icmp_ln47)> <Delay = 1.29> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.29> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 64> <ROM>
ST_7 : Operation 442 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln48 = add i32 %k_load, i32 %h_load" [sha256.cpp:48]   --->   Operation 442 'add' 'add_ln48' <Predicate = (!icmp_ln47)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_7 : Operation 443 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln48_1 = add i32 %xor_ln48_1, i32 %tmp_2" [sha256.cpp:48]   --->   Operation 443 'add' 'add_ln48_1' <Predicate = (!icmp_ln47)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_7 : Operation 444 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%add_ln48_2 = add i32 %add_ln48_1, i32 %xor_ln48_3" [sha256.cpp:48]   --->   Operation 444 'add' 'add_ln48_2' <Predicate = (!icmp_ln47)> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_7 : Operation 445 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%t1 = add i32 %add_ln48_2, i32 %add_ln48" [sha256.cpp:48]   --->   Operation 445 'add' 't1' <Predicate = (!icmp_ln47)> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_7 : Operation 446 [1/1] (0.00ns) (grouped into LUT with out node xor_ln49_1)   --->   "%lshr_ln1 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %a_3, i32 2, i32 31" [sha256.cpp:49]   --->   Operation 446 'partselect' 'lshr_ln1' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 447 [1/1] (0.00ns) (grouped into LUT with out node xor_ln49_1)   --->   "%trunc_ln49 = trunc i32 %a_3" [sha256.cpp:49]   --->   Operation 447 'trunc' 'trunc_ln49' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 448 [1/1] (0.00ns) (grouped into LUT with out node xor_ln49_1)   --->   "%or_ln1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i2.i30, i2 %trunc_ln49, i30 %lshr_ln1" [sha256.cpp:49]   --->   Operation 448 'bitconcatenate' 'or_ln1' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 449 [1/1] (0.00ns) (grouped into LUT with out node xor_ln49_1)   --->   "%lshr_ln49_1 = partselect i19 @_ssdm_op_PartSelect.i19.i32.i32.i32, i32 %a_3, i32 13, i32 31" [sha256.cpp:49]   --->   Operation 449 'partselect' 'lshr_ln49_1' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 450 [1/1] (0.00ns) (grouped into LUT with out node xor_ln49_1)   --->   "%trunc_ln49_1 = trunc i32 %a_3" [sha256.cpp:49]   --->   Operation 450 'trunc' 'trunc_ln49_1' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 451 [1/1] (0.00ns) (grouped into LUT with out node xor_ln49_1)   --->   "%or_ln49_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i13.i19, i13 %trunc_ln49_1, i19 %lshr_ln49_1" [sha256.cpp:49]   --->   Operation 451 'bitconcatenate' 'or_ln49_1' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 452 [1/1] (0.00ns) (grouped into LUT with out node xor_ln49_1)   --->   "%lshr_ln49_2 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %a_3, i32 22, i32 31" [sha256.cpp:49]   --->   Operation 452 'partselect' 'lshr_ln49_2' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 453 [1/1] (0.00ns) (grouped into LUT with out node xor_ln49_1)   --->   "%trunc_ln49_2 = trunc i32 %a_3" [sha256.cpp:49]   --->   Operation 453 'trunc' 'trunc_ln49_2' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 454 [1/1] (0.00ns) (grouped into LUT with out node xor_ln49_1)   --->   "%or_ln49_2 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i22.i10, i22 %trunc_ln49_2, i10 %lshr_ln49_2" [sha256.cpp:49]   --->   Operation 454 'bitconcatenate' 'or_ln49_2' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 455 [1/1] (0.00ns) (grouped into LUT with out node xor_ln49_1)   --->   "%xor_ln49 = xor i32 %or_ln1, i32 %or_ln49_1" [sha256.cpp:49]   --->   Operation 455 'xor' 'xor_ln49' <Predicate = (!icmp_ln47)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 456 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln49_1 = xor i32 %xor_ln49, i32 %or_ln49_2" [sha256.cpp:49]   --->   Operation 456 'xor' 'xor_ln49_1' <Predicate = (!icmp_ln47)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 457 [1/1] (0.00ns) (grouped into LUT with out node xor_ln49_3)   --->   "%xor_ln49_2 = xor i32 %d_1_load, i32 %c_load" [sha256.cpp:49]   --->   Operation 457 'xor' 'xor_ln49_2' <Predicate = (!icmp_ln47)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 458 [1/1] (0.00ns) (grouped into LUT with out node xor_ln49_3)   --->   "%and_ln49 = and i32 %xor_ln49_2, i32 %a_3" [sha256.cpp:49]   --->   Operation 458 'and' 'and_ln49' <Predicate = (!icmp_ln47)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 459 [1/1] (0.00ns) (grouped into LUT with out node xor_ln49_3)   --->   "%and_ln49_1 = and i32 %d_1_load, i32 %c_load" [sha256.cpp:49]   --->   Operation 459 'and' 'and_ln49_1' <Predicate = (!icmp_ln47)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 460 [1/1] (0.28ns) (out node of the LUT)   --->   "%xor_ln49_3 = xor i32 %and_ln49, i32 %and_ln49_1" [sha256.cpp:49]   --->   Operation 460 'xor' 'xor_ln49_3' <Predicate = (!icmp_ln47)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 461 [1/1] (1.14ns)   --->   "%e = add i32 %t1, i32 %d_load" [sha256.cpp:53]   --->   Operation 461 'add' 'e' <Predicate = (!icmp_ln47)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 462 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln57 = add i32 %xor_ln49_1, i32 %t1" [sha256.cpp:57]   --->   Operation 462 'add' 'add_ln57' <Predicate = (!icmp_ln47)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_7 : Operation 463 [1/1] (0.90ns) (root node of TernaryAdder)   --->   "%a_2 = add i32 %add_ln57, i32 %xor_ln49_3" [sha256.cpp:57]   --->   Operation 463 'add' 'a_2' <Predicate = (!icmp_ln47)> <Delay = 0.90> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.45> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_7 : Operation 464 [1/1] (0.00ns)   --->   "%store_ln53 = store i32 %e, i32 %f" [sha256.cpp:53]   --->   Operation 464 'store' 'store_ln53' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_7 : Operation 465 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 465 'br' 'br_ln0' <Predicate = (!icmp_ln47)> <Delay = 0.00>

State 8 <SV = 7> <Delay = 1.14>
ST_8 : Operation 466 [1/1] (1.14ns)   --->   "%add_ln62 = add i32 %a, i32 %a_3" [sha256.cpp:62]   --->   Operation 466 'add' 'add_ln62' <Predicate = true> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 467 [1/1] (0.00ns)   --->   "%write_ln69 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %stateREG, i32 0" [sha256.cpp:69]   --->   Operation 467 'write' 'write_ln69' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 468 [1/1] (0.46ns)   --->   "%br_ln76 = br void" [sha256.cpp:76]   --->   Operation 468 'br' 'br_ln76' <Predicate = true> <Delay = 0.46>

State 9 <SV = 8> <Delay = 2.10>
ST_9 : Operation 469 [1/1] (0.00ns)   --->   "%r = phi i3 %add_ln76, void %.split, i3 0, void" [sha256.cpp:76]   --->   Operation 469 'phi' 'r' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 470 [1/1] (0.71ns)   --->   "%add_ln76 = add i3 %r, i3 1" [sha256.cpp:76]   --->   Operation 470 'add' 'add_ln76' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 471 [1/1] (0.56ns)   --->   "%icmp_ln76 = icmp_eq  i3 %r, i3 4" [sha256.cpp:76]   --->   Operation 471 'icmp' 'icmp_ln76' <Predicate = true> <Delay = 0.56> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.56> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 472 [1/1] (0.00ns)   --->   "%empty_14 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4"   --->   Operation 472 'speclooptripcount' 'empty_14' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 473 [1/1] (0.00ns)   --->   "%br_ln76 = br i1 %icmp_ln76, void %.split, void" [sha256.cpp:76]   --->   Operation 473 'br' 'br_ln76' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 474 [1/1] (0.00ns)   --->   "%trunc_ln77 = trunc i3 %r" [sha256.cpp:77]   --->   Operation 474 'trunc' 'trunc_ln77' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_9 : Operation 475 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i2.i3, i2 %trunc_ln77, i3 0" [sha256.cpp:77]   --->   Operation 475 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_9 : Operation 476 [1/1] (0.82ns)   --->   "%sub_ln77 = sub i5 24, i5 %shl_ln" [sha256.cpp:77]   --->   Operation 476 'sub' 'sub_ln77' <Predicate = (!icmp_ln76)> <Delay = 0.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 477 [1/1] (0.00ns)   --->   "%zext_ln77 = zext i5 %sub_ln77" [sha256.cpp:77]   --->   Operation 477 'zext' 'zext_ln77' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_9 : Operation 478 [1/1] (1.27ns)   --->   "%lshr_ln77 = lshr i32 %add_ln62, i32 %zext_ln77" [sha256.cpp:77]   --->   Operation 478 'lshr' 'lshr_ln77' <Predicate = (!icmp_ln76)> <Delay = 1.27> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 479 [1/1] (0.00ns)   --->   "%trunc_ln77_1 = trunc i32 %lshr_ln77" [sha256.cpp:77]   --->   Operation 479 'trunc' 'trunc_ln77_1' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_9 : Operation 480 [1/1] (0.14ns)   --->   "%xor_ln78 = xor i3 %r, i3 4" [sha256.cpp:78]   --->   Operation 480 'xor' 'xor_ln78' <Predicate = (!icmp_ln76)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 481 [1/1] (0.00ns)   --->   "%zext_ln78 = zext i3 %xor_ln78" [sha256.cpp:78]   --->   Operation 481 'zext' 'zext_ln78' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_9 : Operation 482 [1/1] (0.00ns)   --->   "%hash_addr_1 = getelementptr i8 %hash, i64 0, i64 %zext_ln78" [sha256.cpp:78]   --->   Operation 482 'getelementptr' 'hash_addr_1' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_9 : Operation 483 [1/1] (0.73ns)   --->   "%store_ln78 = store i8 0, i5 %hash_addr_1" [sha256.cpp:78]   --->   Operation 483 'store' 'store_ln78' <Predicate = (!icmp_ln76)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>
ST_9 : Operation 484 [1/1] (0.00ns)   --->   "%or_ln3 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i1.i3, i1 1, i3 %r" [sha256.cpp:79]   --->   Operation 484 'bitconcatenate' 'or_ln3' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_9 : Operation 485 [1/1] (0.00ns)   --->   "%zext_ln79 = zext i4 %or_ln3" [sha256.cpp:79]   --->   Operation 485 'zext' 'zext_ln79' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_9 : Operation 486 [1/1] (0.00ns)   --->   "%hash_addr_2 = getelementptr i8 %hash, i64 0, i64 %zext_ln79" [sha256.cpp:79]   --->   Operation 486 'getelementptr' 'hash_addr_2' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_9 : Operation 487 [1/1] (0.73ns)   --->   "%store_ln79 = store i8 0, i5 %hash_addr_2" [sha256.cpp:79]   --->   Operation 487 'store' 'store_ln79' <Predicate = (!icmp_ln76)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>

State 10 <SV = 9> <Delay = 0.73>
ST_10 : Operation 488 [1/1] (0.00ns)   --->   "%zext_ln76 = zext i3 %r" [sha256.cpp:76]   --->   Operation 488 'zext' 'zext_ln76' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 489 [1/1] (0.00ns)   --->   "%hash_addr = getelementptr i8 %hash, i64 0, i64 %zext_ln76" [sha256.cpp:77]   --->   Operation 489 'getelementptr' 'hash_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 490 [1/1] (0.73ns)   --->   "%store_ln77 = store i8 %trunc_ln77_1, i5 %hash_addr" [sha256.cpp:77]   --->   Operation 490 'store' 'store_ln77' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>
ST_10 : Operation 491 [1/1] (0.00ns)   --->   "%sext_ln80 = sext i3 %xor_ln78" [sha256.cpp:80]   --->   Operation 491 'sext' 'sext_ln80' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 492 [1/1] (0.00ns)   --->   "%zext_ln80 = zext i4 %sext_ln80" [sha256.cpp:80]   --->   Operation 492 'zext' 'zext_ln80' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 493 [1/1] (0.00ns)   --->   "%hash_addr_3 = getelementptr i8 %hash, i64 0, i64 %zext_ln80" [sha256.cpp:80]   --->   Operation 493 'getelementptr' 'hash_addr_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 494 [1/1] (0.73ns)   --->   "%store_ln80 = store i8 0, i5 %hash_addr_3" [sha256.cpp:80]   --->   Operation 494 'store' 'store_ln80' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>

State 11 <SV = 10> <Delay = 1.55>
ST_11 : Operation 495 [1/1] (0.00ns)   --->   "%zext_ln76_1 = zext i3 %r" [sha256.cpp:76]   --->   Operation 495 'zext' 'zext_ln76_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 496 [1/1] (0.00ns)   --->   "%or_ln4 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i2.i3, i2 2, i3 %r" [sha256.cpp:81]   --->   Operation 496 'bitconcatenate' 'or_ln4' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 497 [1/1] (0.00ns)   --->   "%zext_ln81 = zext i5 %or_ln4" [sha256.cpp:81]   --->   Operation 497 'zext' 'zext_ln81' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 498 [1/1] (0.00ns)   --->   "%hash_addr_4 = getelementptr i8 %hash, i64 0, i64 %zext_ln81" [sha256.cpp:81]   --->   Operation 498 'getelementptr' 'hash_addr_4' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 499 [1/1] (0.73ns)   --->   "%store_ln81 = store i8 0, i5 %hash_addr_4" [sha256.cpp:81]   --->   Operation 499 'store' 'store_ln81' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>
ST_11 : Operation 500 [1/1] (0.82ns)   --->   "%add_ln82 = add i5 %zext_ln76_1, i5 20" [sha256.cpp:82]   --->   Operation 500 'add' 'add_ln82' <Predicate = true> <Delay = 0.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 501 [1/1] (0.00ns)   --->   "%zext_ln82 = zext i5 %add_ln82" [sha256.cpp:82]   --->   Operation 501 'zext' 'zext_ln82' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 502 [1/1] (0.00ns)   --->   "%hash_addr_5 = getelementptr i8 %hash, i64 0, i64 %zext_ln82" [sha256.cpp:82]   --->   Operation 502 'getelementptr' 'hash_addr_5' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 503 [1/1] (0.73ns)   --->   "%store_ln82 = store i8 0, i5 %hash_addr_5" [sha256.cpp:82]   --->   Operation 503 'store' 'store_ln82' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>

State 12 <SV = 11> <Delay = 0.73>
ST_12 : Operation 504 [1/1] (0.00ns)   --->   "%specpipeline_ln71 = specpipeline void @_ssdm_op_SpecPipeline, i32 4, i32 0, i32 0, i32 0, void @empty_0" [sha256.cpp:71]   --->   Operation 504 'specpipeline' 'specpipeline_ln71' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 505 [1/1] (0.00ns)   --->   "%specloopname_ln71 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [sha256.cpp:71]   --->   Operation 505 'specloopname' 'specloopname_ln71' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 506 [1/1] (0.00ns)   --->   "%sext_ln83 = sext i4 %or_ln3" [sha256.cpp:83]   --->   Operation 506 'sext' 'sext_ln83' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 507 [1/1] (0.00ns)   --->   "%zext_ln83 = zext i5 %sext_ln83" [sha256.cpp:83]   --->   Operation 507 'zext' 'zext_ln83' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 508 [1/1] (0.00ns)   --->   "%hash_addr_6 = getelementptr i8 %hash, i64 0, i64 %zext_ln83" [sha256.cpp:83]   --->   Operation 508 'getelementptr' 'hash_addr_6' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 509 [1/1] (0.73ns)   --->   "%store_ln83 = store i8 0, i5 %hash_addr_6" [sha256.cpp:83]   --->   Operation 509 'store' 'store_ln83' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>
ST_12 : Operation 510 [1/1] (0.00ns)   --->   "%sext_ln84 = sext i3 %xor_ln78" [sha256.cpp:84]   --->   Operation 510 'sext' 'sext_ln84' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 511 [1/1] (0.00ns)   --->   "%zext_ln84 = zext i5 %sext_ln84" [sha256.cpp:84]   --->   Operation 511 'zext' 'zext_ln84' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 512 [1/1] (0.00ns)   --->   "%hash_addr_7 = getelementptr i8 %hash, i64 0, i64 %zext_ln84" [sha256.cpp:84]   --->   Operation 512 'getelementptr' 'hash_addr_7' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 513 [1/1] (0.73ns)   --->   "%store_ln84 = store i8 0, i5 %hash_addr_7" [sha256.cpp:84]   --->   Operation 513 'store' 'store_ln84' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 32> <RAM>
ST_12 : Operation 514 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 514 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 13 <SV = 9> <Delay = 0.00>
ST_13 : Operation 515 [1/1] (0.00ns)   --->   "%ret_ln87 = ret" [sha256.cpp:87]   --->   Operation 515 'ret' 'ret_ln87' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', sha256.cpp:30) with incoming values : ('add_ln30', sha256.cpp:30) [33]  (0.46 ns)

 <State 2>: 0.825ns
The critical path consists of the following:
	'phi' operation ('i', sha256.cpp:30) with incoming values : ('add_ln30', sha256.cpp:30) [33]  (0 ns)
	'add' operation ('add_ln30', sha256.cpp:30) [34]  (0.825 ns)

 <State 3>: 0.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', sha256.cpp:33) with incoming values : ('add_ln33', sha256.cpp:33) [146]  (0.46 ns)

 <State 4>: 2.92ns
The critical path consists of the following:
	'phi' operation ('i', sha256.cpp:33) with incoming values : ('add_ln33', sha256.cpp:33) [146]  (0 ns)
	'mux' operation ('phi_ln34_2', sha256.cpp:34) [322]  (0.871 ns)
	'xor' operation ('xor_ln34_3', sha256.cpp:34) [332]  (0 ns)
	'add' operation ('add_ln34_1', sha256.cpp:34) [335]  (1.14 ns)
	'add' operation ('m[16]', sha256.cpp:34) [336]  (0.907 ns)
	'store' operation ('store_ln34', sha256.cpp:34) of variable 'm[16]', sha256.cpp:34 on local variable 'm[63]' [351]  (0 ns)

 <State 5>: 0.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', sha256.cpp:47) with incoming values : ('add_ln47', sha256.cpp:47) [496]  (0.46 ns)

 <State 6>: 1.3ns
The critical path consists of the following:
	'phi' operation ('i', sha256.cpp:47) with incoming values : ('add_ln47', sha256.cpp:47) [496]  (0 ns)
	'getelementptr' operation ('k_addr', sha256.cpp:48) [551]  (0 ns)
	'load' operation ('k_load', sha256.cpp:48) on array 'k' [552]  (1.3 ns)

 <State 7>: 3.35ns
The critical path consists of the following:
	'load' operation ('k_load', sha256.cpp:48) on array 'k' [552]  (1.3 ns)
	'add' operation ('add_ln48', sha256.cpp:48) [555]  (0 ns)
	'add' operation ('t1', sha256.cpp:48) [558]  (0.907 ns)
	'add' operation ('e', sha256.cpp:53) [574]  (1.14 ns)

 <State 8>: 1.14ns
The critical path consists of the following:
	'add' operation ('add_ln62', sha256.cpp:62) [580]  (1.14 ns)

 <State 9>: 2.1ns
The critical path consists of the following:
	'phi' operation ('r', sha256.cpp:76) with incoming values : ('add_ln76', sha256.cpp:76) [584]  (0 ns)
	'sub' operation ('sub_ln77', sha256.cpp:77) [596]  (0.825 ns)
	'lshr' operation ('lshr_ln77', sha256.cpp:77) [598]  (1.28 ns)

 <State 10>: 0.73ns
The critical path consists of the following:
	'getelementptr' operation ('hash_addr', sha256.cpp:77) [600]  (0 ns)
	'store' operation ('store_ln77', sha256.cpp:77) of variable 'trunc_ln77_1', sha256.cpp:77 on array 'hash' [601]  (0.73 ns)

 <State 11>: 1.55ns
The critical path consists of the following:
	'add' operation ('add_ln82', sha256.cpp:82) [618]  (0.825 ns)
	'getelementptr' operation ('hash_addr_5', sha256.cpp:82) [620]  (0 ns)
	'store' operation ('store_ln82', sha256.cpp:82) of constant 0 on array 'hash' [621]  (0.73 ns)

 <State 12>: 0.73ns
The critical path consists of the following:
	'getelementptr' operation ('hash_addr_6', sha256.cpp:83) [624]  (0 ns)
	'store' operation ('store_ln83', sha256.cpp:83) of constant 0 on array 'hash' [625]  (0.73 ns)

 <State 13>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
