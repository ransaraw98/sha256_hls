// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sha256_sha256,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu11p-flga2577-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.346000,HLS_SYN_LAT=153,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=4022,HLS_SYN_LUT=2598,HLS_VERSION=2020_2}" *)

module sha256 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stateREG_i,
        stateREG_o,
        stateREG_o_ap_vld,
        data,
        hash_address0,
        hash_ce0,
        hash_we0,
        hash_d0,
        hash_address1,
        hash_ce1,
        hash_we1,
        hash_d1
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_pp2_stage0 = 12'd32;
parameter    ap_ST_fsm_state8 = 12'd64;
parameter    ap_ST_fsm_state9 = 12'd128;
parameter    ap_ST_fsm_state10 = 12'd256;
parameter    ap_ST_fsm_state11 = 12'd512;
parameter    ap_ST_fsm_state12 = 12'd1024;
parameter    ap_ST_fsm_state13 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] stateREG_i;
output  [31:0] stateREG_o;
output   stateREG_o_ap_vld;
input  [7:0] data;
output  [4:0] hash_address0;
output   hash_ce0;
output   hash_we0;
output  [7:0] hash_d0;
output  [4:0] hash_address1;
output   hash_ce1;
output   hash_we1;
output  [7:0] hash_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stateREG_o_ap_vld;
reg[4:0] hash_address0;
reg hash_ce0;
reg hash_we0;
reg[4:0] hash_address1;
reg hash_ce1;
reg hash_we1;
reg[7:0] hash_d1;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] k_address0;
reg    k_ce0;
wire   [31:0] k_q0;
reg   [6:0] i_2_reg_807;
reg   [31:0] a_3_reg_818;
wire   [31:0] m_0_fu_882_p5;
reg   [31:0] m_0_reg_2616;
wire   [4:0] add_ln30_fu_894_p2;
wire    ap_CS_fsm_state2;
reg   [31:0] m_15_load_reg_2641;
reg   [31:0] m_15_1_load_reg_2650;
reg   [31:0] m_63_load_reg_2953;
wire    ap_CS_fsm_state4;
reg   [31:0] m_63_1_load_reg_2958;
reg   [31:0] m_63_2_load_reg_2963;
reg   [31:0] m_63_3_load_reg_2968;
reg   [31:0] m_63_4_load_reg_2973;
reg   [31:0] m_63_5_load_reg_2978;
reg   [31:0] m_63_6_load_reg_2983;
reg   [31:0] m_63_7_load_reg_2988;
reg   [31:0] m_63_8_load_reg_2993;
reg   [31:0] m_63_9_load_reg_2998;
reg   [31:0] m_63_10_load_reg_3003;
reg   [31:0] m_63_11_load_reg_3008;
reg   [31:0] m_63_12_load_reg_3013;
reg   [31:0] m_63_13_load_reg_3018;
reg   [31:0] m_63_14_load_reg_3023;
reg   [31:0] m_63_15_load_reg_3028;
reg   [31:0] m_63_16_load_reg_3033;
reg   [31:0] m_63_17_load_reg_3038;
reg   [31:0] m_63_18_load_reg_3043;
reg   [31:0] m_63_19_load_reg_3048;
reg   [31:0] m_63_20_load_reg_3053;
reg   [31:0] m_63_21_load_reg_3058;
reg   [31:0] m_63_22_load_reg_3063;
reg   [31:0] m_63_23_load_reg_3068;
reg   [31:0] m_63_24_load_reg_3073;
reg   [31:0] m_63_25_load_reg_3078;
reg   [31:0] m_63_26_load_reg_3083;
reg   [31:0] m_63_27_load_reg_3088;
reg   [31:0] m_63_28_load_reg_3093;
reg   [31:0] m_63_29_load_reg_3098;
reg   [31:0] m_63_30_load_reg_3103;
reg   [31:0] m_63_31_load_reg_3108;
reg   [31:0] m_63_32_load_reg_3113;
reg   [31:0] m_63_33_load_reg_3118;
reg   [31:0] m_63_34_load_reg_3123;
reg   [31:0] m_63_35_load_reg_3128;
reg   [31:0] m_63_36_load_reg_3133;
reg   [31:0] m_63_37_load_reg_3138;
reg   [31:0] m_63_38_load_reg_3143;
reg   [31:0] m_63_39_load_reg_3148;
reg   [31:0] m_63_40_load_reg_3153;
reg   [31:0] m_63_41_load_reg_3158;
reg   [31:0] m_63_42_load_reg_3163;
reg   [31:0] m_63_43_load_reg_3168;
reg   [31:0] m_63_44_load_reg_3173;
reg   [31:0] m_63_45_load_reg_3178;
wire   [6:0] add_ln33_fu_1968_p2;
wire   [0:0] icmp_ln33_fu_1164_p2;
reg   [31:0] a_reg_3237;
wire    ap_CS_fsm_state5;
wire   [6:0] add_ln47_fu_1974_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state6_pp2_stage0_iter0;
wire    ap_block_state7_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln47_fu_1980_p2;
reg   [0:0] icmp_ln47_reg_3248;
wire   [31:0] tmp_2_fu_2001_p66;
reg   [31:0] tmp_2_reg_3257;
wire   [31:0] a_2_fu_2380_p2;
reg    ap_enable_reg_pp2_iter1;
wire   [31:0] add_ln62_fu_2391_p2;
reg   [31:0] add_ln62_reg_3267;
wire    ap_CS_fsm_state8;
wire   [2:0] add_ln76_fu_2396_p2;
reg   [2:0] add_ln76_reg_3272;
wire    ap_CS_fsm_state9;
wire   [7:0] trunc_ln77_1_fu_2435_p1;
reg   [7:0] trunc_ln77_1_reg_3280;
wire   [0:0] icmp_ln76_fu_2402_p2;
wire  signed [2:0] xor_ln78_fu_2439_p2;
reg  signed [2:0] xor_ln78_reg_3285;
wire  signed [3:0] or_ln3_fu_2450_p3;
reg  signed [3:0] or_ln3_reg_3291;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_flush_enable;
reg   [4:0] i_reg_684;
wire   [0:0] icmp_ln30_fu_906_p2;
reg   [6:0] i_1_reg_695;
wire    ap_CS_fsm_state3;
reg   [31:0] ap_phi_mux_phi_ln34_phi_fu_709_p96;
wire   [5:0] trunc_ln34_fu_1170_p1;
reg   [2:0] r_reg_828;
wire    ap_CS_fsm_state12;
wire   [63:0] zext_ln47_fu_1992_p1;
wire    ap_block_pp2_stage0;
wire   [63:0] zext_ln78_fu_2445_p1;
wire   [63:0] zext_ln79_fu_2458_p1;
wire   [63:0] zext_ln76_fu_2463_p1;
wire    ap_CS_fsm_state10;
wire   [63:0] zext_ln80_fu_2471_p1;
wire   [63:0] zext_ln81_fu_2488_p1;
wire    ap_CS_fsm_state11;
wire   [63:0] zext_ln82_fu_2499_p1;
wire   [63:0] zext_ln83_fu_2507_p1;
wire   [63:0] zext_ln84_fu_2515_p1;
reg   [31:0] m_15_fu_292;
wire   [3:0] trunc_ln32_fu_912_p1;
reg   [31:0] m_15_1_fu_296;
reg   [31:0] m_15_2_fu_300;
reg   [31:0] m_15_3_fu_304;
reg   [31:0] m_15_4_fu_308;
reg   [31:0] m_15_5_fu_312;
reg   [31:0] m_15_6_fu_316;
reg   [31:0] m_15_7_fu_320;
reg   [31:0] m_15_8_fu_324;
reg   [31:0] m_15_9_fu_328;
reg   [31:0] m_15_10_fu_332;
reg   [31:0] m_15_11_fu_336;
reg   [31:0] m_15_12_fu_340;
reg   [31:0] m_15_13_fu_344;
reg   [31:0] m_15_14_fu_348;
reg   [31:0] m_15_15_fu_352;
reg   [31:0] m_63_fu_356;
wire   [31:0] m_16_fu_1722_p2;
reg   [31:0] m_63_1_fu_360;
reg   [31:0] m_63_2_fu_364;
reg   [31:0] m_63_3_fu_368;
reg   [31:0] m_63_4_fu_372;
reg   [31:0] m_63_5_fu_376;
reg   [31:0] m_63_6_fu_380;
reg   [31:0] m_63_7_fu_384;
reg   [31:0] m_63_8_fu_388;
reg   [31:0] m_63_9_fu_392;
reg   [31:0] m_63_10_fu_396;
reg   [31:0] m_63_11_fu_400;
reg   [31:0] m_63_12_fu_404;
reg   [31:0] m_63_13_fu_408;
reg   [31:0] m_63_14_fu_412;
reg   [31:0] m_63_15_fu_416;
reg   [31:0] m_63_16_fu_420;
reg   [31:0] m_63_17_fu_424;
reg   [31:0] m_63_18_fu_428;
reg   [31:0] m_63_19_fu_432;
reg   [31:0] m_63_20_fu_436;
reg   [31:0] m_63_21_fu_440;
reg   [31:0] m_63_22_fu_444;
reg   [31:0] m_63_23_fu_448;
reg   [31:0] m_63_24_fu_452;
reg   [31:0] m_63_25_fu_456;
reg   [31:0] m_63_26_fu_460;
reg   [31:0] m_63_27_fu_464;
reg   [31:0] m_63_28_fu_468;
reg   [31:0] m_63_29_fu_472;
reg   [31:0] m_63_30_fu_476;
reg   [31:0] m_63_31_fu_480;
reg   [31:0] m_63_32_fu_484;
reg   [31:0] m_63_33_fu_488;
reg   [31:0] m_63_34_fu_492;
reg   [31:0] m_63_35_fu_496;
reg   [31:0] m_63_36_fu_500;
reg   [31:0] m_63_37_fu_504;
reg   [31:0] m_63_38_fu_508;
reg   [31:0] m_63_39_fu_512;
reg   [31:0] m_63_40_fu_516;
reg   [31:0] m_63_41_fu_520;
reg   [31:0] m_63_42_fu_524;
reg   [31:0] m_63_43_fu_528;
reg   [31:0] m_63_44_fu_532;
reg   [31:0] m_63_45_fu_536;
reg   [31:0] m_63_46_fu_540;
reg   [31:0] m_63_47_fu_544;
reg   [31:0] h_fu_548;
reg   [31:0] h_1_fu_552;
reg   [31:0] g_fu_556;
reg   [31:0] f_fu_560;
wire   [31:0] e_fu_2368_p2;
reg   [31:0] d_fu_564;
reg   [31:0] d_1_fu_568;
reg   [31:0] c_fu_572;
wire   [16:0] trunc_ln34_1_fu_1184_p1;
wire   [14:0] lshr_ln2_fu_1174_p4;
wire   [18:0] trunc_ln34_2_fu_1206_p1;
wire   [12:0] lshr_ln34_1_fu_1196_p4;
wire   [21:0] lshr_ln34_2_fu_1218_p4;
wire   [31:0] zext_ln34_fu_1228_p1;
wire   [31:0] or_ln34_1_fu_1210_p3;
wire   [31:0] xor_ln34_fu_1232_p2;
wire   [31:0] or_ln2_fu_1188_p3;
wire   [31:0] phi_ln34_2_fu_1376_p66;
wire   [6:0] trunc_ln34_3_fu_1518_p1;
wire   [24:0] lshr_ln34_3_fu_1508_p4;
wire   [17:0] trunc_ln34_4_fu_1540_p1;
wire   [13:0] lshr_ln34_4_fu_1530_p4;
wire   [28:0] lshr_ln34_5_fu_1552_p4;
wire   [31:0] zext_ln34_1_fu_1562_p1;
wire   [31:0] or_ln34_3_fu_1544_p3;
wire   [31:0] xor_ln34_2_fu_1566_p2;
wire   [31:0] or_ln34_2_fu_1522_p3;
wire   [31:0] phi_ln34_1_fu_1244_p66;
wire   [31:0] phi_ln34_3_fu_1578_p66;
wire   [31:0] xor_ln34_1_fu_1238_p2;
wire   [31:0] xor_ln34_3_fu_1572_p2;
wire   [31:0] add_ln34_1_fu_1716_p2;
wire   [31:0] add_ln34_fu_1710_p2;
wire   [5:0] tmp_2_fu_2001_p65;
wire   [5:0] trunc_ln48_fu_2151_p1;
wire   [25:0] lshr_ln_fu_2141_p4;
wire   [10:0] trunc_ln48_1_fu_2173_p1;
wire   [20:0] lshr_ln48_1_fu_2163_p4;
wire   [24:0] trunc_ln48_2_fu_2195_p1;
wire   [6:0] lshr_ln48_2_fu_2185_p4;
wire   [31:0] or_ln_fu_2155_p3;
wire   [31:0] or_ln48_1_fu_2177_p3;
wire   [31:0] xor_ln48_fu_2207_p2;
wire   [31:0] or_ln48_2_fu_2199_p3;
wire   [31:0] xor_ln48_2_fu_2225_p2;
wire   [31:0] and_ln48_1_fu_2231_p2;
wire   [31:0] and_ln48_fu_2219_p2;
wire   [31:0] xor_ln48_1_fu_2213_p2;
wire   [31:0] add_ln48_1_fu_2249_p2;
wire   [31:0] xor_ln48_3_fu_2237_p2;
wire   [31:0] add_ln48_2_fu_2254_p2;
wire   [31:0] add_ln48_fu_2243_p2;
wire   [1:0] trunc_ln49_fu_2276_p1;
wire   [29:0] lshr_ln1_fu_2266_p4;
wire   [12:0] trunc_ln49_1_fu_2298_p1;
wire   [18:0] lshr_ln49_1_fu_2288_p4;
wire   [21:0] trunc_ln49_2_fu_2320_p1;
wire   [9:0] lshr_ln49_2_fu_2310_p4;
wire   [31:0] or_ln1_fu_2280_p3;
wire   [31:0] or_ln49_1_fu_2302_p3;
wire   [31:0] xor_ln49_fu_2332_p2;
wire   [31:0] or_ln49_2_fu_2324_p3;
wire   [31:0] xor_ln49_2_fu_2344_p2;
wire   [31:0] and_ln49_fu_2350_p2;
wire   [31:0] and_ln49_1_fu_2356_p2;
wire   [31:0] t1_fu_2260_p2;
wire   [31:0] xor_ln49_1_fu_2338_p2;
wire   [31:0] add_ln57_fu_2374_p2;
wire   [31:0] xor_ln49_3_fu_2362_p2;
wire   [1:0] trunc_ln77_fu_2408_p1;
wire   [4:0] shl_ln_fu_2412_p3;
wire   [4:0] sub_ln77_fu_2420_p2;
wire   [31:0] zext_ln77_fu_2426_p1;
wire   [31:0] lshr_ln77_fu_2430_p2;
wire  signed [3:0] sext_ln80_fu_2468_p1;
wire   [4:0] or_ln4_fu_2480_p3;
wire   [4:0] zext_ln76_1_fu_2476_p1;
wire   [4:0] add_ln82_fu_2493_p2;
wire  signed [4:0] sext_ln83_fu_2504_p1;
wire  signed [4:0] sext_ln84_fu_2512_p1;
wire    ap_CS_fsm_state13;
reg   [11:0] ap_NS_fsm;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_condition_518;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
end

sha256_k #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
k_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_address0),
    .ce0(k_ce0),
    .q0(k_q0)
);

sha256_mux_646_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 32 ),
    .din52_WIDTH( 32 ),
    .din53_WIDTH( 32 ),
    .din54_WIDTH( 32 ),
    .din55_WIDTH( 32 ),
    .din56_WIDTH( 32 ),
    .din57_WIDTH( 32 ),
    .din58_WIDTH( 32 ),
    .din59_WIDTH( 32 ),
    .din60_WIDTH( 32 ),
    .din61_WIDTH( 32 ),
    .din62_WIDTH( 32 ),
    .din63_WIDTH( 32 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mux_646_32_1_1_U1(
    .din0(m_63_40_fu_516),
    .din1(m_63_40_fu_516),
    .din2(m_63_40_fu_516),
    .din3(m_63_40_fu_516),
    .din4(m_63_40_fu_516),
    .din5(m_63_40_fu_516),
    .din6(m_63_40_fu_516),
    .din7(m_63_40_fu_516),
    .din8(m_63_40_fu_516),
    .din9(m_63_40_fu_516),
    .din10(m_63_40_fu_516),
    .din11(m_63_40_fu_516),
    .din12(m_63_40_fu_516),
    .din13(m_63_40_fu_516),
    .din14(m_63_40_fu_516),
    .din15(m_63_40_fu_516),
    .din16(m_15_11_fu_336),
    .din17(m_15_12_fu_340),
    .din18(m_15_13_fu_344),
    .din19(m_15_14_fu_348),
    .din20(m_15_15_fu_352),
    .din21(m_15_load_reg_2641),
    .din22(m_15_1_load_reg_2650),
    .din23(m_63_fu_356),
    .din24(m_63_1_fu_360),
    .din25(m_63_2_fu_364),
    .din26(m_63_3_fu_368),
    .din27(m_63_4_fu_372),
    .din28(m_63_5_fu_376),
    .din29(m_63_6_fu_380),
    .din30(m_63_7_fu_384),
    .din31(m_63_8_fu_388),
    .din32(m_63_9_fu_392),
    .din33(m_63_10_fu_396),
    .din34(m_63_11_fu_400),
    .din35(m_63_12_fu_404),
    .din36(m_63_13_fu_408),
    .din37(m_63_14_fu_412),
    .din38(m_63_15_fu_416),
    .din39(m_63_16_fu_420),
    .din40(m_63_17_fu_424),
    .din41(m_63_18_fu_428),
    .din42(m_63_19_fu_432),
    .din43(m_63_20_fu_436),
    .din44(m_63_21_fu_440),
    .din45(m_63_22_fu_444),
    .din46(m_63_23_fu_448),
    .din47(m_63_24_fu_452),
    .din48(m_63_25_fu_456),
    .din49(m_63_26_fu_460),
    .din50(m_63_27_fu_464),
    .din51(m_63_28_fu_468),
    .din52(m_63_29_fu_472),
    .din53(m_63_30_fu_476),
    .din54(m_63_31_fu_480),
    .din55(m_63_32_fu_484),
    .din56(m_63_33_fu_488),
    .din57(m_63_34_fu_492),
    .din58(m_63_35_fu_496),
    .din59(m_63_36_fu_500),
    .din60(m_63_37_fu_504),
    .din61(m_63_38_fu_508),
    .din62(m_63_39_fu_512),
    .din63(m_63_40_fu_516),
    .din64(trunc_ln34_fu_1170_p1),
    .dout(phi_ln34_1_fu_1244_p66)
);

sha256_mux_646_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 32 ),
    .din52_WIDTH( 32 ),
    .din53_WIDTH( 32 ),
    .din54_WIDTH( 32 ),
    .din55_WIDTH( 32 ),
    .din56_WIDTH( 32 ),
    .din57_WIDTH( 32 ),
    .din58_WIDTH( 32 ),
    .din59_WIDTH( 32 ),
    .din60_WIDTH( 32 ),
    .din61_WIDTH( 32 ),
    .din62_WIDTH( 32 ),
    .din63_WIDTH( 32 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mux_646_32_1_1_U2(
    .din0(m_63_32_fu_484),
    .din1(m_63_32_fu_484),
    .din2(m_63_32_fu_484),
    .din3(m_63_32_fu_484),
    .din4(m_63_32_fu_484),
    .din5(m_63_32_fu_484),
    .din6(m_63_32_fu_484),
    .din7(m_63_32_fu_484),
    .din8(m_63_32_fu_484),
    .din9(m_63_32_fu_484),
    .din10(m_63_32_fu_484),
    .din11(m_63_32_fu_484),
    .din12(m_63_32_fu_484),
    .din13(m_63_32_fu_484),
    .din14(m_63_32_fu_484),
    .din15(m_63_32_fu_484),
    .din16(m_15_3_fu_304),
    .din17(m_15_4_fu_308),
    .din18(m_15_5_fu_312),
    .din19(m_15_6_fu_316),
    .din20(m_15_7_fu_320),
    .din21(m_15_8_fu_324),
    .din22(m_15_9_fu_328),
    .din23(m_15_10_fu_332),
    .din24(m_15_11_fu_336),
    .din25(m_15_12_fu_340),
    .din26(m_15_13_fu_344),
    .din27(m_15_14_fu_348),
    .din28(m_15_15_fu_352),
    .din29(m_15_load_reg_2641),
    .din30(m_15_1_load_reg_2650),
    .din31(m_63_fu_356),
    .din32(m_63_1_fu_360),
    .din33(m_63_2_fu_364),
    .din34(m_63_3_fu_368),
    .din35(m_63_4_fu_372),
    .din36(m_63_5_fu_376),
    .din37(m_63_6_fu_380),
    .din38(m_63_7_fu_384),
    .din39(m_63_8_fu_388),
    .din40(m_63_9_fu_392),
    .din41(m_63_10_fu_396),
    .din42(m_63_11_fu_400),
    .din43(m_63_12_fu_404),
    .din44(m_63_13_fu_408),
    .din45(m_63_14_fu_412),
    .din46(m_63_15_fu_416),
    .din47(m_63_16_fu_420),
    .din48(m_63_17_fu_424),
    .din49(m_63_18_fu_428),
    .din50(m_63_19_fu_432),
    .din51(m_63_20_fu_436),
    .din52(m_63_21_fu_440),
    .din53(m_63_22_fu_444),
    .din54(m_63_23_fu_448),
    .din55(m_63_24_fu_452),
    .din56(m_63_25_fu_456),
    .din57(m_63_26_fu_460),
    .din58(m_63_27_fu_464),
    .din59(m_63_28_fu_468),
    .din60(m_63_29_fu_472),
    .din61(m_63_30_fu_476),
    .din62(m_63_31_fu_480),
    .din63(m_63_32_fu_484),
    .din64(trunc_ln34_fu_1170_p1),
    .dout(phi_ln34_2_fu_1376_p66)
);

sha256_mux_646_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 32 ),
    .din52_WIDTH( 32 ),
    .din53_WIDTH( 32 ),
    .din54_WIDTH( 32 ),
    .din55_WIDTH( 32 ),
    .din56_WIDTH( 32 ),
    .din57_WIDTH( 32 ),
    .din58_WIDTH( 32 ),
    .din59_WIDTH( 32 ),
    .din60_WIDTH( 32 ),
    .din61_WIDTH( 32 ),
    .din62_WIDTH( 32 ),
    .din63_WIDTH( 32 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mux_646_32_1_1_U3(
    .din0(m_63_31_fu_480),
    .din1(m_63_31_fu_480),
    .din2(m_63_31_fu_480),
    .din3(m_63_31_fu_480),
    .din4(m_63_31_fu_480),
    .din5(m_63_31_fu_480),
    .din6(m_63_31_fu_480),
    .din7(m_63_31_fu_480),
    .din8(m_63_31_fu_480),
    .din9(m_63_31_fu_480),
    .din10(m_63_31_fu_480),
    .din11(m_63_31_fu_480),
    .din12(m_63_31_fu_480),
    .din13(m_63_31_fu_480),
    .din14(m_63_31_fu_480),
    .din15(m_63_31_fu_480),
    .din16(m_15_2_fu_300),
    .din17(m_15_3_fu_304),
    .din18(m_15_4_fu_308),
    .din19(m_15_5_fu_312),
    .din20(m_15_6_fu_316),
    .din21(m_15_7_fu_320),
    .din22(m_15_8_fu_324),
    .din23(m_15_9_fu_328),
    .din24(m_15_10_fu_332),
    .din25(m_15_11_fu_336),
    .din26(m_15_12_fu_340),
    .din27(m_15_13_fu_344),
    .din28(m_15_14_fu_348),
    .din29(m_15_15_fu_352),
    .din30(m_15_load_reg_2641),
    .din31(m_15_1_load_reg_2650),
    .din32(m_63_fu_356),
    .din33(m_63_1_fu_360),
    .din34(m_63_2_fu_364),
    .din35(m_63_3_fu_368),
    .din36(m_63_4_fu_372),
    .din37(m_63_5_fu_376),
    .din38(m_63_6_fu_380),
    .din39(m_63_7_fu_384),
    .din40(m_63_8_fu_388),
    .din41(m_63_9_fu_392),
    .din42(m_63_10_fu_396),
    .din43(m_63_11_fu_400),
    .din44(m_63_12_fu_404),
    .din45(m_63_13_fu_408),
    .din46(m_63_14_fu_412),
    .din47(m_63_15_fu_416),
    .din48(m_63_16_fu_420),
    .din49(m_63_17_fu_424),
    .din50(m_63_18_fu_428),
    .din51(m_63_19_fu_432),
    .din52(m_63_20_fu_436),
    .din53(m_63_21_fu_440),
    .din54(m_63_22_fu_444),
    .din55(m_63_23_fu_448),
    .din56(m_63_24_fu_452),
    .din57(m_63_25_fu_456),
    .din58(m_63_26_fu_460),
    .din59(m_63_27_fu_464),
    .din60(m_63_28_fu_468),
    .din61(m_63_29_fu_472),
    .din62(m_63_30_fu_476),
    .din63(m_63_31_fu_480),
    .din64(trunc_ln34_fu_1170_p1),
    .dout(phi_ln34_3_fu_1578_p66)
);

sha256_mux_646_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 32 ),
    .din52_WIDTH( 32 ),
    .din53_WIDTH( 32 ),
    .din54_WIDTH( 32 ),
    .din55_WIDTH( 32 ),
    .din56_WIDTH( 32 ),
    .din57_WIDTH( 32 ),
    .din58_WIDTH( 32 ),
    .din59_WIDTH( 32 ),
    .din60_WIDTH( 32 ),
    .din61_WIDTH( 32 ),
    .din62_WIDTH( 32 ),
    .din63_WIDTH( 32 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
mux_646_32_1_1_U4(
    .din0(m_15_2_fu_300),
    .din1(m_15_3_fu_304),
    .din2(m_15_4_fu_308),
    .din3(m_15_5_fu_312),
    .din4(m_15_6_fu_316),
    .din5(m_15_7_fu_320),
    .din6(m_15_8_fu_324),
    .din7(m_15_9_fu_328),
    .din8(m_15_10_fu_332),
    .din9(m_15_11_fu_336),
    .din10(m_15_12_fu_340),
    .din11(m_15_13_fu_344),
    .din12(m_15_14_fu_348),
    .din13(m_15_15_fu_352),
    .din14(m_15_load_reg_2641),
    .din15(m_15_1_load_reg_2650),
    .din16(m_63_load_reg_2953),
    .din17(m_63_1_load_reg_2958),
    .din18(m_63_2_load_reg_2963),
    .din19(m_63_3_load_reg_2968),
    .din20(m_63_4_load_reg_2973),
    .din21(m_63_5_load_reg_2978),
    .din22(m_63_6_load_reg_2983),
    .din23(m_63_7_load_reg_2988),
    .din24(m_63_8_load_reg_2993),
    .din25(m_63_9_load_reg_2998),
    .din26(m_63_10_load_reg_3003),
    .din27(m_63_11_load_reg_3008),
    .din28(m_63_12_load_reg_3013),
    .din29(m_63_13_load_reg_3018),
    .din30(m_63_14_load_reg_3023),
    .din31(m_63_15_load_reg_3028),
    .din32(m_63_16_load_reg_3033),
    .din33(m_63_17_load_reg_3038),
    .din34(m_63_18_load_reg_3043),
    .din35(m_63_19_load_reg_3048),
    .din36(m_63_20_load_reg_3053),
    .din37(m_63_21_load_reg_3058),
    .din38(m_63_22_load_reg_3063),
    .din39(m_63_23_load_reg_3068),
    .din40(m_63_24_load_reg_3073),
    .din41(m_63_25_load_reg_3078),
    .din42(m_63_26_load_reg_3083),
    .din43(m_63_27_load_reg_3088),
    .din44(m_63_28_load_reg_3093),
    .din45(m_63_29_load_reg_3098),
    .din46(m_63_30_load_reg_3103),
    .din47(m_63_31_load_reg_3108),
    .din48(m_63_32_load_reg_3113),
    .din49(m_63_33_load_reg_3118),
    .din50(m_63_34_load_reg_3123),
    .din51(m_63_35_load_reg_3128),
    .din52(m_63_36_load_reg_3133),
    .din53(m_63_37_load_reg_3138),
    .din54(m_63_38_load_reg_3143),
    .din55(m_63_39_load_reg_3148),
    .din56(m_63_40_load_reg_3153),
    .din57(m_63_41_load_reg_3158),
    .din58(m_63_42_load_reg_3163),
    .din59(m_63_43_load_reg_3168),
    .din60(m_63_44_load_reg_3173),
    .din61(m_63_45_load_reg_3178),
    .din62(m_63_46_fu_540),
    .din63(m_63_47_fu_544),
    .din64(tmp_2_fu_2001_p65),
    .dout(tmp_2_fu_2001_p66)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp2_flush_enable)) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        a_3_reg_818 <= stateREG_i;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln47_reg_3248 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        a_3_reg_818 <= a_2_fu_2380_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_1_reg_695 <= 7'd16;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        i_1_reg_695 <= add_ln33_fu_1968_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_2_reg_807 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln47_fu_1980_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        i_2_reg_807 <= add_ln47_fu_1974_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln30_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_684 <= add_ln30_fu_894_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_684 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        r_reg_828 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        r_reg_828 <= add_ln76_reg_3272;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        a_reg_3237 <= stateREG_i;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln62_reg_3267 <= add_ln62_fu_2391_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln76_reg_3272 <= add_ln76_fu_2396_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        c_fu_572 <= a_3_reg_818;
        d_1_fu_568 <= c_fu_572;
        d_fu_564 <= d_1_fu_568;
        g_fu_556 <= f_fu_560;
        h_1_fu_552 <= g_fu_556;
        h_fu_548 <= h_1_fu_552;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln47_reg_3248 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        f_fu_560 <= e_fu_2368_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln47_reg_3248 <= icmp_ln47_fu_1980_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        m_0_reg_2616 <= m_0_fu_882_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln32_fu_912_p1 == 4'd8) & (icmp_ln30_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_15_10_fu_332 <= m_0_reg_2616;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln32_fu_912_p1 == 4'd9) & (icmp_ln30_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_15_11_fu_336 <= m_0_reg_2616;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln32_fu_912_p1 == 4'd10) & (icmp_ln30_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_15_12_fu_340 <= m_0_reg_2616;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln32_fu_912_p1 == 4'd11) & (icmp_ln30_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_15_13_fu_344 <= m_0_reg_2616;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln32_fu_912_p1 == 4'd12) & (icmp_ln30_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_15_14_fu_348 <= m_0_reg_2616;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln32_fu_912_p1 == 4'd13) & (icmp_ln30_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_15_15_fu_352 <= m_0_reg_2616;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln32_fu_912_p1 == 4'd15) & (icmp_ln30_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_15_1_fu_296 <= m_0_reg_2616;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        m_15_1_load_reg_2650 <= m_15_1_fu_296;
        m_15_load_reg_2641 <= m_15_fu_292;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln32_fu_912_p1 == 4'd0) & (icmp_ln30_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_15_2_fu_300 <= m_0_reg_2616;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln32_fu_912_p1 == 4'd1) & (icmp_ln30_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_15_3_fu_304 <= m_0_reg_2616;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln32_fu_912_p1 == 4'd2) & (icmp_ln30_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_15_4_fu_308 <= m_0_reg_2616;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln32_fu_912_p1 == 4'd3) & (icmp_ln30_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_15_5_fu_312 <= m_0_reg_2616;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln32_fu_912_p1 == 4'd4) & (icmp_ln30_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_15_6_fu_316 <= m_0_reg_2616;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln32_fu_912_p1 == 4'd5) & (icmp_ln30_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_15_7_fu_320 <= m_0_reg_2616;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln32_fu_912_p1 == 4'd6) & (icmp_ln30_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_15_8_fu_324 <= m_0_reg_2616;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln32_fu_912_p1 == 4'd7) & (icmp_ln30_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_15_9_fu_328 <= m_0_reg_2616;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln32_fu_912_p1 == 4'd14) & (icmp_ln30_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_15_fu_292 <= m_0_reg_2616;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd26) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_10_fu_396 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        m_63_10_load_reg_3003 <= m_63_10_fu_396;
        m_63_11_load_reg_3008 <= m_63_11_fu_400;
        m_63_12_load_reg_3013 <= m_63_12_fu_404;
        m_63_13_load_reg_3018 <= m_63_13_fu_408;
        m_63_14_load_reg_3023 <= m_63_14_fu_412;
        m_63_15_load_reg_3028 <= m_63_15_fu_416;
        m_63_16_load_reg_3033 <= m_63_16_fu_420;
        m_63_17_load_reg_3038 <= m_63_17_fu_424;
        m_63_18_load_reg_3043 <= m_63_18_fu_428;
        m_63_19_load_reg_3048 <= m_63_19_fu_432;
        m_63_1_load_reg_2958 <= m_63_1_fu_360;
        m_63_20_load_reg_3053 <= m_63_20_fu_436;
        m_63_21_load_reg_3058 <= m_63_21_fu_440;
        m_63_22_load_reg_3063 <= m_63_22_fu_444;
        m_63_23_load_reg_3068 <= m_63_23_fu_448;
        m_63_24_load_reg_3073 <= m_63_24_fu_452;
        m_63_25_load_reg_3078 <= m_63_25_fu_456;
        m_63_26_load_reg_3083 <= m_63_26_fu_460;
        m_63_27_load_reg_3088 <= m_63_27_fu_464;
        m_63_28_load_reg_3093 <= m_63_28_fu_468;
        m_63_29_load_reg_3098 <= m_63_29_fu_472;
        m_63_2_load_reg_2963 <= m_63_2_fu_364;
        m_63_30_load_reg_3103 <= m_63_30_fu_476;
        m_63_31_load_reg_3108 <= m_63_31_fu_480;
        m_63_32_load_reg_3113 <= m_63_32_fu_484;
        m_63_33_load_reg_3118 <= m_63_33_fu_488;
        m_63_34_load_reg_3123 <= m_63_34_fu_492;
        m_63_35_load_reg_3128 <= m_63_35_fu_496;
        m_63_36_load_reg_3133 <= m_63_36_fu_500;
        m_63_37_load_reg_3138 <= m_63_37_fu_504;
        m_63_38_load_reg_3143 <= m_63_38_fu_508;
        m_63_39_load_reg_3148 <= m_63_39_fu_512;
        m_63_3_load_reg_2968 <= m_63_3_fu_368;
        m_63_40_load_reg_3153 <= m_63_40_fu_516;
        m_63_41_load_reg_3158 <= m_63_41_fu_520;
        m_63_42_load_reg_3163 <= m_63_42_fu_524;
        m_63_43_load_reg_3168 <= m_63_43_fu_528;
        m_63_44_load_reg_3173 <= m_63_44_fu_532;
        m_63_45_load_reg_3178 <= m_63_45_fu_536;
        m_63_4_load_reg_2973 <= m_63_4_fu_372;
        m_63_5_load_reg_2978 <= m_63_5_fu_376;
        m_63_6_load_reg_2983 <= m_63_6_fu_380;
        m_63_7_load_reg_2988 <= m_63_7_fu_384;
        m_63_8_load_reg_2993 <= m_63_8_fu_388;
        m_63_9_load_reg_2998 <= m_63_9_fu_392;
        m_63_load_reg_2953 <= m_63_fu_356;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd27) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_11_fu_400 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd28) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_12_fu_404 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd29) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_13_fu_408 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd30) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_14_fu_412 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd31) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_15_fu_416 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd32) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_16_fu_420 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd33) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_17_fu_424 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd34) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_18_fu_428 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd35) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_19_fu_432 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd17) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_1_fu_360 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd36) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_20_fu_436 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd37) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_21_fu_440 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd38) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_22_fu_444 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd39) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_23_fu_448 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd40) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_24_fu_452 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd41) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_25_fu_456 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd42) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_26_fu_460 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd43) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_27_fu_464 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd44) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_28_fu_468 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd45) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_29_fu_472 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd18) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_2_fu_364 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd46) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_30_fu_476 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd47) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_31_fu_480 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd48) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_32_fu_484 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd49) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_33_fu_488 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd50) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_34_fu_492 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd51) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_35_fu_496 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd52) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_36_fu_500 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd53) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_37_fu_504 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd54) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_38_fu_508 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd55) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_39_fu_512 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd19) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_3_fu_368 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd56) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_40_fu_516 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd57) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_41_fu_520 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd58) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_42_fu_524 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd59) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_43_fu_528 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd60) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_44_fu_532 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd61) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_45_fu_536 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd62) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_46_fu_540 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & ((((((((((((((((((trunc_ln34_fu_1170_p1 == 6'd15) & (icmp_ln33_fu_1164_p2 == 1'd0)) | ((trunc_ln34_fu_1170_p1 == 6'd63) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd14) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd13) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd12) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd11) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd10) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd9) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd8) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd7) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd6) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd5) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd4) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd3) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd2) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd1) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd0) & (icmp_ln33_fu_1164_p2 == 1'd0))))) begin
        m_63_47_fu_544 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd20) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_4_fu_372 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd21) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_5_fu_376 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd22) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_6_fu_380 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd23) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_7_fu_384 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd24) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_8_fu_388 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd25) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_9_fu_392 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln34_fu_1170_p1 == 6'd16) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
        m_63_fu_356 <= m_16_fu_1722_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln76_fu_2402_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        or_ln3_reg_3291[2 : 0] <= or_ln3_fu_2450_p3[2 : 0];
        trunc_ln77_1_reg_3280 <= trunc_ln77_1_fu_2435_p1;
        xor_ln78_reg_3285 <= xor_ln78_fu_2439_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln47_fu_1980_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        tmp_2_reg_3257 <= tmp_2_fu_2001_p66;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln47_fu_1980_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
        ap_condition_pp2_flush_enable = 1'b1;
    end else begin
        ap_condition_pp2_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        if (((trunc_ln34_fu_1170_p1 == 6'd16) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_15_load_reg_2641;
        end else if ((1'b1 == ap_condition_518)) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_45_fu_536;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd62) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_44_fu_532;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd61) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_43_fu_528;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd60) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_42_fu_524;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd59) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_41_fu_520;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd58) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_40_fu_516;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd57) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_39_fu_512;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd56) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_38_fu_508;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd55) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_37_fu_504;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd54) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_36_fu_500;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd53) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_35_fu_496;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd52) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_34_fu_492;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd51) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_33_fu_488;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd50) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_32_fu_484;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd49) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_31_fu_480;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd48) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_30_fu_476;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd47) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_29_fu_472;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd46) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_28_fu_468;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd45) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_27_fu_464;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd44) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_26_fu_460;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd43) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_25_fu_456;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd42) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_24_fu_452;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd41) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_23_fu_448;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd40) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_22_fu_444;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd39) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_21_fu_440;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd38) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_20_fu_436;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd37) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_19_fu_432;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd36) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_18_fu_428;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd35) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_17_fu_424;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd34) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_16_fu_420;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd33) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_15_fu_416;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd32) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_14_fu_412;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd31) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_13_fu_408;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd30) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_12_fu_404;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd29) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_11_fu_400;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd28) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_10_fu_396;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd27) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_9_fu_392;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd26) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_8_fu_388;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd25) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_7_fu_384;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd24) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_6_fu_380;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd23) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_5_fu_376;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd22) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_4_fu_372;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd21) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_3_fu_368;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd20) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_2_fu_364;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd19) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_1_fu_360;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd18) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_63_fu_356;
        end else if (((trunc_ln34_fu_1170_p1 == 6'd17) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = m_15_1_load_reg_2650;
        end else begin
            ap_phi_mux_phi_ln34_phi_fu_709_p96 = 'bx;
        end
    end else begin
        ap_phi_mux_phi_ln34_phi_fu_709_p96 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        hash_address0 = zext_ln84_fu_2515_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        hash_address0 = zext_ln82_fu_2499_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        hash_address0 = zext_ln80_fu_2471_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        hash_address0 = zext_ln79_fu_2458_p1;
    end else begin
        hash_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        hash_address1 = zext_ln83_fu_2507_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        hash_address1 = zext_ln81_fu_2488_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        hash_address1 = zext_ln76_fu_2463_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        hash_address1 = zext_ln78_fu_2445_p1;
    end else begin
        hash_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9))) begin
        hash_ce0 = 1'b1;
    end else begin
        hash_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9))) begin
        hash_ce1 = 1'b1;
    end else begin
        hash_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        hash_d1 = trunc_ln77_1_reg_3280;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9))) begin
        hash_d1 = 8'd0;
    end else begin
        hash_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state12) | ((icmp_ln76_fu_2402_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        hash_we0 = 1'b1;
    end else begin
        hash_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state12) | ((icmp_ln76_fu_2402_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        hash_we1 = 1'b1;
    end else begin
        hash_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        k_ce0 = 1'b1;
    end else begin
        k_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        stateREG_o_ap_vld = 1'b1;
    end else begin
        stateREG_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln30_fu_906_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln33_fu_1164_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln76_fu_2402_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_2_fu_2380_p2 = (add_ln57_fu_2374_p2 + xor_ln49_3_fu_2362_p2);

assign add_ln30_fu_894_p2 = (i_reg_684 + 5'd1);

assign add_ln33_fu_1968_p2 = (i_1_reg_695 + 7'd1);

assign add_ln34_1_fu_1716_p2 = (xor_ln34_1_fu_1238_p2 + xor_ln34_3_fu_1572_p2);

assign add_ln34_fu_1710_p2 = (phi_ln34_1_fu_1244_p66 + phi_ln34_3_fu_1578_p66);

assign add_ln47_fu_1974_p2 = (i_2_reg_807 + 7'd1);

assign add_ln48_1_fu_2249_p2 = (xor_ln48_1_fu_2213_p2 + tmp_2_reg_3257);

assign add_ln48_2_fu_2254_p2 = (add_ln48_1_fu_2249_p2 + xor_ln48_3_fu_2237_p2);

assign add_ln48_fu_2243_p2 = (k_q0 + h_fu_548);

assign add_ln57_fu_2374_p2 = (xor_ln49_1_fu_2338_p2 + t1_fu_2260_p2);

assign add_ln62_fu_2391_p2 = (a_reg_3237 + a_3_reg_818);

assign add_ln76_fu_2396_p2 = (r_reg_828 + 3'd1);

assign add_ln82_fu_2493_p2 = ($signed(zext_ln76_1_fu_2476_p1) + $signed(5'd20));

assign and_ln48_1_fu_2231_p2 = (xor_ln48_2_fu_2225_p2 & h_1_fu_552);

assign and_ln48_fu_2219_p2 = (g_fu_556 & f_fu_560);

assign and_ln49_1_fu_2356_p2 = (d_1_fu_568 & c_fu_572);

assign and_ln49_fu_2350_p2 = (xor_ln49_2_fu_2344_p2 & a_3_reg_818);

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state6_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_518 = ((((((((((((((((((trunc_ln34_fu_1170_p1 == 6'd15) & (icmp_ln33_fu_1164_p2 == 1'd0)) | ((trunc_ln34_fu_1170_p1 == 6'd63) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd14) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd13) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd12) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd11) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd10) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd9) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd8) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd7) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd6) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd5) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd4) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd3) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd2) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd1) & (icmp_ln33_fu_1164_p2 == 1'd0))) | ((trunc_ln34_fu_1170_p1 == 6'd0) & (icmp_ln33_fu_1164_p2 == 1'd0)));
end

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign e_fu_2368_p2 = (t1_fu_2260_p2 + d_fu_564);

assign hash_d0 = 8'd0;

assign icmp_ln30_fu_906_p2 = ((i_reg_684 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_1164_p2 = ((i_1_reg_695 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_1980_p2 = ((i_2_reg_807 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_2402_p2 = ((r_reg_828 == 3'd4) ? 1'b1 : 1'b0);

assign k_address0 = zext_ln47_fu_1992_p1;

assign lshr_ln1_fu_2266_p4 = {{a_3_reg_818[31:2]}};

assign lshr_ln2_fu_1174_p4 = {{ap_phi_mux_phi_ln34_phi_fu_709_p96[31:17]}};

assign lshr_ln34_1_fu_1196_p4 = {{ap_phi_mux_phi_ln34_phi_fu_709_p96[31:19]}};

assign lshr_ln34_2_fu_1218_p4 = {{ap_phi_mux_phi_ln34_phi_fu_709_p96[31:10]}};

assign lshr_ln34_3_fu_1508_p4 = {{phi_ln34_2_fu_1376_p66[31:7]}};

assign lshr_ln34_4_fu_1530_p4 = {{phi_ln34_2_fu_1376_p66[31:18]}};

assign lshr_ln34_5_fu_1552_p4 = {{phi_ln34_2_fu_1376_p66[31:3]}};

assign lshr_ln48_1_fu_2163_p4 = {{f_fu_560[31:11]}};

assign lshr_ln48_2_fu_2185_p4 = {{f_fu_560[31:25]}};

assign lshr_ln49_1_fu_2288_p4 = {{a_3_reg_818[31:13]}};

assign lshr_ln49_2_fu_2310_p4 = {{a_3_reg_818[31:22]}};

assign lshr_ln77_fu_2430_p2 = add_ln62_reg_3267 >> zext_ln77_fu_2426_p1;

assign lshr_ln_fu_2141_p4 = {{f_fu_560[31:6]}};

assign m_0_fu_882_p5 = {{{{data}, {data}}, {data}}, {data}};

assign m_16_fu_1722_p2 = (add_ln34_1_fu_1716_p2 + add_ln34_fu_1710_p2);

assign or_ln1_fu_2280_p3 = {{trunc_ln49_fu_2276_p1}, {lshr_ln1_fu_2266_p4}};

assign or_ln2_fu_1188_p3 = {{trunc_ln34_1_fu_1184_p1}, {lshr_ln2_fu_1174_p4}};

assign or_ln34_1_fu_1210_p3 = {{trunc_ln34_2_fu_1206_p1}, {lshr_ln34_1_fu_1196_p4}};

assign or_ln34_2_fu_1522_p3 = {{trunc_ln34_3_fu_1518_p1}, {lshr_ln34_3_fu_1508_p4}};

assign or_ln34_3_fu_1544_p3 = {{trunc_ln34_4_fu_1540_p1}, {lshr_ln34_4_fu_1530_p4}};

assign or_ln3_fu_2450_p3 = {{1'd1}, {r_reg_828}};

assign or_ln48_1_fu_2177_p3 = {{trunc_ln48_1_fu_2173_p1}, {lshr_ln48_1_fu_2163_p4}};

assign or_ln48_2_fu_2199_p3 = {{trunc_ln48_2_fu_2195_p1}, {lshr_ln48_2_fu_2185_p4}};

assign or_ln49_1_fu_2302_p3 = {{trunc_ln49_1_fu_2298_p1}, {lshr_ln49_1_fu_2288_p4}};

assign or_ln49_2_fu_2324_p3 = {{trunc_ln49_2_fu_2320_p1}, {lshr_ln49_2_fu_2310_p4}};

assign or_ln4_fu_2480_p3 = {{2'd2}, {r_reg_828}};

assign or_ln_fu_2155_p3 = {{trunc_ln48_fu_2151_p1}, {lshr_ln_fu_2141_p4}};

assign sext_ln80_fu_2468_p1 = xor_ln78_reg_3285;

assign sext_ln83_fu_2504_p1 = or_ln3_reg_3291;

assign sext_ln84_fu_2512_p1 = xor_ln78_reg_3285;

assign shl_ln_fu_2412_p3 = {{trunc_ln77_fu_2408_p1}, {3'd0}};

assign stateREG_o = 32'd0;

assign sub_ln77_fu_2420_p2 = ($signed(5'd24) - $signed(shl_ln_fu_2412_p3));

assign t1_fu_2260_p2 = (add_ln48_2_fu_2254_p2 + add_ln48_fu_2243_p2);

assign tmp_2_fu_2001_p65 = i_2_reg_807[5:0];

assign trunc_ln32_fu_912_p1 = i_reg_684[3:0];

assign trunc_ln34_1_fu_1184_p1 = ap_phi_mux_phi_ln34_phi_fu_709_p96[16:0];

assign trunc_ln34_2_fu_1206_p1 = ap_phi_mux_phi_ln34_phi_fu_709_p96[18:0];

assign trunc_ln34_3_fu_1518_p1 = phi_ln34_2_fu_1376_p66[6:0];

assign trunc_ln34_4_fu_1540_p1 = phi_ln34_2_fu_1376_p66[17:0];

assign trunc_ln34_fu_1170_p1 = i_1_reg_695[5:0];

assign trunc_ln48_1_fu_2173_p1 = f_fu_560[10:0];

assign trunc_ln48_2_fu_2195_p1 = f_fu_560[24:0];

assign trunc_ln48_fu_2151_p1 = f_fu_560[5:0];

assign trunc_ln49_1_fu_2298_p1 = a_3_reg_818[12:0];

assign trunc_ln49_2_fu_2320_p1 = a_3_reg_818[21:0];

assign trunc_ln49_fu_2276_p1 = a_3_reg_818[1:0];

assign trunc_ln77_1_fu_2435_p1 = lshr_ln77_fu_2430_p2[7:0];

assign trunc_ln77_fu_2408_p1 = r_reg_828[1:0];

assign xor_ln34_1_fu_1238_p2 = (xor_ln34_fu_1232_p2 ^ or_ln2_fu_1188_p3);

assign xor_ln34_2_fu_1566_p2 = (zext_ln34_1_fu_1562_p1 ^ or_ln34_3_fu_1544_p3);

assign xor_ln34_3_fu_1572_p2 = (xor_ln34_2_fu_1566_p2 ^ or_ln34_2_fu_1522_p3);

assign xor_ln34_fu_1232_p2 = (zext_ln34_fu_1228_p1 ^ or_ln34_1_fu_1210_p3);

assign xor_ln48_1_fu_2213_p2 = (xor_ln48_fu_2207_p2 ^ or_ln48_2_fu_2199_p3);

assign xor_ln48_2_fu_2225_p2 = (f_fu_560 ^ 32'd4294967295);

assign xor_ln48_3_fu_2237_p2 = (and_ln48_fu_2219_p2 ^ and_ln48_1_fu_2231_p2);

assign xor_ln48_fu_2207_p2 = (or_ln_fu_2155_p3 ^ or_ln48_1_fu_2177_p3);

assign xor_ln49_1_fu_2338_p2 = (xor_ln49_fu_2332_p2 ^ or_ln49_2_fu_2324_p3);

assign xor_ln49_2_fu_2344_p2 = (d_1_fu_568 ^ c_fu_572);

assign xor_ln49_3_fu_2362_p2 = (and_ln49_fu_2350_p2 ^ and_ln49_1_fu_2356_p2);

assign xor_ln49_fu_2332_p2 = (or_ln49_1_fu_2302_p3 ^ or_ln1_fu_2280_p3);

assign xor_ln78_fu_2439_p2 = (r_reg_828 ^ 3'd4);

assign zext_ln34_1_fu_1562_p1 = lshr_ln34_5_fu_1552_p4;

assign zext_ln34_fu_1228_p1 = lshr_ln34_2_fu_1218_p4;

assign zext_ln47_fu_1992_p1 = i_2_reg_807;

assign zext_ln76_1_fu_2476_p1 = r_reg_828;

assign zext_ln76_fu_2463_p1 = r_reg_828;

assign zext_ln77_fu_2426_p1 = sub_ln77_fu_2420_p2;

assign zext_ln78_fu_2445_p1 = $unsigned(xor_ln78_fu_2439_p2);

assign zext_ln79_fu_2458_p1 = $unsigned(or_ln3_fu_2450_p3);

assign zext_ln80_fu_2471_p1 = $unsigned(sext_ln80_fu_2468_p1);

assign zext_ln81_fu_2488_p1 = or_ln4_fu_2480_p3;

assign zext_ln82_fu_2499_p1 = add_ln82_fu_2493_p2;

assign zext_ln83_fu_2507_p1 = $unsigned(sext_ln83_fu_2504_p1);

assign zext_ln84_fu_2515_p1 = $unsigned(sext_ln84_fu_2512_p1);

always @ (posedge ap_clk) begin
    or_ln3_reg_3291[3] <= 1'b1;
end

endmodule //sha256
